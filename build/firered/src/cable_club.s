@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sWindowTemplate_LinkPlayerCount,object
	.size	 sWindowTemplate_LinkPlayerCount,8
sWindowTemplate_LinkPlayerCount:
	.byte	0x0
	.byte	0x10
	.byte	0xb
	.byte	0xb
	.byte	0x2
	.byte	0xf
	.short	0x125
	.align	2, 0
	.type	 sTrainerCardColorNames,object
sTrainerCardColorNames:
	.word	gText_BronzeCard
	.word	gText_CopperCard
	.word	gText_SilverCard
	.word	gText_GoldCard
	.size	 sTrainerCardColorNames,16
.text
	.align	2, 0
	.type	 CreateLinkupTask,function
	.thumb_func
CreateLinkupTask:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r4, .L4
	add	r0, r4, #0
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L3	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L4+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r6, [r1, #0xa]
	strh	r5, [r1, #0xc]
.L3:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	Task_LinkupStart
	.word	gTasks
.Lfe1:
	.size	 CreateLinkupTask,.Lfe1-CreateLinkupTask
	.align	2, 0
	.type	 PrintNumPlayersInLink,function
	.thumb_func
PrintNumPlayersInLink:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L7
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	SetStdWindowBorderStyle
	ldr	r5, .L7+0x4
	ldr	r1, .L7+0x8
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_NumPlayerLink
.Lfe2:
	.size	 PrintNumPlayersInLink,.Lfe2-PrintNumPlayersInLink
	.align	2, 0
	.type	 ClearLinkPlayerCountWindow,function
	.thumb_func
ClearLinkPlayerCountWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 ClearLinkPlayerCountWindow,.Lfe3-ClearLinkPlayerCountWindow
	.align	2, 0
	.type	 UpdateLinkPlayerCountDisplay,function
	.thumb_func
UpdateLinkPlayerCountDisplay:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L14
	add	r4, r1, r0
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	beq	.L11	@cond_branch
	cmp	r5, #0x1
	bhi	.L12	@cond_branch
	ldrh	r0, [r4, #0xa]
	bl	ClearLinkPlayerCountWindow
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	gTasks+0x8
.L12:
	ldrh	r0, [r4, #0xa]
	add	r1, r5, #0
	bl	PrintNumPlayersInLink
.L13:
	strh	r5, [r4, #0x6]
.L11:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 UpdateLinkPlayerCountDisplay,.Lfe4-UpdateLinkPlayerCountDisplay
	.align	2, 0
	.type	 ExchangeDataAndGetLinkupStatus,function
	.thumb_func
ExchangeDataAndGetLinkupStatus:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	GetLinkPlayerDataExchangeStatusTimed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x5
	bhi	.L23	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L26
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L27:
	.align	2, 0
.L26:
	.word	.L24
	.align	2, 0
	.align	2, 0
.L24:
	.word	.L18
	.word	.L23
	.word	.L19
	.word	.L20
	.word	.L21
	.word	.L22
.L18:
	mov	r0, #0x1
	b	.L25
.L19:
	mov	r0, #0x3
	b	.L25
.L20:
	mov	r0, #0x7
	b	.L25
.L21:
	mov	r0, #0x9
	b	.L25
.L22:
	ldr	r4, .L28
	bl	GetLinkPlayerCount_2
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	b	.L25
.L29:
	.align	2, 0
.L28:
	.word	gStringVar1
.L23:
	mov	r0, #0x0
.L25:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 ExchangeDataAndGetLinkupStatus,.Lfe5-ExchangeDataAndGetLinkupStatus
	.align	2, 0
	.type	 CheckLinkErrored,function
	.thumb_func
CheckLinkErrored:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	HasLinkErrorOccurred
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L31	@cond_branch
	mov	r0, #0x0
	b	.L32
.L31:
	ldr	r0, .L33
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L33+0x4
	str	r0, [r1]
	mov	r0, #0x1
.L32:
	pop	{r4}
	pop	{r1}
	bx	r1
.L34:
	.align	2, 0
.L33:
	.word	gTasks
	.word	Task_LinkupConnectionError
.Lfe6:
	.size	 CheckLinkErrored,.Lfe6-CheckLinkErrored
	.align	2, 0
	.type	 CheckLinkCanceledBeforeConnection,function
	.thumb_func
CheckLinkCanceledBeforeConnection:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L38
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L36	@cond_branch
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L36	@cond_branch
	ldr	r0, .L38+0x4
	strh	r1, [r0]
	ldr	r1, .L38+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L38+0xc
	str	r1, [r0]
	mov	r0, #0x1
	b	.L37
.L39:
	.align	2, 0
.L38:
	.word	gMain
	.word	gLinkType
	.word	gTasks
	.word	Task_LinkupFailed
.L36:
	mov	r0, #0x0
.L37:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 CheckLinkCanceledBeforeConnection,.Lfe7-CheckLinkCanceledBeforeConnection
	.align	2, 0
	.type	 CheckLinkCanceled,function
	.thumb_func
CheckLinkCanceled:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L41	@cond_branch
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
.L41:
	ldr	r0, .L44
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L42	@cond_branch
	mov	r0, #0x0
	b	.L43
.L45:
	.align	2, 0
.L44:
	.word	gMain
.L42:
	ldr	r1, .L46
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L46+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L46+0x8
	str	r1, [r0]
	mov	r0, #0x1
.L43:
	pop	{r4}
	pop	{r1}
	bx	r1
.L47:
	.align	2, 0
.L46:
	.word	gLinkType
	.word	gTasks
	.word	Task_LinkupFailed
.Lfe8:
	.size	 CheckLinkCanceled,.Lfe8-CheckLinkCanceled
	.align	2, 0
	.type	 CheckSioErrored,function
	.thumb_func
CheckSioErrored:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetSioMultiSI
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L49	@cond_branch
	mov	r0, #0x0
	b	.L50
.L49:
	ldr	r0, .L51
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L51+0x4
	str	r0, [r1]
	mov	r0, #0x1
.L50:
	pop	{r4}
	pop	{r1}
	bx	r1
.L52:
	.align	2, 0
.L51:
	.word	gTasks
	.word	Task_LinkupConnectionError
.Lfe9:
	.size	 CheckSioErrored,.Lfe9-CheckSioErrored
	.align	2, 0
	.type	 Task_DelayedBlockRequest,function
	.thumb_func
Task_DelayedBlockRequest:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L55
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L54	@cond_branch
	mov	r0, #0x2
	bl	SendBlockRequest
	add	r0, r4, #0
	bl	DestroyTask
.L54:
	pop	{r4}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	gTasks
.Lfe10:
	.size	 Task_DelayedBlockRequest,.Lfe10-Task_DelayedBlockRequest
	.align	2, 0
	.type	 Task_LinkupStart,function
	.thumb_func
Task_LinkupStart:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L61
	add	r4, r1, r0
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	cmp	r2, #0
	bne	.L58	@cond_branch
	bl	OpenLinkTimed
	bl	ResetLinkPlayerCount
	bl	ResetLinkPlayers
	ldr	r0, .L61+0x4
	bl	AddWindow
	strh	r0, [r4, #0xa]
	b	.L59
.L62:
	.align	2, 0
.L61:
	.word	gTasks+0x8
	.word	sWindowTemplate_LinkPlayerCount
.L58:
	cmp	r2, #0x9
	ble	.L59	@cond_branch
	sub	r0, r0, #0x8
	add	r0, r1, r0
	ldr	r1, .L63
	str	r1, [r0]
.L59:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L64:
	.align	2, 0
.L63:
	.word	Task_LinkupAwaitConnection
.Lfe11:
	.size	 Task_LinkupStart,.Lfe11-Task_LinkupStart
	.align	2, 0
	.type	 Task_LinkupAwaitConnection,function
	.thumb_func
Task_LinkupAwaitConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L65	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkCanceled
	cmp	r0, #0x1
	beq	.L65	@cond_branch
	cmp	r5, #0x1
	bls	.L65	@cond_branch
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
	ldr	r1, .L71
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x0
	strh	r0, [r4, #0xe]
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L68	@cond_branch
	mov	r0, #0x15
	bl	PlaySE
	ldr	r0, .L71+0x4
	bl	ShowFieldAutoScrollMessage
	ldr	r0, .L71+0x8
	b	.L70
.L72:
	.align	2, 0
.L71:
	.word	gTasks
	.word	CableClub_Text_WhenAllPlayersReadyAConfirmBCancel
	.word	Task_LinkupConfirmWhenReady
.L68:
	mov	r0, #0x16
	bl	PlaySE
	ldr	r0, .L73
	bl	ShowFieldAutoScrollMessage
	ldr	r0, .L73+0x4
.L70:
	str	r0, [r4]
.L65:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	CableClub_Text_AwaitingLinkupBCancel
	.word	Task_LinkupExchangeDataWithLeader
.Lfe12:
	.size	 Task_LinkupAwaitConnection,.Lfe12-Task_LinkupAwaitConnection
	.align	2, 0
	.type	 Task_LinkupConfirmWhenReady,function
	.thumb_func
Task_LinkupConfirmWhenReady:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L75	@cond_branch
	add	r0, r4, #0
	bl	CheckSioErrored
	cmp	r0, #0x1
	beq	.L75	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L75	@cond_branch
	bl	GetFieldMessageBoxType
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L75	@cond_branch
	ldr	r0, .L79
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	strh	r2, [r1, #0xe]
	ldr	r0, .L79+0x4
	str	r0, [r1]
.L75:
	pop	{r4}
	pop	{r0}
	bx	r0
.L80:
	.align	2, 0
.L79:
	.word	gTasks
	.word	Task_LinkupAwaitConfirmation
.Lfe13:
	.size	 Task_LinkupConfirmWhenReady,.Lfe13-Task_LinkupConfirmWhenReady
	.align	2, 0
	.type	 Task_LinkupAwaitConfirmation,function
	.thumb_func
Task_LinkupAwaitConfirmation:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	mov	r8, r0
	ldr	r0, .L85
	mov	r9, r0
	mov	r7, r8
	add	r7, r7, r9
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L81	@cond_branch
	add	r0, r4, #0
	bl	CheckSioErrored
	cmp	r0, #0x1
	beq	.L81	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L81	@cond_branch
	add	r6, r5, #0
	add	r0, r4, #0
	add	r1, r6, #0
	bl	UpdateLinkPlayerCountDisplay
	ldr	r0, .L85+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L81	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	cmp	r5, r0
	blt	.L81	@cond_branch
	add	r0, r6, #0
	bl	SaveLinkPlayers
	ldrh	r0, [r7, #0xa]
	bl	ClearLinkPlayerCountWindow
	ldr	r0, .L85+0x8
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L85+0xc
	bl	ShowFieldAutoScrollMessage
	mov	r0, r9
	sub	r0, r0, #0x8
	add	r0, r0, r8
	ldr	r1, .L85+0x10
	str	r1, [r0]
.L81:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gTasks+0x8
	.word	gMain
	.word	gStringVar1
	.word	CableClub_Text_StartLinkWithXPlayersAConfirmBCancel
	.word	Task_LinkupTryConfirmation
.Lfe14:
	.size	 Task_LinkupAwaitConfirmation,.Lfe14-Task_LinkupAwaitConfirmation
	.align	2, 0
	.type	 Task_LinkupTryConfirmation,function
	.thumb_func
Task_LinkupTryConfirmation:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	add	r0, r5, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L87	@cond_branch
	add	r0, r5, #0
	bl	CheckSioErrored
	cmp	r0, #0x1
	beq	.L87	@cond_branch
	add	r0, r5, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L87	@cond_branch
	bl	GetFieldMessageBoxType
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L87	@cond_branch
	bl	GetSavedPlayerCount
	add	r4, r0, #0
	bl	GetLinkPlayerCount_2
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L96	@cond_branch
	ldr	r0, .L97
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L93	@cond_branch
.L96:
	ldr	r0, .L97+0x4
	bl	ShowFieldAutoScrollMessage
	ldr	r1, .L97+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L97+0xc
	str	r1, [r0]
	b	.L87
.L98:
	.align	2, 0
.L97:
	.word	gMain
	.word	CableClub_Text_WhenAllPlayersReadyAConfirmBCancel
	.word	gTasks
	.word	Task_LinkupConfirmWhenReady
.L93:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L87	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	CheckShouldAdvanceLinkState
	ldr	r0, .L99
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L99+0x4
	str	r0, [r1]
.L87:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	gTasks
	.word	Task_LinkupConfirm
.Lfe15:
	.size	 Task_LinkupTryConfirmation,.Lfe15-Task_LinkupTryConfirmation
	.align	2, 0
	.type	 Task_LinkupConfirm,function
	.thumb_func
Task_LinkupConfirm:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L108
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldrb	r7, [r5, #0xa]
	ldrb	r6, [r5, #0xc]
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L101	@cond_branch
	add	r0, r4, #0
	bl	TryLinkTimeout
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L101	@cond_branch
	bl	GetLinkPlayerCount_2
	add	r4, r0, #0
	bl	GetSavedPlayerCount
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.L104	@cond_branch
	ldr	r0, .L108+0x4
	b	.L107
.L109:
	.align	2, 0
.L108:
	.word	gTasks
	.word	Task_LinkupConnectionError
.L104:
	ldr	r4, .L110
	add	r0, r7, #0
	add	r1, r6, #0
	bl	ExchangeDataAndGetLinkupStatus
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L101	@cond_branch
	ldr	r0, .L110+0x4
.L107:
	str	r0, [r5]
.L101:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L111:
	.align	2, 0
.L110:
	.word	gSpecialVar_Result
	.word	Task_LinkupCheckStatusAfterConfirm
.Lfe16:
	.size	 Task_LinkupConfirm,.Lfe16-Task_LinkupConfirm
	.align	2, 0
	.type	 Task_LinkupExchangeDataWithLeader,function
	.thumb_func
Task_LinkupExchangeDataWithLeader:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L122
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldrb	r7, [r5, #0xa]
	ldrb	r6, [r5, #0xc]
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L112	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L112	@cond_branch
	ldr	r4, .L122+0x4
	add	r0, r7, #0
	add	r1, r6, #0
	bl	ExchangeDataAndGetLinkupStatus
	add	r1, r0, #0
	strh	r1, [r4]
	lsl	r0, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	beq	.L112	@cond_branch
	sub	r0, r1, #0x3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L116	@cond_branch
	bl	SetCloseLinkCallback
	bl	HideFieldMessageBox
	ldr	r0, .L122+0x8
	b	.L121
.L123:
	.align	2, 0
.L122:
	.word	gTasks
	.word	gSpecialVar_Result
	.word	Task_StopLinkup
.L116:
	cmp	r2, #0x7
	beq	.L119	@cond_branch
	cmp	r2, #0x9
	bne	.L118	@cond_branch
.L119:
	bl	CloseLink
	bl	HideFieldMessageBox
	ldr	r0, .L124
	b	.L121
.L125:
	.align	2, 0
.L124:
	.word	Task_StopLinkup
.L118:
	bl	GetLinkPlayerCount_2
	ldr	r4, .L126
	strb	r0, [r4]
	bl	GetMultiplayerId
	ldr	r1, .L126+0x4
	strb	r0, [r1]
	ldrb	r0, [r4]
	bl	SaveLinkPlayers
	ldr	r0, .L126+0x8
	bl	TrainerCard_GenerateCardForLinkPlayer
	ldr	r0, .L126+0xc
.L121:
	str	r0, [r5]
.L112:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L127:
	.align	2, 0
.L126:
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
	.word	gBlockSendBuffer
	.word	Task_LinkupAwaitTrainerCardData
.Lfe17:
	.size	 Task_LinkupExchangeDataWithLeader,.Lfe17-Task_LinkupExchangeDataWithLeader
	.align	2, 0
	.type	 AnyConnectedPartnersPlayingRS,function
	.thumb_func
AnyConnectedPartnersPlayingRS:
	push	{r4, r5, lr}
	mov	r5, #0x0
	ldr	r4, .L136
	b	.L129
.L137:
	.align	2, 0
.L136:
	.word	gLinkPlayers
.L132:
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L131	@cond_branch
	mov	r0, #0x1
	b	.L135
.L131:
	add	r4, r4, #0x1c
	add	r5, r5, #0x1
.L129:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	blt	.L132	@cond_branch
	mov	r0, #0x0
.L135:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 AnyConnectedPartnersPlayingRS,.Lfe18-AnyConnectedPartnersPlayingRS
	.align	2, 0
	.type	 Task_LinkupCheckStatusAfterConfirm,function
	.thumb_func
Task_LinkupCheckStatusAfterConfirm:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L138	@cond_branch
	ldr	r0, .L150
	ldrh	r0, [r0]
	cmp	r0, #0x4
	bne	.L140	@cond_branch
	bl	AnyConnectedPartnersPlayingRS
	cmp	r0, #0x1
	beq	.L147	@cond_branch
	bl	SetCloseLinkCallback
	b	.L149
.L151:
	.align	2, 0
.L150:
	.word	gSpecialVar_Result
.L140:
	cmp	r0, #0x3
	bne	.L144	@cond_branch
	bl	SetCloseLinkCallback
	b	.L149
.L144:
	cmp	r0, #0x7
	beq	.L147	@cond_branch
	cmp	r0, #0x9
	bne	.L146	@cond_branch
.L147:
	bl	CloseLink
.L149:
	bl	HideFieldMessageBox
	ldr	r0, .L152
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L152+0x4
	str	r0, [r1]
	b	.L138
.L153:
	.align	2, 0
.L152:
	.word	gTasks
	.word	Task_StopLinkup
.L146:
	bl	GetLinkPlayerCount_2
	ldr	r4, .L154
	strb	r0, [r4]
	bl	GetMultiplayerId
	ldr	r1, .L154+0x4
	strb	r0, [r1]
	ldrb	r0, [r4]
	bl	SaveLinkPlayers
	ldr	r0, .L154+0x8
	bl	TrainerCard_GenerateCardForLinkPlayer
	ldr	r1, .L154+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L154+0x10
	str	r1, [r0]
	mov	r0, #0x2
	bl	SendBlockRequest
.L138:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
	.word	gBlockSendBuffer
	.word	gTasks
	.word	Task_LinkupAwaitTrainerCardData
.Lfe19:
	.size	 Task_LinkupCheckStatusAfterConfirm,.Lfe19-Task_LinkupCheckStatusAfterConfirm
	.align	2, 0
	.type	 Task_LinkupAwaitTrainerCardData,function
	.thumb_func
Task_LinkupAwaitTrainerCardData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r7, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L156	@cond_branch
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetSavedLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L156	@cond_branch
	mov	r5, #0x0
	lsl	r0, r7, #0x2
	mov	r8, r0
	b	.L159
.L162:
	ldr	r1, .L169
	lsl	r0, r5, #0x3
	sub	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r6, r0, r1
	ldrb	r0, [r6]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L163	@cond_branch
	lsl	r1, r5, #0x8
	ldr	r0, .L169+0x4
	add	r1, r1, r0
	ldr	r0, .L169+0x8
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	lsl	r4, r4, #0x5
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r2, #0x38
	bl	memcpy
	ldrh	r0, [r6]
	add	r4, r4, #0x38
	strb	r0, [r4]
	b	.L161
.L170:
	.align	2, 0
.L169:
	.word	gLinkPlayers
	.word	gBlockRecvBuffer
	.word	gTrainerCards
.L163:
	lsl	r1, r5, #0x8
	ldr	r0, .L171
	add	r1, r1, r0
	ldr	r2, .L171+0x4
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x5
	add	r0, r0, r2
	mov	r2, #0x60
	bl	memcpy
.L161:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L159:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcc	.L162	@cond_branch
	mov	r0, #0x0
	bl	SetSuppressLinkErrorMessage
	bl	ResetBlockReceivedFlags
	bl	HideFieldMessageBox
	ldr	r0, .L171+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L166	@cond_branch
	ldr	r0, .L171+0xc
	ldrh	r1, [r0]
	ldr	r0, .L171+0x10
	ldr	r0, .L171+0x14
	mov	r2, r8
	add	r1, r2, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	ScriptContext_Enable
	add	r0, r7, #0
	bl	DestroyTask
	b	.L156
.L172:
	.align	2, 0
.L171:
	.word	gBlockRecvBuffer
	.word	gTrainerCards
	.word	gSpecialVar_Result
	.word	gLinkType
	.word	0x4411
	.word	gTasks
.L166:
	bl	SetCloseLinkCallback
	ldr	r0, .L173
	mov	r2, r8
	add	r1, r2, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L173+0x4
	str	r0, [r1]
.L156:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	gTasks
	.word	Task_StopLinkup
.Lfe20:
	.size	 Task_LinkupAwaitTrainerCardData,.Lfe20-Task_LinkupAwaitTrainerCardData
	.align	2, 0
	.type	 Task_StopLinkup,function
	.thumb_func
Task_StopLinkup:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L177
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L176	@cond_branch
	ldr	r0, .L177+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	ScriptContext_Enable
	ldrb	r0, [r4, #0x12]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
.L176:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L178:
	.align	2, 0
.L177:
	.word	gReceivedRemoteLinkPlayers
	.word	gTasks
.Lfe21:
	.size	 Task_StopLinkup,.Lfe21-Task_StopLinkup
	.align	2, 0
	.type	 Task_LinkupFailed,function
	.thumb_func
Task_LinkupFailed:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L180
	mov	r0, #0x5
	strh	r0, [r1]
	ldr	r1, .L180+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	HideFieldMessageBox
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L181:
	.align	2, 0
.L180:
	.word	gSpecialVar_Result
	.word	gTasks
.Lfe22:
	.size	 Task_LinkupFailed,.Lfe22-Task_LinkupFailed
	.align	2, 0
	.type	 Task_LinkupConnectionError,function
	.thumb_func
Task_LinkupConnectionError:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L183
	mov	r0, #0x6
	strh	r0, [r1]
	ldr	r1, .L183+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	HideFieldMessageBox
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	gSpecialVar_Result
	.word	gTasks
.Lfe23:
	.size	 Task_LinkupConnectionError,.Lfe23-Task_LinkupConnectionError
	.align	2, 0
	.type	 TryLinkTimeout,function
	.thumb_func
TryLinkTimeout:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L188
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r0, [r2, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x10]
	lsl	r0, r0, #0x10
	mov	r1, #0x96
	lsl	r1, r1, #0x12
	cmp	r0, r1
	bgt	.L186	@cond_branch
	mov	r0, #0x0
	b	.L187
.L189:
	.align	2, 0
.L188:
	.word	gTasks
.L186:
	ldr	r0, .L190
	str	r0, [r2]
	mov	r0, #0x1
.L187:
	pop	{r1}
	bx	r1
.L191:
	.align	2, 0
.L190:
	.word	Task_LinkupConnectionError
.Lfe24:
	.size	 TryLinkTimeout,.Lfe24-TryLinkTimeout
	.align	2, 0
	.globl	TryBattleLinkup
	.type	 TryBattleLinkup,function
	.thumb_func
TryBattleLinkup:
	push	{r4, lr}
	mov	r3, #0x2
	mov	r2, #0x2
	ldr	r0, .L201
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L195	@cond_branch
	cmp	r0, #0x2
	bgt	.L199	@cond_branch
	cmp	r0, #0x1
	beq	.L194	@cond_branch
	b	.L193
.L202:
	.align	2, 0
.L201:
	.word	gSpecialVar_0x8004
.L199:
	cmp	r0, #0x5
	beq	.L196	@cond_branch
	b	.L193
.L194:
	mov	r3, #0x2
	ldr	r1, .L203
	ldr	r4, .L203+0x4
	b	.L200
.L204:
	.align	2, 0
.L203:
	.word	gLinkType
	.word	0x2233
.L195:
	mov	r3, #0x2
	ldr	r1, .L205
	ldr	r4, .L205+0x4
	b	.L200
.L206:
	.align	2, 0
.L205:
	.word	gLinkType
	.word	0x2244
.L196:
	mov	r3, #0x4
	mov	r2, #0x4
	ldr	r1, .L207
	ldr	r4, .L207+0x4
.L200:
	add	r0, r4, #0
	strh	r0, [r1]
.L193:
	add	r0, r3, #0
	add	r1, r2, #0
	bl	CreateLinkupTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L208:
	.align	2, 0
.L207:
	.word	gLinkType
	.word	0x2255
.Lfe25:
	.size	 TryBattleLinkup,.Lfe25-TryBattleLinkup
	.align	2, 0
	.globl	TryTradeLinkup
	.type	 TryTradeLinkup,function
	.thumb_func
TryTradeLinkup:
	push	{lr}
	ldr	r1, .L210
	ldr	r2, .L210+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L210+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L211:
	.align	2, 0
.L210:
	.word	gLinkType
	.word	0x1133
	.word	gBattleTypeFlags
.Lfe26:
	.size	 TryTradeLinkup,.Lfe26-TryTradeLinkup
	.align	2, 0
	.globl	TryRecordMixLinkup
	.type	 TryRecordMixLinkup,function
	.thumb_func
TryRecordMixLinkup:
	push	{lr}
	ldr	r1, .L213
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L213+0x4
	ldr	r2, .L213+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L213+0xc
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	gSpecialVar_Result
	.word	gLinkType
	.word	0x3311
	.word	gBattleTypeFlags
.Lfe27:
	.size	 TryRecordMixLinkup,.Lfe27-TryRecordMixLinkup
	.align	2, 0
	.globl	TryContestLinkup
	.type	 TryContestLinkup,function
	.thumb_func
TryContestLinkup:
	push	{lr}
	ldr	r1, .L216
	ldr	r2, .L216+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L216+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x4
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L217:
	.align	2, 0
.L216:
	.word	gLinkType
	.word	0x6601
	.word	gBattleTypeFlags
.Lfe28:
	.size	 TryContestLinkup,.Lfe28-TryContestLinkup
	.align	2, 0
	.globl	CreateTask_ReestablishCableClubLink
	.type	 CreateTask_ReestablishCableClubLink,function
	.thumb_func
CreateTask_ReestablishCableClubLink:
	push	{lr}
	ldr	r0, .L230
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L219	@cond_branch
	mov	r0, #0xff
	b	.L228
.L231:
	.align	2, 0
.L230:
	.word	Task_ReestablishLink
.L219:
	ldr	r0, .L232
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x4
	bhi	.L220	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L232+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L233:
	.align	2, 0
.L232:
	.word	gSpecialVar_0x8004
	.word	.L226
	.align	2, 0
	.align	2, 0
.L226:
	.word	.L221
	.word	.L222
	.word	.L224
	.word	.L225
	.word	.L223
.L221:
	ldr	r1, .L234
	ldr	r2, .L234+0x4
	b	.L229
.L235:
	.align	2, 0
.L234:
	.word	gLinkType
	.word	0x2233
.L222:
	ldr	r1, .L236
	ldr	r2, .L236+0x4
	b	.L229
.L237:
	.align	2, 0
.L236:
	.word	gLinkType
	.word	0x2244
.L223:
	ldr	r1, .L238
	ldr	r2, .L238+0x4
	b	.L229
.L239:
	.align	2, 0
.L238:
	.word	gLinkType
	.word	0x2255
.L224:
	ldr	r1, .L240
	ldr	r2, .L240+0x4
	b	.L229
.L241:
	.align	2, 0
.L240:
	.word	gLinkType
	.word	0x1111
.L225:
	ldr	r1, .L242
	ldr	r2, .L242+0x4
.L229:
	add	r0, r2, #0
	strh	r0, [r1]
.L220:
	ldr	r0, .L242+0x8
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L228:
	pop	{r1}
	bx	r1
.L243:
	.align	2, 0
.L242:
	.word	gLinkType
	.word	0x3322
	.word	Task_ReestablishLink
.Lfe29:
	.size	 CreateTask_ReestablishCableClubLink,.Lfe29-CreateTask_ReestablishCableClubLink
	.align	2, 0
	.type	 Task_ReestablishLink,function
	.thumb_func
Task_ReestablishLink:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L248
	add	r4, r1, r0
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	cmp	r2, #0
	bne	.L245	@cond_branch
	bl	OpenLink
	bl	ResetLinkPlayers
	ldr	r0, .L248+0x4
	mov	r1, #0x50
	bl	CreateTask
	b	.L246
.L249:
	.align	2, 0
.L248:
	.word	gTasks+0x8
	.word	Task_WaitForLinkPlayerConnection
.L245:
	cmp	r2, #0x9
	ble	.L246	@cond_branch
	sub	r0, r0, #0x8
	add	r0, r1, r0
	ldr	r1, .L250
	str	r1, [r0]
.L246:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L251:
	.align	2, 0
.L250:
	.word	Task_ReestablishLinkAwaitConnection
.Lfe30:
	.size	 Task_ReestablishLink,.Lfe30-Task_ReestablishLink
	.align	2, 0
	.type	 Task_ReestablishLinkAwaitConnection,function
	.thumb_func
Task_ReestablishLinkAwaitConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L253	@cond_branch
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L254	@cond_branch
	ldr	r0, .L257
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L257+0x4
	b	.L256
.L258:
	.align	2, 0
.L257:
	.word	gTasks
	.word	Task_ReestablishLinkLeader
.L254:
	ldr	r0, .L259
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L259+0x4
.L256:
	str	r0, [r1]
.L253:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gTasks
	.word	Task_ReestablishLinkAwaitConfirmation
.Lfe31:
	.size	 Task_ReestablishLinkAwaitConnection,.Lfe31-Task_ReestablishLinkAwaitConnection
	.align	2, 0
	.type	 Task_ReestablishLinkLeader,function
	.thumb_func
Task_ReestablishLinkLeader:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	GetSavedPlayerCount
	add	r4, r0, #0
	bl	GetLinkPlayerCount_2
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L262	@cond_branch
	bl	CheckShouldAdvanceLinkState
	ldr	r0, .L263
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L263+0x4
	str	r0, [r1]
.L262:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L264:
	.align	2, 0
.L263:
	.word	gTasks
	.word	Task_ReestablishLinkAwaitConfirmation
.Lfe32:
	.size	 Task_ReestablishLinkLeader,.Lfe32-Task_ReestablishLinkLeader
	.align	2, 0
	.type	 Task_ReestablishLinkAwaitConfirmation,function
	.thumb_func
Task_ReestablishLinkAwaitConfirmation:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L267
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L266	@cond_branch
	bl	IsLinkPlayerDataExchangeComplete
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L266	@cond_branch
	bl	CheckLinkPlayersMatchSaved
	bl	StartSendingKeysToLink
	add	r0, r4, #0
	bl	DestroyTask
.L266:
	pop	{r4}
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	gReceivedRemoteLinkPlayers
.Lfe33:
	.size	 Task_ReestablishLinkAwaitConfirmation,.Lfe33-Task_ReestablishLinkAwaitConfirmation
	.align	2, 0
	.globl	CableClub_AskSaveTheGame
	.type	 CableClub_AskSaveTheGame,function
	.thumb_func
CableClub_AskSaveTheGame:
	push	{lr}
	bl	Field_AskSaveTheGame
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 CableClub_AskSaveTheGame,.Lfe34-CableClub_AskSaveTheGame
	.align	2, 0
	.type	 Task_StartWiredCableClubBattle,function
	.thumb_func
Task_StartWiredCableClubBattle:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L295
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x5
	bls	.LCB2091
	b	.L271	@long jump
.LCB2091:
	lsl	r0, r0, #0x2
	ldr	r1, .L295+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L296:
	.align	2, 0
.L295:
	.word	gTasks
	.word	.L290
	.align	2, 0
	.align	2, 0
.L290:
	.word	.L272
	.word	.L273
	.word	.L275
	.word	.L277
	.word	.L278
	.word	.L280
.L272:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L297
	ldr	r2, .L297+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	bl	ClearLinkCallback_2
	b	.L292
.L298:
	.align	2, 0
.L297:
	.word	gLinkType
	.word	0x2211
.L273:
	ldr	r0, .L299
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	b	.L293
.L300:
	.align	2, 0
.L299:
	.word	gPaletteFade
.L275:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L271	@cond_branch
	b	.L292
.L277:
	bl	SetCloseLinkCallback
	b	.L292
.L278:
	ldr	r0, .L301
	ldrb	r0, [r0]
.L293:
	cmp	r0, #0
	bne	.L271	@cond_branch
.L292:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L271
.L302:
	.align	2, 0
.L301:
	.word	gReceivedRemoteLinkPlayers
.L280:
	ldr	r0, .L303
	ldr	r0, [r0, #0x4]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L281	@cond_branch
	ldr	r0, .L303+0x4
	bl	PlayMapChosenOrBattleBGM
	b	.L282
.L304:
	.align	2, 0
.L303:
	.word	gLinkPlayers
	.word	0x109
.L281:
	mov	r0, #0x85
	lsl	r0, r0, #0x1
	bl	PlayMapChosenOrBattleBGM
.L282:
	ldr	r0, .L305
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L285	@cond_branch
	cmp	r0, #0x2
	bgt	.L289	@cond_branch
	cmp	r0, #0x1
	beq	.L284	@cond_branch
	b	.L283
.L306:
	.align	2, 0
.L305:
	.word	gSpecialVar_0x8004
.L289:
	cmp	r0, #0x5
	beq	.L286	@cond_branch
	b	.L283
.L284:
	ldr	r1, .L307
	mov	r0, #0xa
	b	.L294
.L308:
	.align	2, 0
.L307:
	.word	gBattleTypeFlags
.L285:
	ldr	r1, .L309
	mov	r0, #0xb
	b	.L294
.L310:
	.align	2, 0
.L309:
	.word	gBattleTypeFlags
.L286:
	bl	ReducePlayerPartyToThree
	ldr	r1, .L311
	mov	r0, #0x4b
.L294:
	str	r0, [r1]
.L283:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L311+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L311+0x8
	bl	SetMainCallback2
	ldr	r1, .L311+0xc
	ldr	r0, .L311+0x10
	str	r0, [r1, #0x8]
	add	r0, r5, #0
	bl	DestroyTask
.L271:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	gBattleTypeFlags
	.word	gTrainerBattleOpponent_A
	.word	CB2_InitBattle
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
.Lfe35:
	.size	 Task_StartWiredCableClubBattle,.Lfe35-Task_StartWiredCableClubBattle
	.align	2, 0
	.type	 Task_StartWirelessCableClubBattle,function
	.thumb_func
Task_StartWirelessCableClubBattle:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L344
	add	r6, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x7
	bls	.LCB2303
	b	.L314	@long jump
.LCB2303:
	lsl	r0, r0, #0x2
	ldr	r1, .L344+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L345:
	.align	2, 0
.L344:
	.word	gTasks+0x8
	.word	.L341
	.align	2, 0
	.align	2, 0
.L341:
	.word	.L315
	.word	.L316
	.word	.L318
	.word	.L319
	.word	.L326
	.word	.L328
	.word	.L329
	.word	.L331
.L315:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L346
	ldr	r2, .L346+0x4
	add	r1, r2, #0
	strh	r1, [r0]
	bl	ClearLinkCallback_2
	mov	r0, #0x1
	strh	r0, [r6]
	b	.L314
.L347:
	.align	2, 0
.L346:
	.word	gLinkType
	.word	0x2211
.L316:
	ldr	r0, .L348
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB2350
	b	.L314	@long jump
.LCB2350:
	mov	r0, #0x2
	strh	r0, [r6]
	b	.L314
.L349:
	.align	2, 0
.L348:
	.word	gPaletteFade
.L318:
	ldr	r1, .L350
	mov	r0, #0x0
	mov	r2, #0x1c
	bl	SendBlock
	mov	r0, #0x3
	strh	r0, [r6]
	b	.L314
.L351:
	.align	2, 0
.L350:
	.word	gLocalLinkPlayer
.L319:
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.LCB2387
	b	.L314	@long jump
.LCB2387:
	mov	r4, #0x0
	ldr	r5, .L352
	b	.L321
.L353:
	.align	2, 0
.L352:
	.word	gLinkPlayers
.L324:
	lsl	r1, r4, #0x8
	ldr	r2, .L354
	add	r0, r5, #0
	add	r1, r1, r2
	ldmia	r1!, {r2, r3, r7}
	stmia	r0!, {r2, r3, r7}
	ldmia	r1!, {r2, r3, r7}
	stmia	r0!, {r2, r3, r7}
	ldr	r1, [r1]
	str	r1, [r0]
	add	r0, r5, #0
	bl	ConvertLinkPlayerName
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	ResetBlockReceivedFlag
	add	r5, r5, #0x1c
	add	r4, r4, #0x1
.L321:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L324	@cond_branch
	mov	r0, #0x4
	strh	r0, [r6]
	b	.L314
.L355:
	.align	2, 0
.L354:
	.word	gBlockRecvBuffer
.L326:
	ldrh	r0, [r6, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L314	@cond_branch
	mov	r0, #0x5
	strh	r0, [r6]
	b	.L314
.L328:
	bl	SetLinkStandbyCallback
	mov	r0, #0x6
	strh	r0, [r6]
	b	.L314
.L329:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L314	@cond_branch
	mov	r0, #0x7
	strh	r0, [r6]
	b	.L314
.L331:
	ldr	r0, .L356
	ldr	r0, [r0, #0x4]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L332	@cond_branch
	ldr	r0, .L356+0x4
	bl	PlayMapChosenOrBattleBGM
	b	.L333
.L357:
	.align	2, 0
.L356:
	.word	gLinkPlayers
	.word	0x109
.L332:
	mov	r0, #0x85
	lsl	r0, r0, #0x1
	bl	PlayMapChosenOrBattleBGM
.L333:
	ldr	r0, .L358
	ldr	r1, .L358+0x4
	str	r1, [r0, #0x14]
	ldr	r0, .L358+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L336	@cond_branch
	cmp	r0, #0x2
	bgt	.L340	@cond_branch
	cmp	r0, #0x1
	beq	.L335	@cond_branch
	b	.L334
.L359:
	.align	2, 0
.L358:
	.word	gLinkPlayers
	.word	0x2211
	.word	gSpecialVar_0x8004
.L340:
	cmp	r0, #0x5
	beq	.L337	@cond_branch
	b	.L334
.L335:
	ldr	r1, .L360
	mov	r0, #0xa
	b	.L343
.L361:
	.align	2, 0
.L360:
	.word	gBattleTypeFlags
.L336:
	ldr	r1, .L362
	mov	r0, #0xb
	b	.L343
.L363:
	.align	2, 0
.L362:
	.word	gBattleTypeFlags
.L337:
	bl	ReducePlayerPartyToThree
	ldr	r1, .L364
	mov	r0, #0x4b
.L343:
	str	r0, [r1]
.L334:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L364+0x4
	mov	r3, #0x80
	lsl	r3, r3, #0x4
	add	r0, r3, #0
	strh	r0, [r1]
	ldr	r0, .L364+0x8
	bl	SetMainCallback2
	ldr	r1, .L364+0xc
	ldr	r0, .L364+0x10
	str	r0, [r1, #0x8]
	add	r0, r4, #0
	bl	DestroyTask
.L314:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gBattleTypeFlags
	.word	gTrainerBattleOpponent_A
	.word	CB2_InitBattle
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
.Lfe36:
	.size	 Task_StartWirelessCableClubBattle,.Lfe36-Task_StartWirelessCableClubBattle
	.align	2, 0
	.type	 CB2_ReturnFromUnionRoomBattle,function
	.thumb_func
CB2_ReturnFromUnionRoomBattle:
	push	{r4, lr}
	ldr	r0, .L373
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L368	@cond_branch
	cmp	r0, #0x1
	beq	.L369	@cond_branch
	b	.L367
.L374:
	.align	2, 0
.L373:
	.word	gMain
.L368:
	bl	SetCloseLinkCallback
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L367
.L369:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L367	@cond_branch
	ldr	r0, .L375
	bl	SetMainCallback2
.L367:
	pop	{r4}
	pop	{r0}
	bx	r0
.L376:
	.align	2, 0
.L375:
	.word	CB2_ReturnToField
.Lfe37:
	.size	 CB2_ReturnFromUnionRoomBattle,.Lfe37-CB2_ReturnFromUnionRoomBattle
	.align	2, 0
	.globl	CB2_ReturnFromCableClubBattle
	.type	 CB2_ReturnFromCableClubBattle,function
	.thumb_func
CB2_ReturnFromCableClubBattle:
	push	{r4, r5, lr}
	ldr	r2, .L388
	ldr	r0, [r2]
	ldr	r1, .L388+0x4
	and	r0, r0, r1
	str	r0, [r2]
	bl	Overworld_ResetMapMusic
	bl	LoadPlayerParty
	bl	SavePlayerBag
	bl	Special_UpdateTrainerFansAfterLinkBattle
	ldr	r0, .L388+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x5
	beq	.L378	@cond_branch
	ldr	r0, .L388+0xc
	ldrb	r0, [r0]
	mov	r5, #0x1
	eor	r0, r0, r5
	bl	UpdatePlayerLinkBattleRecords
	ldr	r0, .L388+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L378	@cond_branch
	ldr	r0, .L388+0x14
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L381	@cond_branch
	cmp	r0, #0x2
	beq	.L382	@cond_branch
	b	.L378
.L389:
	.align	2, 0
.L388:
	.word	gBattleTypeFlags
	.word	0xffdf
	.word	gSpecialVar_0x8004
	.word	gLocalLinkPlayerId
	.word	gWirelessCommType
	.word	gBattleOutcome
.L381:
	ldr	r4, .L390
	bl	GetMultiplayerId
	eor	r0, r0, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r4, r4, #0x4
	add	r1, r1, r4
	ldr	r1, [r1]
	mov	r0, #0x0
	bl	MysteryGift_TryIncrementStat
	b	.L378
.L391:
	.align	2, 0
.L390:
	.word	gLinkPlayers
.L382:
	ldr	r4, .L392
	bl	GetMultiplayerId
	eor	r0, r0, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r4, r4, #0x4
	add	r1, r1, r4
	ldr	r1, [r1]
	mov	r0, #0x1
	bl	MysteryGift_TryIncrementStat
.L378:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L385	@cond_branch
	ldr	r1, .L392+0x4
	ldr	r0, .L392+0x8
	b	.L387
.L393:
	.align	2, 0
.L392:
	.word	gLinkPlayers
	.word	gMain
	.word	CB2_ReturnFromUnionRoomBattle
.L385:
	ldr	r1, .L394
	ldr	r0, .L394+0x4
.L387:
	str	r0, [r1, #0x8]
	ldr	r0, .L394+0x8
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L395:
	.align	2, 0
.L394:
	.word	gMain
	.word	CB2_ReturnToFieldFromMultiplayer
	.word	CB2_SetUpSaveAfterLinkBattle
.Lfe38:
	.size	 CB2_ReturnFromCableClubBattle,.Lfe38-CB2_ReturnFromCableClubBattle
	.align	2, 0
	.globl	CleanupLinkRoomState
	.type	 CleanupLinkRoomState,function
	.thumb_func
CleanupLinkRoomState:
	push	{lr}
	ldr	r0, .L399
	ldrh	r1, [r0]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L398	@cond_branch
	cmp	r1, #0x5
	bne	.L397	@cond_branch
.L398:
	bl	LoadPlayerParty
	bl	SavePlayerBag
.L397:
	mov	r0, #0x7f
	bl	SetWarpDestinationToDynamicWarp
	pop	{r0}
	bx	r0
.L400:
	.align	2, 0
.L399:
	.word	gSpecialVar_0x8004
.Lfe39:
	.size	 CleanupLinkRoomState,.Lfe39-CleanupLinkRoomState
	.align	2, 0
	.globl	ExitLinkRoom
	.type	 ExitLinkRoom,function
	.thumb_func
ExitLinkRoom:
	push	{lr}
	bl	QueueExitLinkRoomKey
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 ExitLinkRoom,.Lfe40-ExitLinkRoom
	.align	2, 0
	.type	 Task_EnterCableClubSeat,function
	.thumb_func
Task_EnterCableClubSeat:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L418
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L405	@cond_branch
	cmp	r0, #0x1
	bgt	.L417	@cond_branch
	cmp	r0, #0
	beq	.L404	@cond_branch
	b	.L403
.L419:
	.align	2, 0
.L418:
	.word	gTasks
.L417:
	cmp	r0, #0x2
	beq	.L407	@cond_branch
	cmp	r0, #0x3
	beq	.L414	@cond_branch
	b	.L403
.L404:
	ldr	r0, .L420
	bl	ShowFieldMessage
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L403
.L421:
	.align	2, 0
.L420:
	.word	CableClub_Text_PleaseWaitBCancel
.L405:
	bl	IsFieldMessageBoxHidden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L403	@cond_branch
	bl	SetInCableClubSeat
	ldr	r0, .L422
	ldrb	r0, [r0]
	bl	SetLocalLinkPlayerId
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L403
.L423:
	.align	2, 0
.L422:
	.word	gSpecialVar_0x8005
.L407:
	bl	GetCableClubPartnersReady
	cmp	r0, #0x1
	beq	.L410	@cond_branch
	cmp	r0, #0x1
	bcc	.L403	@cond_branch
	cmp	r0, #0x2
	beq	.L411	@cond_branch
	b	.L403
.L410:
	bl	HideFieldMessageBox
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	bl	SetStartedCableClubActivity
	add	r0, r4, #0
	bl	SwitchTaskToFollowupFunc
	b	.L403
.L411:
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L403
.L414:
	bl	SetLinkWaitingForScript
	mov	r0, #0x1
	bl	EraseFieldMessageBox
	add	r0, r4, #0
	bl	DestroyTask
	bl	ScriptContext_Enable
.L403:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 Task_EnterCableClubSeat,.Lfe41-Task_EnterCableClubSeat
	.align	2, 0
	.type	 CreateTask_EnterCableClubSeat,function
	.thumb_func
CreateTask_EnterCableClubSeat:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L425
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	SetTaskFuncWithFollowupFunc
	bl	ScriptContext_Stop
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L426:
	.align	2, 0
.L425:
	.word	Task_EnterCableClubSeat
.Lfe42:
	.size	 CreateTask_EnterCableClubSeat,.Lfe42-CreateTask_EnterCableClubSeat
	.align	2, 0
	.type	 Task_StartWiredTrade,function
	.thumb_func
Task_StartWiredTrade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L439
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L430	@cond_branch
	cmp	r0, #0x1
	bgt	.L437	@cond_branch
	cmp	r0, #0
	beq	.L429	@cond_branch
	b	.L428
.L440:
	.align	2, 0
.L439:
	.word	gTasks
.L437:
	cmp	r0, #0x2
	beq	.L432	@cond_branch
	cmp	r0, #0x3
	beq	.L433	@cond_branch
	b	.L428
.L429:
	bl	LockPlayerFieldControls
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	ClearLinkCallback_2
	b	.L438
.L430:
	ldr	r0, .L441
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L428	@cond_branch
	b	.L438
.L442:
	.align	2, 0
.L441:
	.word	gPaletteFade
.L432:
	ldr	r1, .L443
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	bl	m4aMPlayAllStop
	bl	SetCloseLinkCallback
.L438:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L428
.L444:
	.align	2, 0
.L443:
	.word	gSelectedTradeMonPositions
.L433:
	ldr	r0, .L445
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L428	@cond_branch
	ldr	r0, .L445+0x4
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L428:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L446:
	.align	2, 0
.L445:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_ReturnFromLinkTrade
.Lfe43:
	.size	 Task_StartWiredTrade,.Lfe43-Task_StartWiredTrade
	.align	2, 0
	.type	 Task_StartWirelessTrade,function
	.thumb_func
Task_StartWirelessTrade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L459
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L450	@cond_branch
	cmp	r0, #0x1
	bgt	.L457	@cond_branch
	cmp	r0, #0
	beq	.L449	@cond_branch
	b	.L448
.L460:
	.align	2, 0
.L459:
	.word	gTasks+0x8
.L457:
	cmp	r0, #0x2
	beq	.L452	@cond_branch
	cmp	r0, #0x3
	beq	.L453	@cond_branch
	b	.L448
.L449:
	bl	LockPlayerFieldControls
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	ClearLinkRfuCallback
	b	.L458
.L450:
	ldr	r0, .L461
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L448	@cond_branch
	b	.L458
.L462:
	.align	2, 0
.L461:
	.word	gPaletteFade
.L452:
	ldr	r1, .L463
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	bl	m4aMPlayAllStop
	bl	SetLinkStandbyCallback
.L458:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L448
.L464:
	.align	2, 0
.L463:
	.word	gSelectedTradeMonPositions
.L453:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L448	@cond_branch
	bl	UnionRoom_CreateTask_CallCB2ReturnFromLinkTrade
	add	r0, r5, #0
	bl	DestroyTask
.L448:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 Task_StartWirelessTrade,.Lfe44-Task_StartWirelessTrade
	.align	2, 0
	.globl	EnterTradeSeat
	.type	 EnterTradeSeat,function
	.thumb_func
EnterTradeSeat:
	push	{lr}
	ldr	r0, .L468
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L466	@cond_branch
	ldr	r0, .L468+0x4
	bl	CreateTask_EnterCableClubSeat
	b	.L467
.L469:
	.align	2, 0
.L468:
	.word	gWirelessCommType
	.word	Task_StartWirelessTrade
.L466:
	ldr	r0, .L470
	bl	CreateTask_EnterCableClubSeat
.L467:
	pop	{r0}
	bx	r0
.L471:
	.align	2, 0
.L470:
	.word	Task_StartWiredTrade
.Lfe45:
	.size	 EnterTradeSeat,.Lfe45-EnterTradeSeat
	.align	2, 0
	.type	 CreateTask_StartWiredTrade,function
	.thumb_func
CreateTask_StartWiredTrade:
	push	{lr}
	ldr	r0, .L473
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L474:
	.align	2, 0
.L473:
	.word	Task_StartWiredTrade
.Lfe46:
	.size	 CreateTask_StartWiredTrade,.Lfe46-CreateTask_StartWiredTrade
	.align	2, 0
	.globl	StartWiredCableClubTrade
	.type	 StartWiredCableClubTrade,function
	.thumb_func
StartWiredCableClubTrade:
	push	{lr}
	bl	CreateTask_StartWiredTrade
	bl	ScriptContext_Stop
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 StartWiredCableClubTrade,.Lfe47-StartWiredCableClubTrade
	.align	2, 0
	.globl	EnterColosseumPlayerSpot
	.type	 EnterColosseumPlayerSpot,function
	.thumb_func
EnterColosseumPlayerSpot:
	push	{lr}
	ldr	r1, .L479
	ldr	r2, .L479+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L479+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L477	@cond_branch
	ldr	r0, .L479+0xc
	bl	CreateTask_EnterCableClubSeat
	b	.L478
.L480:
	.align	2, 0
.L479:
	.word	gLinkType
	.word	0x2211
	.word	gWirelessCommType
	.word	Task_StartWirelessCableClubBattle
.L477:
	ldr	r0, .L481
	bl	CreateTask_EnterCableClubSeat
.L478:
	pop	{r0}
	bx	r0
.L482:
	.align	2, 0
.L481:
	.word	Task_StartWiredCableClubBattle
.Lfe48:
	.size	 EnterColosseumPlayerSpot,.Lfe48-EnterColosseumPlayerSpot
	.align	2, 0
	.type	 CreateTask_EnterCableClubSeatNoFollowup,function
	.thumb_func
CreateTask_EnterCableClubSeatNoFollowup:
	push	{lr}
	ldr	r0, .L484
	mov	r1, #0x50
	bl	CreateTask
	bl	ScriptContext_Stop
	pop	{r0}
	bx	r0
.L485:
	.align	2, 0
.L484:
	.word	Task_EnterCableClubSeat
.Lfe49:
	.size	 CreateTask_EnterCableClubSeatNoFollowup,.Lfe49-CreateTask_EnterCableClubSeatNoFollowup
	.align	2, 0
	.globl	Script_ShowLinkTrainerCard
	.type	 Script_ShowLinkTrainerCard,function
	.thumb_func
Script_ShowLinkTrainerCard:
	push	{lr}
	ldr	r0, .L487
	ldrb	r0, [r0]
	ldr	r1, .L487+0x4
	bl	ShowTrainerCardInLink
	pop	{r0}
	bx	r0
.L488:
	.align	2, 0
.L487:
	.word	gSpecialVar_0x8006
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe50:
	.size	 Script_ShowLinkTrainerCard,.Lfe50-Script_ShowLinkTrainerCard
	.align	2, 0
	.globl	GetSeeingLinkPlayerCardMsg
	.type	 GetSeeingLinkPlayerCardMsg,function
	.thumb_func
GetSeeingLinkPlayerCardMsg:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L492
	strh	r4, [r0]
	ldr	r0, .L492+0x4
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	ldr	r2, .L492+0x8
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r4, #0
	bl	GetTrainerCardStars
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L490	@cond_branch
	ldr	r0, .L492+0xc
	ldr	r2, .L492+0x10
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x1
	b	.L491
.L493:
	.align	2, 0
.L492:
	.word	gSpecialVar_0x8006
	.word	gStringVar1
	.word	gLinkPlayers+0x8
	.word	gStringVar2
	.word	sTrainerCardColorNames
.L490:
	mov	r0, #0x0
.L491:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 GetSeeingLinkPlayerCardMsg,.Lfe51-GetSeeingLinkPlayerCardMsg
	.align	2, 0
	.globl	Task_WaitForLinkPlayerConnection
	.type	 Task_WaitForLinkPlayerConnection,function
	.thumb_func
Task_WaitForLinkPlayerConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L497
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	lsl	r1, r1, #0x10
	mov	r0, #0x96
	lsl	r0, r0, #0x11
	cmp	r1, r0
	ble	.L495	@cond_branch
	bl	CloseLink
	ldr	r0, .L497+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L495:
	ldr	r0, .L497+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L496	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L496:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L498:
	.align	2, 0
.L497:
	.word	gTasks
	.word	CB2_LinkError
	.word	gReceivedRemoteLinkPlayers
.Lfe52:
	.size	 Task_WaitForLinkPlayerConnection,.Lfe52-Task_WaitForLinkPlayerConnection
	.align	2, 0
	.type	 Task_WaitExitToScript,function
	.thumb_func
Task_WaitExitToScript:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L501
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L500	@cond_branch
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
.L500:
	pop	{r4}
	pop	{r0}
	bx	r0
.L502:
	.align	2, 0
.L501:
	.word	gReceivedRemoteLinkPlayers
.Lfe53:
	.size	 Task_WaitExitToScript,.Lfe53-Task_WaitExitToScript
	.align	2, 0
	.type	 ExitLinkToScript,function
	.thumb_func
ExitLinkToScript:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetCloseLinkCallback
	ldr	r1, .L504
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L504+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L505:
	.align	2, 0
.L504:
	.word	gTasks
	.word	Task_WaitExitToScript
.Lfe54:
	.size	 ExitLinkToScript,.Lfe54-ExitLinkToScript
	.comm	UnusedVarNeededToMatch, 32	@ 32
.text
	.align	2, 0 @ Don't pad with nop

