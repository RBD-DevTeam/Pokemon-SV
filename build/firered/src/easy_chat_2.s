@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sEasyChatScreen,object
	.size	 sEasyChatScreen,4
sEasyChatScreen:
	.word	0x0
.text
	.align	2, 0
	.globl	DoEasyChatScreen
	.type	 DoEasyChatScreen,function
	.thumb_func
DoEasyChatScreen:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	ResetTasks
	ldr	r0, .L3
	mov	r1, #0x0
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L3+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r5, [r0, #0xa]
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, r6, #0
	bl	SetWordTaskArg
	add	r0, r4, #0
	mov	r1, #0x4
	mov	r2, r8
	bl	SetWordTaskArg
	ldr	r0, .L3+0x8
	bl	SetMainCallback2
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	Task_InitEasyChat
	.word	gTasks
	.word	CB2_EasyChatScreen
.Lfe1:
	.size	 DoEasyChatScreen,.Lfe1-DoEasyChatScreen
	.align	2, 0
	.type	 CB2_EasyChatScreen,function
	.thumb_func
CB2_EasyChatScreen:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 CB2_EasyChatScreen,.Lfe2-CB2_EasyChatScreen
	.align	2, 0
	.type	 VBlankCallback_EasyChatScreen,function
	.thumb_func
VBlankCallback_EasyChatScreen:
	push	{lr}
	bl	TransferPlttBuffer
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 VBlankCallback_EasyChatScreen,.Lfe3-VBlankCallback_EasyChatScreen
	.align	2, 0
	.type	 SetEasyChatTaskFunc,function
	.thumb_func
SetEasyChatTaskFunc:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L8
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	add	r2, r2, r3
	str	r1, [r2]
	mov	r0, #0x0
	strh	r0, [r2, #0x8]
	bx	lr
.L9:
	.align	2, 0
.L8:
	.word	gTasks
.Lfe4:
	.size	 SetEasyChatTaskFunc,.Lfe4-SetEasyChatTaskFunc
	.align	2, 0
	.type	 Task_InitEasyChat,function
	.thumb_func
Task_InitEasyChat:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L11	@cond_branch
.L12:
	add	r0, r4, #0
	bl	Task_InitEasyChatInternal
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L12	@cond_branch
	b	.L16
.L11:
	add	r0, r4, #0
	bl	Task_InitEasyChatInternal
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L10	@cond_branch
.L16:
	ldr	r1, .L18
	add	r0, r4, #0
	bl	SetEasyChatTaskFunc
.L10:
	pop	{r4}
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	Task_RunEasyChat
.Lfe5:
	.size	 Task_InitEasyChat,.Lfe5-Task_InitEasyChat
	.align	2, 0
	.type	 Task_RunEasyChat,function
	.thumb_func
Task_RunEasyChat:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L37
	add	r6, r0, r1
	mov	r0, #0x0
	ldrsh	r5, [r6, r0]
	cmp	r5, #0x1
	beq	.L23	@cond_branch
	cmp	r5, #0x1
	bgt	.L35	@cond_branch
	cmp	r5, #0
	beq	.L22	@cond_branch
	b	.L21
.L38:
	.align	2, 0
.L37:
	.word	gTasks+0x8
.L35:
	cmp	r5, #0x2
	beq	.L27	@cond_branch
	cmp	r5, #0x3
	beq	.L29	@cond_branch
	b	.L21
.L22:
	ldr	r0, .L39
	bl	SetVBlankCallback
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	str	r5, [sp]
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L36
.L40:
	.align	2, 0
.L39:
	.word	VBlankCallback_EasyChatScreen
.L23:
	bl	EasyChatScreen_HandleJoypad
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x17
	bne	.L24	@cond_branch
	mov	r1, #0x1
	neg	r1, r1
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r1, #0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x3
	strh	r0, [r6]
	b	.L21
.L24:
	cmp	r4, #0
	beq	.L21	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	EasyChatInterfaceCommand_Setup
.L36:
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
	b	.L21
.L27:
	bl	EasyChatInterfaceCommand_Run
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L21	@cond_branch
	mov	r0, #0x1
	strh	r0, [r6]
	b	.L21
.L29:
	ldr	r0, .L41
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L21	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r6, r1]
	cmp	r0, #0xe
	bne	.L31	@cond_branch
	bl	CompareQuestionnaireResponseWithPassphrase
.L31:
	mov	r1, #0x2
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L32	@cond_branch
	ldr	r0, .L41+0x4
	bl	FlagSet
	bl	CompareProfileResponseWithPassphrase
.L32:
	add	r0, r4, #0
	mov	r1, #0x4
	bl	GetWordTaskArg
	bl	DismantleEasyChat
.L21:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	gPaletteFade
	.word	0x82d
.Lfe6:
	.size	 Task_RunEasyChat,.Lfe6-Task_RunEasyChat
	.align	2, 0
	.type	 Task_InitEasyChatInternal,function
	.thumb_func
Task_InitEasyChatInternal:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L59
	add	r6, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x4
	bhi	.L54	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L59+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L60:
	.align	2, 0
.L59:
	.word	gTasks+0x8
	.word	.L55
	.align	2, 0
	.align	2, 0
.L55:
	.word	.L45
	.word	.L46
	.word	.L48
	.word	.L50
	.word	.L52
.L45:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	b	.L44
.L46:
	bl	InitEasyChatSelection
	b	.L57
.L48:
	ldrb	r4, [r6, #0x2]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	GetWordTaskArg
	add	r1, r0, #0
	add	r0, r4, #0
	bl	EasyChat_AllocateResources
	b	.L57
.L50:
	bl	InitEasyChatGraphicsWork
.L57:
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L44	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x4
	bl	GetWordTaskArg
	bl	DismantleEasyChat
	b	.L44
.L52:
	bl	LoadEasyChatGraphics
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L44	@cond_branch
	b	.L58
.L54:
	mov	r0, #0x0
	b	.L56
.L44:
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
.L58:
	mov	r0, #0x1
.L56:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 Task_InitEasyChatInternal,.Lfe7-Task_InitEasyChatInternal
	.align	2, 0
	.type	 DismantleEasyChat,function
	.thumb_func
DismantleEasyChat:
	push	{r4, lr}
	add	r4, r0, #0
	bl	DestroyEasyChatSelectionData
	bl	EasyChat_FreeResources
	bl	DestroyEasyChatGraphicsResources
	bl	FreeAllWindowBuffers
	add	r0, r4, #0
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 DismantleEasyChat,.Lfe8-DismantleEasyChat
	.align	2, 0
	.globl	ShowEasyChatScreen
	.type	 ShowEasyChatScreen,function
	.thumb_func
ShowEasyChatScreen:
	push	{lr}
	ldr	r0, .L72
	ldrh	r0, [r0]
	cmp	r0, #0xe
	bhi	.L62	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L72+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L73:
	.align	2, 0
.L72:
	.word	gSpecialVar_0x8004
	.word	.L71
	.align	2, 0
	.align	2, 0
.L71:
	.word	.L64
	.word	.L65
	.word	.L66
	.word	.L67
	.word	.L69
	.word	.L62
	.word	.L62
	.word	.L62
	.word	.L62
	.word	.L62
	.word	.L62
	.word	.L62
	.word	.L62
	.word	.L62
	.word	.L68
.L64:
	ldr	r0, .L74
	ldr	r0, [r0]
	ldr	r2, .L74+0x4
	add	r1, r0, r2
	b	.L63
.L75:
	.align	2, 0
.L74:
	.word	gSaveBlock1Ptr
	.word	0x2ca0
.L65:
	ldr	r0, .L76
	ldr	r0, [r0]
	ldr	r2, .L76+0x4
	add	r1, r0, r2
	b	.L63
.L77:
	.align	2, 0
.L76:
	.word	gSaveBlock1Ptr
	.word	0x2cac
.L66:
	ldr	r0, .L78
	ldr	r0, [r0]
	ldr	r2, .L78+0x4
	add	r1, r0, r2
	b	.L63
.L79:
	.align	2, 0
.L78:
	.word	gSaveBlock1Ptr
	.word	0x2cb8
.L67:
	ldr	r0, .L80
	ldr	r0, [r0]
	ldr	r2, .L80+0x4
	add	r1, r0, r2
	b	.L63
.L81:
	.align	2, 0
.L80:
	.word	gSaveBlock1Ptr
	.word	0x2cc4
.L68:
	bl	GetMEventProfileECWordsMaybe
	add	r1, r0, #0
	b	.L63
.L69:
	ldr	r2, .L82
	ldr	r0, .L82+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L82+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r1, r1, r0
.L63:
	ldr	r0, .L82+0xc
	ldrb	r0, [r0]
	ldr	r2, .L82+0x10
	bl	DoEasyChatScreen
.L62:
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8005
	.word	0x2cd0
	.word	gSpecialVar_0x8004
	.word	CB2_ReturnToFieldContinueScript
.Lfe9:
	.size	 ShowEasyChatScreen,.Lfe9-ShowEasyChatScreen
	.section .rodata
	.align	1, 0
	.type	 sECPhrase_MysteryEventIsExciting,object
sECPhrase_MysteryEventIsExciting:
	.short	0x143a
	.short	0x1817
	.short	0x100b
	.short	0x200f
	.size	 sECPhrase_MysteryEventIsExciting,8
.text
	.align	2, 0
	.type	 CompareProfileResponseWithPassphrase,function
	.thumb_func
CompareProfileResponseWithPassphrase:
	push	{r4, lr}
	ldr	r4, .L85
	ldr	r0, .L85+0x4
	mov	r1, #0x4
	bl	IsPhraseDifferentThanPlayerInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gSpecialVar_0x8004
	.word	sECPhrase_MysteryEventIsExciting
.Lfe10:
	.size	 CompareProfileResponseWithPassphrase,.Lfe10-CompareProfileResponseWithPassphrase
	.section .rodata
	.align	1, 0
	.type	 sECPhrase_LinkTogetherWithAll,object
sECPhrase_LinkTogetherWithAll:
	.short	0x209
	.short	0x140b
	.short	0x1030
	.short	0x102a
	.size	 sECPhrase_LinkTogetherWithAll,8
.text
	.align	2, 0
	.type	 CompareQuestionnaireResponseWithPassphrase,function
	.thumb_func
CompareQuestionnaireResponseWithPassphrase:
	push	{r4, lr}
	ldr	r4, .L88
	ldr	r0, .L88+0x4
	mov	r1, #0x4
	bl	IsPhraseDifferentThanPlayerInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gSpecialVar_0x8004
	.word	sECPhrase_LinkTogetherWithAll
.Lfe11:
	.size	 CompareQuestionnaireResponseWithPassphrase,.Lfe11-CompareQuestionnaireResponseWithPassphrase
	.section .rodata
	.align	2, 0
	.type	 sEasyChatScreenTemplates,object
sEasyChatScreenTemplates:
	.byte	0x0
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.word	gText_Profile
	.word	gText_CombineFourWordsOrPhrases
	.word	gText_AndMakeYourProfile
	.word	gText_YourProfile
	.word	gText_IsAsShownOkay
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.word	gText_AtTheBattlesStart
	.word	gText_MakeMessageSixPhrases
	.word	gText_MaxTwoTwelveLetterPhrases
	.word	gText_YourFeelingAtTheBattlesStart
	.word	gText_IsAsShownOkay
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.word	gText_UponWinningABattle
	.word	gText_MakeMessageSixPhrases
	.word	gText_MaxTwoTwelveLetterPhrases
	.word	gText_WhatYouSayIfYouWin
	.word	gText_IsAsShownOkay
	.byte	0x3
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.word	gText_UponLosingABattle
	.word	gText_MakeMessageSixPhrases
	.word	gText_MaxTwoTwelveLetterPhrases
	.word	gText_WhatYouSayIfYouLose
	.word	gText_IsAsShownOkay
	.byte	0x4
	.byte	0x2
	.byte	0x5
	.byte	0x2
	.word	0x0
	.word	gText_CombineNineWordsOrPhrases
	.word	gText_AndMakeAMessage
	.word	gText_TheMailMessage
	.word	gText_IsAsShownOkay
	.byte	0x5
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.space	4
	.word	gText_CombineNineWordsOrPhrases
	.word	gText_AndMakeAMessage
	.space	8
	.byte	0x6
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.word	gText_TheBardsSong
	.word	gText_ChangeJustOneWordOrPhrase
	.word	gText_AndImproveTheBardsSong
	.word	gText_TheNewSong
	.word	gText_IsAsShownOkay
	.byte	0x7
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.word	gText_Interview
	.word	gText_FindWordsThatDescribeYour
	.word	gText_FeelingsRightNow
	.word	gText_TheAnswer
	.word	gText_IsAsShownOkay
	.byte	0x9
	.byte	0x2
	.byte	0x1
	.byte	0x3
	.word	gText_WhatsHipAndHappening
	.word	gText_CombineTwoWordsOrPhrases
	.word	gText_AndMakeATrendySaying
	.word	gText_TheTrendySaying
	.word	gText_IsAsShownOkay
	.byte	0xe
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.word	gText_Questionnaire
	.word	gText_CombineFourWordsOrPhrases
	.word	gText_AndFillOutTheQuestionnaire
	.word	gText_TheAnswer
	.word	gText_IsAsShownOkay
	.size	 sEasyChatScreenTemplates,240
.text
	.align	2, 0
	.type	 EasyChat_AllocateResources,function
	.thumb_func
EasyChat_AllocateResources:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L94
	mov	r0, #0x2c
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	bne	.L91	@cond_branch
	mov	r0, #0x0
	b	.L93
.L95:
	.align	2, 0
.L94:
	.word	sEasyChatScreen
.L91:
	mov	r1, #0x0
	strb	r5, [r0]
	ldr	r0, [r4]
	str	r6, [r0, #0x14]
	strb	r1, [r0, #0x4]
	ldr	r0, [r4]
	strb	r1, [r0, #0x5]
	ldr	r0, [r4]
	strb	r1, [r0, #0x6]
	ldr	r0, [r4]
	strb	r1, [r0, #0x9]
	add	r0, r5, #0
	bl	GetEasyChatScreenTemplateId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, [r4]
	ldr	r2, .L96
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r2, [r1, #0x1]
	strb	r2, [r3, #0x2]
	ldr	r2, [r4]
	ldrb	r1, [r1, #0x2]
	strb	r1, [r2, #0x3]
	ldr	r1, [r4]
	ldrb	r3, [r1, #0x2]
	ldrb	r2, [r1, #0x3]
	mov	r5, r3
	mul	r5, r5, r2
	add	r2, r5, #0
	strb	r2, [r1, #0x7]
	ldr	r1, [r4]
	strb	r0, [r1, #0x1]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0x9
	bls	.L92	@cond_branch
	mov	r0, #0x9
	strb	r0, [r1, #0x7]
.L92:
	ldr	r0, [r4]
	add	r1, r0, #0
	add	r1, r1, #0x18
	ldrb	r2, [r0, #0x7]
	add	r0, r6, #0
	bl	CpuSet
	bl	GetNumDisplayableGroups
	ldr	r2, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	add	r0, r0, #0x1
	strb	r0, [r2, #0xd]
	mov	r0, #0x1
.L93:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L97:
	.align	2, 0
.L96:
	.word	sEasyChatScreenTemplates
.Lfe12:
	.size	 EasyChat_AllocateResources,.Lfe12-EasyChat_AllocateResources
	.align	2, 0
	.type	 EasyChat_FreeResources,function
	.thumb_func
EasyChat_FreeResources:
	push	{lr}
	ldr	r0, .L100
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L99	@cond_branch
	bl	Free
.L99:
	pop	{r0}
	bx	r0
.L101:
	.align	2, 0
.L100:
	.word	sEasyChatScreen
.Lfe13:
	.size	 EasyChat_FreeResources,.Lfe13-EasyChat_FreeResources
	.align	2, 0
	.type	 EasyChatScreen_HandleJoypad,function
	.thumb_func
EasyChatScreen_HandleJoypad:
	push	{lr}
	ldr	r0, .L115
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x6
	bhi	.L103	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L115+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L116:
	.align	2, 0
.L115:
	.word	sEasyChatScreen
	.word	.L111
	.align	2, 0
	.align	2, 0
.L111:
	.word	.L104
	.word	.L105
	.word	.L106
	.word	.L107
	.word	.L108
	.word	.L109
	.word	.L110
.L104:
	bl	HandleJoypad_SelectField
	b	.L114
.L105:
	bl	HandleJoypad_SelectFooter
	b	.L114
.L106:
	bl	HandleJoypad_SelectGroup
	b	.L114
.L107:
	bl	HandleJoypad_SelectWord
	b	.L114
.L108:
	bl	Cancel_HandleYesNoMenu
	b	.L114
.L109:
	bl	DelAll_HandleYesNoMenu
	b	.L114
.L110:
	bl	Confirm_HandleYesNoMenu
.L114:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L113
.L103:
	mov	r0, #0x0
.L113:
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 EasyChatScreen_HandleJoypad,.Lfe14-EasyChatScreen_HandleJoypad
	.align	2, 0
	.type	 HandleJoypad_SelectField,function
	.thumb_func
HandleJoypad_SelectField:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L153
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L121	@cond_branch
	ldr	r1, .L153+0x4
	ldr	r3, [r1]
	mov	r2, #0x0
	mov	r0, #0x2
	strb	r0, [r3, #0x4]
	ldr	r0, [r1]
	strb	r2, [r0, #0xa]
	ldr	r0, [r1]
	strb	r2, [r0, #0xb]
	ldr	r0, [r1]
	strb	r2, [r0, #0xc]
	mov	r0, #0x9
	b	.L143
.L154:
	.align	2, 0
.L153:
	.word	gMain
	.word	sEasyChatScreen
.L127:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L145	@cond_branch
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L146	@cond_branch
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L147	@cond_branch
	mov	r0, #0x0
	b	.L143
.L121:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L148	@cond_branch
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L149	@cond_branch
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L127	@cond_branch
	ldr	r2, .L155
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x6]
	sub	r0, r0, #0x1
.L151:
	strb	r0, [r1, #0x6]
.L150:
	add	r7, r2, #0
	add	r4, r7, #0
	ldr	r2, [r4]
	mov	r0, #0x6
	ldrsb	r0, [r2, r0]
	ldr	r6, .L155+0x4
	cmp	r0, #0
	bge	.L136	@cond_branch
	ldrb	r0, [r2, #0x1]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r6
	ldrb	r0, [r1, #0x2]
	strb	r0, [r2, #0x6]
.L136:
	ldr	r3, [r4]
	mov	r2, #0x6
	ldrsb	r2, [r3, r2]
	add	r5, r6, #0
	ldrb	r1, [r3, #0x1]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	ldrb	r0, [r0, #0x2]
	cmp	r2, r0
	ble	.L137	@cond_branch
	mov	r0, #0x0
	strb	r0, [r3, #0x6]
.L137:
	ldr	r3, [r4]
	mov	r2, #0x6
	ldrsb	r2, [r3, r2]
	ldrb	r1, [r3, #0x1]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r1, r0, r5
	ldrb	r0, [r1, #0x2]
	cmp	r2, r0
	bne	.L138	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r3, r0]
	cmp	r0, #0x2
	ble	.L139	@cond_branch
	mov	r0, #0x2
	strb	r0, [r3, #0x5]
.L139:
	ldr	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r1, #0x4]
	mov	r0, #0x3
	b	.L143
.L156:
	.align	2, 0
.L155:
	.word	sEasyChatScreen
	.word	sEasyChatScreenTemplates
.L147:
	ldr	r2, .L157
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x5]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x5]
	b	.L150
.L158:
	.align	2, 0
.L157:
	.word	sEasyChatScreen
.L146:
	ldr	r2, .L159
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x6]
	add	r0, r0, #0x1
	b	.L151
.L160:
	.align	2, 0
.L159:
	.word	sEasyChatScreen
.L145:
	ldr	r2, .L161
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x5]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x5]
	b	.L150
.L162:
	.align	2, 0
.L161:
	.word	sEasyChatScreen
.L148:
	bl	Cancel_CreateYesNoMenu
	b	.L152
.L149:
	bl	Confirm_CreateYesNoMenu
.L152:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L143
.L138:
	mov	r0, #0x5
	ldrsb	r0, [r3, r0]
	cmp	r0, #0
	bge	.L140	@cond_branch
	ldrb	r0, [r1, #0x1]
	sub	r0, r0, #0x1
	strb	r0, [r3, #0x5]
.L140:
	ldr	r3, [r4]
	mov	r2, #0x5
	ldrsb	r2, [r3, r2]
	ldrb	r1, [r3, #0x1]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	ldrb	r0, [r0, #0x1]
	cmp	r2, r0
	blt	.L141	@cond_branch
	mov	r0, #0x0
	strb	r0, [r3, #0x5]
.L141:
	bl	GetEasyChatScreenFrameId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L142	@cond_branch
	ldr	r2, [r7]
	ldr	r0, [r2, #0x4]
	ldr	r1, .L163
	and	r0, r0, r1
	ldr	r1, .L163+0x4
	cmp	r0, r1
	bne	.L142	@cond_branch
	mov	r0, #0x0
	strb	r0, [r2, #0x5]
.L142:
	mov	r0, #0x2
.L143:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L164:
	.align	2, 0
.L163:
	.word	0xffff00
	.word	0x40100
.Lfe15:
	.size	 HandleJoypad_SelectField,.Lfe15-HandleJoypad_SelectField
	.align	2, 0
	.type	 HandleJoypad_SelectFooter,function
	.thumb_func
HandleJoypad_SelectFooter:
	push	{r4, r5, r6, lr}
	ldr	r2, .L205
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L169	@cond_branch
	ldr	r0, .L205+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x1
	beq	.L172	@cond_branch
	b	.L197
.L206:
	.align	2, 0
.L205:
	.word	gMain
	.word	sEasyChatScreen
.L181:
	mov	r0, #0x20
	and	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0
	bne	.L198	@cond_branch
	mov	r0, #0x80
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L199	@cond_branch
	mov	r0, #0x10
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L200	@cond_branch
	mov	r0, #0x0
	b	.L195
.L197:
	cmp	r0, #0x1
	bgt	.L176	@cond_branch
	cmp	r0, #0
	beq	.L171	@cond_branch
	b	.L169
.L176:
	cmp	r0, #0x2
	beq	.L202	@cond_branch
	b	.L169
.L171:
	bl	DelAll_CreateYesNoMenu
	b	.L203
.L172:
	bl	Cancel_CreateYesNoMenu
	b	.L203
.L169:
	ldrh	r2, [r2, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L201	@cond_branch
	mov	r0, #0x8
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L202	@cond_branch
	mov	r0, #0x40
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L181	@cond_branch
	ldr	r2, .L207
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x6]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x6]
.L204:
	add	r6, r2, #0
.L167:
	add	r5, r6, #0
	ldr	r4, [r5]
	mov	r3, #0x6
	ldrsb	r3, [r4, r3]
	ldr	r2, .L207+0x4
	ldrb	r1, [r4, #0x1]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r1, r0, r2
	ldrb	r0, [r1, #0x2]
	cmp	r3, r0
	bne	.L190	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r4, r0]
	cmp	r0, #0
	bge	.L191	@cond_branch
	mov	r0, #0x2
	strb	r0, [r4, #0x5]
.L191:
	ldr	r1, [r5]
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	ble	.L192	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1, #0x5]
.L192:
	mov	r0, #0x3
	b	.L195
.L208:
	.align	2, 0
.L207:
	.word	sEasyChatScreen
	.word	sEasyChatScreenTemplates
.L200:
	ldr	r2, .L209
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x5]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x5]
	b	.L204
.L210:
	.align	2, 0
.L209:
	.word	sEasyChatScreen
.L199:
	ldr	r1, .L211
	ldr	r0, [r1]
	strb	r3, [r0, #0x6]
	add	r6, r1, #0
	b	.L167
.L212:
	.align	2, 0
.L211:
	.word	sEasyChatScreen
.L198:
	ldr	r2, .L213
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x5]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x5]
	b	.L204
.L214:
	.align	2, 0
.L213:
	.word	sEasyChatScreen
.L201:
	bl	Cancel_CreateYesNoMenu
	b	.L203
.L202:
	bl	Confirm_CreateYesNoMenu
.L203:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L195
.L190:
	mov	r0, #0x5
	ldrsb	r0, [r4, r0]
	ldrb	r1, [r1, #0x1]
	cmp	r0, r1
	blt	.L193	@cond_branch
	sub	r0, r1, #0x1
	strb	r0, [r4, #0x5]
.L193:
	bl	GetEasyChatScreenFrameId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L194	@cond_branch
	ldr	r2, [r6]
	ldr	r0, [r2, #0x4]
	ldr	r1, .L215
	and	r0, r0, r1
	ldr	r1, .L215+0x4
	cmp	r0, r1
	bne	.L194	@cond_branch
	mov	r0, #0x0
	strb	r0, [r2, #0x5]
.L194:
	ldr	r0, .L215+0x8
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x4]
	mov	r0, #0x2
.L195:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L216:
	.align	2, 0
.L215:
	.word	0xffff00
	.word	0x40100
	.word	sEasyChatScreen
.Lfe16:
	.size	 HandleJoypad_SelectFooter,.Lfe16-HandleJoypad_SelectFooter
	.align	2, 0
	.type	 HandleJoypad_SelectGroup,function
	.thumb_func
HandleJoypad_SelectGroup:
	push	{lr}
	ldr	r1, .L245
	ldrh	r2, [r1, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r2
	add	r3, r1, #0
	cmp	r0, #0
	beq	.L218	@cond_branch
	bl	BackOutFromGroupToFieldSelect
	b	.L235
.L246:
	.align	2, 0
.L245:
	.word	gMain
.L218:
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L219	@cond_branch
	ldr	r0, .L247
	ldr	r2, [r0]
	mov	r1, #0xa
	ldrsb	r1, [r2, r1]
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L220	@cond_branch
	bl	OpenSelectedGroup
	b	.L235
.L248:
	.align	2, 0
.L247:
	.word	sEasyChatScreen
.L220:
	mov	r0, #0xb
	ldrsb	r0, [r2, r0]
	cmp	r0, #0x1
	beq	.L223	@cond_branch
	cmp	r0, #0x1
	bgt	.L227	@cond_branch
	cmp	r0, #0
	beq	.L222	@cond_branch
	b	.L219
.L227:
	cmp	r0, #0x2
	beq	.L224	@cond_branch
	b	.L219
.L222:
	bl	ToggleGroupAlphaMode
	b	.L235
.L223:
	bl	DeleteSelectedWord
	b	.L235
.L224:
	bl	BackOutFromGroupToFieldSelect
	b	.L235
.L219:
	ldrh	r1, [r3, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L228	@cond_branch
	bl	ToggleGroupAlphaMode
	b	.L235
.L228:
	ldrh	r1, [r3, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L229	@cond_branch
	mov	r0, #0x2
	b	.L242
.L229:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L230	@cond_branch
	mov	r0, #0x3
	b	.L242
.L230:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L231	@cond_branch
	mov	r0, #0x1
	b	.L242
.L231:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L232	@cond_branch
	mov	r0, #0x0
	b	.L233
.L232:
	mov	r0, #0x0
.L242:
	bl	SelectGroupCursorAction
.L235:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
.L233:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 HandleJoypad_SelectGroup,.Lfe17-HandleJoypad_SelectGroup
	.align	2, 0
	.type	 HandleJoypad_SelectWord,function
	.thumb_func
HandleJoypad_SelectWord:
	push	{lr}
	ldr	r2, .L267
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L250	@cond_branch
	ldr	r0, .L267+0x4
	ldr	r1, [r0]
	mov	r0, #0x2
	strb	r0, [r1, #0x4]
	mov	r0, #0xd
	b	.L258
.L268:
	.align	2, 0
.L267:
	.word	gMain
	.word	sEasyChatScreen
.L250:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L251	@cond_branch
	bl	PlaceSelectedWord
	b	.L260
.L251:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L252	@cond_branch
	mov	r0, #0x4
	b	.L262
.L252:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L253	@cond_branch
	mov	r0, #0x5
	b	.L262
.L253:
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L254	@cond_branch
	mov	r0, #0x2
	b	.L262
.L254:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L255	@cond_branch
	mov	r0, #0x3
	b	.L262
.L255:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L256	@cond_branch
	mov	r0, #0x1
	b	.L262
.L256:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L257	@cond_branch
	mov	r0, #0x0
	b	.L258
.L257:
	mov	r0, #0x0
.L262:
	bl	SelectWordCursorAction
.L260:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
.L258:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 HandleJoypad_SelectWord,.Lfe18-HandleJoypad_SelectWord
	.align	2, 0
	.type	 Cancel_HandleYesNoMenu,function
	.thumb_func
Cancel_HandleYesNoMenu:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L273	@cond_branch
	cmp	r1, #0
	bgt	.L276	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L272	@cond_branch
	b	.L274
.L276:
	cmp	r1, #0x1
	bne	.L274	@cond_branch
.L272:
	bl	GetStateBackup
	ldr	r1, .L278
	ldr	r1, [r1]
	strb	r0, [r1, #0x4]
	mov	r0, #0x7
	b	.L277
.L279:
	.align	2, 0
.L278:
	.word	sEasyChatScreen
.L273:
	ldr	r0, .L280
	strh	r1, [r0]
	mov	r0, #0x17
	b	.L277
.L281:
	.align	2, 0
.L280:
	.word	gSpecialVar_Result
.L274:
	mov	r0, #0x0
.L277:
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 Cancel_HandleYesNoMenu,.Lfe19-Cancel_HandleYesNoMenu
	.align	2, 0
	.type	 Confirm_HandleYesNoMenu,function
	.thumb_func
Confirm_HandleYesNoMenu:
	push	{r4, lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L286	@cond_branch
	cmp	r1, #0
	bgt	.L289	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L285	@cond_branch
	b	.L287
.L289:
	cmp	r1, #0x1
	bne	.L287	@cond_branch
.L285:
	bl	GetStateBackup
	ldr	r1, .L291
	ldr	r1, [r1]
	strb	r0, [r1, #0x4]
	mov	r0, #0x7
	b	.L290
.L292:
	.align	2, 0
.L291:
	.word	sEasyChatScreen
.L286:
	ldr	r4, .L293
	bl	HasECMessageChanged
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	bl	CommitECWords
	mov	r0, #0x17
	b	.L290
.L294:
	.align	2, 0
.L293:
	.word	gSpecialVar_Result
.L287:
	mov	r0, #0x0
.L290:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 Confirm_HandleYesNoMenu,.Lfe20-Confirm_HandleYesNoMenu
	.align	2, 0
	.type	 DelAll_HandleYesNoMenu,function
	.thumb_func
DelAll_HandleYesNoMenu:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L299	@cond_branch
	cmp	r1, #0
	bgt	.L302	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L298	@cond_branch
	b	.L300
.L302:
	cmp	r1, #0x1
	bne	.L300	@cond_branch
.L298:
	ldr	r0, .L304
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1, #0x4]
	mov	r0, #0x7
	b	.L303
.L305:
	.align	2, 0
.L304:
	.word	sEasyChatScreen
.L299:
	bl	DeleteAllECFields
	ldr	r0, .L306
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1, #0x4]
	mov	r0, #0x8
	b	.L303
.L307:
	.align	2, 0
.L306:
	.word	sEasyChatScreen
.L300:
	mov	r0, #0x0
.L303:
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 DelAll_HandleYesNoMenu,.Lfe21-DelAll_HandleYesNoMenu
	.align	2, 0
	.type	 Cancel_CreateYesNoMenu,function
	.thumb_func
Cancel_CreateYesNoMenu:
	ldr	r2, .L309
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x4]
	strb	r0, [r1, #0x8]
	ldr	r1, [r2]
	mov	r0, #0x4
	strb	r0, [r1, #0x4]
	mov	r0, #0x5
	bx	lr
.L310:
	.align	2, 0
.L309:
	.word	sEasyChatScreen
.Lfe22:
	.size	 Cancel_CreateYesNoMenu,.Lfe22-Cancel_CreateYesNoMenu
	.align	2, 0
	.type	 DelAll_CreateYesNoMenu,function
	.thumb_func
DelAll_CreateYesNoMenu:
	ldr	r2, .L312
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x4]
	strb	r0, [r1, #0x8]
	ldr	r1, [r2]
	mov	r0, #0x5
	strb	r0, [r1, #0x4]
	mov	r0, #0x4
	bx	lr
.L313:
	.align	2, 0
.L312:
	.word	sEasyChatScreen
.Lfe23:
	.size	 DelAll_CreateYesNoMenu,.Lfe23-DelAll_CreateYesNoMenu
	.align	2, 0
	.type	 Confirm_CreateYesNoMenu,function
	.thumb_func
Confirm_CreateYesNoMenu:
	push	{r4, lr}
	ldr	r4, .L318
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x4]
	strb	r1, [r0, #0x8]
	bl	IsEcWordBufferUninitialized
	cmp	r0, #0
	bne	.L315	@cond_branch
	ldr	r1, [r4]
	mov	r0, #0x6
	strb	r0, [r1, #0x4]
	b	.L317
.L319:
	.align	2, 0
.L318:
	.word	sEasyChatScreen
.L315:
	ldr	r1, [r4]
	mov	r0, #0x4
	strb	r0, [r1, #0x4]
	mov	r0, #0x5
.L317:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 Confirm_CreateYesNoMenu,.Lfe24-Confirm_CreateYesNoMenu
	.align	2, 0
	.type	 GetStateBackup,function
	.thumb_func
GetStateBackup:
	ldr	r0, .L321
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	bx	lr
.L322:
	.align	2, 0
.L321:
	.word	sEasyChatScreen
.Lfe25:
	.size	 GetStateBackup,.Lfe25-GetStateBackup
	.align	2, 0
	.type	 OpenSelectedGroup,function
	.thumb_func
OpenSelectedGroup:
	push	{lr}
	ldr	r0, .L328
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x9]
	cmp	r0, #0
	bne	.L324	@cond_branch
	bl	GetSelectedGroupIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetSelectedGroupByIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	GetUnlockedECWords
	b	.L325
.L329:
	.align	2, 0
.L328:
	.word	sEasyChatScreen
.L324:
	bl	GetSelectedLetter
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x1
	bl	GetUnlockedECWords
.L325:
	bl	GetNumDisplayedWords
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	beq	.L326	@cond_branch
	ldr	r2, .L330
	ldr	r3, [r2]
	sub	r0, r0, #0x1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	mov	r1, #0x0
	strb	r0, [r3, #0xf]
	ldr	r0, [r2]
	strb	r1, [r0, #0xe]
	ldr	r0, [r2]
	strb	r1, [r0, #0x10]
	ldr	r0, [r2]
	strb	r1, [r0, #0x11]
	ldr	r1, [r2]
	mov	r0, #0x3
	strb	r0, [r1, #0x4]
	mov	r0, #0xb
	b	.L327
.L331:
	.align	2, 0
.L330:
	.word	sEasyChatScreen
.L326:
	mov	r0, #0x0
.L327:
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 OpenSelectedGroup,.Lfe26-OpenSelectedGroup
	.align	2, 0
	.type	 BackOutFromGroupToFieldSelect,function
	.thumb_func
BackOutFromGroupToFieldSelect:
	ldr	r0, .L333
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x4]
	mov	r0, #0xa
	bx	lr
.L334:
	.align	2, 0
.L333:
	.word	sEasyChatScreen
.Lfe27:
	.size	 BackOutFromGroupToFieldSelect,.Lfe27-BackOutFromGroupToFieldSelect
	.align	2, 0
	.type	 ToggleGroupAlphaMode,function
	.thumb_func
ToggleGroupAlphaMode:
	push	{lr}
	ldr	r1, .L338
	ldr	r0, [r1]
	mov	r2, #0x0
	strb	r2, [r0, #0xa]
	ldr	r0, [r1]
	strb	r2, [r0, #0xb]
	ldr	r0, [r1]
	strb	r2, [r0, #0xc]
	ldr	r1, [r1]
	ldrb	r0, [r1, #0x9]
	cmp	r0, #0
	bne	.L336	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1, #0x9]
	b	.L337
.L339:
	.align	2, 0
.L338:
	.word	sEasyChatScreen
.L336:
	strb	r2, [r1, #0x9]
.L337:
	mov	r0, #0x16
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 ToggleGroupAlphaMode,.Lfe28-ToggleGroupAlphaMode
	.align	2, 0
	.type	 DeleteSelectedWord,function
	.thumb_func
DeleteSelectedWord:
	push	{lr}
	ldr	r0, .L341
	bl	SetEasyChatWordToField
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L342:
	.align	2, 0
.L341:
	.word	0xffff
.Lfe29:
	.size	 DeleteSelectedWord,.Lfe29-DeleteSelectedWord
	.align	2, 0
	.type	 PlaceSelectedWord,function
	.thumb_func
PlaceSelectedWord:
	push	{lr}
	bl	GetSelectWordCursorPos
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	GetDisplayedWordByIndex
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	SetEasyChatWordToField
	ldr	r0, .L344
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x4]
	mov	r0, #0xc
	pop	{r1}
	bx	r1
.L345:
	.align	2, 0
.L344:
	.word	sEasyChatScreen
.Lfe30:
	.size	 PlaceSelectedWord,.Lfe30-PlaceSelectedWord
	.align	2, 0
	.type	 CommitECWords,function
	.thumb_func
CommitECWords:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r3, .L352
	ldr	r0, [r3]
	ldrb	r0, [r0, #0x7]
	cmp	r4, r0
	bcs	.L348	@cond_branch
	add	r5, r3, #0
.L350:
	ldr	r3, [r5]
	ldr	r1, [r3, #0x14]
	lsl	r2, r4, #0x1
	add	r1, r2, r1
	add	r0, r3, #0
	add	r0, r0, #0x18
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldrb	r3, [r3, #0x7]
	cmp	r4, r3
	bcc	.L350	@cond_branch
.L348:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L353:
	.align	2, 0
.L352:
	.word	sEasyChatScreen
.Lfe31:
	.size	 CommitECWords,.Lfe31-CommitECWords
	.align	2, 0
	.type	 DeleteAllECFields,function
	.thumb_func
DeleteAllECFields:
	push	{r4, r5, lr}
	mov	r3, #0x0
	ldr	r2, .L360
	ldr	r0, [r2]
	ldrb	r0, [r0, #0x7]
	cmp	r3, r0
	bcs	.L356	@cond_branch
	add	r5, r2, #0
	ldr	r0, .L360+0x4
	add	r4, r0, #0
.L358:
	ldr	r2, [r5]
	lsl	r0, r3, #0x1
	add	r1, r2, #0
	add	r1, r1, #0x18
	add	r1, r1, r0
	ldrh	r0, [r1]
	orr	r0, r0, r4
	strh	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldrb	r2, [r2, #0x7]
	cmp	r3, r2
	bcc	.L358	@cond_branch
.L356:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L361:
	.align	2, 0
.L360:
	.word	sEasyChatScreen
	.word	0xffff
.Lfe32:
	.size	 DeleteAllECFields,.Lfe32-DeleteAllECFields
	.align	2, 0
	.type	 SetEasyChatWordToField,function
	.thumb_func
SetEasyChatWordToField:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	GetSelectedFieldIndex
	lsl	r0, r0, #0x10
	ldr	r1, .L363
	ldr	r1, [r1]
	lsr	r0, r0, #0xf
	add	r1, r1, #0x18
	add	r1, r1, r0
	strh	r4, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L364:
	.align	2, 0
.L363:
	.word	sEasyChatScreen
.Lfe33:
	.size	 SetEasyChatWordToField,.Lfe33-SetEasyChatWordToField
	.align	2, 0
	.type	 HasECMessageChanged,function
	.thumb_func
HasECMessageChanged:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r0, .L373
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x7]
	cmp	r2, r1
	bcs	.L367	@cond_branch
	add	r5, r1, #0
	add	r4, r0, #0
	add	r4, r4, #0x18
	ldr	r3, [r0, #0x14]
.L369:
	lsl	r0, r2, #0x1
	add	r1, r4, r0
	add	r0, r0, r3
	ldrh	r1, [r1]
	ldrh	r0, [r0]
	cmp	r1, r0
	beq	.L368	@cond_branch
	mov	r0, #0x1
	b	.L372
.L374:
	.align	2, 0
.L373:
	.word	sEasyChatScreen
.L368:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, r5
	bcc	.L369	@cond_branch
.L367:
	mov	r0, #0x0
.L372:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 HasECMessageChanged,.Lfe34-HasECMessageChanged
	.align	2, 0
	.type	 SelectGroupCursorAction,function
	.thumb_func
SelectGroupCursorAction:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L384
	ldr	r3, [r0]
	mov	r1, #0xa
	ldrsb	r1, [r3, r1]
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L376	@cond_branch
	ldrb	r0, [r3, #0x9]
	cmp	r0, #0
	bne	.L377	@cond_branch
	add	r0, r2, #0
	bl	UpdateSelectGroupCursorPos_OutsideBlueBox_GroupMode
	b	.L382
.L385:
	.align	2, 0
.L384:
	.word	sEasyChatScreen
.L377:
	add	r0, r2, #0
	bl	UpdateSelectGroupCursorPos_OutsideBlueBox_AlphaMode
	b	.L382
.L376:
	add	r0, r2, #0
	bl	UpdateSelectGroupCursorPos_InsideBlueBox
.L382:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe35:
	.size	 SelectGroupCursorAction,.Lfe35-SelectGroupCursorAction
	.align	2, 0
	.type	 UpdateSelectGroupCursorPos_OutsideBlueBox_GroupMode,function
	.thumb_func
UpdateSelectGroupCursorPos_OutsideBlueBox_GroupMode:
	push	{r4, lr}
	cmp	r0, #0x1
	beq	.L396	@cond_branch
	cmp	r0, #0x1
	bcc	.L399	@cond_branch
	cmp	r0, #0x2
	beq	.L388	@cond_branch
	cmp	r0, #0x3
	beq	.L392	@cond_branch
	b	.L387
.L388:
	ldr	r0, .L408
	ldr	r1, [r0]
	mov	r0, #0xb
	ldrsb	r0, [r1, r0]
	ldrb	r3, [r1, #0xc]
	cmn	r0, r3
	beq	.L387	@cond_branch
	ldrb	r2, [r1, #0xb]
	cmp	r0, #0
	beq	.L390	@cond_branch
	sub	r0, r2, #0x1
	strb	r0, [r1, #0xb]
.L406:
	mov	r0, #0xe
	b	.L405
.L409:
	.align	2, 0
.L408:
	.word	sEasyChatScreen
.L390:
	sub	r0, r3, #0x1
	strb	r0, [r1, #0xc]
	mov	r0, #0x10
	b	.L405
.L392:
	ldr	r0, .L410
	ldr	r2, [r0]
	mov	r1, #0xb
	ldrsb	r1, [r2, r1]
	ldrb	r3, [r2, #0xc]
	add	r1, r1, r3
	ldrb	r0, [r2, #0xd]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bge	.L387	@cond_branch
	ldrb	r1, [r2, #0xb]
	mov	r0, #0xb
	ldrsb	r0, [r2, r0]
	cmp	r0, #0x2
	bgt	.L394	@cond_branch
	add	r0, r1, #0x1
	strb	r0, [r2, #0xb]
	mov	r4, #0xe
	b	.L395
.L411:
	.align	2, 0
.L410:
	.word	sEasyChatScreen
.L394:
	add	r0, r3, #0x1
	strb	r0, [r2, #0xc]
	mov	r4, #0xf
.L395:
	bl	MoveGroupCursorXToMaxCol
	add	r0, r4, #0
	b	.L405
.L396:
	ldr	r0, .L412
	ldr	r1, [r0]
	ldrb	r2, [r1, #0xa]
	mov	r0, #0xa
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	beq	.L397	@cond_branch
	sub	r0, r2, #0x1
	strb	r0, [r1, #0xa]
	b	.L406
.L413:
	.align	2, 0
.L412:
	.word	sEasyChatScreen
.L397:
	bl	GroupCursorMoveToBlueBox
	b	.L406
.L399:
	ldr	r0, .L414
	ldr	r1, [r0]
	ldrb	r2, [r1, #0xa]
	mov	r0, #0xa
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	bgt	.L400	@cond_branch
	add	r0, r2, #0x1
	strb	r0, [r1, #0xa]
	bl	GroupSelectCursorXPosTooFarRight
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L406	@cond_branch
	bl	GroupCursorMoveToBlueBox
	b	.L406
.L415:
	.align	2, 0
.L414:
	.word	sEasyChatScreen
.L400:
	bl	GroupCursorMoveToBlueBox
	b	.L406
.L387:
	mov	r0, #0x0
.L405:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe36:
	.size	 UpdateSelectGroupCursorPos_OutsideBlueBox_GroupMode,.Lfe36-UpdateSelectGroupCursorPos_OutsideBlueBox_GroupMode
	.align	2, 0
	.type	 UpdateSelectGroupCursorPos_OutsideBlueBox_AlphaMode,function
	.thumb_func
UpdateSelectGroupCursorPos_OutsideBlueBox_AlphaMode:
	push	{lr}
	cmp	r0, #0x1
	beq	.L426	@cond_branch
	cmp	r0, #0x1
	bcc	.L424	@cond_branch
	cmp	r0, #0x2
	beq	.L418	@cond_branch
	cmp	r0, #0x3
	beq	.L421	@cond_branch
	mov	r0, #0x0
	b	.L430
.L418:
	ldr	r0, .L435
	ldr	r1, [r0]
	ldrb	r2, [r1, #0xb]
	mov	r0, #0xb
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	ble	.L419	@cond_branch
	sub	r0, r2, #0x1
	b	.L431
.L436:
	.align	2, 0
.L435:
	.word	sEasyChatScreen
.L419:
	mov	r0, #0x3
.L431:
	strb	r0, [r1, #0xb]
	bl	MoveGroupCursorXToMaxCol
	b	.L427
.L421:
	ldr	r0, .L437
	ldr	r1, [r0]
	ldrb	r2, [r1, #0xb]
	mov	r0, #0xb
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bgt	.L422	@cond_branch
	add	r0, r2, #0x1
	b	.L431
.L438:
	.align	2, 0
.L437:
	.word	sEasyChatScreen
.L422:
	mov	r0, #0x0
	b	.L431
.L424:
	ldr	r0, .L439
	ldr	r1, [r0]
	ldrb	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xa]
	bl	GroupSelectCursorXPosTooFarRight
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L427	@cond_branch
	b	.L434
.L440:
	.align	2, 0
.L439:
	.word	sEasyChatScreen
.L426:
	ldr	r2, .L441
	ldr	r1, [r2]
	ldrb	r0, [r1, #0xa]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0xa]
	ldr	r0, [r2]
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0
	bge	.L427	@cond_branch
.L434:
	bl	GroupCursorMoveToBlueBox
.L427:
	mov	r0, #0xe
.L430:
	pop	{r1}
	bx	r1
.L442:
	.align	2, 0
.L441:
	.word	sEasyChatScreen
.Lfe37:
	.size	 UpdateSelectGroupCursorPos_OutsideBlueBox_AlphaMode,.Lfe37-UpdateSelectGroupCursorPos_OutsideBlueBox_AlphaMode
	.align	2, 0
	.type	 UpdateSelectGroupCursorPos_InsideBlueBox,function
	.thumb_func
UpdateSelectGroupCursorPos_InsideBlueBox:
	push	{lr}
	add	r2, r0, #0
	cmp	r2, #0x1
	beq	.L451	@cond_branch
	cmp	r2, #0x1
	bcc	.L452	@cond_branch
	cmp	r2, #0x2
	beq	.L445	@cond_branch
	cmp	r2, #0x3
	beq	.L448	@cond_branch
	mov	r0, #0x0
	b	.L455
.L445:
	ldr	r0, .L459
	ldr	r1, [r0]
	ldrb	r3, [r1, #0xb]
	mov	r0, #0xb
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	beq	.L446	@cond_branch
	sub	r0, r3, #0x1
	b	.L458
.L460:
	.align	2, 0
.L459:
	.word	sEasyChatScreen
.L446:
	strb	r2, [r1, #0xb]
	b	.L456
.L448:
	ldr	r0, .L461
	ldr	r1, [r0]
	ldrb	r2, [r1, #0xb]
	mov	r0, #0xb
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	bgt	.L449	@cond_branch
	add	r0, r2, #0x1
	b	.L458
.L462:
	.align	2, 0
.L461:
	.word	sEasyChatScreen
.L449:
	mov	r0, #0x0
	b	.L458
.L451:
	ldr	r0, .L463
	ldr	r1, [r0]
	ldrb	r0, [r1, #0xb]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xb]
	bl	GroupCursorWrapAroundLeft
	b	.L456
.L464:
	.align	2, 0
.L463:
	.word	sEasyChatScreen
.L452:
	ldr	r2, .L465
	ldr	r1, [r2]
	mov	r0, #0x0
	strb	r0, [r1, #0xa]
	ldr	r1, [r2]
	ldrb	r0, [r1, #0xb]
	add	r0, r0, #0x1
.L458:
	strb	r0, [r1, #0xb]
.L456:
	mov	r0, #0xe
.L455:
	pop	{r1}
	bx	r1
.L466:
	.align	2, 0
.L465:
	.word	sEasyChatScreen
.Lfe38:
	.size	 UpdateSelectGroupCursorPos_InsideBlueBox,.Lfe38-UpdateSelectGroupCursorPos_InsideBlueBox
	.align	2, 0
	.type	 GroupCursorMoveToBlueBox,function
	.thumb_func
GroupCursorMoveToBlueBox:
	push	{lr}
	ldr	r2, .L469
	ldr	r1, [r2]
	mov	r0, #0xff
	strb	r0, [r1, #0xa]
	ldr	r2, [r2]
	ldrb	r1, [r2, #0xb]
	mov	r0, #0xb
	ldrsb	r0, [r2, r0]
	cmp	r0, #0
	beq	.L468	@cond_branch
	sub	r0, r1, #0x1
	strb	r0, [r2, #0xb]
.L468:
	pop	{r0}
	bx	r0
.L470:
	.align	2, 0
.L469:
	.word	sEasyChatScreen
.Lfe39:
	.size	 GroupCursorMoveToBlueBox,.Lfe39-GroupCursorMoveToBlueBox
	.align	2, 0
	.type	 GroupCursorWrapAroundLeft,function
	.thumb_func
GroupCursorWrapAroundLeft:
	push	{r4, lr}
	ldr	r4, .L474
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x9]
	cmp	r0, #0
	bne	.L472	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1, #0xa]
	bl	MoveGroupCursorXToMaxCol
	b	.L473
.L475:
	.align	2, 0
.L474:
	.word	sEasyChatScreen
.L472:
	ldrb	r0, [r1, #0xb]
	bl	GetMaxGroupCursorXinAlphaMode
	ldr	r1, [r4]
	strb	r0, [r1, #0xa]
.L473:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 GroupCursorWrapAroundLeft,.Lfe40-GroupCursorWrapAroundLeft
	.align	2, 0
	.type	 SelectWordCursorAction,function
	.thumb_func
SelectWordCursorAction:
	push	{r4, lr}
	cmp	r0, #0x5
	bls	.LCB2932
	b	.L477	@long jump
.LCB2932:
	lsl	r0, r0, #0x2
	ldr	r1, .L507
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L508:
	.align	2, 0
.L507:
	.word	.L500
	.align	2, 0
	.align	2, 0
.L500:
	.word	.L489
	.word	.L486
	.word	.L478
	.word	.L482
	.word	.L493
	.word	.L497
.L478:
	ldr	r0, .L509
	ldr	r1, [r0]
	mov	r0, #0x11
	ldrsb	r0, [r1, r0]
	ldrb	r3, [r1, #0xe]
	add	r0, r0, r3
	cmp	r0, #0
	bgt	.LCB2957
	b	.L477	@long jump
.LCB2957:
	ldrb	r2, [r1, #0x11]
	mov	r0, #0x11
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	ble	.L480	@cond_branch
	sub	r0, r2, #0x1
	b	.L506
.L510:
	.align	2, 0
.L509:
	.word	sEasyChatScreen
.L480:
	sub	r0, r3, #0x1
	strb	r0, [r1, #0xe]
	mov	r4, #0x12
	b	.L485
.L482:
	ldr	r0, .L511
	ldr	r1, [r0]
	mov	r0, #0x11
	ldrsb	r0, [r1, r0]
	ldrb	r3, [r1, #0xe]
	add	r0, r0, r3
	ldrb	r2, [r1, #0xf]
	cmp	r0, r2
	bge	.L477	@cond_branch
	ldrb	r2, [r1, #0x11]
	mov	r0, #0x11
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bgt	.L484	@cond_branch
	add	r0, r2, #0x1
.L506:
	strb	r0, [r1, #0x11]
	mov	r4, #0x11
	b	.L485
.L512:
	.align	2, 0
.L511:
	.word	sEasyChatScreen
.L484:
	add	r0, r3, #0x1
	strb	r0, [r1, #0xe]
	mov	r4, #0x13
.L485:
	bl	MoveWordCursorXToMaxCol
	add	r0, r4, #0
	b	.L502
.L486:
	ldr	r0, .L513
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x10]
	mov	r0, #0x10
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	ble	.L487	@cond_branch
	sub	r0, r2, #0x1
	b	.L503
.L514:
	.align	2, 0
.L513:
	.word	sEasyChatScreen
.L487:
	mov	r0, #0x1
.L503:
	strb	r0, [r1, #0x10]
	bl	MoveWordCursorXToMaxCol
.L504:
	mov	r0, #0x11
	b	.L502
.L489:
	ldr	r4, .L515
	ldr	r1, [r4]
	ldrb	r2, [r1, #0x10]
	mov	r0, #0x10
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	bgt	.L490	@cond_branch
	add	r0, r2, #0x1
	strb	r0, [r1, #0x10]
	bl	WordSelectCursorXPosTooFarRight
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L504	@cond_branch
	ldr	r1, [r4]
.L490:
	mov	r0, #0x0
	strb	r0, [r1, #0x10]
	b	.L504
.L516:
	.align	2, 0
.L515:
	.word	sEasyChatScreen
.L493:
	ldr	r0, .L517
	ldr	r2, [r0]
	ldrb	r0, [r2, #0xe]
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L477	@cond_branch
	cmp	r1, #0x3
	bls	.L495	@cond_branch
	sub	r0, r0, #0x4
	b	.L505
.L518:
	.align	2, 0
.L517:
	.word	sEasyChatScreen
.L495:
	mov	r0, #0x0
.L505:
	strb	r0, [r2, #0xe]
	mov	r0, #0x14
	b	.L502
.L497:
	ldr	r3, .L519
	ldr	r1, [r3]
	ldrb	r2, [r1, #0xe]
	ldrb	r0, [r1, #0xf]
	sub	r0, r0, #0x4
	cmp	r2, r0
	bgt	.L477	@cond_branch
	add	r0, r2, #0x4
	strb	r0, [r1, #0xe]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0xe]
	ldrb	r3, [r2, #0xf]
	sub	r0, r3, #0x3
	cmp	r1, r0
	ble	.L499	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0xfd
	strb	r0, [r2, #0xe]
.L499:
	bl	MoveWordCursorXToMaxCol
	mov	r0, #0x15
	b	.L502
.L520:
	.align	2, 0
.L519:
	.word	sEasyChatScreen
.L477:
	mov	r0, #0x0
.L502:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 SelectWordCursorAction,.Lfe41-SelectWordCursorAction
	.align	2, 0
	.type	 GetSelectedFieldIndex,function
	.thumb_func
GetSelectedFieldIndex:
	ldr	r0, .L522
	ldr	r0, [r0]
	mov	r2, #0x6
	ldrsb	r2, [r0, r2]
	ldrb	r1, [r0, #0x2]
	mul	r1, r1, r2
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.L523:
	.align	2, 0
.L522:
	.word	sEasyChatScreen
.Lfe42:
	.size	 GetSelectedFieldIndex,.Lfe42-GetSelectedFieldIndex
	.align	2, 0
	.type	 GetSelectedGroupIndex,function
	.thumb_func
GetSelectedGroupIndex:
	ldr	r0, .L525
	ldr	r0, [r0]
	mov	r1, #0xb
	ldrsb	r1, [r0, r1]
	ldrb	r2, [r0, #0xc]
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.L526:
	.align	2, 0
.L525:
	.word	sEasyChatScreen
.Lfe43:
	.size	 GetSelectedGroupIndex,.Lfe43-GetSelectedGroupIndex
	.section .rodata
	.type	 sAlphabetLayout,object
sAlphabetLayout:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.space	1
	.byte	0x7
	.byte	0x8
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.space	1
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x13
	.byte	0x14
	.byte	0x15
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.size	 sAlphabetLayout,28
.text
	.align	2, 0
	.type	 GetSelectedLetter,function
	.thumb_func
GetSelectedLetter:
	push	{lr}
	ldr	r0, .L532
	ldr	r1, [r0]
	ldrb	r0, [r1, #0xa]
	mov	r3, #0x0
	cmp	r0, #0x6
	bhi	.L528	@cond_branch
	mov	r3, #0xa
	ldrsb	r3, [r1, r3]
.L528:
	ldrb	r0, [r1, #0xb]
	mov	r2, #0x0
	cmp	r0, #0x3
	bhi	.L530	@cond_branch
	mov	r2, #0xb
	ldrsb	r2, [r1, r2]
.L530:
	ldr	r0, .L532+0x4
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	add	r1, r3, r1
	add	r1, r1, r0
	ldrb	r0, [r1]
	pop	{r1}
	bx	r1
.L533:
	.align	2, 0
.L532:
	.word	sEasyChatScreen
	.word	sAlphabetLayout
.Lfe44:
	.size	 GetSelectedLetter,.Lfe44-GetSelectedLetter
	.align	2, 0
	.type	 GetSelectWordCursorPos,function
	.thumb_func
GetSelectWordCursorPos:
	ldr	r0, .L535
	ldr	r0, [r0]
	mov	r1, #0x11
	ldrsb	r1, [r0, r1]
	ldrb	r2, [r0, #0xe]
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	ldrb	r0, [r0, #0x10]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.L536:
	.align	2, 0
.L535:
	.word	sEasyChatScreen
.Lfe45:
	.size	 GetSelectWordCursorPos,.Lfe45-GetSelectWordCursorPos
	.align	2, 0
	.type	 GetMaxGroupCursorXinAlphaMode,function
	.thumb_func
GetMaxGroupCursorXinAlphaMode:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L540	@cond_branch
	cmp	r0, #0x1
	beq	.L541	@cond_branch
.L540:
	mov	r0, #0x6
	b	.L543
.L541:
	mov	r0, #0x5
.L543:
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 GetMaxGroupCursorXinAlphaMode,.Lfe46-GetMaxGroupCursorXinAlphaMode
	.align	2, 0
	.type	 MoveGroupCursorXToMaxCol,function
	.thumb_func
MoveGroupCursorXToMaxCol:
	push	{lr}
	b	.L545
.L547:
	ldr	r0, .L551
	ldr	r1, [r0]
	ldrb	r2, [r1, #0xa]
	mov	r0, #0xa
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	beq	.L546	@cond_branch
	sub	r0, r2, #0x1
	strb	r0, [r1, #0xa]
.L545:
	bl	GroupSelectCursorXPosTooFarRight
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L547	@cond_branch
.L546:
	pop	{r0}
	bx	r0
.L552:
	.align	2, 0
.L551:
	.word	sEasyChatScreen
.Lfe47:
	.size	 MoveGroupCursorXToMaxCol,.Lfe47-MoveGroupCursorXToMaxCol
	.align	2, 0
	.type	 MoveWordCursorXToMaxCol,function
	.thumb_func
MoveWordCursorXToMaxCol:
	push	{lr}
	b	.L554
.L556:
	ldr	r0, .L560
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x10]
	mov	r0, #0x10
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	beq	.L555	@cond_branch
	sub	r0, r2, #0x1
	strb	r0, [r1, #0x10]
.L554:
	bl	WordSelectCursorXPosTooFarRight
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L556	@cond_branch
.L555:
	pop	{r0}
	bx	r0
.L561:
	.align	2, 0
.L560:
	.word	sEasyChatScreen
.Lfe48:
	.size	 MoveWordCursorXToMaxCol,.Lfe48-MoveWordCursorXToMaxCol
	.align	2, 0
	.type	 GroupSelectCursorXPosTooFarRight,function
	.thumb_func
GroupSelectCursorXPosTooFarRight:
	push	{r4, lr}
	ldr	r4, .L568
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x9]
	cmp	r0, #0
	bne	.L563	@cond_branch
	bl	GetSelectedGroupIndex
	add	r4, r0, #0
	bl	GetNumDisplayableGroups
	mov	r1, #0x0
	lsl	r0, r0, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L564	@cond_branch
	mov	r1, #0x1
.L564:
	add	r0, r1, #0
	b	.L567
.L569:
	.align	2, 0
.L568:
	.word	sEasyChatScreen
.L563:
	ldrb	r0, [r1, #0xb]
	bl	GetMaxGroupCursorXinAlphaMode
	mov	r2, #0x0
	ldr	r1, [r4]
	ldrb	r1, [r1, #0xa]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	ble	.L566	@cond_branch
	mov	r2, #0x1
.L566:
	add	r0, r2, #0
.L567:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 GroupSelectCursorXPosTooFarRight,.Lfe49-GroupSelectCursorXPosTooFarRight
	.align	2, 0
	.type	 WordSelectCursorXPosTooFarRight,function
	.thumb_func
WordSelectCursorXPosTooFarRight:
	push	{r4, lr}
	bl	GetSelectWordCursorPos
	add	r4, r0, #0
	bl	GetNumDisplayedWords
	mov	r1, #0x0
	lsl	r4, r4, #0x10
	lsl	r0, r0, #0x10
	cmp	r4, r0
	bcc	.L571	@cond_branch
	mov	r1, #0x1
.L571:
	add	r0, r1, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 WordSelectCursorXPosTooFarRight,.Lfe50-WordSelectCursorXPosTooFarRight
	.align	2, 0
	.globl	GetEasyChatScreenFrameId
	.type	 GetEasyChatScreenFrameId,function
	.thumb_func
GetEasyChatScreenFrameId:
	ldr	r2, .L573
	ldr	r0, .L573+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrb	r0, [r0, #0x3]
	bx	lr
.L574:
	.align	2, 0
.L573:
	.word	sEasyChatScreenTemplates
	.word	sEasyChatScreen
.Lfe51:
	.size	 GetEasyChatScreenFrameId,.Lfe51-GetEasyChatScreenFrameId
	.align	2, 0
	.globl	GetTitleText
	.type	 GetTitleText,function
	.thumb_func
GetTitleText:
	ldr	r2, .L576
	ldr	r0, .L576+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x1]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r2, r2, #0x4
	add	r0, r0, r2
	ldr	r0, [r0]
	bx	lr
.L577:
	.align	2, 0
.L576:
	.word	sEasyChatScreenTemplates
	.word	sEasyChatScreen
.Lfe52:
	.size	 GetTitleText,.Lfe52-GetTitleText
	.align	2, 0
	.globl	GetEasyChatWordBuffer
	.type	 GetEasyChatWordBuffer,function
	.thumb_func
GetEasyChatWordBuffer:
	ldr	r0, .L579
	ldr	r0, [r0]
	add	r0, r0, #0x18
	bx	lr
.L580:
	.align	2, 0
.L579:
	.word	sEasyChatScreen
.Lfe53:
	.size	 GetEasyChatWordBuffer,.Lfe53-GetEasyChatWordBuffer
	.align	2, 0
	.globl	GetNumRows
	.type	 GetNumRows,function
	.thumb_func
GetNumRows:
	ldr	r0, .L582
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	bx	lr
.L583:
	.align	2, 0
.L582:
	.word	sEasyChatScreen
.Lfe54:
	.size	 GetNumRows,.Lfe54-GetNumRows
	.align	2, 0
	.globl	GetNumColumns
	.type	 GetNumColumns,function
	.thumb_func
GetNumColumns:
	ldr	r0, .L585
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x2]
	bx	lr
.L586:
	.align	2, 0
.L585:
	.word	sEasyChatScreen
.Lfe55:
	.size	 GetNumColumns,.Lfe55-GetNumColumns
	.align	2, 0
	.globl	GetMainCursorColumn
	.type	 GetMainCursorColumn,function
	.thumb_func
GetMainCursorColumn:
	ldr	r0, .L588
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x5]
	bx	lr
.L589:
	.align	2, 0
.L588:
	.word	sEasyChatScreen
.Lfe56:
	.size	 GetMainCursorColumn,.Lfe56-GetMainCursorColumn
	.align	2, 0
	.globl	GetMainCursorRow
	.type	 GetMainCursorRow,function
	.thumb_func
GetMainCursorRow:
	ldr	r0, .L591
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x6]
	bx	lr
.L592:
	.align	2, 0
.L591:
	.word	sEasyChatScreen
.Lfe57:
	.size	 GetMainCursorRow,.Lfe57-GetMainCursorRow
	.align	2, 0
	.globl	GetEasyChatInstructionsText
	.type	 GetEasyChatInstructionsText,function
	.thumb_func
GetEasyChatInstructionsText:
	push	{r4, r5, lr}
	ldr	r4, .L594
	ldr	r2, .L594+0x4
	ldr	r5, [r2]
	ldrb	r3, [r5, #0x1]
	lsl	r2, r3, #0x1
	add	r2, r2, r3
	lsl	r2, r2, #0x3
	add	r3, r4, #0
	add	r3, r3, #0x8
	add	r2, r2, r3
	ldr	r2, [r2]
	str	r2, [r0]
	ldrb	r2, [r5, #0x1]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r4, r4, #0xc
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L595:
	.align	2, 0
.L594:
	.word	sEasyChatScreenTemplates
	.word	sEasyChatScreen
.Lfe58:
	.size	 GetEasyChatInstructionsText,.Lfe58-GetEasyChatInstructionsText
	.align	2, 0
	.globl	GetEasyChatConfirmText
	.type	 GetEasyChatConfirmText,function
	.thumb_func
GetEasyChatConfirmText:
	push	{r4, r5, lr}
	ldr	r4, .L597
	ldr	r2, .L597+0x4
	ldr	r5, [r2]
	ldrb	r3, [r5, #0x1]
	lsl	r2, r3, #0x1
	add	r2, r2, r3
	lsl	r2, r2, #0x3
	add	r3, r4, #0
	add	r3, r3, #0x10
	add	r2, r2, r3
	ldr	r2, [r2]
	str	r2, [r0]
	ldrb	r2, [r5, #0x1]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r4, r4, #0x14
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L598:
	.align	2, 0
.L597:
	.word	sEasyChatScreenTemplates
	.word	sEasyChatScreen
.Lfe59:
	.size	 GetEasyChatConfirmText,.Lfe59-GetEasyChatConfirmText
	.align	2, 0
	.globl	GetEasyChatConfirmCancelText
	.type	 GetEasyChatConfirmCancelText,function
	.thumb_func
GetEasyChatConfirmCancelText:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L605
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L602	@cond_branch
	ldr	r0, .L605+0x4
	b	.L604
.L606:
	.align	2, 0
.L605:
	.word	sEasyChatScreen
	.word	gText_StopGivingPkmnMail
.L602:
	ldr	r0, .L607
.L604:
	str	r0, [r2]
	mov	r0, #0x0
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L608:
	.align	2, 0
.L607:
	.word	gText_QuitEditing
.Lfe60:
	.size	 GetEasyChatConfirmCancelText,.Lfe60-GetEasyChatConfirmCancelText
	.align	2, 0
	.globl	GetEasyChatConfirmDeletionText
	.type	 GetEasyChatConfirmDeletionText,function
	.thumb_func
GetEasyChatConfirmDeletionText:
	ldr	r2, .L610
	str	r2, [r0]
	ldr	r0, .L610+0x4
	str	r0, [r1]
	bx	lr
.L611:
	.align	2, 0
.L610:
	.word	gText_AllTextBeingEditedWill
	.word	gText_BeDeletedThatOkay
.Lfe61:
	.size	 GetEasyChatConfirmDeletionText,.Lfe61-GetEasyChatConfirmDeletionText
	.align	2, 0
	.globl	GetECSelectGroupCursorCoords
	.type	 GetECSelectGroupCursorCoords,function
	.thumb_func
GetECSelectGroupCursorCoords:
	ldr	r2, .L613
	ldr	r3, [r2]
	ldrb	r2, [r3, #0xa]
	strb	r2, [r0]
	ldrb	r0, [r3, #0xb]
	strb	r0, [r1]
	bx	lr
.L614:
	.align	2, 0
.L613:
	.word	sEasyChatScreen
.Lfe62:
	.size	 GetECSelectGroupCursorCoords,.Lfe62-GetECSelectGroupCursorCoords
	.align	2, 0
	.globl	IsEasyChatAlphaMode
	.type	 IsEasyChatAlphaMode,function
	.thumb_func
IsEasyChatAlphaMode:
	ldr	r0, .L616
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x9]
	bx	lr
.L617:
	.align	2, 0
.L616:
	.word	sEasyChatScreen
.Lfe63:
	.size	 IsEasyChatAlphaMode,.Lfe63-IsEasyChatAlphaMode
	.align	2, 0
	.globl	GetECSelectGroupRowsAbove
	.type	 GetECSelectGroupRowsAbove,function
	.thumb_func
GetECSelectGroupRowsAbove:
	ldr	r0, .L619
	ldr	r0, [r0]
	ldrb	r0, [r0, #0xc]
	bx	lr
.L620:
	.align	2, 0
.L619:
	.word	sEasyChatScreen
.Lfe64:
	.size	 GetECSelectGroupRowsAbove,.Lfe64-GetECSelectGroupRowsAbove
	.align	2, 0
	.globl	GetECSelectWordCursorCoords
	.type	 GetECSelectWordCursorCoords,function
	.thumb_func
GetECSelectWordCursorCoords:
	ldr	r2, .L622
	ldr	r3, [r2]
	ldrb	r2, [r3, #0x10]
	strb	r2, [r0]
	ldrb	r0, [r3, #0x11]
	strb	r0, [r1]
	bx	lr
.L623:
	.align	2, 0
.L622:
	.word	sEasyChatScreen
.Lfe65:
	.size	 GetECSelectWordCursorCoords,.Lfe65-GetECSelectWordCursorCoords
	.align	2, 0
	.globl	GetECSelectWordRowsAbove
	.type	 GetECSelectWordRowsAbove,function
	.thumb_func
GetECSelectWordRowsAbove:
	ldr	r0, .L625
	ldr	r0, [r0]
	ldrb	r0, [r0, #0xe]
	bx	lr
.L626:
	.align	2, 0
.L625:
	.word	sEasyChatScreen
.Lfe66:
	.size	 GetECSelectWordRowsAbove,.Lfe66-GetECSelectWordRowsAbove
	.align	2, 0
	.globl	GetECSelectWordNumRows
	.type	 GetECSelectWordNumRows,function
	.thumb_func
GetECSelectWordNumRows:
	ldr	r0, .L628
	ldr	r0, [r0]
	ldrb	r0, [r0, #0xf]
	bx	lr
.L629:
	.align	2, 0
.L628:
	.word	sEasyChatScreen
.Lfe67:
	.size	 GetECSelectWordNumRows,.Lfe67-GetECSelectWordNumRows
	.align	2, 0
	.type	 UnusedDummy,function
	.thumb_func
UnusedDummy:
	mov	r0, #0x0
	bx	lr
.Lfe68:
	.size	 UnusedDummy,.Lfe68-UnusedDummy
	.align	2, 0
	.globl	ShouldDrawECUpArrow
	.type	 ShouldDrawECUpArrow,function
	.thumb_func
ShouldDrawECUpArrow:
	push	{lr}
	ldr	r0, .L641
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x2
	beq	.L633	@cond_branch
	cmp	r0, #0x3
	beq	.L635	@cond_branch
	b	.L632
.L642:
	.align	2, 0
.L641:
	.word	sEasyChatScreen
.L633:
	ldrb	r0, [r1, #0x9]
	cmp	r0, #0
	bne	.L632	@cond_branch
	ldrb	r0, [r1, #0xc]
	b	.L640
.L635:
	ldrb	r0, [r1, #0xe]
.L640:
	cmp	r0, #0
	beq	.L632	@cond_branch
	mov	r0, #0x1
	b	.L639
.L632:
	mov	r0, #0x0
.L639:
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 ShouldDrawECUpArrow,.Lfe69-ShouldDrawECUpArrow
	.align	2, 0
	.globl	ShouldDrawECDownArrow
	.type	 ShouldDrawECDownArrow,function
	.thumb_func
ShouldDrawECDownArrow:
	push	{lr}
	ldr	r0, .L652
	ldr	r2, [r0]
	ldrb	r0, [r2, #0x4]
	cmp	r0, #0x2
	beq	.L645	@cond_branch
	cmp	r0, #0x3
	beq	.L647	@cond_branch
	b	.L644
.L653:
	.align	2, 0
.L652:
	.word	sEasyChatScreen
.L645:
	ldrb	r0, [r2, #0x9]
	cmp	r0, #0
	bne	.L644	@cond_branch
	ldrb	r1, [r2, #0xc]
	add	r1, r1, #0x4
	ldrb	r0, [r2, #0xd]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bgt	.L644	@cond_branch
	mov	r0, #0x1
	b	.L651
.L647:
	ldrb	r0, [r2, #0xe]
	add	r0, r0, #0x4
	ldrb	r2, [r2, #0xf]
	cmp	r0, r2
	bgt	.L644	@cond_branch
	mov	r0, #0x1
	b	.L651
.L644:
	mov	r0, #0x0
.L651:
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 ShouldDrawECDownArrow,.Lfe70-ShouldDrawECDownArrow
	.align	2, 0
	.type	 IsPhraseDifferentThanPlayerInput,function
	.thumb_func
IsPhraseDifferentThanPlayerInput:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	mov	r2, #0x0
	cmp	r2, r3
	bcs	.L656	@cond_branch
	ldr	r0, .L662
	ldr	r0, [r0]
	add	r4, r0, #0
	add	r4, r4, #0x18
.L658:
	lsl	r0, r2, #0x1
	add	r1, r0, r5
	add	r0, r4, r0
	ldrh	r1, [r1]
	ldrh	r0, [r0]
	cmp	r1, r0
	beq	.L657	@cond_branch
	mov	r0, #0x1
	b	.L661
.L663:
	.align	2, 0
.L662:
	.word	sEasyChatScreen
.L657:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r3
	bcc	.L658	@cond_branch
.L656:
	mov	r0, #0x0
.L661:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 IsPhraseDifferentThanPlayerInput,.Lfe71-IsPhraseDifferentThanPlayerInput
	.align	2, 0
	.type	 GetEasyChatScreenTemplateId,function
	.thumb_func
GetEasyChatScreenTemplateId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r1, #0x0
	ldr	r2, .L672
.L668:
	ldrb	r0, [r2]
	cmp	r0, r3
	bne	.L667	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	b	.L671
.L673:
	.align	2, 0
.L672:
	.word	sEasyChatScreenTemplates
.L667:
	add	r2, r2, #0x18
	add	r1, r1, #0x1
	cmp	r1, #0x9
	bls	.L668	@cond_branch
	mov	r0, #0x0
.L671:
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 GetEasyChatScreenTemplateId,.Lfe72-GetEasyChatScreenTemplateId
	.align	2, 0
	.type	 IsEcWordBufferUninitialized,function
	.thumb_func
IsEcWordBufferUninitialized:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r0, .L682
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x7]
	cmp	r2, r1
	bge	.L676	@cond_branch
	ldr	r4, .L682+0x4
	add	r3, r1, #0
	add	r1, r0, #0
	add	r1, r1, #0x18
.L678:
	ldrh	r0, [r1]
	cmp	r0, r4
	beq	.L677	@cond_branch
	mov	r0, #0x0
	b	.L681
.L683:
	.align	2, 0
.L682:
	.word	sEasyChatScreen
	.word	0xffff
.L677:
	add	r1, r1, #0x2
	add	r2, r2, #0x1
	cmp	r2, r3
	blt	.L678	@cond_branch
.L676:
	mov	r0, #0x1
.L681:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 IsEcWordBufferUninitialized,.Lfe73-IsEcWordBufferUninitialized
.text
	.align	2, 0 @ Don't pad with nop

