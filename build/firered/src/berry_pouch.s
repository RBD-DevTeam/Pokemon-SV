@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sResources,object
	.size	 sResources,4
sResources:
	.word	0x0
	.align	2, 0
	.type	 sStaticCnt,object
	.size	 sStaticCnt,12
sStaticCnt:
	.space	12
	.align	2, 0
	.type	 sListMenuItems,object
	.size	 sListMenuItems,4
sListMenuItems:
	.word	0x0
	.align	2, 0
	.type	 sListMenuStrbuf,object
	.size	 sListMenuStrbuf,4
sListMenuStrbuf:
	.word	0x0
	.align	2, 0
	.type	 sContextMenuOptions,object
	.size	 sContextMenuOptions,4
sContextMenuOptions:
	.word	0x0
	.type	 sContextMenuNumOptions,object
	.size	 sContextMenuNumOptions,1
sContextMenuNumOptions:
	.byte	0x0
	.align	2, 0
	.type	 sVariableWindowIds,object
	.size	 sVariableWindowIds,14
sVariableWindowIds:
	.space	14
	.align	2, 0
	.type	 sBerryPouchSpriteId,object
	.size	 sBerryPouchSpriteId,1
sBerryPouchSpriteId:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,12
sBgTemplates:
	.byte	0xf0
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xed
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x1
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sBerryPouchContextMenuTasks,object
sBerryPouchContextMenuTasks:
	.word	Task_NormalContextMenu
	.word	Task_ContextMenu_FromPartyGiveMenu
	.word	Task_ContextMenu_Sell
	.word	Task_ContextMenu_FromPokemonPC
	.word	Task_NormalContextMenu
	.size	 sBerryPouchContextMenuTasks,20
	.align	2, 0
	.type	 sYesNoFuncs_Toss,object
	.size	 sYesNoFuncs_Toss,8
sYesNoFuncs_Toss:
	.word	Task_TossYes
	.word	Task_TossNo
	.align	2, 0
	.type	 sYesNoFuncs_Sell,object
	.size	 sYesNoFuncs_Sell,8
sYesNoFuncs_Sell:
	.word	Task_SellYes
	.word	Task_SellNo
	.align	2, 0
	.type	 sContextMenuActions,object
sContextMenuActions:
	.word	gOtherText_Use
	.word	Task_BerryPouch_Use
	.word	gOtherText_Toss
	.word	Task_BerryPouch_Toss
	.word	gOtherText_Give
	.word	Task_BerryPouch_Give
	.word	gOtherText_Exit
	.word	Task_BerryPouch_Exit
	.word	gString_Dummy
	.word	0x0
	.size	 sContextMenuActions,40
	.type	 sOptions_UseGiveTossExit,object
sOptions_UseGiveTossExit:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x3
	.size	 sOptions_UseGiveTossExit,4
	.type	 sOptions_GiveExit,object
sOptions_GiveExit:
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.size	 sOptions_GiveExit,4
	.type	 sOptions_Exit,object
sOptions_Exit:
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.size	 sOptions_Exit,4
	.type	 sOptions_UseToss_Exit,object
sOptions_UseToss_Exit:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.size	 sOptions_UseToss_Exit,4
	.type	 sText_Space,object
sText_Space:
	.byte	0x0
	.byte	0xff
	.size	 sText_Space,2
	.align	2, 0
	.type	 sWindowTemplates_Main,object
sWindowTemplates_Main:
	.byte	0x0
	.byte	0xb
	.byte	0x1
	.byte	0x12
	.byte	0xe
	.byte	0xf
	.short	0x27
	.byte	0x0
	.byte	0x5
	.byte	0x10
	.byte	0x19
	.byte	0x4
	.byte	0xf
	.short	0x123
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0xf
	.short	0x187
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates_Main,32
	.align	2, 0
	.type	 sWindowTemplates_Variable,object
sWindowTemplates_Variable:
	.byte	0x2
	.byte	0x18
	.byte	0xf
	.byte	0x5
	.byte	0x4
	.byte	0xf
	.short	0x1d1
	.byte	0x2
	.byte	0x11
	.byte	0x9
	.byte	0xc
	.byte	0x4
	.byte	0xf
	.short	0x1d1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x8
	.byte	0x3
	.byte	0xc
	.short	0x201
	.byte	0x2
	.byte	0x17
	.byte	0xf
	.byte	0x6
	.byte	0x4
	.byte	0xf
	.short	0x219
	.byte	0x2
	.byte	0x15
	.byte	0x9
	.byte	0x6
	.byte	0x4
	.byte	0xf
	.short	0x219
	.byte	0x2
	.byte	0x2
	.byte	0xf
	.byte	0x1a
	.byte	0x4
	.byte	0xf
	.short	0x231
	.byte	0x2
	.byte	0x6
	.byte	0xf
	.byte	0xe
	.byte	0x4
	.byte	0xc
	.short	0x231
	.byte	0x2
	.byte	0x6
	.byte	0xf
	.byte	0xf
	.byte	0x4
	.byte	0xc
	.short	0x269
	.byte	0x2
	.byte	0x6
	.byte	0xf
	.byte	0x10
	.byte	0x4
	.byte	0xc
	.short	0x2a5
	.byte	0x2
	.byte	0x6
	.byte	0xf
	.byte	0x17
	.byte	0x4
	.byte	0xc
	.short	0x2e5
	.byte	0x2
	.byte	0x16
	.byte	0x11
	.byte	0x7
	.byte	0x2
	.byte	0xf
	.short	0x199
	.byte	0x2
	.byte	0x16
	.byte	0xf
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0x199
	.byte	0x2
	.byte	0x16
	.byte	0xd
	.byte	0x7
	.byte	0x6
	.byte	0xf
	.short	0x199
	.byte	0x2
	.byte	0x16
	.byte	0xb
	.byte	0x7
	.byte	0x8
	.byte	0xf
	.short	0x199
	.size	 sWindowTemplates_Variable,112
	.type	 sTextColors,object
sTextColors:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.size	 sTextColors,9
	.align	2, 0
	.type	 sOamData,object
	.size	 sOamData,8
sOamData:
	.space	1
	.byte	0x1
	.space	1
	.byte	0xc0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sSpriteAnim_Dummy,object
sSpriteAnim_Dummy:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Dummy,8
	.align	2, 0
	.type	 sSpriteAnimTable,object
sSpriteAnimTable:
	.word	sSpriteAnim_Dummy
	.size	 sSpriteAnimTable,4
	.align	2, 0
	.type	 sSpriteAffineAnim_Static,object
sSpriteAffineAnim_Static:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_Static,16
	.align	2, 0
	.type	 sSpriteAffineAnim_Wobble,object
sSpriteAffineAnim_Wobble:
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x2
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_Wobble,40
	.align	2, 0
	.type	 sSpriteAffineAnimTable,object
sSpriteAffineAnimTable:
	.word	sSpriteAffineAnim_Static
	.word	sSpriteAffineAnim_Wobble
	.size	 sSpriteAffineAnimTable,8
	.align	2, 0
	.type	 sBerryPouchSpriteSheet,object
	.size	 sBerryPouchSpriteSheet,8
sBerryPouchSpriteSheet:
	.word	gBerryPouchSpriteTiles
	.short	0x800
	.short	0x64
	.align	2, 0
	.type	 sBerryPouchSpritePal,object
	.size	 sBerryPouchSpritePal,8
sBerryPouchSpritePal:
	.word	gBerryPouchSpritePalette
	.short	0x64
	.space	2
	.align	2, 0
	.type	 sSpriteTemplate_BerryPouch,object
	.size	 sSpriteTemplate_BerryPouch,24
sSpriteTemplate_BerryPouch:
	.short	0x64
	.short	0x64
	.word	sOamData
	.word	sSpriteAnimTable
	.word	0x0
	.word	sSpriteAffineAnimTable
	.word	SpriteCallbackDummy
.text
	.align	2, 0
	.globl	InitBerryPouch
	.type	 InitBerryPouch,function
	.thumb_func
InitBerryPouch:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r7, .L13
	ldr	r0, .L13+0x4
	bl	Alloc
	str	r0, [r7]
	cmp	r0, #0
	bne	.L3	@cond_branch
	add	r0, r4, #0
	bl	SetMainCallback2
	b	.L4
.L14:
	.align	2, 0
.L13:
	.word	sResources
	.word	0x814
.L3:
	cmp	r5, #0x6
	beq	.L5	@cond_branch
	ldr	r0, .L15
	strb	r5, [r0, #0x4]
.L5:
	cmp	r6, #0xff
	beq	.L6	@cond_branch
	ldr	r0, .L15
	strb	r6, [r0, #0x5]
.L6:
	cmp	r4, #0
	beq	.L7	@cond_branch
	ldr	r0, .L15
	str	r4, [r0]
.L7:
	ldr	r1, [r7]
	mov	r0, #0x0
	str	r0, [r1]
	strb	r0, [r1, #0x9]
	ldr	r1, [r7]
	mov	r0, #0xff
	strb	r0, [r1, #0x6]
	mov	r2, #0x0
	ldr	r6, .L15+0x4
	ldr	r0, .L15+0x8
	mov	ip, r0
	ldr	r1, .L15+0xc
	mov	r8, r1
	add	r5, r7, #0
	ldr	r4, .L15+0x10
	mov	r3, #0x0
.L11:
	ldr	r0, [r5]
	lsl	r1, r2, #0x1
	add	r0, r0, r4
	add	r0, r0, r1
	strh	r3, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L11	@cond_branch
	ldrb	r0, [r6]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r0
	strb	r1, [r6]
	mov	r0, #0x0
	mov	r1, ip
	strh	r0, [r1]
	mov	r0, r8
	bl	SetMainCallback2
.L4:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	sStaticCnt
	.word	gTextFlags
	.word	gSpecialVar_ItemId
	.word	CB2_InitBerryPouch
	.word	0x80c
.Lfe1:
	.size	 InitBerryPouch,.Lfe1-InitBerryPouch
	.align	2, 0
	.type	 CB2_BerryPouchIdle,function
	.thumb_func
CB2_BerryPouchIdle:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	DoScheduledBgTilemapCopiesToVram
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 CB2_BerryPouchIdle,.Lfe2-CB2_BerryPouchIdle
	.align	2, 0
	.type	 VBlankCB_BerryPouchIdle,function
	.thumb_func
VBlankCB_BerryPouchIdle:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 VBlankCB_BerryPouchIdle,.Lfe3-VBlankCB_BerryPouchIdle
	.align	2, 0
	.type	 CB2_InitBerryPouch,function
	.thumb_func
CB2_InitBerryPouch:
	push	{lr}
.L20:
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L21	@cond_branch
	bl	RunBerryPouchInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L21	@cond_branch
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L20	@cond_branch
.L21:
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_InitBerryPouch,.Lfe4-CB2_InitBerryPouch
	.align	2, 0
	.type	 RunBerryPouchInit,function
	.thumb_func
RunBerryPouchInit:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L55
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x12
	bls	.LCB191
	b	.L51	@long jump
.LCB191:
	lsl	r0, r0, #0x2
	ldr	r1, .L55+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L56:
	.align	2, 0
.L55:
	.word	gMain
	.word	.L52
	.align	2, 0
	.align	2, 0
.L52:
	.word	.L29
	.word	.L30
	.word	.L31
	.word	.L32
	.word	.L33
	.word	.L34
	.word	.L35
	.word	.L37
	.word	.L38
	.word	.L40
	.word	.L41
	.word	.L42
	.word	.L44
	.word	.L45
	.word	.L46
	.word	.L47
	.word	.L48
	.word	.L49
	.word	.L50
.L29:
	bl	SetVBlankHBlankCallbacksToNull
	bl	ClearScheduledBgCopiesToVram
	b	.L54
.L30:
	bl	ScanlineEffect_Stop
	b	.L54
.L31:
	bl	FreeAllSpritePalettes
	b	.L54
.L32:
	bl	ResetPaletteFade
	b	.L54
.L33:
	bl	ResetSpriteData
	b	.L54
.L34:
	bl	ResetItemMenuIconState
	b	.L54
.L35:
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L54	@cond_branch
	bl	ResetTasks
	b	.L54
.L37:
	bl	BerryPouchInitBgs
	ldr	r0, .L57
	ldr	r0, [r0]
	ldr	r1, .L57+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	b	.L54
.L58:
	.align	2, 0
.L57:
	.word	sResources
	.word	0x80c
.L38:
	bl	BerryPouchLoadGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L28	@cond_branch
	b	.L54
.L40:
	bl	BerryPouchInitWindows
	b	.L54
.L41:
	bl	SortAndCountBerries
	bl	SanitizeListMenuSelectionParams
	bl	UpdateListMenuScrollOffset
	b	.L54
.L42:
	bl	AllocateListMenuBuffers
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L54	@cond_branch
	bl	AbortBerryPouchLoading
	mov	r0, #0x1
	b	.L53
.L44:
	bl	SetUpListMenuTemplate
	b	.L54
.L45:
	bl	PrintBerryPouchHeaderCentered
	b	.L54
.L46:
	ldr	r0, .L59
	mov	r1, #0x0
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L59+0x4
	ldr	r2, .L59+0x8
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0x8]
	bl	ListMenuInit
	ldr	r2, .L59+0xc
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x0
	strh	r0, [r1, #0x8]
	strh	r2, [r1, #0x18]
	b	.L54
.L60:
	.align	2, 0
.L59:
	.word	Task_BerryPouchMain
	.word	gMultiuseListMenuTemplate
	.word	sStaticCnt
	.word	gTasks
.L47:
	bl	CreateBerryPouchSprite
	b	.L54
.L48:
	bl	CreateScrollIndicatorArrows_BerryPouchList
	b	.L54
.L49:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	b	.L54
.L50:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x2
	neg	r1, r1
	mov	r2, #0x0
	str	r2, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L54:
	ldr	r1, .L61
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L28
.L62:
	.align	2, 0
.L61:
	.word	gMain
.L51:
	ldr	r0, .L63
	bl	SetVBlankCallback
	ldr	r0, .L63+0x4
	bl	SetMainCallback2
	mov	r0, #0x1
	b	.L53
.L64:
	.align	2, 0
.L63:
	.word	VBlankCB_BerryPouchIdle
	.word	CB2_BerryPouchIdle
.L28:
	mov	r0, #0x0
.L53:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 RunBerryPouchInit,.Lfe5-RunBerryPouchInit
	.align	2, 0
	.type	 AbortBerryPouchLoading,function
	.thumb_func
AbortBerryPouchLoading:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x2
	neg	r1, r1
	mov	r2, #0x0
	str	r2, [sp]
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L66
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L66+0x4
	bl	SetVBlankCallback
	ldr	r0, .L66+0x8
	bl	SetMainCallback2
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	Task_AbortBerryPouchLoading_WaitFade
	.word	VBlankCB_BerryPouchIdle
	.word	CB2_BerryPouchIdle
.Lfe6:
	.size	 AbortBerryPouchLoading,.Lfe6-AbortBerryPouchLoading
	.align	2, 0
	.type	 Task_AbortBerryPouchLoading_WaitFade,function
	.thumb_func
Task_AbortBerryPouchLoading_WaitFade:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L70
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L69	@cond_branch
	ldr	r0, .L70+0x4
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	BerryPouch_DestroyResources
	add	r0, r4, #0
	bl	DestroyTask
.L69:
	pop	{r4}
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	gPaletteFade
	.word	sStaticCnt
.Lfe7:
	.size	 Task_AbortBerryPouchLoading_WaitFade,.Lfe7-Task_AbortBerryPouchLoading_WaitFade
	.align	2, 0
	.type	 BerryPouchInitBgs,function
	.thumb_func
BerryPouchInitBgs:
	push	{r4, lr}
	bl	ResetAllBgsCoordinatesAndBgCntRegs
	ldr	r4, .L73
	ldr	r0, [r4]
	add	r0, r0, #0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r1, #0x0
	bl	memset
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L73+0x4
	mov	r0, #0x0
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r1, [r4]
	add	r1, r1, #0xc
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	pop	{r4}
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	sResources
	.word	sBgTemplates
.Lfe8:
	.size	 BerryPouchInitBgs,.Lfe8-BerryPouchInitBgs
	.align	2, 0
	.type	 BerryPouchLoadGfx,function
	.thumb_func
BerryPouchLoadGfx:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L88
	ldr	r0, [r5]
	ldr	r6, .L88+0x4
	add	r0, r0, r6
	mov	r1, #0x0
	ldrsh	r4, [r0, r1]
	cmp	r4, #0x1
	beq	.L78	@cond_branch
	cmp	r4, #0x1
	bgt	.L85	@cond_branch
	cmp	r4, #0
	beq	.L77	@cond_branch
	b	.L83
.L89:
	.align	2, 0
.L88:
	.word	sResources
	.word	0x80c
.L85:
	cmp	r4, #0x2
	beq	.L80	@cond_branch
	cmp	r4, #0x3
	beq	.L82	@cond_branch
	b	.L83
.L77:
	bl	ResetTempTileDataBuffers
	ldr	r1, .L90
	str	r4, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L87
.L91:
	.align	2, 0
.L90:
	.word	gBerryPouchBgGfx
.L78:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L76	@cond_branch
	ldr	r0, .L92
	ldr	r1, [r5]
	add	r1, r1, #0xc
	bl	LZDecompressWram
	b	.L87
.L93:
	.align	2, 0
.L92:
	.word	gBerryPouchBg1Tilemap
.L80:
	ldr	r0, .L94
	mov	r1, #0x0
	mov	r2, #0x60
	bl	LoadCompressedPalette
	ldr	r0, .L94+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L87	@cond_branch
	ldr	r0, .L94+0x8
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadCompressedPalette
	b	.L87
.L95:
	.align	2, 0
.L94:
	.word	gBerryPouchBgPals
	.word	gSaveBlock2Ptr
	.word	gBerryPouchBgPal0FemaleOverride
.L82:
	ldr	r0, .L96
	bl	LoadCompressedSpriteSheet
.L87:
	ldr	r1, [r5]
	add	r1, r1, r6
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L76
.L97:
	.align	2, 0
.L96:
	.word	sBerryPouchSpriteSheet
.L83:
	ldr	r0, .L98
	bl	LoadCompressedSpritePalette
	ldr	r0, .L98+0x4
	ldr	r0, [r0]
	ldr	r1, .L98+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L86
.L99:
	.align	2, 0
.L98:
	.word	sBerryPouchSpritePal
	.word	sResources
	.word	0x80c
.L76:
	mov	r0, #0x0
.L86:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 BerryPouchLoadGfx,.Lfe9-BerryPouchLoadGfx
	.align	2, 0
	.type	 AllocateListMenuBuffers,function
	.thumb_func
AllocateListMenuBuffers:
	push	{r4, lr}
	ldr	r4, .L104
	mov	r0, #0xb0
	lsl	r0, r0, #0x1
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L102	@cond_branch
	ldr	r4, .L104+0x4
	ldr	r0, .L104+0x8
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x7]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	sub	r0, r0, r1
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L102	@cond_branch
	mov	r0, #0x1
	b	.L103
.L105:
	.align	2, 0
.L104:
	.word	sListMenuItems
	.word	sListMenuStrbuf
	.word	sResources
.L102:
	mov	r0, #0x0
.L103:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 AllocateListMenuBuffers,.Lfe10-AllocateListMenuBuffers
	.align	2, 0
	.type	 SetUpListMenuTemplate,function
	.thumb_func
SetUpListMenuTemplate:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L114
	mov	r8, r0
	mov	r6, #0x0
	ldr	r0, .L114+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x7]
	cmp	r6, r0
	bcs	.L108	@cond_branch
	ldr	r7, .L114+0x8
.L110:
	lsl	r5, r6, #0x3
	sub	r4, r5, r6
	lsl	r4, r4, #0x2
	sub	r4, r4, r6
	ldr	r0, [r7]
	add	r0, r0, r4
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r1, r6, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1]
	bl	GetBerryNameAndIndexForMenu
	ldr	r0, .L114+0xc
	ldr	r0, [r0]
	add	r5, r5, r0
	ldr	r0, [r7]
	add	r0, r0, r4
	str	r0, [r5]
	str	r6, [r5, #0x4]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L114+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x7]
	cmp	r6, r0
	bcc	.L110	@cond_branch
.L108:
	ldr	r0, .L114+0xc
	ldr	r2, [r0]
	lsl	r0, r6, #0x3
	add	r0, r0, r2
	ldr	r1, .L114+0x10
	str	r1, [r0]
	str	r6, [r0, #0x4]
	ldr	r1, .L114+0x14
	str	r2, [r1]
	ldr	r0, .L114+0x18
	ldrb	r0, [r0, #0x4]
	add	r5, r1, #0
	cmp	r0, #0x5
	beq	.L112	@cond_branch
	ldr	r1, .L114+0x4
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x7]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xc]
	add	r2, r1, #0
	b	.L113
.L115:
	.align	2, 0
.L114:
	.word	gBagPockets+0x20
	.word	sResources
	.word	sListMenuStrbuf
	.word	sListMenuItems
	.word	gText_Close
	.word	gMultiuseListMenuTemplate
	.word	sStaticCnt
.L112:
	ldr	r0, .L116
	ldr	r1, [r0]
	ldrb	r1, [r1, #0x7]
	strh	r1, [r5, #0xc]
	add	r2, r0, #0
.L113:
	mov	r0, #0x0
	strb	r0, [r5, #0x10]
	strb	r0, [r5, #0x11]
	mov	r0, #0x9
	strb	r0, [r5, #0x12]
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	ldrb	r0, [r5, #0x16]
	mov	r3, #0x8
	neg	r3, r3
	and	r3, r3, r0
	mov	r0, #0x39
	neg	r0, r0
	and	r3, r3, r0
	mov	r0, #0x10
	orr	r3, r3, r0
	strb	r3, [r5, #0x16]
	ldrb	r1, [r5, #0x14]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r4, #0x2
	orr	r0, r0, r4
	strb	r0, [r5, #0x14]
	ldr	r1, [r2]
	ldrb	r1, [r1, #0x8]
	strh	r1, [r5, #0xe]
	ldrb	r1, [r5, #0x17]
	mov	r2, #0x40
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r4
	mov	r1, #0xf
	and	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r5, #0x14]
	mov	r0, #0x30
	strb	r0, [r5, #0x15]
	ldr	r0, .L116+0x4
	str	r0, [r5, #0x4]
	ldr	r0, .L116+0x8
	str	r0, [r5, #0x8]
	mov	r0, #0x3f
	and	r2, r2, r0
	strb	r2, [r5, #0x17]
	and	r3, r3, r0
	strb	r3, [r5, #0x16]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	sResources
	.word	BerryPouchMoveCursorFunc
	.word	BerryPouchItemPrintFunc
.Lfe11:
	.size	 SetUpListMenuTemplate,.Lfe11-SetUpListMenuTemplate
	.align	2, 0
	.type	 GetBerryNameAndIndexForMenu,function
	.thumb_func
GetBerryNameAndIndexForMenu:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	mov	r8, r0
	lsl	r5, r1, #0x10
	lsr	r5, r5, #0x10
	ldr	r4, .L119
	ldr	r1, .L119+0x4
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L119+0x8
	add	r0, r4, #0
	bl	StringAppend
	ldr	r6, .L119+0xc
	add	r1, r5, #0
	sub	r1, r1, #0x84
	add	r0, r6, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r6, #0
	bl	StringAppend
	add	r0, r5, #0
	add	r1, r6, #0
	bl	CopyItemName
	ldr	r1, .L119+0x10
	add	r0, r4, #0
	bl	StringAppend
	ldr	r1, .L119+0x14
	add	r0, r4, #0
	bl	StringAppend
	add	r0, r4, #0
	add	r1, r6, #0
	bl	StringAppend
	mov	r0, r8
	add	r1, r4, #0
	bl	StringCopy
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L120:
	.align	2, 0
.L119:
	.word	gStringVar4
	.word	gText_FontSize0
	.word	gText_NumberClear01
	.word	gStringVar1
	.word	sText_Space
	.word	gText_FontSize2
.Lfe12:
	.size	 GetBerryNameAndIndexForMenu,.Lfe12-GetBerryNameAndIndexForMenu
	.align	2, 0
	.type	 CopySelectedListMenuItemName,function
	.thumb_func
CopySelectedListMenuItemName:
	push	{lr}
	add	r3, r1, #0
	ldr	r1, .L122
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r0, #0x3
	sub	r2, r2, r0
	lsl	r2, r2, #0x2
	sub	r2, r2, r0
	ldr	r1, [r1]
	add	r1, r1, r2
	add	r0, r3, #0
	bl	StringCopy
	pop	{r0}
	bx	r0
.L123:
	.align	2, 0
.L122:
	.word	sListMenuStrbuf
.Lfe13:
	.size	 CopySelectedListMenuItemName,.Lfe13-CopySelectedListMenuItemName
	.align	2, 0
	.type	 BerryPouchMoveCursorFunc,function
	.thumb_func
BerryPouchMoveCursorFunc:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L125	@cond_branch
	mov	r0, #0xf5
	bl	PlaySE
	bl	StartBerryPouchSpriteWobbleAnim
.L125:
	ldr	r4, .L128
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x9]
	mov	r0, #0x1
	eor	r0, r0, r1
	bl	DestroyItemMenuIcon
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x7]
	cmp	r0, r5
	beq	.L126	@cond_branch
	lsl	r1, r5, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, [r4]
	ldrb	r1, [r1, #0x9]
	bl	CreateBerryPouchItemIcon
	b	.L127
.L129:
	.align	2, 0
.L128:
	.word	sResources
.L126:
	ldr	r0, .L130
	ldrb	r1, [r1, #0x9]
	bl	CreateBerryPouchItemIcon
.L127:
	ldr	r0, .L130+0x4
	ldr	r2, [r0]
	ldrb	r0, [r2, #0x9]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2, #0x9]
	add	r0, r5, #0
	bl	PrintSelectedBerryDescription
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	0x177
	.word	sResources
.Lfe14:
	.size	 BerryPouchMoveCursorFunc,.Lfe14-BerryPouchMoveCursorFunc
	.align	2, 0
	.type	 BerryPouchItemPrintFunc,function
	.thumb_func
BerryPouchItemPrintFunc:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L133	@cond_branch
	ldr	r0, .L134
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x7]
	cmp	r0, r1
	beq	.L133	@cond_branch
	lsl	r4, r1, #0x10
	lsr	r4, r4, #0x10
	mov	r0, #0x5
	add	r1, r4, #0
	bl	BagGetItemIdByPocketPosition
	mov	r0, #0x5
	add	r1, r4, #0
	bl	BagGetQuantityByPocketPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L134+0x4
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L134+0x8
	ldr	r1, .L134+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	str	r5, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	mov	r0, #0x1
	str	r0, [sp, #0x10]
	add	r0, r6, #0
	mov	r1, #0x0
	add	r2, r4, #0
	mov	r3, #0x6e
	bl	BerryPouchPrint
.L133:
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	sResources
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TimesStrVar1
.Lfe15:
	.size	 BerryPouchItemPrintFunc,.Lfe15-BerryPouchItemPrintFunc
	.align	2, 0
	.type	 BerryPouchSetArrowCursorFromListMenu,function
	.thumb_func
BerryPouchSetArrowCursorFromListMenu:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ListMenuGetYCoordForPrintingArrowCursor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	BerryPouchSetArrowCursorAt
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 BerryPouchSetArrowCursorFromListMenu,.Lfe16-BerryPouchSetArrowCursorFromListMenu
	.align	2, 0
	.type	 BerryPouchSetArrowCursorAt,function
	.thumb_func
BerryPouchSetArrowCursorAt:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0xff
	bne	.L138	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0x1
	bl	GetMenuCursorDimensionByFont
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r4, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x1
	add	r3, r5, #0
	bl	FillWindowPixelRect
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L139
.L138:
	ldr	r2, .L140
	str	r5, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r1, #0x2
	mov	r3, #0x1
	bl	BerryPouchPrint
.L139:
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L141:
	.align	2, 0
.L140:
	.word	gText_SelectorArrow2
.Lfe17:
	.size	 BerryPouchSetArrowCursorAt,.Lfe17-BerryPouchSetArrowCursorAt
	.align	2, 0
	.type	 PrintSelectedBerryDescription,function
	.thumb_func
PrintSelectedBerryDescription:
	push	{r4, lr}
	add	sp, sp, #-0x14
	add	r1, r0, #0
	ldr	r0, .L145
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x7]
	cmp	r1, r0
	beq	.L143	@cond_branch
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	ItemId_GetDescription
	add	r4, r0, #0
	b	.L144
.L146:
	.align	2, 0
.L145:
	.word	sResources
.L143:
	ldr	r4, .L147
.L144:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x2
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r0, [sp, #0x10]
	mov	r0, #0x1
	mov	r1, #0x2
	add	r2, r4, #0
	mov	r3, #0x0
	bl	BerryPouchPrint
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L148:
	.align	2, 0
.L147:
	.word	gText_TheBerryPouchWillBePutAway
.Lfe18:
	.size	 PrintSelectedBerryDescription,.Lfe18-PrintSelectedBerryDescription
	.align	2, 0
	.type	 SetDescriptionWindowBorderPalette,function
	.thumb_func
SetDescriptionWindowBorderPalette:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r1, #0x4
	str	r1, [sp]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x1e
	bl	SetBgTilemapPalette
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 SetDescriptionWindowBorderPalette,.Lfe19-SetDescriptionWindowBorderPalette
	.align	2, 0
	.type	 CreateScrollIndicatorArrows_BerryPouchList,function
	.thumb_func
CreateScrollIndicatorArrows_BerryPouchList:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r2, .L154
	ldrb	r0, [r2, #0x4]
	cmp	r0, #0x5
	beq	.L151	@cond_branch
	ldr	r4, .L154+0x4
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x7]
	ldrb	r1, [r1, #0x8]
	sub	r0, r0, r1
	add	r0, r0, #0x1
	b	.L153
.L155:
	.align	2, 0
.L154:
	.word	sStaticCnt
	.word	sResources
.L151:
	ldr	r4, .L156
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x7]
	ldrb	r1, [r1, #0x8]
	sub	r0, r0, r1
.L153:
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r2, #0
	add	r0, r0, #0xa
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xa0
	mov	r2, #0x8
	mov	r3, #0x78
	bl	AddScrollIndicatorArrowPairParameterized
	ldr	r1, [r4]
	strb	r0, [r1, #0x6]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L157:
	.align	2, 0
.L156:
	.word	sResources
.Lfe20:
	.size	 CreateScrollIndicatorArrows_BerryPouchList,.Lfe20-CreateScrollIndicatorArrows_BerryPouchList
	.align	2, 0
	.type	 CreateScrollIndicatorArrows_TossQuantity,function
	.thumb_func
CreateScrollIndicatorArrows_TossQuantity:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L159
	ldr	r1, [r4]
	mov	r0, #0x1
	strh	r0, [r1, #0x4]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r1, r1, #0x4
	str	r1, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xd4
	mov	r2, #0x78
	mov	r3, #0x98
	bl	AddScrollIndicatorArrowPairParameterized
	ldr	r1, [r4]
	strb	r0, [r1, #0x6]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L160:
	.align	2, 0
.L159:
	.word	sResources
.Lfe21:
	.size	 CreateScrollIndicatorArrows_TossQuantity,.Lfe21-CreateScrollIndicatorArrows_TossQuantity
	.align	2, 0
	.type	 CreateScrollIndicatorArrows_SellQuantity,function
	.thumb_func
CreateScrollIndicatorArrows_SellQuantity:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L162
	ldr	r1, [r4]
	mov	r0, #0x1
	strh	r0, [r1, #0x4]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r1, r1, #0x4
	str	r1, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0x98
	mov	r2, #0x48
	mov	r3, #0x68
	bl	AddScrollIndicatorArrowPairParameterized
	ldr	r1, [r4]
	strb	r0, [r1, #0x6]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L163:
	.align	2, 0
.L162:
	.word	sResources
.Lfe22:
	.size	 CreateScrollIndicatorArrows_SellQuantity,.Lfe22-CreateScrollIndicatorArrows_SellQuantity
	.align	2, 0
	.type	 DestroyScrollIndicatorArrows,function
	.thumb_func
DestroyScrollIndicatorArrows:
	push	{r4, lr}
	ldr	r4, .L166
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x6]
	cmp	r0, #0xff
	beq	.L165	@cond_branch
	bl	RemoveScrollIndicatorArrowPair
	ldr	r1, [r4]
	mov	r0, #0xff
	strb	r0, [r1, #0x6]
.L165:
	pop	{r4}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	sResources
.Lfe23:
	.size	 DestroyScrollIndicatorArrows,.Lfe23-DestroyScrollIndicatorArrows
	.align	2, 0
	.type	 PrintBerryPouchHeaderCentered,function
	.thumb_func
PrintBerryPouchHeaderCentered:
	push	{r4, lr}
	add	sp, sp, #-0x14
	ldr	r4, .L169
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x0
	bl	GetStringWidth
	mov	r3, #0x48
	sub	r3, r3, r0
	lsr	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r0, [sp, #0x10]
	mov	r0, #0x2
	mov	r1, #0x1
	add	r2, r4, #0
	bl	BerryPouchPrint
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gText_BerryPouch
.Lfe24:
	.size	 PrintBerryPouchHeaderCentered,.Lfe24-PrintBerryPouchHeaderCentered
	.align	2, 0
	.globl	BerryPouch_CursorResetToTop
	.type	 BerryPouch_CursorResetToTop,function
	.thumb_func
BerryPouch_CursorResetToTop:
	ldr	r1, .L172
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	strh	r0, [r1, #0xa]
	bx	lr
.L173:
	.align	2, 0
.L172:
	.word	sStaticCnt
.Lfe25:
	.size	 BerryPouch_CursorResetToTop,.Lfe25-BerryPouch_CursorResetToTop
	.align	2, 0
	.type	 SanitizeListMenuSelectionParams,function
	.thumb_func
SanitizeListMenuSelectionParams:
	push	{r4, lr}
	ldr	r0, .L181
	ldrb	r1, [r0, #0x4]
	add	r4, r0, #0
	cmp	r1, #0x5
	beq	.L175	@cond_branch
	ldr	r0, .L181+0x4
	ldr	r1, [r0]
	ldrb	r1, [r1, #0x7]
	add	r2, r1, #0x1
	add	r1, r0, #0
	b	.L176
.L182:
	.align	2, 0
.L181:
	.word	sStaticCnt
	.word	sResources
.L175:
	ldr	r1, .L183
	ldr	r0, [r1]
	ldrb	r2, [r0, #0x7]
.L176:
	ldrh	r0, [r4, #0xa]
	cmp	r0, #0
	beq	.L177	@cond_branch
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x8]
	add	r0, r0, r1
	cmp	r0, r2
	ble	.L177	@cond_branch
	sub	r0, r2, r1
	strh	r0, [r4, #0xa]
.L177:
	add	r3, r4, #0
	ldrh	r0, [r3, #0xa]
	ldrh	r1, [r3, #0x8]
	add	r0, r0, r1
	cmp	r0, r2
	blt	.L178	@cond_branch
	cmp	r2, #0x1
	bhi	.L179	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0x8]
	b	.L178
.L184:
	.align	2, 0
.L183:
	.word	sResources
.L179:
	sub	r0, r2, #0x1
	strh	r0, [r4, #0x8]
.L178:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 SanitizeListMenuSelectionParams,.Lfe26-SanitizeListMenuSelectionParams
	.align	2, 0
	.type	 UpdateListMenuScrollOffset,function
	.thumb_func
UpdateListMenuScrollOffset:
	push	{r4, r5, r6, lr}
	ldr	r0, .L196
	ldrb	r1, [r0, #0x4]
	add	r5, r0, #0
	cmp	r1, #0x5
	beq	.L186	@cond_branch
	ldr	r1, .L196+0x4
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x7]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	b	.L195
.L197:
	.align	2, 0
.L196:
	.word	sStaticCnt
	.word	sResources
.L186:
	ldr	r1, .L198
	ldr	r0, [r1]
	ldrb	r4, [r0, #0x7]
.L195:
	add	r6, r1, #0
	ldrh	r0, [r5, #0x8]
	cmp	r0, #0x4
	bls	.L188	@cond_branch
	mov	r3, #0x0
	sub	r0, r0, #0x4
	cmp	r3, r0
	bgt	.L188	@cond_branch
	ldrh	r0, [r5, #0xa]
	ldr	r1, [r6]
	ldrb	r1, [r1, #0x8]
	add	r0, r0, r1
	cmp	r0, r4
	beq	.L188	@cond_branch
	add	r2, r5, #0
.L191:
	ldrh	r0, [r2, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	ldrh	r0, [r2, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xa]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldrh	r0, [r2, #0x8]
	sub	r0, r0, #0x4
	cmp	r3, r0
	bgt	.L188	@cond_branch
	ldrh	r0, [r5, #0xa]
	ldr	r1, [r6]
	ldrb	r1, [r1, #0x8]
	add	r0, r0, r1
	cmp	r0, r4
	bne	.L191	@cond_branch
.L188:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	sResources
.Lfe27:
	.size	 UpdateListMenuScrollOffset,.Lfe27-UpdateListMenuScrollOffset
	.align	2, 0
	.type	 BerryPouch_DestroyResources,function
	.thumb_func
BerryPouch_DestroyResources:
	push	{lr}
	ldr	r0, .L204
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L201	@cond_branch
	bl	Free
.L201:
	ldr	r0, .L204+0x4
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L202	@cond_branch
	bl	Free
.L202:
	ldr	r0, .L204+0x8
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L203	@cond_branch
	bl	Free
.L203:
	bl	FreeAllWindowBuffers
	pop	{r0}
	bx	r0
.L205:
	.align	2, 0
.L204:
	.word	sResources
	.word	sListMenuItems
	.word	sListMenuStrbuf
.Lfe28:
	.size	 BerryPouch_DestroyResources,.Lfe28-BerryPouch_DestroyResources
	.align	2, 0
	.globl	BerryPouch_StartFadeToExitCallback
	.type	 BerryPouch_StartFadeToExitCallback,function
	.thumb_func
BerryPouch_StartFadeToExitCallback:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x2
	neg	r1, r1
	mov	r2, #0x0
	str	r2, [sp]
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L207
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L207+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L208:
	.align	2, 0
.L207:
	.word	gTasks
	.word	Task_BerryPouchFadeToExitCallback
.Lfe29:
	.size	 BerryPouch_StartFadeToExitCallback,.Lfe29-BerryPouch_StartFadeToExitCallback
	.align	2, 0
	.type	 Task_BerryPouchFadeToExitCallback,function
	.thumb_func
Task_BerryPouchFadeToExitCallback:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L213
	add	r2, r0, r1
	ldr	r0, .L213+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L210	@cond_branch
	ldrb	r0, [r2]
	ldr	r4, .L213+0x8
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	DestroyListMenuTask
	ldr	r0, .L213+0xc
	ldr	r0, [r0]
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L211	@cond_branch
	bl	SetMainCallback2
	b	.L212
.L214:
	.align	2, 0
.L213:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	sStaticCnt+0xa
	.word	sResources
.L211:
	add	r0, r4, #0
	sub	r0, r0, #0xa
	ldr	r0, [r0]
	bl	SetMainCallback2
.L212:
	bl	DestroyScrollIndicatorArrows
	bl	BerryPouch_DestroyResources
	add	r0, r5, #0
	bl	DestroyTask
.L210:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 Task_BerryPouchFadeToExitCallback,.Lfe30-Task_BerryPouchFadeToExitCallback
	.align	2, 0
	.type	 SortAndCountBerries,function
	.thumb_func
SortAndCountBerries:
	push	{r4, lr}
	ldr	r4, .L226
	add	r0, r4, #0
	bl	SortAndCompactBagPocket
	ldr	r3, .L226+0x4
	ldr	r1, [r3]
	mov	r0, #0x0
	strb	r0, [r1, #0x7]
	mov	r2, #0x0
	ldrb	r0, [r4, #0x4]
	cmp	r2, r0
	bcs	.L217	@cond_branch
	ldr	r0, [r4]
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L217	@cond_branch
.L220:
	ldr	r0, [r3]
	ldrb	r1, [r0, #0x7]
	add	r1, r1, #0x1
	strb	r1, [r0, #0x7]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldrb	r0, [r4, #0x4]
	cmp	r2, r0
	bcs	.L217	@cond_branch
	ldr	r0, [r4]
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L220	@cond_branch
.L217:
	ldr	r0, .L226+0x8
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x5
	beq	.L222	@cond_branch
	ldr	r0, .L226+0x4
	ldr	r1, [r0]
	ldrb	r1, [r1, #0x7]
	add	r2, r1, #0x1
	add	r1, r0, #0
	b	.L223
.L227:
	.align	2, 0
.L226:
	.word	gBagPockets+0x20
	.word	sResources
	.word	sStaticCnt
.L222:
	ldr	r1, .L228
	ldr	r0, [r1]
	ldrb	r2, [r0, #0x7]
.L223:
	cmp	r2, #0x7
	bls	.L224	@cond_branch
	ldr	r1, [r1]
	mov	r0, #0x7
	strb	r0, [r1, #0x8]
	b	.L225
.L229:
	.align	2, 0
.L228:
	.word	sResources
.L224:
	ldr	r0, [r1]
	strb	r2, [r0, #0x8]
.L225:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 SortAndCountBerries,.Lfe31-SortAndCountBerries
	.align	2, 0
	.globl	BerryPouch_SetExitCallback
	.type	 BerryPouch_SetExitCallback,function
	.thumb_func
BerryPouch_SetExitCallback:
	ldr	r1, .L231
	ldr	r1, [r1]
	str	r0, [r1]
	bx	lr
.L232:
	.align	2, 0
.L231:
	.word	sResources
.Lfe32:
	.size	 BerryPouch_SetExitCallback,.Lfe32-BerryPouch_SetExitCallback
	.align	2, 0
	.globl	InitTossQuantitySelectUI
	.type	 InitTossQuantitySelectUI,function
	.thumb_func
InitTossQuantitySelectUI:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #-0x14
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L234
	add	r4, r4, r0
	mov	r0, #0x8
	bl	GetOrCreateVariableWindow
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	ldr	r1, .L234+0x4
	mov	sl, r1
	bl	CopySelectedListMenuItemName
	ldr	r0, .L234+0x8
	mov	r9, r0
	add	r1, r6, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x2
	str	r0, [sp]
	mov	r6, #0x1
	str	r6, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r1, #0x0
	mov	r8, r1
	str	r1, [sp, #0xc]
	str	r6, [sp, #0x10]
	add	r0, r5, #0
	mov	r1, #0x2
	mov	r2, r9
	mov	r3, #0x0
	bl	BerryPouchPrint
	mov	r0, #0x0
	bl	GetOrCreateVariableWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, sl
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L234+0xc
	mov	r0, r9
	bl	StringExpandPlaceholders
	mov	r0, #0xa
	str	r0, [sp]
	str	r6, [sp, #0x4]
	mov	r0, r8
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r6, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, r9
	mov	r3, #0x4
	bl	BerryPouchPrint
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L235:
	.align	2, 0
.L234:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TimesStrVar1
.Lfe33:
	.size	 InitTossQuantitySelectUI,.Lfe33-InitTossQuantitySelectUI
	.align	2, 0
	.type	 PrintxQuantityOnWindow,function
	.thumb_func
PrintxQuantityOnWindow:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	GetVariableWindowId
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r6, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L237
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r1, r4, #0
	mov	r2, #0x2
	add	r3, r5, #0
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L237+0x4
	ldr	r1, .L237+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0xa
	str	r0, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	add	r0, r6, #0
	mov	r1, #0x0
	add	r2, r4, #0
	mov	r3, #0x4
	bl	BerryPouchPrint
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L238:
	.align	2, 0
.L237:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TimesStrVar1
.Lfe34:
	.size	 PrintxQuantityOnWindow,.Lfe34-PrintxQuantityOnWindow
	.align	2, 0
	.type	 Task_BerryPouchMain,function
	.thumb_func
Task_BerryPouchMain:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L256
	add	r7, r0, r1
	ldr	r0, .L256+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0
	beq	.LCB2215
	b	.L239	@long jump
.LCB2215:
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB2221
	b	.L239	@long jump
.LCB2221:
	ldrb	r0, [r7]
	bl	ListMenu_ProcessInput
	add	r5, r0, #0
	ldrb	r0, [r7]
	ldr	r4, .L256+0x8
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	ListMenuGetScrollAndRow
	ldr	r0, .L256+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L241	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0xa
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0x1
	bne	.L241	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L256+0x10
	mov	r1, r8
	strh	r1, [r0]
	b	.L253
.L257:
	.align	2, 0
.L256:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	sStaticCnt+0xa
	.word	gMain
	.word	gSpecialVar_ItemId
.L241:
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L245	@cond_branch
	add	r0, r0, #0x1
	cmp	r5, r0
	bne	.L247	@cond_branch
	b	.L239
.L245:
	ldr	r0, .L258
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x5
	beq	.L239	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	b	.L254
.L259:
	.align	2, 0
.L258:
	.word	sStaticCnt
.L247:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r3, .L260
	mov	r8, r3
	ldrb	r0, [r3, #0x4]
	cmp	r0, #0x5
	bne	.L248	@cond_branch
	lsl	r1, r5, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	ldr	r1, .L260+0x4
	b	.L255
.L261:
	.align	2, 0
.L260:
	.word	sStaticCnt
	.word	gSpecialVar_ItemId
.L248:
	ldr	r0, .L262
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x7]
	cmp	r5, r0
	bne	.L250	@cond_branch
.L254:
	ldr	r1, .L262+0x4
	mov	r0, #0x0
.L255:
	strh	r0, [r1]
.L253:
	add	r0, r6, #0
	bl	BerryPouch_StartFadeToExitCallback
	b	.L239
.L263:
	.align	2, 0
.L262:
	.word	sResources
	.word	gSpecialVar_ItemId
.L250:
	bl	DestroyScrollIndicatorArrows
	mov	r0, #0x1
	bl	SetDescriptionWindowBorderPalette
	ldrb	r0, [r7]
	mov	r1, #0x2
	bl	BerryPouchSetArrowCursorFromListMenu
	strh	r5, [r7, #0x2]
	lsl	r4, r5, #0x10
	lsr	r4, r4, #0x10
	mov	r0, #0x5
	add	r1, r4, #0
	bl	BagGetQuantityByPocketPosition
	strh	r0, [r7, #0x4]
	mov	r0, #0x5
	add	r1, r4, #0
	bl	BagGetItemIdByPocketPosition
	ldr	r1, .L264
	strh	r0, [r1]
	ldr	r0, .L264+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r2, .L264+0x8
	mov	r3, r8
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	str	r0, [r1]
.L239:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	gSpecialVar_ItemId
	.word	gTasks
	.word	sBerryPouchContextMenuTasks
.Lfe35:
	.size	 Task_BerryPouchMain,.Lfe35-Task_BerryPouchMain
	.align	2, 0
	.type	 Task_CleanUpAndReturnToMain,function
	.thumb_func
Task_CleanUpAndReturnToMain:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	SetDescriptionWindowBorderPalette
	bl	CreateScrollIndicatorArrows_BerryPouchList
	ldr	r1, .L267
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L267+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	gTasks
	.word	Task_BerryPouchMain
.Lfe36:
	.size	 Task_CleanUpAndReturnToMain,.Lfe36-Task_CleanUpAndReturnToMain
	.align	2, 0
	.type	 CreateNormalContextMenu,function
	.thumb_func
CreateNormalContextMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L278
	add	r7, r1, r0
	ldr	r0, .L278+0x4
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x4
	bne	.L270	@cond_branch
	ldr	r1, .L278+0x8
	ldr	r0, .L278+0xc
	str	r0, [r1]
	ldr	r1, .L278+0x10
	mov	r0, #0x3
	b	.L277
.L279:
	.align	2, 0
.L278:
	.word	gTasks+0x8
	.word	sStaticCnt
	.word	sContextMenuOptions
	.word	sOptions_UseToss_Exit
	.word	sContextMenuNumOptions
.L270:
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L273	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L272	@cond_branch
.L273:
	ldr	r0, .L280
	ldrh	r0, [r0]
	bl	itemid_link_can_give_berry
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L274	@cond_branch
	ldr	r1, .L280+0x4
	ldr	r0, .L280+0x8
	str	r0, [r1]
	ldr	r1, .L280+0xc
	mov	r0, #0x1
	b	.L277
.L281:
	.align	2, 0
.L280:
	.word	gSpecialVar_ItemId
	.word	sContextMenuOptions
	.word	sOptions_Exit
	.word	sContextMenuNumOptions
.L274:
	ldr	r1, .L282
	ldr	r0, .L282+0x4
	str	r0, [r1]
	ldr	r1, .L282+0x8
	mov	r0, #0x2
	b	.L277
.L283:
	.align	2, 0
.L282:
	.word	sContextMenuOptions
	.word	sOptions_GiveExit
	.word	sContextMenuNumOptions
.L272:
	ldr	r1, .L284
	ldr	r0, .L284+0x4
	str	r0, [r1]
	ldr	r1, .L284+0x8
	mov	r0, #0x4
.L277:
	strb	r0, [r1]
	mov	r8, r1
	mov	r1, r8
	ldrb	r0, [r1]
	add	r0, r0, #0x9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetOrCreateVariableWindow
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, #0x2
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x2
	mov	r1, #0x2
	bl	GetFontAttribute
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0x1
	bl	GetFontAttribute
	add	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r4, [sp]
	str	r0, [sp, #0x4]
	mov	r1, r8
	ldrb	r0, [r1]
	str	r0, [sp, #0x8]
	ldr	r0, .L284+0xc
	str	r0, [sp, #0xc]
	ldr	r0, .L284
	ldr	r0, [r0]
	str	r0, [sp, #0x10]
	add	r0, r6, #0
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x2
	bl	AddItemMenuActionTextPrinters
	mov	r0, #0x2
	mov	r1, #0x1
	bl	GetFontAttribute
	add	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r1, r8
	ldrb	r0, [r1]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r8, r0
	str	r0, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x2
	bl	Menu_InitCursor
	mov	r0, #0x6
	bl	GetOrCreateVariableWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, .L284+0x10
	bl	CopySelectedListMenuItemName
	ldr	r5, .L284+0x14
	ldr	r1, .L284+0x18
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x2
	str	r0, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, r8
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	BerryPouchPrint
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L285:
	.align	2, 0
.L284:
	.word	sContextMenuOptions
	.word	sOptions_UseGiveTossExit
	.word	sContextMenuNumOptions
	.word	sContextMenuActions
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_Var1IsSelected
.Lfe37:
	.size	 CreateNormalContextMenu,.Lfe37-CreateNormalContextMenu
	.align	2, 0
	.type	 Task_NormalContextMenu,function
	.thumb_func
Task_NormalContextMenu:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	CreateNormalContextMenu
	ldr	r1, .L287
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L287+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L288:
	.align	2, 0
.L287:
	.word	gTasks
	.word	Task_NormalContextMenu_HandleInput
.Lfe38:
	.size	 Task_NormalContextMenu,.Lfe38-Task_NormalContextMenu
	.align	2, 0
	.type	 Task_NormalContextMenu_HandleInput,function
	.thumb_func
Task_NormalContextMenu_HandleInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L290	@cond_branch
	bl	Menu_ProcessInputNoWrapAround
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L290	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L294	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L296
	ldr	r1, [r0, #0x1c]
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L290
.L297:
	.align	2, 0
.L296:
	.word	sContextMenuActions
.L294:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L298
	ldr	r0, .L298+0x4
	ldr	r0, [r0]
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	_call_via_r1
.L290:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L299:
	.align	2, 0
.L298:
	.word	sContextMenuActions
	.word	sContextMenuOptions
.Lfe39:
	.size	 Task_NormalContextMenu_HandleInput,.Lfe39-Task_NormalContextMenu_HandleInput
	.align	2, 0
	.type	 Task_BerryPouch_Use,function
	.thumb_func
Task_BerryPouch_Use:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L307
	ldrb	r0, [r0]
	add	r0, r0, #0x9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyVariableWindow
	mov	r0, #0x6
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L307+0x4
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x4
	bne	.L301	@cond_branch
	ldr	r4, .L307+0x8
	ldrh	r0, [r4]
	bl	ItemId_GetBattleFunc
	cmp	r0, #0
	bne	.L302	@cond_branch
	add	r0, r5, #0
	bl	FieldUseFunc_OakStopsYou
	b	.L304
.L308:
	.align	2, 0
.L307:
	.word	sContextMenuNumOptions
	.word	sStaticCnt
	.word	gSpecialVar_ItemId
.L302:
	ldrh	r0, [r4]
	bl	ItemId_GetBattleFunc
	add	r1, r0, #0
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L304
.L301:
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L305	@cond_branch
	ldr	r0, .L309
	ldrh	r0, [r0]
	bl	ItemId_GetType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L305	@cond_branch
	add	r0, r5, #0
	bl	Task_Give_PrintThereIsNoPokemon
	b	.L304
.L310:
	.align	2, 0
.L309:
	.word	gSpecialVar_ItemId
.L305:
	ldr	r0, .L311
	ldrh	r0, [r0]
	bl	ItemId_GetFieldFunc
	add	r1, r0, #0
	add	r0, r5, #0
	bl	_call_via_r1
.L304:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	gSpecialVar_ItemId
.Lfe40:
	.size	 Task_BerryPouch_Use,.Lfe40-Task_BerryPouch_Use
	.align	2, 0
	.type	 Task_BerryPouch_Toss,function
	.thumb_func
Task_BerryPouch_Toss:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r7, r0, #0x3
	ldr	r0, .L316
	mov	r8, r0
	add	r5, r7, r0
	ldr	r4, .L316+0x4
	ldrb	r0, [r4]
	add	r0, r0, #0x9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetVariableWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	mov	r0, #0x6
	bl	GetVariableWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	add	r0, r0, #0x9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyVariableWindow
	mov	r0, #0x6
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	strh	r0, [r5, #0x10]
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	bne	.L314	@cond_branch
	add	r0, r6, #0
	bl	Task_AskTossMultiple
	b	.L315
.L317:
	.align	2, 0
.L316:
	.word	gTasks+0x8
	.word	sContextMenuNumOptions
.L314:
	ldr	r1, .L318
	add	r0, r6, #0
	bl	InitTossQuantitySelectUI
	bl	CreateScrollIndicatorArrows_TossQuantity
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	ldr	r1, .L318+0x4
	str	r1, [r0]
.L315:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	gText_TossOutHowManyStrVar1s
	.word	Task_Toss_SelectMultiple
.Lfe41:
	.size	 Task_BerryPouch_Toss,.Lfe41-Task_BerryPouch_Toss
	.align	2, 0
	.type	 Task_AskTossMultiple,function
	.thumb_func
Task_AskTossMultiple:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	ldr	r0, .L321
	add	r1, r1, r0
	ldr	r0, .L321+0x4
	mov	r2, #0x10
	ldrsh	r1, [r1, r2]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L321+0x8
	ldr	r1, .L321+0xc
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x7
	bl	GetOrCreateVariableWindow
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	str	r1, [sp]
	mov	r2, #0x1
	str	r2, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	str	r1, [sp, #0xc]
	str	r2, [sp, #0x10]
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	BerryPouchPrint
	ldr	r1, .L321+0x10
	add	r0, r4, #0
	bl	CreateYesNoMenuWin3
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	gTasks+0x8
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_ThrowAwayStrVar2OfThisItemQM
	.word	sYesNoFuncs_Toss
.Lfe42:
	.size	 Task_AskTossMultiple,.Lfe42-Task_AskTossMultiple
	.align	2, 0
	.type	 Task_TossNo,function
	.thumb_func
Task_TossNo:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L324
	add	r4, r4, r0
	mov	r0, #0x7
	bl	DestroyVariableWindow
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	BerryPouchSetArrowCursorFromListMenu
	add	r0, r5, #0
	bl	Task_CleanUpAndReturnToMain
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L325:
	.align	2, 0
.L324:
	.word	gTasks+0x8
.Lfe43:
	.size	 Task_TossNo,.Lfe43-Task_TossNo
	.align	2, 0
	.type	 Task_Toss_SelectMultiple,function
	.thumb_func
Task_Toss_SelectMultiple:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L332
	add	r4, r0, r1
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldrh	r1, [r4, #0x4]
	bl	AdjustQuantityAccordingToDPadInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L327	@cond_branch
	mov	r0, #0x10
	ldrsh	r1, [r4, r0]
	mov	r0, #0x0
	mov	r2, #0x3
	bl	PrintxQuantityOnWindow
	b	.L328
.L333:
	.align	2, 0
.L332:
	.word	gTasks+0x8
.L327:
	ldr	r0, .L334
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L329	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x8
	bl	GetVariableWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	mov	r0, #0x8
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	bl	DestroyScrollIndicatorArrows
	add	r0, r5, #0
	bl	Task_AskTossMultiple
	b	.L328
.L335:
	.align	2, 0
.L334:
	.word	gMain
.L329:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L328	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x8
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	BerryPouchSetArrowCursorFromListMenu
	bl	DestroyScrollIndicatorArrows
	add	r0, r6, #0
	bl	Task_CleanUpAndReturnToMain
.L328:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 Task_Toss_SelectMultiple,.Lfe44-Task_Toss_SelectMultiple
	.align	2, 0
	.type	 Task_TossYes,function
	.thumb_func
Task_TossYes:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r6, .L337
	add	r5, r4, r6
	mov	r0, #0x7
	bl	DestroyVariableWindow
	mov	r1, #0x2
	ldrsh	r0, [r5, r1]
	ldr	r1, .L337+0x4
	bl	CopySelectedListMenuItemName
	ldr	r0, .L337+0x8
	mov	r2, #0x10
	ldrsh	r1, [r5, r2]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L337+0xc
	ldr	r1, .L337+0x10
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x9
	bl	GetOrCreateVariableWindow
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	str	r1, [sp]
	mov	r2, #0x1
	str	r2, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	str	r1, [sp, #0xc]
	str	r2, [sp, #0x10]
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	BerryPouchPrint
	sub	r6, r6, #0x8
	add	r4, r4, r6
	ldr	r0, .L337+0x14
	str	r0, [r4]
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_ThrewAwayStrVar2StrVar1s
	.word	Task_WaitButtonThenTossBerries
.Lfe45:
	.size	 Task_TossYes,.Lfe45-Task_TossYes
	.align	2, 0
	.type	 Task_WaitButtonThenTossBerries,function
	.thumb_func
Task_WaitButtonThenTossBerries:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r6, r0, #0
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L342
	add	r5, r0, r1
	ldr	r0, .L342+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L341	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L340	@cond_branch
.L341:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L342+0x8
	ldrh	r0, [r0]
	ldrh	r1, [r5, #0x10]
	bl	RemoveBagItem
	mov	r0, #0x9
	bl	DestroyVariableWindow
	ldrb	r0, [r5]
	ldr	r4, .L342+0xc
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	DestroyListMenuTask
	bl	SortAndCountBerries
	bl	SanitizeListMenuSelectionParams
	bl	SetUpListMenuTemplate
	ldr	r0, .L342+0x10
	sub	r4, r4, #0xa
	ldrh	r1, [r4, #0xa]
	ldrh	r2, [r4, #0x8]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5]
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	BerryPouchSetArrowCursorFromListMenu
	add	r0, r6, #0
	bl	Task_CleanUpAndReturnToMain
.L340:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	gTasks+0x8
	.word	gMain
	.word	gSpecialVar_ItemId
	.word	sStaticCnt+0xa
	.word	gMultiuseListMenuTemplate
.Lfe46:
	.size	 Task_WaitButtonThenTossBerries,.Lfe46-Task_WaitButtonThenTossBerries
	.align	2, 0
	.type	 Task_BerryPouch_Give,function
	.thumb_func
Task_BerryPouch_Give:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L347
	ldrb	r0, [r0]
	add	r0, r0, #0x9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyVariableWindow
	mov	r0, #0x6
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L345	@cond_branch
	add	r0, r4, #0
	bl	Task_Give_PrintThereIsNoPokemon
	b	.L346
.L348:
	.align	2, 0
.L347:
	.word	sContextMenuNumOptions
.L345:
	ldr	r0, .L349
	ldr	r1, [r0]
	ldr	r0, .L349+0x4
	str	r0, [r1]
	ldr	r1, .L349+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L349+0xc
	str	r1, [r0]
.L346:
	pop	{r4}
	pop	{r0}
	bx	r0
.L350:
	.align	2, 0
.L349:
	.word	sResources
	.word	CB2_ChooseMonToGiveItem
	.word	gTasks
	.word	BerryPouch_StartFadeToExitCallback
.Lfe47:
	.size	 Task_BerryPouch_Give,.Lfe47-Task_BerryPouch_Give
	.align	2, 0
	.type	 Task_Give_PrintThereIsNoPokemon,function
	.thumb_func
Task_Give_PrintThereIsNoPokemon:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L352
	ldr	r3, .L352+0x4
	mov	r1, #0x2
	bl	DisplayItemMessageInBerryPouch
	pop	{r0}
	bx	r0
.L353:
	.align	2, 0
.L352:
	.word	gText_ThereIsNoPokemon
	.word	Task_WaitButtonBeforeDialogueWindowDestruction
.Lfe48:
	.size	 Task_Give_PrintThereIsNoPokemon,.Lfe48-Task_Give_PrintThereIsNoPokemon
	.align	2, 0
	.type	 Task_WaitButtonBeforeDialogueWindowDestruction,function
	.thumb_func
Task_WaitButtonBeforeDialogueWindowDestruction:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L356
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L355	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu
.L355:
	pop	{r4}
	pop	{r0}
	bx	r0
.L357:
	.align	2, 0
.L356:
	.word	gMain
.Lfe49:
	.size	 Task_WaitButtonBeforeDialogueWindowDestruction,.Lfe49-Task_WaitButtonBeforeDialogueWindowDestruction
	.align	2, 0
	.globl	Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu
	.type	 Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu,function
	.thumb_func
Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	ldr	r0, .L359
	add	r5, r5, r0
	mov	r0, #0x5
	bl	TryDestroyVariableWindow
	ldrb	r0, [r5]
	ldr	r4, .L359+0x4
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	DestroyListMenuTask
	bl	SortAndCountBerries
	bl	SanitizeListMenuSelectionParams
	bl	SetUpListMenuTemplate
	ldr	r0, .L359+0x8
	sub	r4, r4, #0xa
	ldrh	r1, [r4, #0xa]
	ldrh	r2, [r4, #0x8]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5]
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	BerryPouchSetArrowCursorFromListMenu
	add	r0, r6, #0
	bl	Task_CleanUpAndReturnToMain
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L360:
	.align	2, 0
.L359:
	.word	gTasks+0x8
	.word	sStaticCnt+0xa
	.word	gMultiuseListMenuTemplate
.Lfe50:
	.size	 Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu,.Lfe50-Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu
	.align	2, 0
	.type	 Task_BerryPouch_Exit,function
	.thumb_func
Task_BerryPouch_Exit:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L362
	ldrb	r0, [r0]
	add	r0, r0, #0x9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyVariableWindow
	mov	r0, #0x6
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L362+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x1
	bl	BerryPouchSetArrowCursorFromListMenu
	add	r0, r4, #0
	bl	Task_CleanUpAndReturnToMain
	pop	{r4}
	pop	{r0}
	bx	r0
.L363:
	.align	2, 0
.L362:
	.word	sContextMenuNumOptions
	.word	gTasks
.Lfe51:
	.size	 Task_BerryPouch_Exit,.Lfe51-Task_BerryPouch_Exit
	.align	2, 0
	.type	 Task_ContextMenu_FromPartyGiveMenu,function
	.thumb_func
Task_ContextMenu_FromPartyGiveMenu:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r6, r0, #0x3
	ldr	r7, .L367
	add	r0, r6, r7
	ldrh	r1, [r0, #0x2]
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	itemid_link_can_give_berry
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L365	@cond_branch
	ldr	r1, .L367+0x4
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r4, .L367+0x8
	ldr	r1, .L367+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r3, .L367+0x10
	add	r0, r5, #0
	mov	r1, #0x2
	add	r2, r4, #0
	bl	DisplayItemMessageInBerryPouch
	b	.L366
.L368:
	.align	2, 0
.L367:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TheStrVar1CantBeHeldHere
	.word	Task_WaitButtonBeforeDialogueWindowDestruction
.L365:
	ldr	r0, .L369
	ldr	r1, [r0]
	ldr	r0, .L369+0x4
	str	r0, [r1]
	add	r0, r7, #0
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L369+0x8
	str	r1, [r0]
.L366:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L370:
	.align	2, 0
.L369:
	.word	sResources
	.word	CB2_GiveHoldItem
	.word	BerryPouch_StartFadeToExitCallback
.Lfe52:
	.size	 Task_ContextMenu_FromPartyGiveMenu,.Lfe52-Task_ContextMenu_FromPartyGiveMenu
	.align	2, 0
	.type	 Task_ContextMenu_FromPokemonPC,function
	.thumb_func
Task_ContextMenu_FromPokemonPC:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L372
	ldr	r2, [r1]
	ldr	r1, .L372+0x4
	str	r1, [r2]
	ldr	r2, .L372+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L372+0xc
	str	r0, [r1]
	bx	lr
.L373:
	.align	2, 0
.L372:
	.word	sResources
	.word	CB2_ReturnToPokeStorage
	.word	gTasks
	.word	BerryPouch_StartFadeToExitCallback
.Lfe53:
	.size	 Task_ContextMenu_FromPokemonPC,.Lfe53-Task_ContextMenu_FromPokemonPC
	.align	2, 0
	.type	 Task_ContextMenu_Sell,function
	.thumb_func
Task_ContextMenu_Sell:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L380
	add	r4, r0, r1
	ldr	r6, .L380+0x4
	ldrh	r0, [r6]
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L375	@cond_branch
	ldrh	r0, [r6]
	ldr	r1, .L380+0x8
	bl	CopyItemName
	ldr	r4, .L380+0xc
	ldr	r1, .L380+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	bl	GetDialogBoxFontId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L380+0x14
	add	r0, r5, #0
	add	r2, r4, #0
	bl	DisplayItemMessageInBerryPouch
	b	.L376
.L381:
	.align	2, 0
.L380:
	.word	gTasks+0x8
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_OhNoICantBuyThat
	.word	Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu
.L375:
	mov	r0, #0x1
	strh	r0, [r4, #0x10]
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	bne	.L377	@cond_branch
	bl	PrintMoneyInWin2
	add	r0, r5, #0
	bl	Task_AskSellMultiple
	b	.L376
.L377:
	cmp	r0, #0x63
	ble	.L379	@cond_branch
	mov	r0, #0x63
	strh	r0, [r4, #0x4]
.L379:
	ldrh	r0, [r6]
	ldr	r1, .L382
	bl	CopyItemName
	ldr	r4, .L382+0x4
	ldr	r1, .L382+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	bl	GetDialogBoxFontId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L382+0xc
	add	r0, r7, #0
	add	r2, r4, #0
	bl	DisplayItemMessageInBerryPouch
.L376:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_HowManyWouldYouLikeToSell
	.word	Task_Sell_PrintSelectMultipleUI
.Lfe54:
	.size	 Task_ContextMenu_Sell,.Lfe54-Task_ContextMenu_Sell
	.align	2, 0
	.type	 Task_AskSellMultiple,function
	.thumb_func
Task_AskSellMultiple:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L385
	add	r4, r4, r0
	ldr	r6, .L385+0x4
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mov	r2, #0x10
	ldrsh	r1, [r4, r2]
	mul	r1, r1, r0
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L385+0x8
	ldr	r1, .L385+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	bl	GetDialogBoxFontId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L385+0x10
	add	r0, r5, #0
	add	r2, r4, #0
	bl	DisplayItemMessageInBerryPouch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L386:
	.align	2, 0
.L385:
	.word	gTasks+0x8
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_ICanPayThisMuch_WouldThatBeOkay
	.word	Task_SellMultiple_CreateYesNoMenu
.Lfe55:
	.size	 Task_AskSellMultiple,.Lfe55-Task_AskSellMultiple
	.align	2, 0
	.type	 Task_SellMultiple_CreateYesNoMenu,function
	.thumb_func
Task_SellMultiple_CreateYesNoMenu:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L388
	bl	CreateYesNoMenuWin4
	pop	{r0}
	bx	r0
.L389:
	.align	2, 0
.L388:
	.word	sYesNoFuncs_Sell
.Lfe56:
	.size	 Task_SellMultiple_CreateYesNoMenu,.Lfe56-Task_SellMultiple_CreateYesNoMenu
	.align	2, 0
	.type	 Task_SellNo,function
	.thumb_func
Task_SellNo:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L391
	add	r4, r4, r0
	mov	r0, #0x2
	bl	DestroyVariableWindow
	mov	r0, #0x5
	bl	TryDestroyVariableWindow
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	BerryPouchSetArrowCursorFromListMenu
	add	r0, r5, #0
	bl	Task_CleanUpAndReturnToMain
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L392:
	.align	2, 0
.L391:
	.word	gTasks+0x8
.Lfe57:
	.size	 Task_SellNo,.Lfe57-Task_SellNo
	.align	2, 0
	.type	 Task_Sell_PrintSelectMultipleUI,function
	.thumb_func
Task_Sell_PrintSelectMultipleUI:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r5, r0, #0x2
	add	r5, r5, r0
	lsl	r5, r5, #0x3
	ldr	r6, .L394
	add	r0, r5, r6
	mov	r9, r0
	mov	r0, #0x1
	bl	GetOrCreateVariableWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L394+0x4
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r2, .L394+0x8
	mov	r8, r2
	ldr	r1, .L394+0xc
	mov	r0, r8
	bl	StringExpandPlaceholders
	mov	r0, #0xa
	str	r0, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, r8
	mov	r3, #0x4
	bl	BerryPouchPrint
	mov	r3, r9
	ldrh	r1, [r3, #0x2]
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mov	r2, r9
	mov	r3, #0x10
	ldrsh	r1, [r2, r3]
	mul	r0, r0, r1
	bl	SellMultiple_UpdateSellPriceDisplay
	bl	PrintMoneyInWin2
	bl	CreateScrollIndicatorArrows_SellQuantity
	sub	r6, r6, #0x8
	add	r5, r5, r6
	ldr	r0, .L394+0x10
	str	r0, [r5]
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L395:
	.align	2, 0
.L394:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TimesStrVar1
	.word	Task_Sell_SelectMultiple
.Lfe58:
	.size	 Task_Sell_PrintSelectMultipleUI,.Lfe58-Task_Sell_PrintSelectMultipleUI
	.align	2, 0
	.type	 SellMultiple_UpdateSellPriceDisplay,function
	.thumb_func
SellMultiple_UpdateSellPriceDisplay:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetVariableWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	str	r1, [sp]
	mov	r1, #0x38
	mov	r2, #0xa
	add	r3, r4, #0
	bl	PrintMoneyAmount
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe59:
	.size	 SellMultiple_UpdateSellPriceDisplay,.Lfe59-SellMultiple_UpdateSellPriceDisplay
	.align	2, 0
	.type	 Task_Sell_SelectMultiple,function
	.thumb_func
Task_Sell_SelectMultiple:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L403
	add	r5, r0, r1
	add	r0, r5, #0
	add	r0, r0, #0x10
	ldrh	r1, [r5, #0x4]
	bl	AdjustQuantityAccordingToDPadInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L398	@cond_branch
	mov	r0, #0x10
	ldrsh	r1, [r5, r0]
	mov	r0, #0x1
	mov	r2, #0x2
	bl	PrintxQuantityOnWindow
	ldrh	r1, [r5, #0x2]
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mov	r2, #0x10
	ldrsh	r1, [r5, r2]
	mul	r0, r0, r1
	bl	SellMultiple_UpdateSellPriceDisplay
	b	.L399
.L404:
	.align	2, 0
.L403:
	.word	gTasks+0x8
.L398:
	ldr	r0, .L405
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L400	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	DestroyVariableWindow
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	bl	DestroyScrollIndicatorArrows
	add	r0, r4, #0
	bl	Task_AskSellMultiple
	b	.L399
.L406:
	.align	2, 0
.L405:
	.word	gMain
.L400:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L399	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	DestroyVariableWindow
	mov	r0, #0x2
	bl	DestroyVariableWindow
	mov	r0, #0x5
	bl	TryDestroyVariableWindow
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	bl	DestroyScrollIndicatorArrows
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	BerryPouchSetArrowCursorFromListMenu
	add	r0, r6, #0
	bl	Task_CleanUpAndReturnToMain
.L399:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe60:
	.size	 Task_Sell_SelectMultiple,.Lfe60-Task_Sell_SelectMultiple
	.align	2, 0
	.type	 Task_SellYes,function
	.thumb_func
Task_SellYes:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L408
	add	r4, r4, r0
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L408+0x4
	ldrh	r0, [r0]
	ldr	r1, .L408+0x8
	bl	CopyItemName
	ldr	r6, .L408+0xc
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x5
	bl	BagGetItemIdByPocketPosition
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mov	r2, #0x10
	ldrsh	r1, [r4, r2]
	mul	r1, r1, r0
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L408+0x10
	ldr	r1, .L408+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r3, .L408+0x18
	add	r0, r5, #0
	mov	r1, #0x2
	add	r2, r4, #0
	bl	DisplayItemMessageInBerryPouch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L409:
	.align	2, 0
.L408:
	.word	gTasks+0x8
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_TurnedOverItemsWorthYen
	.word	Task_SellBerries_PlaySfxAndRemoveBerries
.Lfe61:
	.size	 Task_SellYes,.Lfe61-Task_SellYes
	.align	2, 0
	.type	 Task_SellBerries_PlaySfxAndRemoveBerries,function
	.thumb_func
Task_SellBerries_PlaySfxAndRemoveBerries:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r6, r0, #0x2
	add	r6, r6, r0
	lsl	r6, r6, #0x3
	ldr	r0, .L411
	mov	r9, r0
	add	r1, r6, #0
	add	r1, r1, r9
	mov	r8, r1
	mov	r0, #0xf8
	bl	PlaySE
	ldr	r5, .L411+0x4
	ldrh	r0, [r5]
	mov	r2, r8
	ldrh	r1, [r2, #0x10]
	bl	RemoveBagItem
	ldr	r7, .L411+0x8
	ldr	r4, [r7]
	mov	r3, #0xa4
	lsl	r3, r3, #0x2
	mov	sl, r3
	add	r4, r4, sl
	ldrh	r0, [r5]
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mov	r2, r8
	mov	r3, #0x10
	ldrsh	r1, [r2, r3]
	mul	r1, r1, r0
	add	r0, r4, #0
	bl	AddMoney
	ldrh	r0, [r5]
	mov	r2, r8
	ldrh	r1, [r2, #0x10]
	mov	r2, #0x2
	bl	RecordItemPurchase
	mov	r3, r8
	ldrb	r0, [r3]
	ldr	r4, .L411+0xc
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	DestroyListMenuTask
	bl	SortAndCountBerries
	bl	SanitizeListMenuSelectionParams
	bl	SetUpListMenuTemplate
	ldr	r0, .L411+0x10
	sub	r4, r4, #0xa
	ldrh	r1, [r4, #0xa]
	ldrh	r2, [r4, #0x8]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	strh	r0, [r1]
	mov	r1, #0x2
	bl	BerryPouchSetArrowCursorFromListMenu
	mov	r0, #0x2
	bl	GetVariableWindowId
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, [r7]
	add	r0, r0, sl
	bl	GetMoney
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x0
	bl	PrintMoneyAmountInMoneyBox
	mov	r2, #0x8
	neg	r2, r2
	add	r9, r9, r2
	add	r6, r6, r9
	ldr	r0, .L411+0x14
	str	r0, [r6]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L412:
	.align	2, 0
.L411:
	.word	gTasks+0x8
	.word	gSpecialVar_ItemId
	.word	gSaveBlock1Ptr
	.word	sStaticCnt+0xa
	.word	gMultiuseListMenuTemplate
	.word	Task_SellBerries_WaitButton
.Lfe62:
	.size	 Task_SellBerries_PlaySfxAndRemoveBerries,.Lfe62-Task_SellBerries_PlaySfxAndRemoveBerries
	.align	2, 0
	.type	 Task_SellBerries_WaitButton,function
	.thumb_func
Task_SellBerries_WaitButton:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L416
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L415	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L414	@cond_branch
.L415:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	bl	DestroyVariableWindow
	mov	r0, #0x2
	bl	PutWindowTilemap
	add	r0, r4, #0
	bl	Task_BerryPouch_DestroyDialogueWindowAndRefreshListMenu
.L414:
	pop	{r4}
	pop	{r0}
	bx	r0
.L417:
	.align	2, 0
.L416:
	.word	gMain
.Lfe63:
	.size	 Task_SellBerries_WaitButton,.Lfe63-Task_SellBerries_WaitButton
	.align	2, 0
	.type	 BerryPouchInitWindows,function
	.thumb_func
BerryPouchInitWindows:
	push	{r4, lr}
	ldr	r0, .L429
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xe0
	bl	LoadUserWindowGfx
	mov	r0, #0x0
	mov	r1, #0x13
	mov	r2, #0xd0
	bl	LoadMenuMessageWindowGfx
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xc0
	bl	LoadStdWindowGfx
	ldr	r0, .L429+0x4
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r4, #0x0
.L422:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L422	@cond_branch
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r4, #0x0
	ldr	r3, .L429+0x8
	mov	r2, #0xff
.L427:
	add	r0, r4, r3
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xd
	bls	.L427	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L430:
	.align	2, 0
.L429:
	.word	sWindowTemplates_Main
	.word	gStandardMenuPalette
	.word	sVariableWindowIds
.Lfe64:
	.size	 BerryPouchInitWindows,.Lfe64-BerryPouchInitWindows
	.align	2, 0
	.type	 BerryPouchPrint,function
	.thumb_func
BerryPouchPrint:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	mov	r9, r3
	ldr	r3, [sp, #0x30]
	ldr	r4, [sp, #0x34]
	ldr	r6, [sp, #0x38]
	ldr	r5, [sp, #0x3c]
	mov	r8, r5
	ldr	r5, [sp, #0x40]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r7, r9
	lsl	r7, r7, #0x18
	lsr	r7, r7, #0x18
	mov	r9, r7
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	str	r4, [sp]
	str	r6, [sp, #0x4]
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	ldr	r5, .L432
	add	r4, r4, r5
	str	r4, [sp, #0x8]
	mov	r4, r8
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp, #0xc]
	str	r2, [sp, #0x10]
	mov	r2, r9
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L433:
	.align	2, 0
.L432:
	.word	sTextColors
.Lfe65:
	.size	 BerryPouchPrint,.Lfe65-BerryPouchPrint
	.align	2, 0
	.type	 GetOrCreateVariableWindow,function
	.thumb_func
GetOrCreateVariableWindow:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L439
	add	r5, r4, r0
	ldrb	r0, [r5]
	cmp	r0, #0xff
	bne	.L435	@cond_branch
	lsl	r0, r4, #0x3
	ldr	r1, .L439+0x4
	add	r0, r0, r1
	bl	AddWindow
	strb	r0, [r5]
	cmp	r4, #0x2
	beq	.L437	@cond_branch
	cmp	r4, #0x6
	beq	.L437	@cond_branch
	cmp	r4, #0x7
	beq	.L437	@cond_branch
	cmp	r4, #0x8
	beq	.L437	@cond_branch
	cmp	r4, #0x9
	bne	.L436	@cond_branch
.L437:
	ldr	r0, .L439
	add	r0, r4, r0
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0xa
	mov	r3, #0xc
	bl	DrawStdFrameWithCustomTileAndPalette
	b	.L438
.L440:
	.align	2, 0
.L439:
	.word	sVariableWindowIds
	.word	sWindowTemplates_Variable
.L436:
	ldrb	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
.L438:
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L441
	add	r0, r4, r0
	ldrb	r0, [r0]
.L435:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L442:
	.align	2, 0
.L441:
	.word	sVariableWindowIds
.Lfe66:
	.size	 GetOrCreateVariableWindow,.Lfe66-GetOrCreateVariableWindow
	.align	2, 0
	.type	 VariableWindowSetAltFrameTileAndPalette,function
	.thumb_func
VariableWindowSetAltFrameTileAndPalette:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L444
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
	pop	{r0}
	bx	r0
.L445:
	.align	2, 0
.L444:
	.word	sVariableWindowIds
.Lfe67:
	.size	 VariableWindowSetAltFrameTileAndPalette,.Lfe67-VariableWindowSetAltFrameTileAndPalette
	.align	2, 0
	.type	 DestroyVariableWindow,function
	.thumb_func
DestroyVariableWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L447
	add	r4, r4, r0
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0xff
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L448:
	.align	2, 0
.L447:
	.word	sVariableWindowIds
.Lfe68:
	.size	 DestroyVariableWindow,.Lfe68-DestroyVariableWindow
	.align	2, 0
	.type	 TryDestroyVariableWindow,function
	.thumb_func
TryDestroyVariableWindow:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L451
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L450	@cond_branch
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0xff
	strb	r0, [r4]
.L450:
	pop	{r4}
	pop	{r0}
	bx	r0
.L452:
	.align	2, 0
.L451:
	.word	sVariableWindowIds
.Lfe69:
	.size	 TryDestroyVariableWindow,.Lfe69-TryDestroyVariableWindow
	.align	2, 0
	.type	 GetVariableWindowId,function
	.thumb_func
GetVariableWindowId:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L454
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L455:
	.align	2, 0
.L454:
	.word	sVariableWindowIds
.Lfe70:
	.size	 GetVariableWindowId,.Lfe70-GetVariableWindowId
	.align	2, 0
	.globl	DisplayItemMessageInBerryPouch
	.type	 DisplayItemMessageInBerryPouch,function
	.thumb_func
DisplayItemMessageInBerryPouch:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x10
	add	r7, r2, #0
	mov	r8, r3
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r4, .L458
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0xff
	bne	.L457	@cond_branch
	ldr	r0, .L458+0x4
	bl	AddWindow
	strb	r0, [r4, #0x5]
.L457:
	bl	GetTextSpeedSetting
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r4, #0x5]
	str	r5, [sp]
	str	r0, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, r8
	str	r0, [sp, #0xc]
	add	r0, r6, #0
	mov	r2, #0x13
	mov	r3, #0xd
	bl	DisplayMessageAndContinueTask
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L459:
	.align	2, 0
.L458:
	.word	sVariableWindowIds
	.word	sWindowTemplates_Variable+0x28
.Lfe71:
	.size	 DisplayItemMessageInBerryPouch,.Lfe71-DisplayItemMessageInBerryPouch
	.align	2, 0
	.type	 CreateYesNoMenuWin3,function
	.thumb_func
CreateYesNoMenuWin3:
	push	{lr}
	add	sp, sp, #-0x10
	add	r3, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L461
	mov	r2, #0x2
	str	r2, [sp]
	mov	r2, #0x1
	str	r2, [sp, #0x4]
	mov	r2, #0xe
	str	r2, [sp, #0x8]
	str	r3, [sp, #0xc]
	mov	r2, #0x2
	mov	r3, #0x0
	bl	CreateYesNoMenuWithCallbacks
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	sWindowTemplates_Variable+0x18
.Lfe72:
	.size	 CreateYesNoMenuWin3,.Lfe72-CreateYesNoMenuWin3
	.align	2, 0
	.type	 CreateYesNoMenuWin4,function
	.thumb_func
CreateYesNoMenuWin4:
	push	{lr}
	add	sp, sp, #-0x10
	add	r3, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L464
	mov	r2, #0x2
	str	r2, [sp]
	mov	r2, #0x1
	str	r2, [sp, #0x4]
	mov	r2, #0xe
	str	r2, [sp, #0x8]
	str	r3, [sp, #0xc]
	mov	r2, #0x2
	mov	r3, #0x0
	bl	CreateYesNoMenuWithCallbacks
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L465:
	.align	2, 0
.L464:
	.word	sWindowTemplates_Variable+0x20
.Lfe73:
	.size	 CreateYesNoMenuWin4,.Lfe73-CreateYesNoMenuWin4
	.align	2, 0
	.type	 PrintMoneyInWin2,function
	.thumb_func
PrintMoneyInWin2:
	push	{r4, lr}
	mov	r0, #0x2
	bl	GetOrCreateVariableWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L467
	ldr	r0, [r0]
	mov	r1, #0xa4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	bl	GetMoney
	add	r3, r0, #0
	add	r0, r4, #0
	mov	r1, #0xa
	mov	r2, #0xc
	bl	PrintMoneyAmountInMoneyBoxWithBorder
	pop	{r4}
	pop	{r0}
	bx	r0
.L468:
	.align	2, 0
.L467:
	.word	gSaveBlock1Ptr
.Lfe74:
	.size	 PrintMoneyInWin2,.Lfe74-PrintMoneyInWin2
	.align	2, 0
	.type	 CreateBerryPouchSprite,function
	.thumb_func
CreateBerryPouchSprite:
	push	{lr}
	ldr	r0, .L470
	mov	r1, #0x28
	mov	r2, #0x4c
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, .L470+0x4
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L471:
	.align	2, 0
.L470:
	.word	sSpriteTemplate_BerryPouch
	.word	sBerryPouchSpriteId
.Lfe75:
	.size	 CreateBerryPouchSprite,.Lfe75-CreateBerryPouchSprite
	.align	2, 0
	.type	 StartBerryPouchSpriteWobbleAnim,function
	.thumb_func
StartBerryPouchSpriteWobbleAnim:
	push	{r4, lr}
	ldr	r0, .L474
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L474+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L473	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	ldr	r0, .L474+0x8
	str	r0, [r4, #0x1c]
.L473:
	pop	{r4}
	pop	{r0}
	bx	r0
.L475:
	.align	2, 0
.L474:
	.word	sBerryPouchSpriteId
	.word	gSprites
	.word	SpriteCB_BerryPouchWaitWobbleAnim
.Lfe76:
	.size	 StartBerryPouchSpriteWobbleAnim,.Lfe76-StartBerryPouchSpriteWobbleAnim
	.align	2, 0
	.type	 SpriteCB_BerryPouchWaitWobbleAnim,function
	.thumb_func
SpriteCB_BerryPouchWaitWobbleAnim:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L477	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAffineAnim
	ldr	r0, .L478
	str	r0, [r4, #0x1c]
.L477:
	pop	{r4}
	pop	{r0}
	bx	r0
.L479:
	.align	2, 0
.L478:
	.word	SpriteCallbackDummy
.Lfe77:
	.size	 SpriteCB_BerryPouchWaitWobbleAnim,.Lfe77-SpriteCB_BerryPouchWaitWobbleAnim
.text
	.align	2, 0 @ Don't pad with nop

