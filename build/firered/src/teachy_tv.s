@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sStaticResources,object
	.size	 sStaticResources,12
sStaticResources:
	.word	0x0
	.space	8
	.align	2, 0
	.type	 sResources,object
	.size	 sResources,4
sResources:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xf0
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xcb
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x1
	.byte	0x2
	.byte	0xf
	.byte	0x1a
	.byte	0x4
	.byte	0x3
	.short	0xea
	.byte	0x0
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0xc
	.byte	0x3
	.short	0x152
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,24
	.align	2, 0
	.type	 sListMenuItems,object
sListMenuItems:
	.word	gTeachyTvString_TeachBattle
	.word	0x0
	.word	gTeachyTvString_StatusProblems
	.word	0x1
	.word	gTeachyTvString_TypeMatchups
	.word	0x2
	.word	gTeachyTvString_CatchPkmn
	.word	0x3
	.word	gTeachyTvString_AboutTMs
	.word	0x4
	.word	gTeachyTvString_RegisterItem
	.word	0x5
	.word	gTeachyTvString_Cancel
	.word	-0x2
	.size	 sListMenuItems,56
	.align	2, 0
	.type	 sListMenuItems_NoTMCase,object
sListMenuItems_NoTMCase:
	.word	gTeachyTvString_TeachBattle
	.word	0x0
	.word	gTeachyTvString_StatusProblems
	.word	0x1
	.word	gTeachyTvString_TypeMatchups
	.word	0x2
	.word	gTeachyTvString_CatchPkmn
	.word	0x3
	.word	gTeachyTvString_Cancel
	.word	-0x2
	.size	 sListMenuItems_NoTMCase,40
	.align	2, 0
	.type	 sListMenuTemplate,object
	.size	 sListMenuTemplate,24
sListMenuTemplate:
	.word	sListMenuItems
	.word	0x0
	.word	0x0
	.short	0x7
	.short	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x16
	.byte	0x20
	.byte	0x40
	.byte	0x2
	.align	2, 0
	.type	 sScrollIndicatorArrowPair,object
	.size	 sScrollIndicatorArrowPair,16
sScrollIndicatorArrowPair:
	.byte	0x2
	.byte	0x78
	.byte	0xc
	.byte	0x3
	.byte	0x78
	.byte	0x64
	.short	0x0
	.short	0x1
	.short	0x800
	.short	0x800
	.byte	0x0
	.space	1
	.type	 sWhereToReturnToFromBattle,object
sWhereToReturnToFromBattle:
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0x9
	.byte	0x9
	.size	 sWhereToReturnToFromBattle,6
	.align	2, 0
	.type	 sBattleScript,object
sBattleScript:
	.word	TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos
	.word	TTVcmd_ClearBg2TeachyTvGraphic
	.word	TTVcmd_NpcMoveAndSetupTextPrinter
	.word	TTVcmd_IdleIfTextPrinterIsActive
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_StartAnimNpcWalkIntoGrass
	.word	TTVcmd_DudeMoveUp
	.word	TTVcmd_DudeMoveRight
	.word	TTVcmd_TaskBattleOrFadeByOptionChosen
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen2
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_DudeTurnLeft
	.word	TTVcmd_DudeMoveLeft
	.word	TTVcmd_RenderAndRemoveBg1EndGraphic
	.word	TTVcmd_End
	.size	 sBattleScript,76
	.align	2, 0
	.type	 sStatusScript,object
sStatusScript:
	.word	TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos
	.word	TTVcmd_ClearBg2TeachyTvGraphic
	.word	TTVcmd_NpcMoveAndSetupTextPrinter
	.word	TTVcmd_IdleIfTextPrinterIsActive
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_StartAnimNpcWalkIntoGrass
	.word	TTVcmd_DudeMoveUp
	.word	TTVcmd_DudeMoveRight
	.word	TTVcmd_TaskBattleOrFadeByOptionChosen
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen2
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_DudeTurnLeft
	.word	TTVcmd_DudeMoveLeft
	.word	TTVcmd_RenderAndRemoveBg1EndGraphic
	.word	TTVcmd_End
	.size	 sStatusScript,76
	.align	2, 0
	.type	 sMatchupsScript,object
sMatchupsScript:
	.word	TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos
	.word	TTVcmd_ClearBg2TeachyTvGraphic
	.word	TTVcmd_NpcMoveAndSetupTextPrinter
	.word	TTVcmd_IdleIfTextPrinterIsActive
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_StartAnimNpcWalkIntoGrass
	.word	TTVcmd_DudeMoveUp
	.word	TTVcmd_DudeMoveRight
	.word	TTVcmd_TaskBattleOrFadeByOptionChosen
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen2
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_DudeTurnLeft
	.word	TTVcmd_DudeMoveLeft
	.word	TTVcmd_RenderAndRemoveBg1EndGraphic
	.word	TTVcmd_End
	.size	 sMatchupsScript,76
	.align	2, 0
	.type	 sCatchingScript,object
sCatchingScript:
	.word	TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos
	.word	TTVcmd_ClearBg2TeachyTvGraphic
	.word	TTVcmd_NpcMoveAndSetupTextPrinter
	.word	TTVcmd_IdleIfTextPrinterIsActive
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_StartAnimNpcWalkIntoGrass
	.word	TTVcmd_DudeMoveUp
	.word	TTVcmd_DudeMoveRight
	.word	TTVcmd_TaskBattleOrFadeByOptionChosen
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen2
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_DudeTurnLeft
	.word	TTVcmd_DudeMoveLeft
	.word	TTVcmd_RenderAndRemoveBg1EndGraphic
	.word	TTVcmd_End
	.size	 sCatchingScript,76
	.align	2, 0
	.type	 sTMsScript,object
sTMsScript:
	.word	TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos
	.word	TTVcmd_ClearBg2TeachyTvGraphic
	.word	TTVcmd_NpcMoveAndSetupTextPrinter
	.word	TTVcmd_IdleIfTextPrinterIsActive
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_TaskBattleOrFadeByOptionChosen
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen2
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_DudeTurnLeft
	.word	TTVcmd_DudeMoveLeft
	.word	TTVcmd_RenderAndRemoveBg1EndGraphic
	.word	TTVcmd_End
	.size	 sTMsScript,64
	.align	2, 0
	.type	 sRegisterKeyItemScript,object
sRegisterKeyItemScript:
	.word	TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos
	.word	TTVcmd_ClearBg2TeachyTvGraphic
	.word	TTVcmd_NpcMoveAndSetupTextPrinter
	.word	TTVcmd_IdleIfTextPrinterIsActive
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_TaskBattleOrFadeByOptionChosen
	.word	TTVcmd_TextPrinterSwitchStringByOptionChosen2
	.word	TTVcmd_IdleIfTextPrinterIsActive2
	.word	TTVcmd_EraseTextWindowIfKeyPressed
	.word	TTVcmd_DudeTurnLeft
	.word	TTVcmd_DudeMoveLeft
	.word	TTVcmd_RenderAndRemoveBg1EndGraphic
	.word	TTVcmd_End
	.size	 sRegisterKeyItemScript,64
.text
	.align	2, 0
	.type	 TeachyTvCallback,function
	.thumb_func
TeachyTvCallback:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	DoScheduledBgTilemapCopiesToVram
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 TeachyTvCallback,.Lfe1-TeachyTvCallback
	.align	2, 0
	.type	 TeachyTvVblankHandler,function
	.thumb_func
TeachyTvVblankHandler:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 TeachyTvVblankHandler,.Lfe2-TeachyTvVblankHandler
	.align	2, 0
	.globl	InitTeachyTvController
	.type	 InitTeachyTvController,function
	.thumb_func
InitTeachyTvController:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	ldr	r3, .L7
	mov	r4, #0x0
	strb	r2, [r3, #0x4]
	str	r1, [r3]
	cmp	r2, #0
	bne	.L5	@cond_branch
	mov	r0, #0x0
	strh	r4, [r3, #0x6]
	strh	r4, [r3, #0x8]
	strb	r0, [r3, #0x5]
.L5:
	cmp	r2, #0x1
	bne	.L6	@cond_branch
	strb	r4, [r3, #0x4]
.L6:
	ldr	r0, .L7+0x4
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	sStaticResources
	.word	TeachyTvMainCallback
.Lfe3:
	.size	 InitTeachyTvController,.Lfe3-InitTeachyTvController
	.align	2, 0
	.globl	CB2_ReturnToTeachyTV
	.type	 CB2_ReturnToTeachyTV,function
	.thumb_func
CB2_ReturnToTeachyTV:
	push	{lr}
	ldr	r1, .L12
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	bne	.L10	@cond_branch
	ldr	r1, [r1]
	mov	r0, #0x1
	bl	InitTeachyTvController
	b	.L11
.L13:
	.align	2, 0
.L12:
	.word	sStaticResources
.L10:
	ldr	r1, [r1]
	mov	r0, #0x2
	bl	InitTeachyTvController
.L11:
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_ReturnToTeachyTV,.Lfe4-CB2_ReturnToTeachyTV
	.align	2, 0
	.globl	SetTeachyTvControllerModeToResume
	.type	 SetTeachyTvControllerModeToResume,function
	.thumb_func
SetTeachyTvControllerModeToResume:
	ldr	r1, .L15
	mov	r0, #0x1
	strb	r0, [r1, #0x4]
	bx	lr
.L16:
	.align	2, 0
.L15:
	.word	sStaticResources
.Lfe5:
	.size	 SetTeachyTvControllerModeToResume,.Lfe5-SetTeachyTvControllerModeToResume
	.align	2, 0
	.type	 TeachyTvMainCallback,function
	.thumb_func
TeachyTvMainCallback:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L26
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r6, r0, r1
	ldrb	r5, [r6]
	cmp	r5, #0
	beq	.L19	@cond_branch
	cmp	r5, #0x1
	beq	.L20	@cond_branch
	b	.L17
.L27:
	.align	2, 0
.L26:
	.word	gMain
.L19:
	ldr	r4, .L28
	ldr	r0, .L28+0x4
	bl	AllocZeroed
	str	r0, [r4]
	str	r5, [r0]
	ldr	r1, .L28+0x8
	add	r0, r0, r1
	strb	r5, [r0]
	ldr	r0, [r4]
	add	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	bl	SetVBlankHBlankCallbacksToNull
	bl	ClearScheduledBgCopiesToVram
	bl	ScanlineEffect_Stop
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	TeachyTvSetupBg
	bl	TeachyTvLoadGraphic
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L17
.L29:
	.align	2, 0
.L28:
	.word	sResources
	.word	0x4008
	.word	0x4006
.L20:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L17	@cond_branch
	bl	TeachyTvCreateAndRenderRbox
	bl	TeachyTvInitIo
	ldr	r0, .L30
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x2
	bne	.L22	@cond_branch
	ldr	r0, .L30+0x4
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	TeachyTvSetupObjEventAndOam
	ldr	r2, .L30+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0xa]
	add	r0, r5, #0
	bl	TeachyTvSetupPostBattleWindowAndObj
	b	.L23
.L31:
	.align	2, 0
.L30:
	.word	sStaticResources
	.word	TeachyTvPostBattleFadeControl
	.word	gTasks
.L22:
	ldr	r0, .L32
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	TeachyTvSetupWindow
	ldr	r1, .L32+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x8]
	bl	TeachyTvSetupObjEventAndOam
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	bl	TeachyTvSetupScrollIndicatorArrowPair
	mov	r0, #0xad
	lsl	r0, r0, #0x1
	bl	PlayNewMapMusic
	bl	TeachyTvSetWindowRegs
.L23:
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x3
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x9
	bl	SetHelpContextDontCheckBattle
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L32+0x8
	bl	SetVBlankCallback
	ldr	r0, .L32+0xc
	bl	SetMainCallback2
.L17:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	TeachyTvOptionListController
	.word	gTasks
	.word	TeachyTvVblankHandler
	.word	TeachyTvCallback
.Lfe6:
	.size	 TeachyTvMainCallback,.Lfe6-TeachyTvMainCallback
	.align	2, 0
	.type	 TeachyTvSetupBg,function
	.thumb_func
TeachyTvSetupBg:
	push	{r4, lr}
	bl	ResetAllBgsCoordinatesAndBgCntRegs
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L35
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r4, .L35+0x4
	ldr	r1, [r4]
	add	r1, r1, #0x4
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L35+0x8
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L35+0xc
	add	r1, r1, r0
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r1, #0xc1
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x3
	mov	r2, #0x2
	bl	ChangeBgX
	mov	r1, #0xa0
	lsl	r1, r1, #0x6
	mov	r0, #0x3
	mov	r2, #0x1
	bl	ChangeBgY
	ldr	r0, [r4]
	ldr	r1, .L35+0x10
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L35+0x14
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0]
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r4}
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	sBgTemplates
	.word	sResources
	.word	0x1004
	.word	0x2004
	.word	0x4004
	.word	0x4005
.Lfe7:
	.size	 TeachyTvSetupBg,.Lfe7-TeachyTvSetupBg
	.align	2, 0
	.type	 TeachyTvLoadGraphic,function
	.thumb_func
TeachyTvLoadGraphic:
	push	{r4, lr}
	add	sp, sp, #-0x8
	mov	r4, #0x0
	add	r0, sp, #0x4
	strh	r4, [r0]
	bl	ResetTempTileDataBuffers
	ldr	r1, .L38
	str	r4, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L38+0x4
	ldr	r4, .L38+0x8
	ldr	r1, [r4]
	add	r1, r1, #0x4
	bl	LZDecompressWram
	ldr	r0, .L38+0xc
	ldr	r1, [r4]
	ldr	r2, .L38+0x10
	add	r1, r1, r2
	bl	LZDecompressWram
	ldr	r0, .L38+0x14
	mov	r1, #0x0
	mov	r2, #0x80
	bl	LoadCompressedPalette
	add	r0, sp, #0x4
	mov	r1, #0x0
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r0, .L38+0x18
	bl	LoadSpritePalette
	ldr	r0, [r4]
	ldr	r1, .L38+0x1c
	add	r0, r0, r1
	bl	TeachyTvLoadBg3Map
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	gUnknown_8E86240
	.word	gUnknown_8E86BE8
	.word	sResources
	.word	gUnknown_8E86D6C
	.word	0x3004
	.word	gUnknown_8E86F98
	.word	gSpritePalette_GeneralFieldEffect1
	.word	0x2004
.Lfe8:
	.size	 TeachyTvLoadGraphic,.Lfe8-TeachyTvLoadGraphic
	.align	2, 0
	.type	 TeachyTvCreateAndRenderRbox,function
	.thumb_func
TeachyTvCreateAndRenderRbox:
	push	{lr}
	ldr	r0, .L41
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	mov	r1, #0xcc
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	sWindowTemplates
.Lfe9:
	.size	 TeachyTvCreateAndRenderRbox,.Lfe9-TeachyTvCreateAndRenderRbox
	.align	2, 0
	.type	 TeachyTvSetupWindow,function
	.thumb_func
TeachyTvSetupWindow:
	push	{r4, r5, lr}
	ldr	r4, .L45
	add	r1, r4, #0
	ldr	r0, .L45+0x4
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	mov	r0, #0x1
	strb	r0, [r4, #0x10]
	ldr	r0, .L45+0x8
	str	r0, [r4, #0x4]
	mov	r0, #0xb6
	lsl	r0, r0, #0x1
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L44	@cond_branch
	ldr	r0, .L45+0xc
	str	r0, [r4]
	mov	r0, #0x5
	strh	r0, [r4, #0xc]
	strh	r0, [r4, #0xe]
	ldrb	r2, [r4, #0x14]
	lsl	r1, r2, #0x1c
	lsr	r1, r1, #0x1c
	add	r1, r1, #0x8
	mov	r0, #0xf
	and	r1, r1, r0
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x14]
.L44:
	ldr	r0, .L45+0x10
	ldrh	r1, [r0, #0x6]
	ldrh	r2, [r0, #0x8]
	add	r0, r4, #0
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L46:
	.align	2, 0
.L45:
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate
	.word	TeachyTvAudioByInput
	.word	sListMenuItems_NoTMCase
	.word	sStaticResources
.Lfe10:
	.size	 TeachyTvSetupWindow,.Lfe10-TeachyTvSetupWindow
	.align	2, 0
	.type	 TeachyTvSetupScrollIndicatorArrowPair,function
	.thumb_func
TeachyTvSetupScrollIndicatorArrowPair:
	push	{lr}
	mov	r0, #0xb6
	lsl	r0, r0, #0x1
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L48	@cond_branch
	ldr	r0, .L50
	ldr	r0, [r0]
	ldr	r1, .L50+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	b	.L49
.L51:
	.align	2, 0
.L50:
	.word	sResources
	.word	0x4007
.L48:
	ldr	r0, .L52
	ldr	r1, .L52+0x4
	bl	AddScrollIndicatorArrowPair
	ldr	r1, .L52+0x8
	ldr	r1, [r1]
	ldr	r2, .L52+0xc
	add	r1, r1, r2
	strb	r0, [r1]
.L49:
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	sScrollIndicatorArrowPair
	.word	sStaticResources+0x6
	.word	sResources
	.word	0x4007
.Lfe11:
	.size	 TeachyTvSetupScrollIndicatorArrowPair,.Lfe11-TeachyTvSetupScrollIndicatorArrowPair
	.align	2, 0
	.type	 TeachyTvRemoveScrollIndicatorArrowPair,function
	.thumb_func
TeachyTvRemoveScrollIndicatorArrowPair:
	push	{r4, lr}
	ldr	r4, .L56
	ldr	r0, [r4]
	ldr	r2, .L56+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L55	@cond_branch
	bl	RemoveScrollIndicatorArrowPair
	ldr	r0, [r4]
	ldr	r1, .L56+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
.L55:
	pop	{r4}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	sResources
	.word	0x4007
.Lfe12:
	.size	 TeachyTvRemoveScrollIndicatorArrowPair,.Lfe12-TeachyTvRemoveScrollIndicatorArrowPair
	.align	2, 0
	.type	 TeachyTvAudioByInput,function
	.thumb_func
TeachyTvAudioByInput:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L59	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L59:
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 TeachyTvAudioByInput,.Lfe13-TeachyTvAudioByInput
	.align	2, 0
	.type	 TeachyTvInitIo,function
	.thumb_func
TeachyTvInitIo:
	push	{lr}
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x1f
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0xcc
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x5
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 TeachyTvInitIo,.Lfe14-TeachyTvInitIo
	.align	2, 0
	.type	 TeachyTvSetupObjEventAndOam,function
	.thumb_func
TeachyTvSetupObjEventAndOam:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r1, .L62
	mov	r0, #0x8
	str	r0, [sp]
	mov	r0, #0x5a
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateObjectGraphicsSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L62+0x4
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	mov	r3, #0x8
	orr	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, #0x4
	orr	r1, r1, r3
	strb	r1, [r2]
	add	sp, sp, #0x4
	pop	{r1}
	bx	r1
.L63:
	.align	2, 0
.L62:
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe15:
	.size	 TeachyTvSetupObjEventAndOam,.Lfe15-TeachyTvSetupObjEventAndOam
	.align	2, 0
	.type	 TeachyTvSetSpriteCoordsAndSwitchFrame,function
	.thumb_func
TeachyTvSetSpriteCoordsAndSwitchFrame:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r5, .L65
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r1, [r0, #0x24]
	strh	r2, [r0, #0x26]
	add	r4, r0, #0
	add	r4, r4, #0x3e
	ldrb	r2, [r4]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r4]
	add	r1, r3, #0
	bl	StartSpriteAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	gSprites
.Lfe16:
	.size	 TeachyTvSetSpriteCoordsAndSwitchFrame,.Lfe16-TeachyTvSetSpriteCoordsAndSwitchFrame
	.align	2, 0
	.type	 TeachyTvSetWindowRegs,function
	.thumb_func
TeachyTvSetWindowRegs:
	push	{lr}
	ldr	r1, .L68
	mov	r0, #0x44
	bl	SetGpuReg
	ldr	r1, .L68+0x4
	mov	r0, #0x40
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L69:
	.align	2, 0
.L68:
	.word	0xc64
	.word	0x1cd4
.Lfe17:
	.size	 TeachyTvSetWindowRegs,.Lfe17-TeachyTvSetWindowRegs
	.align	2, 0
	.type	 TeachyTvClearWindowRegs,function
	.thumb_func
TeachyTvClearWindowRegs:
	push	{lr}
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 TeachyTvClearWindowRegs,.Lfe18-TeachyTvClearWindowRegs
	.align	2, 0
	.type	 TeachyTvBg2AnimController,function
	.thumb_func
TeachyTvBg2AnimController:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	add	r7, r0, #0
	mov	r0, #0x1
.L75:
	mov	r4, #0x2
	lsl	r5, r0, #0x5
	add	r6, r0, #0x1
.L79:
	bl	Random
	add	r2, r5, r4
	lsl	r2, r2, #0x1
	add	r2, r2, r7
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0xa
	ldr	r3, .L82
	add	r0, r3, #0
	add	r1, r1, r0
	strh	r1, [r2]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1b
	bls	.L79	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xc
	bls	.L75	@cond_branch
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	0x301f
.Lfe19:
	.size	 TeachyTvBg2AnimController,.Lfe19-TeachyTvBg2AnimController
	.align	2, 0
	.type	 TeachyTvSetupPostBattleWindowAndObj,function
	.thumb_func
TeachyTvSetupPostBattleWindowAndObj:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L94
	add	r5, r0, r1
	mov	r0, #0x2
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L94+0x4
	add	r7, r0, r1
	mov	r0, #0x1
	bl	ClearWindowTilemap
	bl	TeachyTvClearWindowRegs
	ldr	r0, .L94+0x8
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0
	blt	.L85	@cond_branch
	cmp	r0, #0x3
	bgt	.L89	@cond_branch
	ldrb	r0, [r5, #0x2]
	mov	r1, #0x78
	mov	r2, #0x38
	mov	r3, #0x0
	bl	TeachyTvSetSpriteCoordsAndSwitchFrame
	mov	r4, #0xc0
	lsl	r4, r4, #0x6
	mov	r0, #0x3
	add	r1, r4, #0
	mov	r2, #0x1
	bl	ChangeBgX
	mov	r0, #0x3
	add	r1, r4, #0
	mov	r2, #0x2
	bl	ChangeBgY
	ldr	r2, .L94+0xc
	ldr	r1, [r2]
	ldr	r0, .L94+0x10
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x3
	strb	r0, [r1]
	ldr	r1, [r2]
	ldr	r0, .L94+0x14
	add	r1, r1, r0
	ldrb	r0, [r1]
	sub	r0, r0, #0x3
	strb	r0, [r1]
	b	.L85
.L95:
	.align	2, 0
.L94:
	.word	gTasks+0x8
	.word	gSprites
	.word	sStaticResources
	.word	sResources
	.word	0x4004
	.word	0x4005
.L89:
	cmp	r0, #0x5
	bgt	.L85	@cond_branch
	ldrb	r0, [r5, #0x2]
	mov	r1, #0x78
	mov	r2, #0x38
	mov	r3, #0x0
	bl	TeachyTvSetSpriteCoordsAndSwitchFrame
.L85:
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	strh	r0, [r5, #0xa]
	mov	r0, #0x24
	ldrsh	r1, [r7, r0]
	mov	r0, #0x26
	ldrsh	r2, [r7, r0]
	mov	r0, #0x1
	str	r0, [sp]
	add	r0, r6, #0
	mov	r3, #0x0
	bl	TeachyTvGrassAnimationMain
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 TeachyTvSetupPostBattleWindowAndObj,.Lfe20-TeachyTvSetupPostBattleWindowAndObj
	.align	2, 0
	.type	 TeachyTvInitTextPrinter,function
	.thumb_func
TeachyTvInitTextPrinter:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	ldr	r2, .L97
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	bl	GetTextSpeedSetting
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x4
	add	r2, r4, #0
	bl	AddTextPrinterParameterized2
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L98:
	.align	2, 0
.L97:
	.word	gTextFlags
.Lfe21:
	.size	 TeachyTvInitTextPrinter,.Lfe21-TeachyTvInitTextPrinter
	.align	2, 0
	.type	 TeachyTvFree,function
	.thumb_func
TeachyTvFree:
	push	{r4, lr}
	ldr	r4, .L100
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
	bl	FreeAllWindowBuffers
	pop	{r4}
	pop	{r0}
	bx	r0
.L101:
	.align	2, 0
.L100:
	.word	sResources
.Lfe22:
	.size	 TeachyTvFree,.Lfe22-TeachyTvFree
	.align	2, 0
	.type	 TeachyTvQuitBeginFade,function
	.thumb_func
TeachyTvQuitBeginFade:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L103
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L103+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	gTasks
	.word	TeachyTvQuitFadeControlAndTaskDel
.Lfe23:
	.size	 TeachyTvQuitBeginFade,.Lfe23-TeachyTvQuitBeginFade
	.align	2, 0
	.type	 TeachyTvQuitFadeControlAndTaskDel,function
	.thumb_func
TeachyTvQuitFadeControlAndTaskDel:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L109
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L106	@cond_branch
	ldr	r0, .L109+0x4
	ldr	r0, [r0]
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L107	@cond_branch
	bl	SetMainCallback2
	b	.L108
.L110:
	.align	2, 0
.L109:
	.word	gPaletteFade
	.word	sResources
.L107:
	bl	Overworld_PlaySpecialMapMusic
	ldr	r0, .L111
	ldr	r0, [r0]
	bl	SetMainCallback2
.L108:
	bl	TeachyTvFree
	add	r0, r4, #0
	bl	DestroyTask
.L106:
	pop	{r4}
	pop	{r0}
	bx	r0
.L112:
	.align	2, 0
.L111:
	.word	sStaticResources
.Lfe24:
	.size	 TeachyTvQuitFadeControlAndTaskDel,.Lfe24-TeachyTvQuitFadeControlAndTaskDel
	.align	2, 0
	.type	 TeachyTvOptionListController,function
	.thumb_func
TeachyTvOptionListController:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L122
	add	r6, r0, r1
	bl	TeachyTvBg2AnimController
	ldr	r0, .L122+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L114	@cond_branch
	ldrb	r0, [r6]
	bl	ListMenu_ProcessInput
	add	r5, r0, #0
	ldrb	r0, [r6]
	ldr	r4, .L122+0x8
	add	r2, r4, #0x2
	add	r1, r4, #0
	bl	ListMenuGetScrollAndRow
	ldr	r0, .L122+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L115	@cond_branch
	sub	r0, r4, #0x6
	ldr	r1, [r0]
	ldr	r0, .L122+0x10
	cmp	r1, r0
	bne	.L119	@cond_branch
.L115:
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L119	@cond_branch
	add	r0, r0, #0x1
	cmp	r5, r0
	bne	.L120	@cond_branch
	b	.L114
.L123:
	.align	2, 0
.L122:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	sStaticResources+0x6
	.word	gMain
	.word	CB2_BagMenuFromStartMenu
.L119:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	bl	TeachyTvQuitBeginFade
	b	.L114
.L120:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L124
	mov	r4, #0x0
	strb	r5, [r2, #0x5]
	ldrb	r0, [r6]
	add	r1, r2, #0x6
	add	r2, r2, #0x8
	bl	DestroyListMenuTask
	bl	TeachyTvClearWindowRegs
	mov	r0, #0x1
	bl	ClearWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	bl	TeachyTvRemoveScrollIndicatorArrowPair
	strh	r4, [r6, #0x6]
	strh	r4, [r6, #0x4]
	ldr	r1, .L124+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L124+0x8
	str	r1, [r0]
.L114:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	sStaticResources
	.word	gTasks
	.word	TeachyTvRenderMsgAndSwitchClusterFuncs
.Lfe25:
	.size	 TeachyTvOptionListController,.Lfe25-TeachyTvOptionListController
	.align	2, 0
	.type	 TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos,function
	.thumb_func
TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos:
	push	{r4, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L128
	add	r4, r1, r0
	bl	TeachyTvBg2AnimController
	ldrh	r0, [r4, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3f
	ble	.L127	@cond_branch
	ldr	r0, .L128+0x4
	ldr	r1, [r0]
	ldr	r0, .L128+0x8
	add	r1, r1, r0
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldrb	r0, [r4, #0x2]
	mov	r1, #0x8
	mov	r2, #0x38
	mov	r3, #0x7
	bl	TeachyTvSetSpriteCoordsAndSwitchFrame
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	bl	PlayNewMapMusic
.L127:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gTasks+0x8
	.word	sResources
	.word	0x3004
.Lfe26:
	.size	 TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos,.Lfe26-TTVcmd_TransitionRenderBg2TeachyTvGraphicInitNpcPos
	.align	2, 0
	.type	 TTVcmd_ClearBg2TeachyTvGraphic,function
	.thumb_func
TTVcmd_ClearBg2TeachyTvGraphic:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L132
	add	r4, r1, r0
	ldrh	r0, [r4, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x86
	bne	.L131	@cond_branch
	mov	r0, #0x1a
	str	r0, [sp]
	mov	r0, #0xc
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L131:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	gTasks+0x8
.Lfe27:
	.size	 TTVcmd_ClearBg2TeachyTvGraphic,.Lfe27-TTVcmd_ClearBg2TeachyTvGraphic
	.align	2, 0
	.type	 TTVcmd_NpcMoveAndSetupTextPrinter,function
	.thumb_func
TTVcmd_NpcMoveAndSetupTextPrinter:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L139
	add	r4, r1, r0
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L139+0x4
	add	r1, r0, r1
	ldrh	r2, [r4, #0x4]
	mov	r3, #0x4
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x23
	beq	.L135	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r4, #0x4]
	b	.L136
.L140:
	.align	2, 0
.L139:
	.word	gTasks+0x8
	.word	gSprites
.L135:
	ldrh	r2, [r1, #0x24]
	mov	r3, #0x24
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x78
	bne	.L137	@cond_branch
	add	r0, r1, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r0, .L141
	bl	TeachyTvInitTextPrinter
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
	b	.L136
.L142:
	.align	2, 0
.L141:
	.word	gTeachyTvText_PokedudeSaysHello
.L137:
	add	r0, r2, #0x1
	strh	r0, [r1, #0x24]
.L136:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 TTVcmd_NpcMoveAndSetupTextPrinter,.Lfe28-TTVcmd_NpcMoveAndSetupTextPrinter
	.align	2, 0
	.type	 TTVcmd_IdleIfTextPrinterIsActive,function
	.thumb_func
TTVcmd_IdleIfTextPrinterIsActive:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L145
	add	r4, r1, r0
	mov	r0, #0x0
	bl	RunTextPrinters_CheckActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L144	@cond_branch
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L144:
	pop	{r4}
	pop	{r0}
	bx	r0
.L146:
	.align	2, 0
.L145:
	.word	gTasks+0x8
.Lfe29:
	.size	 TTVcmd_IdleIfTextPrinterIsActive,.Lfe29-TTVcmd_IdleIfTextPrinterIsActive
	.section .rodata
	.align	2, 0
	.type	 array.90,object
array.90:
	.word	sBattleScript
	.word	sStatusScript
	.word	sMatchupsScript
	.word	sCatchingScript
	.word	sTMsScript
	.word	sRegisterKeyItemScript
	.size	 array.90,24
.text
	.align	2, 0
	.type	 TeachyTvRenderMsgAndSwitchClusterFuncs,function
	.thumb_func
TeachyTvRenderMsgAndSwitchClusterFuncs:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r6, r0, #0x3
	ldr	r7, .L150
	add	r5, r6, r7
	ldr	r0, .L150+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L148	@cond_branch
	ldr	r0, .L150+0x8
	ldr	r0, [r0]
	ldr	r1, .L150+0xc
	add	r0, r0, r1
	mov	r4, #0x0
	mov	r1, #0x1
	strb	r1, [r0]
	ldrb	r0, [r5, #0x2]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	TeachyTvSetSpriteCoordsAndSwitchFrame
	mov	r0, #0x0
	mov	r1, #0xcc
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	bl	TeachyTvClearBg1EndGraphicText
	strh	r4, [r5, #0x4]
	strh	r4, [r5, #0x6]
	add	r0, r7, #0
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L150+0x10
	str	r1, [r0]
	b	.L149
.L151:
	.align	2, 0
.L150:
	.word	gTasks+0x8
	.word	gMain
	.word	sResources
	.word	0x4006
	.word	TTVcmd_End
.L148:
	ldr	r1, .L152
	ldr	r0, .L152+0x4
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r3, #0x6
	ldrsh	r0, [r5, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r2, #0
	bl	_call_via_r1
.L149:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	array.90
	.word	sStaticResources
.Lfe30:
	.size	 TeachyTvRenderMsgAndSwitchClusterFuncs,.Lfe30-TeachyTvRenderMsgAndSwitchClusterFuncs
	.section .rodata
	.align	2, 0
	.type	 texts.94,object
texts.94:
	.word	gTeachyTvText_BattleScript1
	.word	gTeachyTvText_StatusScript1
	.word	gTeachyTvText_MatchupsScript1
	.word	gTeachyTvText_CatchingScript1
	.word	gTeachyTvText_TMsScript1
	.word	gTeachyTvText_RegisterScript1
.text
	.align	2, 0
	.type	 TTVcmd_TextPrinterSwitchStringByOptionChosen,function
	.thumb_func
TTVcmd_TextPrinterSwitchStringByOptionChosen:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L155
	add	r4, r4, r0
	ldr	r1, .L155+0x4
	ldr	r0, .L155+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	TeachyTvInitTextPrinter
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
	pop	{r4}
	pop	{r0}
	bx	r0
.L156:
	.align	2, 0
.L155:
	.word	gTasks+0x8
	.word	texts.94
	.word	sStaticResources
.Lfe31:
	.size	 TTVcmd_TextPrinterSwitchStringByOptionChosen,.Lfe31-TTVcmd_TextPrinterSwitchStringByOptionChosen
	.section .rodata
	.align	2, 0
	.type	 texts.98,object
texts.98:
	.word	gTeachyTvText_BattleScript2
	.word	gTeachyTvText_StatusScript2
	.word	gTeachyTvText_MatchupsScript2
	.word	gTeachyTvText_CatchingScript2
	.word	gTeachyTvText_TMsScript2
	.word	gTeachyTvText_RegisterScript2
.text
	.align	2, 0
	.type	 TTVcmd_TextPrinterSwitchStringByOptionChosen2,function
	.thumb_func
TTVcmd_TextPrinterSwitchStringByOptionChosen2:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L158
	add	r4, r4, r0
	ldr	r1, .L158+0x4
	ldr	r0, .L158+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	TeachyTvInitTextPrinter
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
	pop	{r4}
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	gTasks+0x8
	.word	texts.98
	.word	sStaticResources
.Lfe32:
	.size	 TTVcmd_TextPrinterSwitchStringByOptionChosen2,.Lfe32-TTVcmd_TextPrinterSwitchStringByOptionChosen2
	.section .rodata
	.align	1, 0
	.type	 sBg1EndGraphic,object
sBg1EndGraphic:
	.short	0xd1
	.short	0xd2
	.short	0xd3
	.short	0xd4
	.short	0xd5
	.short	0xd6
	.short	0xd7
	.short	0xd8
	.short	0xe1
	.short	0xe2
	.short	0xe3
	.short	0xe4
	.short	0xe5
	.short	0xe6
	.short	0xe7
	.short	0xe8
	.size	 sBg1EndGraphic,32
	.align	2, 0
	.type	 sSubspriteArray,object
	.size	 sSubspriteArray,8
sSubspriteArray:
	.byte	-0x8
	.byte	-0x8
	.byte	0x1
	.byte	0xc0
	.byte	-0x8
	.byte	0x0
	.byte	0x21
	.byte	0x80
	.align	2, 0
	.type	 sSubspriteTableArray,object
sSubspriteTableArray:
	.byte	0x0
	.space	3
	.word	0x0
	.byte	0x2
	.space	3
	.word	sSubspriteArray
	.size	 sSubspriteTableArray,16
	.type	 sGrassAnimArray,object
sGrassAnimArray:
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.size	 sGrassAnimArray,144
.text
	.align	2, 0
	.type	 TTVcmd_IdleIfTextPrinterIsActive2,function
	.thumb_func
TTVcmd_IdleIfTextPrinterIsActive2:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L162
	add	r4, r1, r0
	mov	r0, #0x0
	bl	RunTextPrinters_CheckActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L161	@cond_branch
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L161:
	pop	{r4}
	pop	{r0}
	bx	r0
.L163:
	.align	2, 0
.L162:
	.word	gTasks+0x8
.Lfe33:
	.size	 TTVcmd_IdleIfTextPrinterIsActive2,.Lfe33-TTVcmd_IdleIfTextPrinterIsActive2
	.align	2, 0
	.type	 TTVcmd_EraseTextWindowIfKeyPressed,function
	.thumb_func
TTVcmd_EraseTextWindowIfKeyPressed:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L166
	add	r4, r1, r0
	ldr	r0, .L166+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L165	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xcc
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L165:
	pop	{r4}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	gTasks+0x8
	.word	gMain
.Lfe34:
	.size	 TTVcmd_EraseTextWindowIfKeyPressed,.Lfe34-TTVcmd_EraseTextWindowIfKeyPressed
	.align	2, 0
	.type	 TTVcmd_StartAnimNpcWalkIntoGrass,function
	.thumb_func
TTVcmd_StartAnimNpcWalkIntoGrass:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L169
	add	r4, r4, r0
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L169+0x4
	add	r0, r0, r1
	mov	r1, #0x5
	bl	StartSpriteAnim
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
	pop	{r4}
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gTasks+0x8
	.word	gSprites
.Lfe35:
	.size	 TTVcmd_StartAnimNpcWalkIntoGrass,.Lfe35-TTVcmd_StartAnimNpcWalkIntoGrass
	.align	2, 0
	.type	 TTVcmd_DudeMoveUp,function
	.thumb_func
TTVcmd_DudeMoveUp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L174
	add	r4, r0, r1
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L174+0x4
	add	r6, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	mov	r0, #0x3
	mov	r2, #0x2
	bl	ChangeBgY
	ldrh	r0, [r4, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	mov	r3, #0xf
	and	r3, r3, r0
	cmp	r3, #0
	bne	.L172	@cond_branch
	ldr	r0, .L174+0x8
	ldr	r1, [r0]
	ldr	r2, .L174+0xc
	add	r1, r1, r2
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x24
	ldrsh	r1, [r6, r0]
	mov	r0, #0x26
	ldrsh	r2, [r6, r0]
	str	r3, [sp]
	add	r0, r5, #0
	mov	r3, #0x0
	bl	TeachyTvGrassAnimationMain
.L172:
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x30
	bne	.L173	@cond_branch
	mov	r1, #0x0
	strh	r1, [r4, #0x4]
	mov	r2, #0x1
	neg	r2, r2
	add	r0, r2, #0
	strh	r0, [r4, #0x8]
	strh	r1, [r4, #0xa]
	add	r0, r6, #0
	mov	r1, #0x7
	bl	StartSpriteAnim
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L173:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L175:
	.align	2, 0
.L174:
	.word	gTasks+0x8
	.word	gSprites
	.word	sResources
	.word	0x4005
.Lfe36:
	.size	 TTVcmd_DudeMoveUp,.Lfe36-TTVcmd_DudeMoveUp
	.align	2, 0
	.type	 TTVcmd_DudeMoveRight,function
	.thumb_func
TTVcmd_DudeMoveRight:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L180
	add	r4, r0, r1
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L180+0x4
	add	r6, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	mov	r0, #0x3
	mov	r2, #0x1
	bl	ChangeBgX
	ldrh	r0, [r4, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	mov	r2, #0xf
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L177	@cond_branch
	ldr	r0, .L180+0x8
	ldr	r1, [r0]
	ldr	r3, .L180+0xc
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L177:
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	add	r0, r0, #0x8
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L178	@cond_branch
	ldrh	r1, [r6, #0x24]
	add	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r3, #0x26
	ldrsh	r2, [r6, r3]
	str	r0, [sp]
	add	r0, r5, #0
	mov	r3, #0x0
	bl	TeachyTvGrassAnimationMain
.L178:
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x30
	bne	.L179	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	strh	r0, [r4, #0x8]
	strh	r0, [r4, #0xa]
	add	r0, r6, #0
	mov	r1, #0x3
	bl	StartSpriteAnim
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L179:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L181:
	.align	2, 0
.L180:
	.word	gTasks+0x8
	.word	gSprites
	.word	sResources
	.word	0x4004
.Lfe37:
	.size	 TTVcmd_DudeMoveRight,.Lfe37-TTVcmd_DudeMoveRight
	.align	2, 0
	.type	 TTVcmd_DudeTurnLeft,function
	.thumb_func
TTVcmd_DudeTurnLeft:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	ldr	r0, .L183
	add	r5, r5, r0
	mov	r1, #0x2
	ldrsh	r0, [r5, r1]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L183+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x6
	bl	StartSpriteAnim
	ldrh	r0, [r5, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x6]
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	strh	r0, [r5, #0xa]
	mov	r0, #0x24
	ldrsh	r1, [r4, r0]
	mov	r0, #0x26
	ldrsh	r2, [r4, r0]
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r6, #0
	mov	r3, #0x0
	bl	TeachyTvGrassAnimationMain
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	gTasks+0x8
	.word	gSprites
.Lfe38:
	.size	 TTVcmd_DudeTurnLeft,.Lfe38-TTVcmd_DudeTurnLeft
	.align	2, 0
	.type	 TTVcmd_DudeMoveLeft,function
	.thumb_func
TTVcmd_DudeMoveLeft:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	ldr	r1, .L189
	add	r5, r0, r1
	mov	r0, #0x2
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L189+0x4
	add	r4, r0, r1
	ldrh	r1, [r4, #0x24]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L186	@cond_branch
	sub	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r6, #0x26
	ldrsh	r2, [r4, r6]
	str	r0, [sp]
	add	r0, r3, #0
	mov	r3, #0x0
	bl	TeachyTvGrassAnimationMain
.L186:
	ldrh	r1, [r4, #0x24]
	mov	r2, #0x24
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x8
	bne	.L187	@cond_branch
	ldrh	r0, [r5, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x6]
	b	.L188
.L190:
	.align	2, 0
.L189:
	.word	gTasks+0x8
	.word	gSprites
.L187:
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x24]
.L188:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 TTVcmd_DudeMoveLeft,.Lfe39-TTVcmd_DudeMoveLeft
	.align	2, 0
	.type	 TTVcmd_RenderAndRemoveBg1EndGraphic,function
	.thumb_func
TTVcmd_RenderAndRemoveBg1EndGraphic:
	push	{r4, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L194
	add	r4, r1, r0
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L192	@cond_branch
	ldr	r1, .L194+0x4
	mov	r0, #0x8
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x14
	mov	r3, #0xa
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
.L192:
	ldrh	r0, [r4, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7e
	ble	.L193	@cond_branch
	bl	TeachyTvClearBg1EndGraphicText
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L193:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L195:
	.align	2, 0
.L194:
	.word	gTasks+0x8
	.word	sBg1EndGraphic
.Lfe40:
	.size	 TTVcmd_RenderAndRemoveBg1EndGraphic,.Lfe40-TTVcmd_RenderAndRemoveBg1EndGraphic
	.align	2, 0
	.type	 TeachyTvClearBg1EndGraphicText,function
	.thumb_func
TeachyTvClearBg1EndGraphicText:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x8
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x14
	mov	r3, #0xa
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 TeachyTvClearBg1EndGraphicText,.Lfe41-TeachyTvClearBg1EndGraphicText
	.align	2, 0
	.type	 TTVcmd_End,function
	.thumb_func
TTVcmd_End:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r6, r1, #0x3
	ldr	r7, .L200
	add	r5, r6, r7
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L198	@cond_branch
	mov	r0, #0xad
	lsl	r0, r0, #0x1
	bl	PlayNewMapMusic
.L198:
	bl	TeachyTvBg2AnimController
	ldrh	r0, [r5, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3f
	ble	.L199	@cond_branch
	mov	r4, #0x0
	strh	r4, [r5, #0x4]
	strh	r4, [r5, #0x6]
	bl	TeachyTvSetupWindow
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5]
	add	r0, r7, #0
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L200+0x4
	str	r1, [r0]
	mov	r0, #0x0
	bl	PutWindowTilemap
	bl	TeachyTvSetupScrollIndicatorArrowPair
	bl	TeachyTvSetWindowRegs
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x3
	mov	r2, #0x2
	bl	ChangeBgX
	mov	r1, #0xa0
	lsl	r1, r1, #0x6
	mov	r0, #0x3
	mov	r2, #0x1
	bl	ChangeBgY
	ldr	r2, .L200+0x8
	ldr	r0, [r2]
	ldr	r1, .L200+0xc
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r2]
	add	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r1, .L200+0x10
	add	r0, r0, r1
	strb	r4, [r0]
.L199:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L201:
	.align	2, 0
.L200:
	.word	gTasks+0x8
	.word	TeachyTvOptionListController
	.word	sResources
	.word	0x4004
	.word	0x4006
.Lfe42:
	.size	 TTVcmd_End,.Lfe42-TTVcmd_End
	.align	2, 0
	.type	 TTVcmd_TaskBattleOrFadeByOptionChosen,function
	.thumb_func
TTVcmd_TaskBattleOrFadeByOptionChosen:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	ldr	r0, .L212
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0
	blt	.L203	@cond_branch
	cmp	r0, #0x3
	bgt	.L207	@cond_branch
	add	r0, r1, #0
	bl	TeachyTvPrepBattle
	b	.L203
.L213:
	.align	2, 0
.L212:
	.word	sStaticResources
.L207:
	cmp	r0, #0x5
	bgt	.L203	@cond_branch
	ldr	r0, .L214
	ldr	r1, [r0]
	ldr	r0, .L214+0x4
	str	r0, [r1]
	add	r0, r2, #0
	bl	TeachyTvQuitBeginFade
.L203:
	pop	{r0}
	bx	r0
.L215:
	.align	2, 0
.L214:
	.word	sResources
	.word	TeachyTvSetupBagItemsByOptionChosen
.Lfe43:
	.size	 TTVcmd_TaskBattleOrFadeByOptionChosen,.Lfe43-TTVcmd_TaskBattleOrFadeByOptionChosen
	.align	2, 0
	.type	 TeachyTvSetupBagItemsByOptionChosen,function
	.thumb_func
TeachyTvSetupBagItemsByOptionChosen:
	push	{lr}
	ldr	r0, .L219
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0x4
	bne	.L217	@cond_branch
	mov	r0, #0xa
	bl	InitPokedudeBag
	b	.L218
.L220:
	.align	2, 0
.L219:
	.word	sStaticResources
.L217:
	mov	r0, #0x9
	bl	InitPokedudeBag
.L218:
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 TeachyTvSetupBagItemsByOptionChosen,.Lfe44-TeachyTvSetupBagItemsByOptionChosen
	.align	2, 0
	.type	 TeachyTvPostBattleFadeControl,function
	.thumb_func
TeachyTvPostBattleFadeControl:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r2, r1, #0x3
	ldr	r4, .L223
	add	r3, r2, r4
	ldr	r0, .L223+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L222	@cond_branch
	ldr	r1, .L223+0x8
	ldr	r0, .L223+0xc
	ldrb	r0, [r0, #0x5]
	add	r0, r0, r1
	ldrb	r0, [r0]
	strh	r0, [r3, #0x6]
	add	r0, r4, #0
	sub	r0, r0, #0x8
	add	r0, r2, r0
	ldr	r1, .L223+0x10
	str	r1, [r0]
.L222:
	pop	{r4}
	pop	{r0}
	bx	r0
.L224:
	.align	2, 0
.L223:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	sWhereToReturnToFromBattle
	.word	sStaticResources
	.word	TeachyTvRenderMsgAndSwitchClusterFuncs
.Lfe45:
	.size	 TeachyTvPostBattleFadeControl,.Lfe45-TeachyTvPostBattleFadeControl
	.align	2, 0
	.type	 TeachyTvGrassAnimationMain,function
	.thumb_func
TeachyTvGrassAnimationMain:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r4, [sp, #0x1c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r1, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r8, r4
	ldr	r0, .L229
	ldr	r0, [r0]
	ldr	r2, .L229+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L226	@cond_branch
	lsl	r0, r6, #0x10
	ldr	r2, .L229+0x8
	add	r0, r0, r2
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r5, r1, #0x10
	add	r1, r5, #0
	bl	TeachyTvGrassAnimationCheckIfNeedsToGenerateGrassObj
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L226	@cond_branch
	ldr	r0, .L229+0xc
	ldr	r0, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	add	r3, r7, #0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L229+0x10
	add	r4, r1, r0
	strh	r6, [r4, #0x24]
	add	r0, r5, #0
	add	r0, r0, #0x8
	strh	r0, [r4, #0x26]
	ldr	r0, .L229+0x14
	str	r0, [r4, #0x1c]
	mov	r0, r9
	strh	r0, [r4, #0x2e]
	mov	r2, r8
	cmp	r2, #0x1
	bne	.L227	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x4
	bl	SeekSpriteAnim
	ldrb	r0, [r4, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x8
	orr	r1, r1, r0
	strb	r1, [r4, #0x5]
	b	.L226
.L230:
	.align	2, 0
.L229:
	.word	sResources
	.word	0x4006
	.word	-0x100000
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	TeachyTvGrassAnimationObjCallback
.L227:
	ldr	r1, .L231
	add	r0, r4, #0
	bl	SetSubspriteTables
	add	r1, r4, #0
	add	r1, r1, #0x42
	mov	r0, #0x40
	strb	r0, [r1]
.L226:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L232:
	.align	2, 0
.L231:
	.word	sSubspriteTableArray
.Lfe46:
	.size	 TeachyTvGrassAnimationMain,.Lfe46-TeachyTvGrassAnimationMain
	.align	2, 0
	.type	 TeachyTvGrassAnimationObjCallback,function
	.thumb_func
TeachyTvGrassAnimationObjCallback:
	push	{r4, r5, lr}
	add	r3, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L241
	add	r4, r0, r1
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L241+0x4
	add	r5, r0, r1
	ldr	r0, .L241+0x8
	ldr	r0, [r0]
	ldr	r1, .L241+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L234	@cond_branch
	add	r0, r3, #0
	bl	DestroySprite
	b	.L235
.L242:
	.align	2, 0
.L241:
	.word	gTasks+0x8
	.word	gSprites
	.word	sResources
	.word	0x4006
.L234:
	add	r0, r3, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L236	@cond_branch
	add	r2, r3, #0
	add	r2, r2, #0x42
	ldrb	r0, [r2]
	mov	r1, #0x40
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r2]
	b	.L237
.L236:
	add	r2, r3, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
.L237:
	ldrh	r0, [r4, #0x8]
	ldrh	r2, [r3, #0x24]
	add	r0, r0, r2
	strh	r0, [r3, #0x24]
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r3, #0x26]
	add	r0, r0, r1
	strh	r0, [r3, #0x26]
	add	r0, r3, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L235	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x43
	mov	r0, #0x0
	strb	r0, [r1]
	ldrh	r1, [r3, #0x24]
	ldrh	r0, [r5, #0x24]
	sub	r1, r1, r0
	ldrh	r0, [r3, #0x26]
	ldrh	r2, [r5, #0x26]
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	mov	r2, #0xf0
	lsl	r2, r2, #0xc
	add	r1, r1, r2
	lsr	r1, r1, #0x10
	cmp	r1, #0x1e
	bhi	.L240	@cond_branch
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	ble	.L240	@cond_branch
	cmp	r1, #0x17
	ble	.L235	@cond_branch
.L240:
	add	r0, r3, #0
	bl	DestroySprite
.L235:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 TeachyTvGrassAnimationObjCallback,.Lfe47-TeachyTvGrassAnimationObjCallback
	.align	2, 0
	.type	 TeachyTvGrassAnimationCheckIfNeedsToGenerateGrassObj,function
	.thumb_func
TeachyTvGrassAnimationCheckIfNeedsToGenerateGrassObj:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r4, r0, #0x10
	cmp	r4, #0
	blt	.L245	@cond_branch
	lsl	r1, r1, #0x10
	cmp	r1, #0
	bge	.L244	@cond_branch
.L245:
	mov	r0, #0x0
	b	.L246
.L244:
	ldr	r3, .L247
	ldr	r0, .L247+0x4
	ldr	r2, [r0]
	ldr	r5, .L247+0x8
	add	r0, r2, r5
	asr	r1, r1, #0x14
	ldrb	r0, [r0]
	add	r1, r1, r0
	lsl	r1, r1, #0x4
	ldr	r0, .L247+0xc
	add	r2, r2, r0
	asr	r0, r4, #0x14
	ldrb	r2, [r2]
	add	r0, r0, r2
	add	r1, r1, r0
	add	r1, r1, r3
	ldrb	r0, [r1]
.L246:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L248:
	.align	2, 0
.L247:
	.word	sGrassAnimArray
	.word	sResources
	.word	0x4005
	.word	0x4004
.Lfe48:
	.size	 TeachyTvGrassAnimationCheckIfNeedsToGenerateGrassObj,.Lfe48-TeachyTvGrassAnimationCheckIfNeedsToGenerateGrassObj
	.align	2, 0
	.type	 TeachyTvPrepBattle,function
	.thumb_func
TeachyTvPrepBattle:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L253
	add	r5, r0, r1
	bl	TeachyTvFree
	ldr	r1, .L253+0x4
	ldr	r4, .L253+0x8
	ldrb	r0, [r4, #0x5]
	strh	r0, [r1]
	ldr	r1, .L253+0xc
	ldr	r0, .L253+0x10
	str	r0, [r1, #0x8]
	bl	SavePlayerParty
	bl	InitPokedudePartyAndOpponent
	mov	r0, #0x0
	bl	PlayMapChosenOrBattleBGM
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0
	bne	.L250	@cond_branch
	mov	r0, #0x9
	b	.L252
.L254:
	.align	2, 0
.L253:
	.word	gTasks+0x8
	.word	gSpecialVar_0x8004
	.word	sStaticResources
	.word	gMain
	.word	TeachyTvRestorePlayerPartyCallback
.L250:
	mov	r0, #0x8
.L252:
	strh	r0, [r5, #0xc]
	mov	r0, #0x0
	strh	r0, [r5, #0xe]
	ldr	r1, .L255
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L255+0x4
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L256:
	.align	2, 0
.L255:
	.word	gTasks
	.word	TeachyTvPreBattleAnimAndSetBattleCallback
.Lfe49:
	.size	 TeachyTvPrepBattle,.Lfe49-TeachyTvPrepBattle
	.align	2, 0
	.type	 TeachyTvPreBattleAnimAndSetBattleCallback,function
	.thumb_func
TeachyTvPreBattleAnimAndSetBattleCallback:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L264
	add	r4, r0, r1
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L259	@cond_branch
	cmp	r0, #0x1
	beq	.L260	@cond_branch
	b	.L258
.L265:
	.align	2, 0
.L264:
	.word	gTasks+0x8
.L259:
	ldrb	r0, [r4, #0xc]
	bl	BT_StartOnField
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	b	.L258
.L260:
	bl	BT_IsDone
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L258	@cond_branch
	ldr	r0, .L266
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L258:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L267:
	.align	2, 0
.L266:
	.word	CB2_InitBattle
.Lfe50:
	.size	 TeachyTvPreBattleAnimAndSetBattleCallback,.Lfe50-TeachyTvPreBattleAnimAndSetBattleCallback
	.align	2, 0
	.type	 TeachyTvRestorePlayerPartyCallback,function
	.thumb_func
TeachyTvRestorePlayerPartyCallback:
	push	{lr}
	bl	LoadPlayerParty
	ldr	r0, .L271
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L269	@cond_branch
	bl	SetTeachyTvControllerModeToResume
	b	.L270
.L272:
	.align	2, 0
.L271:
	.word	gBattleOutcome
.L269:
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	bl	PlayNewMapMusic
.L270:
	bl	CB2_ReturnToTeachyTV
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 TeachyTvRestorePlayerPartyCallback,.Lfe51-TeachyTvRestorePlayerPartyCallback
	.align	2, 0
	.type	 TeachyTvLoadBg3Map,function
	.thumb_func
TeachyTvLoadBg3Map:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x10]
	ldr	r1, .L301
	mov	r8, r1
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	bl	AllocZeroed
	add	r6, r0, #0
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	bl	AllocZeroed
	str	r0, [sp, #0x8]
	mov	r0, #0x10
	bl	Alloc
	str	r0, [sp, #0xc]
	mov	r1, #0xff
	mov	r2, #0x10
	bl	memset
	mov	r2, r8
	ldr	r0, [r2, #0x10]
	mov	r2, #0xa0
	lsl	r2, r2, #0x2
	ldr	r1, [sp, #0x8]
	bl	TeachyTvLoadMapTilesetToBuffer
	mov	r3, r8
	ldr	r0, [r3, #0x14]
	ldr	r2, [sp, #0x8]
	mov	r3, #0xa0
	lsl	r3, r3, #0x7
	add	r1, r2, r3
	mov	r2, #0xc0
	lsl	r2, r2, #0x1
	bl	TeachyTvLoadMapTilesetToBuffer
	mov	r4, #0x0
.L277:
	mov	r2, #0x0
	add	r0, r4, #0x6
	str	r0, [sp, #0x18]
	lsl	r1, r4, #0x4
	mov	sl, r1
	lsl	r3, r4, #0x6
	mov	r9, r3
	add	r4, r4, #0x1
	str	r4, [sp, #0x14]
.L281:
	mov	r1, r8
	ldr	r0, [r1]
	ldr	r3, [sp, #0x18]
	mul	r0, r0, r3
	ldr	r1, [r1, #0xc]
	add	r0, r2, r0
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0, #0x10]
	ldr	r3, .L301+0x4
	add	r0, r3, #0
	add	r4, r0, #0
	and	r4, r4, r1
	mov	r3, #0x0
	mov	r0, sl
	add	r1, r0, r2
	lsl	r5, r2, #0x1
	add	r7, r2, #0x1
	cmp	r3, r1
	bge	.L283	@cond_branch
	ldrh	r0, [r6]
	b	.L300
.L302:
	.align	2, 0
.L301:
	.word	Route1_Layout
	.word	0x3ff
.L284:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, r1
	bge	.L283	@cond_branch
	lsl	r0, r3, #0x1
	add	r0, r0, r6
	ldrh	r0, [r0]
.L300:
	cmp	r0, #0
	beq	.L299	@cond_branch
	cmp	r0, r4
	bne	.L284	@cond_branch
.L283:
	lsl	r0, r3, #0x1
	add	r0, r0, r6
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L289	@cond_branch
.L299:
	lsl	r0, r3, #0x1
	add	r0, r0, r6
	strh	r4, [r0]
	ldr	r0, [sp, #0x10]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x10]
.L289:
	mov	r2, r9
	add	r1, r2, r5
	lsl	r1, r1, #0x1
	ldr	r0, [sp, #0x4]
	add	r1, r0, r1
	str	r3, [sp]
	mov	r0, r8
	ldr	r2, [sp, #0xc]
	add	r3, r4, #0
	bl	TeachyTvPushBackNewMapPalIndexArrayEntry
	lsl	r0, r7, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0xf
	bls	.L281	@cond_branch
	ldr	r1, [sp, #0x14]
	lsl	r0, r1, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x8
	bls	.L277	@cond_branch
	ldr	r2, [sp, #0x10]
	lsl	r0, r2, #0x7
	bl	Alloc
	add	r7, r0, #0
	mov	r0, #0x80
	bl	Alloc
	add	r5, r0, #0
	mov	r4, #0x0
	ldr	r3, [sp, #0x10]
	lsl	r3, r3, #0x17
	mov	r9, r3
	ldr	r0, [sp, #0x10]
	cmp	r4, r0
	bcs	.L293	@cond_branch
	ldr	r1, .L303
	mov	sl, r1
.L295:
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x80
	bl	memset
	lsl	r0, r4, #0x1
	add	r1, r0, r6
	ldrh	r0, [r1]
	cmp	r0, sl
	bhi	.L296	@cond_branch
	mov	r2, r8
	ldr	r0, [r2, #0x10]
	ldrh	r1, [r1]
	lsl	r1, r1, #0x4
	ldr	r0, [r0, #0xc]
	add	r0, r0, r1
	add	r1, r5, #0
	ldr	r2, [sp, #0x8]
	bl	TeachyTvComputeMapTilesFromTilesetAndMetaTiles
	b	.L297
.L304:
	.align	2, 0
.L303:
	.word	0x27f
.L296:
	mov	r3, r8
	ldr	r0, [r3, #0x14]
	ldrh	r1, [r1]
	ldr	r2, .L305
	add	r1, r1, r2
	lsl	r1, r1, #0x4
	ldr	r0, [r0, #0xc]
	add	r0, r0, r1
	add	r1, r5, #0
	ldr	r2, [sp, #0x8]
	bl	TeachyTvComputeMapTilesFromTilesetAndMetaTiles
.L297:
	lsl	r1, r4, #0x7
	add	r1, r7, r1
	add	r0, r5, #0
	mov	r2, #0x20
	bl	CpuFastSet
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r3, [sp, #0x10]
	cmp	r4, r3
	bcc	.L295	@cond_branch
.L293:
	mov	r0, r9
	lsr	r2, r0, #0x10
	mov	r0, #0x3
	add	r1, r7, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	mov	r0, r8
	ldr	r1, [sp, #0xc]
	bl	TeachyTvLoadMapPalette
	add	r0, r5, #0
	bl	Free
	add	r0, r7, #0
	bl	Free
	ldr	r0, [sp, #0xc]
	bl	Free
	ldr	r0, [sp, #0x8]
	bl	Free
	add	r0, r6, #0
	bl	Free
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L306:
	.align	2, 0
.L305:
	.word	-0x280
.Lfe52:
	.size	 TeachyTvLoadBg3Map,.Lfe52-TeachyTvLoadBg3Map
	.align	2, 0
	.type	 TeachyTvLoadMapTilesetToBuffer,function
	.thumb_func
TeachyTvLoadMapTilesetToBuffer:
	push	{lr}
	add	r3, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	cmp	r3, #0
	beq	.L308	@cond_branch
	ldrb	r0, [r3]
	cmp	r0, #0
	bne	.L309	@cond_branch
	ldr	r0, [r3, #0x4]
	lsl	r2, r2, #0x3
	bl	CpuFastSet
	b	.L308
.L309:
	ldr	r0, [r3, #0x4]
	bl	LZDecompressWram
.L308:
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 TeachyTvLoadMapTilesetToBuffer,.Lfe53-TeachyTvLoadMapTilesetToBuffer
	.align	2, 0
	.type	 TeachyTvPushBackNewMapPalIndexArrayEntry,function
	.thumb_func
TeachyTvPushBackNewMapPalIndexArrayEntry:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	add	r7, r1, #0
	add	r6, r2, #0
	ldr	r0, [sp, #0x14]
	lsl	r3, r3, #0x10
	lsr	r1, r3, #0x10
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L315
	cmp	r1, r0
	bhi	.L312	@cond_branch
	ldr	r0, [r5, #0x10]
	b	.L314
.L316:
	.align	2, 0
.L315:
	.word	0x27f
.L312:
	ldr	r0, [r5, #0x14]
	ldr	r2, .L317
	add	r1, r1, r2
.L314:
	lsl	r1, r1, #0x4
	ldr	r0, [r0, #0xc]
	add	r5, r0, r1
	ldrh	r1, [r5]
	add	r0, r6, #0
	bl	TeachyTvComputePalIndexArrayEntryByMetaTile
	lsl	r0, r0, #0xc
	lsl	r4, r4, #0x2
	add	r0, r0, r4
	strh	r0, [r7]
	ldrh	r1, [r5, #0x2]
	add	r0, r6, #0
	bl	TeachyTvComputePalIndexArrayEntryByMetaTile
	lsl	r0, r0, #0xc
	add	r0, r0, r4
	add	r0, r0, #0x1
	strh	r0, [r7, #0x2]
	ldrh	r1, [r5, #0x4]
	add	r0, r6, #0
	bl	TeachyTvComputePalIndexArrayEntryByMetaTile
	add	r1, r7, #0
	add	r1, r1, #0x40
	lsl	r0, r0, #0xc
	add	r0, r0, r4
	add	r0, r0, #0x2
	strh	r0, [r1]
	ldrh	r1, [r5, #0x6]
	add	r0, r6, #0
	bl	TeachyTvComputePalIndexArrayEntryByMetaTile
	add	r1, r7, #0
	add	r1, r1, #0x42
	lsl	r0, r0, #0xc
	add	r0, r0, r4
	add	r0, r0, #0x3
	strh	r0, [r1]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	-0x280
.Lfe54:
	.size	 TeachyTvPushBackNewMapPalIndexArrayEntry,.Lfe54-TeachyTvPushBackNewMapPalIndexArrayEntry
	.align	2, 0
	.type	 TeachyTvComputeMapTilesFromTilesetAndMetaTiles,function
	.thumb_func
TeachyTvComputeMapTilesFromTilesetAndMetaTiles:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	mov	r8, r0
	mov	r9, r1
	add	r5, r2, #0
	ldrh	r2, [r0]
	ldr	r4, .L320
	add	r1, r4, #0
	and	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r5, r1
	lsr	r2, r2, #0xa
	mov	r6, #0x3
	and	r2, r2, r6
	mov	r0, r9
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	mov	r0, r8
	ldrh	r2, [r0, #0x8]
	add	r1, r4, #0
	and	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r5, r1
	lsr	r2, r2, #0xa
	and	r2, r2, r6
	mov	r0, r9
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	mov	r0, #0x20
	add	r0, r0, r9
	mov	sl, r0
	mov	r0, r8
	ldrh	r2, [r0, #0x2]
	add	r1, r4, #0
	and	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r5, r1
	lsr	r2, r2, #0xa
	and	r2, r2, r6
	mov	r0, sl
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	mov	r0, r8
	ldrh	r2, [r0, #0xa]
	add	r1, r4, #0
	and	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r5, r1
	lsr	r2, r2, #0xa
	and	r2, r2, r6
	mov	r0, sl
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	mov	r0, #0x40
	add	r0, r0, r9
	mov	sl, r0
	mov	r0, r8
	ldrh	r2, [r0, #0x4]
	add	r1, r4, #0
	and	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r5, r1
	lsr	r2, r2, #0xa
	and	r2, r2, r6
	mov	r0, sl
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	mov	r0, r8
	ldrh	r2, [r0, #0xc]
	add	r1, r4, #0
	and	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r5, r1
	lsr	r2, r2, #0xa
	and	r2, r2, r6
	mov	r0, sl
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	mov	r0, #0x60
	add	r9, r9, r0
	mov	r0, r8
	ldrh	r2, [r0, #0x6]
	add	r1, r4, #0
	and	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r5, r1
	lsr	r2, r2, #0xa
	and	r2, r2, r6
	mov	r0, r9
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	mov	r0, r8
	ldrh	r2, [r0, #0xe]
	and	r4, r4, r2
	lsl	r4, r4, #0x5
	add	r5, r5, r4
	lsr	r2, r2, #0xa
	and	r2, r2, r6
	mov	r0, r9
	add	r1, r5, #0
	bl	TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L321:
	.align	2, 0
.L320:
	.word	0x3ff
.Lfe55:
	.size	 TeachyTvComputeMapTilesFromTilesetAndMetaTiles,.Lfe55-TeachyTvComputeMapTilesFromTilesetAndMetaTiles
	.align	2, 0
	.type	 TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles,function
	.thumb_func
TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r9, r0
	add	r4, r1, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	sl, r2
	mov	r0, #0x20
	bl	AllocZeroed
	add	r6, r0, #0
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [sp]
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x8
	bl	CpuFastSet
	mov	r0, #0x1
	mov	r1, sl
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L323	@cond_branch
	mov	r5, #0x0
	mov	r7, #0xf
	mov	ip, r7
	mov	r0, #0xf0
	mov	r8, r0
.L327:
	mov	r3, #0x0
	lsl	r4, r5, #0x2
.L331:
	sub	r0, r3, #0x3
	sub	r0, r4, r0
	add	r0, r6, r0
	ldrb	r1, [r0]
	add	r2, r4, r3
	ldr	r7, [sp]
	add	r2, r7, r2
	add	r0, r1, #0
	mov	r7, ip
	and	r0, r0, r7
	lsl	r0, r0, #0x4
	mov	r7, r8
	and	r1, r1, r7
	lsr	r1, r1, #0x4
	add	r0, r0, r1
	strb	r0, [r2]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x3
	bls	.L331	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x7
	bls	.L327	@cond_branch
	ldr	r0, [sp]
	add	r1, r6, #0
	mov	r2, #0x8
	bl	CpuFastSet
.L323:
	mov	r0, #0x2
	mov	r1, sl
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L334	@cond_branch
	mov	r5, #0x0
.L338:
	lsl	r0, r5, #0x2
	ldr	r7, [sp]
	add	r0, r0, r7
	mov	r1, #0x7
	sub	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	mov	r2, #0x4
	bl	memcpy
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x7
	bls	.L338	@cond_branch
	ldr	r0, [sp]
	add	r1, r6, #0
	mov	r2, #0x8
	bl	CpuFastSet
.L334:
	mov	r5, #0x0
	mov	r0, #0xf0
	mov	r8, r0
	mov	r1, #0xf
	mov	ip, r1
.L343:
	add	r4, r6, r5
	ldrb	r0, [r4]
	mov	r3, r8
	and	r3, r3, r0
	cmp	r3, #0
	beq	.L344	@cond_branch
	mov	r7, r9
	add	r2, r7, r5
	ldrb	r1, [r2]
	mov	r0, ip
	and	r0, r0, r1
	add	r0, r0, r3
	strb	r0, [r2]
.L344:
	ldrb	r0, [r4]
	mov	r3, ip
	and	r3, r3, r0
	cmp	r3, #0
	beq	.L342	@cond_branch
	mov	r0, r9
	add	r2, r0, r5
	ldrb	r1, [r2]
	mov	r0, r8
	and	r0, r0, r1
	add	r0, r0, r3
	strb	r0, [r2]
.L342:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1f
	bls	.L343	@cond_branch
	ldr	r0, [sp]
	bl	Free
	add	r0, r6, #0
	bl	Free
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles,.Lfe56-TeachyTvComputeSingleMapTileBlockFromTilesetAndMetaTiles
	.align	2, 0
	.type	 TeachyTvComputePalIndexArrayEntryByMetaTile,function
	.thumb_func
TeachyTvComputePalIndexArrayEntryByMetaTile:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x1c
	mov	r3, #0x0
	ldrb	r0, [r4]
	cmp	r0, r1
	beq	.L348	@cond_branch
	cmp	r0, #0xff
	bne	.L351	@cond_branch
	strb	r1, [r4]
	b	.L348
.L351:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0xf
	bhi	.L348	@cond_branch
	add	r2, r4, r3
	ldrb	r0, [r2]
	cmp	r0, r1
	beq	.L348	@cond_branch
	cmp	r0, #0xff
	bne	.L351	@cond_branch
	strb	r1, [r2]
.L348:
	mov	r0, #0xf
	sub	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 TeachyTvComputePalIndexArrayEntryByMetaTile,.Lfe57-TeachyTvComputePalIndexArrayEntryByMetaTile
	.align	2, 0
	.type	 TeachyTvLoadMapPalette,function
	.thumb_func
TeachyTvLoadMapPalette:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	mov	r4, #0x0
	ldrb	r0, [r5]
	cmp	r0, #0xff
	beq	.L359	@cond_branch
.L362:
	add	r1, r5, r4
	ldrb	r0, [r1]
	cmp	r0, #0x6
	bls	.L363	@cond_branch
	ldr	r0, [r6, #0x14]
	b	.L366
.L363:
	ldr	r0, [r6, #0x10]
.L366:
	ldrb	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r0, [r0, #0x8]
	add	r0, r0, r1
	mov	r1, #0xf
	sub	r1, r1, r4
	lsl	r1, r1, #0x14
	lsr	r1, r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bhi	.L359	@cond_branch
	add	r0, r5, r4
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L362	@cond_branch
.L359:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 TeachyTvLoadMapPalette,.Lfe58-TeachyTvLoadMapPalette
.text
	.align	2, 0 @ Don't pad with nop

