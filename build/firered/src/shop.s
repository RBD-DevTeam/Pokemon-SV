@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sViewportObjectEvents,object
	.size	 sViewportObjectEvents,128
sViewportObjectEvents:
	.short	0x0
	.space	6
	.space	120
	.globl	gShopData
	.align	2, 0
	.type	 gShopData,object
	.size	 gShopData,28
gShopData:
	.word	0x0
	.space	24
	.type	 sShopMenuWindowId,object
	.size	 sShopMenuWindowId,1
sShopMenuWindowId:
	.byte	0x0
	.globl	gShopTilemapBuffer1
	.align	2, 0
	.type	 gShopTilemapBuffer1,object
	.size	 gShopTilemapBuffer1,4
gShopTilemapBuffer1:
	.word	0x0
	.globl	gShopTilemapBuffer2
	.align	2, 0
	.type	 gShopTilemapBuffer2,object
	.size	 gShopTilemapBuffer2,4
gShopTilemapBuffer2:
	.word	0x0
	.globl	gShopTilemapBuffer3
	.align	2, 0
	.type	 gShopTilemapBuffer3,object
	.size	 gShopTilemapBuffer3,4
gShopTilemapBuffer3:
	.word	0x0
	.globl	gShopTilemapBuffer4
	.align	2, 0
	.type	 gShopTilemapBuffer4,object
	.size	 gShopTilemapBuffer4,4
gShopTilemapBuffer4:
	.word	0x0
	.globl	sShopMenuListMenu
	.align	2, 0
	.type	 sShopMenuListMenu,object
	.size	 sShopMenuListMenu,4
sShopMenuListMenu:
	.word	0x0
	.align	2, 0
	.type	 sShopMenuItemStrings,object
	.size	 sShopMenuItemStrings,4
sShopMenuItemStrings:
	.word	0x0
	.globl	gShopMenuHistory
	.align	2, 0
	.type	 gShopMenuHistory,object
	.size	 gShopMenuHistory,24
gShopMenuHistory:
	.word	0x0
	.space	8
	.space	12
	.section .rodata
	.align	2, 0
	.type	 sShopMenuActions_BuySellQuit,object
sShopMenuActions_BuySellQuit:
	.word	gText_ShopBuy
	.word	Task_HandleShopMenuBuy
	.word	gText_ShopSell
	.word	Task_HandleShopMenuSell
	.word	gText_ShopQuit
	.word	Task_HandleShopMenuQuit
	.size	 sShopMenuActions_BuySellQuit,24
	.align	2, 0
	.type	 sShopMenuActions_BuyQuit,object
sShopMenuActions_BuyQuit:
	.word	BuyMenuTryMakePurchase
	.word	BuyMenuReturnToItemList
	.size	 sShopMenuActions_BuyQuit,8
	.align	2, 0
	.type	 sShopMenuWindowTemplate,object
	.size	 sShopMenuWindowTemplate,8
sShopMenuWindowTemplate:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0xc
	.byte	0x6
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sShopBuyMenuBgTemplates,object
	.size	 sShopBuyMenuBgTemplates,16
sShopBuyMenuBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xc3
	.byte	0x31
	.byte	0x0
	.space	1
.text
	.align	2, 0
	.type	 CreateShopMenu,function
	.thumb_func
CreateShopMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetMartTypeFromItemList
	ldr	r4, .L6
	mov	r1, #0xf
	and	r1, r1, r0
	ldrb	r2, [r4, #0x16]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x16]
	mov	r0, #0x0
	strh	r0, [r4, #0xc]
	bl	ContextNpcGetTextColor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldrh	r0, [r4, #0x16]
	ldr	r1, .L6+0x4
	and	r1, r1, r0
	mov	r0, #0x40
	b	.L5
.L7:
	.align	2, 0
.L6:
	.word	gShopData
	.word	-0x1f1
.L3:
	ldrh	r0, [r4, #0x16]
	ldr	r1, .L8
	and	r1, r1, r0
	mov	r0, #0x50
.L5:
	orr	r1, r1, r0
	strh	r1, [r4, #0x16]
	ldr	r4, .L8+0x4
	ldr	r0, .L8+0x8
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	SetStdWindowBorderStyle
	mov	r0, #0x2
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r0, [r4]
	mov	r6, #0x10
	str	r6, [sp]
	mov	r5, #0x3
	str	r5, [sp, #0x4]
	ldr	r1, .L8+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x2
	bl	PrintTextArray
	ldrb	r0, [r4]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x2
	bl	Menu_InitCursor
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldr	r0, .L8+0x10
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L9:
	.align	2, 0
.L8:
	.word	-0x1f1
	.word	sShopMenuWindowId
	.word	sShopMenuWindowTemplate
	.word	sShopMenuActions_BuySellQuit
	.word	Task_ShopMenu
.Lfe1:
	.size	 CreateShopMenu,.Lfe1-CreateShopMenu
	.align	2, 0
	.type	 GetMartTypeFromItemList,function
	.thumb_func
GetMartTypeFromItemList:
	push	{r4, r5, lr}
	cmp	r0, #0
	beq	.L11	@cond_branch
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L19
.L20:
	mov	r0, #0x1
	b	.L19
.L11:
	mov	r4, #0x0
	ldr	r1, .L21
	ldrh	r0, [r1, #0x10]
	cmp	r4, r0
	bcs	.L13	@cond_branch
	ldr	r0, [r1, #0x4]
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L13	@cond_branch
	add	r5, r1, #0
.L15:
	ldr	r1, [r5, #0x4]
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	beq	.L20	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldrh	r0, [r5, #0x10]
	cmp	r4, r0
	bcs	.L13	@cond_branch
	ldr	r0, [r5, #0x4]
	lsl	r1, r4, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L15	@cond_branch
.L13:
	mov	r0, #0x0
.L19:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L22:
	.align	2, 0
.L21:
	.word	gShopData
.Lfe2:
	.size	 GetMartTypeFromItemList,.Lfe2-GetMartTypeFromItemList
	.align	2, 0
	.type	 SetShopItemsForSale,function
	.thumb_func
SetShopItemsForSale:
	push	{lr}
	add	r1, r0, #0
	ldr	r2, .L29
	str	r1, [r2, #0x4]
	mov	r0, #0x0
	strh	r0, [r2, #0x10]
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L23	@cond_branch
.L27:
	ldrh	r0, [r2, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x10]
	ldrh	r0, [r2, #0x10]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L27	@cond_branch
.L23:
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	gShopData
.Lfe3:
	.size	 SetShopItemsForSale,.Lfe3-SetShopItemsForSale
	.align	2, 0
	.type	 SetShopMenuCallback,function
	.thumb_func
SetShopMenuCallback:
	ldr	r1, .L32
	str	r0, [r1]
	bx	lr
.L33:
	.align	2, 0
.L32:
	.word	gShopData
.Lfe4:
	.size	 SetShopMenuCallback,.Lfe4-SetShopMenuCallback
	.align	2, 0
	.type	 Task_ShopMenu,function
	.thumb_func
Task_ShopMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	Menu_ProcessInputNoWrapAround
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L35	@cond_branch
	add	r0, r0, #0x1
	cmp	r1, r0
	bne	.L38	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	Task_HandleShopMenuQuit
	b	.L35
.L38:
	ldr	r4, .L40
	bl	Menu_GetCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x15
	add	r4, r4, #0x4
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
.L35:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	sShopMenuActions_BuySellQuit
.Lfe5:
	.size	 Task_ShopMenu,.Lfe5-Task_ShopMenu
	.align	2, 0
	.type	 Task_HandleShopMenuBuy,function
	.thumb_func
Task_HandleShopMenuBuy:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r2, .L43
	add	r0, r4, #0
	mov	r1, #0xe
	bl	SetWordTaskArg
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L43+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L43+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	CB2_InitBuyMenu
	.word	gTasks
	.word	Task_GoToBuyOrSellMenu
.Lfe6:
	.size	 Task_HandleShopMenuBuy,.Lfe6-Task_HandleShopMenuBuy
	.align	2, 0
	.type	 Task_HandleShopMenuSell,function
	.thumb_func
Task_HandleShopMenuSell:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r2, .L46
	add	r0, r4, #0
	mov	r1, #0xe
	bl	SetWordTaskArg
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L46+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L46+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	CB2_GoToSellMenu
	.word	gTasks
	.word	Task_GoToBuyOrSellMenu
.Lfe7:
	.size	 Task_HandleShopMenuSell,.Lfe7-Task_HandleShopMenuSell
	.align	2, 0
	.type	 CB2_GoToSellMenu,function
	.thumb_func
CB2_GoToSellMenu:
	push	{lr}
	ldr	r2, .L49
	mov	r0, #0x2
	mov	r1, #0x3
	bl	GoToBagMenu
	ldr	r1, .L49+0x4
	ldr	r0, .L49+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	CB2_ReturnToField
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
.Lfe8:
	.size	 CB2_GoToSellMenu,.Lfe8-CB2_GoToSellMenu
	.align	2, 0
	.type	 Task_HandleShopMenuQuit,function
	.thumb_func
Task_HandleShopMenuQuit:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ClearShopMenuWindow
	bl	RecordQuestLogItemPurchase
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L53
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L52	@cond_branch
	bl	_call_via_r0
.L52:
	pop	{r4}
	pop	{r0}
	bx	r0
.L54:
	.align	2, 0
.L53:
	.word	gShopData
.Lfe9:
	.size	 Task_HandleShopMenuQuit,.Lfe9-Task_HandleShopMenuQuit
	.align	2, 0
	.type	 ClearShopMenuWindow,function
	.thumb_func
ClearShopMenuWindow:
	push	{r4, lr}
	ldr	r4, .L56
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	sShopMenuWindowId
.Lfe10:
	.size	 ClearShopMenuWindow,.Lfe10-ClearShopMenuWindow
	.align	2, 0
	.type	 Task_GoToBuyOrSellMenu,function
	.thumb_func
Task_GoToBuyOrSellMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L60
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L58	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xe
	bl	GetWordTaskArg
	bl	SetMainCallback2
	bl	FreeAllWindowBuffers
	add	r0, r4, #0
	bl	DestroyTask
.L58:
	pop	{r4}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	gPaletteFade
.Lfe11:
	.size	 Task_GoToBuyOrSellMenu,.Lfe11-Task_GoToBuyOrSellMenu
	.align	2, 0
	.type	 MapPostLoadHook_ReturnToShopMenu,function
	.thumb_func
MapPostLoadHook_ReturnToShopMenu:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L63
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L64:
	.align	2, 0
.L63:
	.word	Task_ReturnToShopMenu
.Lfe12:
	.size	 MapPostLoadHook_ReturnToShopMenu,.Lfe12-MapPostLoadHook_ReturnToShopMenu
	.align	2, 0
	.type	 Task_ReturnToShopMenu,function
	.thumb_func
Task_ReturnToShopMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L65	@cond_branch
	bl	GetMartFontId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L67
	ldr	r3, .L67+0x4
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
.L65:
	pop	{r4}
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	gText_AnythingElseICanHelp
	.word	ShowShopMenuAfterExitingBuyOrSellMenu
.Lfe13:
	.size	 Task_ReturnToShopMenu,.Lfe13-Task_ReturnToShopMenu
	.align	2, 0
	.type	 ShowShopMenuAfterExitingBuyOrSellMenu,function
	.thumb_func
ShowShopMenuAfterExitingBuyOrSellMenu:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L70
	ldrb	r0, [r0, #0x16]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	gShopData
.Lfe14:
	.size	 ShowShopMenuAfterExitingBuyOrSellMenu,.Lfe14-ShowShopMenuAfterExitingBuyOrSellMenu
	.align	2, 0
	.type	 CB2_BuyMenu,function
	.thumb_func
CB2_BuyMenu:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	bl	DoScheduledBgTilemapCopiesToVram
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 CB2_BuyMenu,.Lfe15-CB2_BuyMenu
	.align	2, 0
	.type	 VBlankCB_BuyMenu,function
	.thumb_func
VBlankCB_BuyMenu:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 VBlankCB_BuyMenu,.Lfe16-VBlankCB_BuyMenu
	.align	2, 0
	.type	 CB2_InitBuyMenu,function
	.thumb_func
CB2_InitBuyMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L86
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r5, r0, r1
	ldrb	r4, [r5]
	cmp	r4, #0
	beq	.L76	@cond_branch
	cmp	r4, #0x1
	bne	.LCB652
	b	.L79	@long jump
.LCB652:
	ldr	r0, .L86+0x4
	mov	r5, #0x0
	strh	r5, [r0, #0xc]
	strh	r5, [r0, #0xe]
	bl	BuyMenuDrawGraphics
	bl	BuyMenuAddScrollIndicatorArrows
	ldr	r0, .L86+0x8
	mov	r1, #0x8
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L86+0xc
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	ldr	r2, .L86+0x10
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x16]
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	str	r5, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L86+0x14
	bl	SetVBlankCallback
	ldr	r0, .L86+0x18
	bl	SetMainCallback2
	b	.L74
.L87:
	.align	2, 0
.L86:
	.word	gMain
	.word	gShopData
	.word	Task_BuyMenu
	.word	gMultiuseListMenuTemplate
	.word	gTasks
	.word	VBlankCB_BuyMenu
	.word	CB2_BuyMenu
.L76:
	bl	SetVBlankHBlankCallbacksToNull
	str	r4, [sp, #0x8]
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	ldr	r2, .L88
	add	r0, sp, #0x8
	bl	CpuFastSet
	bl	ScanlineEffect_Stop
	bl	ResetTempTileDataBuffers
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ClearScheduledBgCopiesToVram
	bl	ResetItemMenuIconState
	bl	InitShopData
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L74	@cond_branch
	bl	BuyMenuBuildListMenuTemplate
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L74	@cond_branch
	bl	BuyMenuInitBgs
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	ldr	r0, .L88+0x4
	ldrb	r0, [r0, #0x16]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	BuyMenuInitWindows
	bl	BuyMenuDecompressBgGraphics
	b	.L85
.L89:
	.align	2, 0
.L88:
	.word	0x1000100
	.word	gShopData
.L79:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L74	@cond_branch
.L85:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
.L74:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 CB2_InitBuyMenu,.Lfe17-CB2_InitBuyMenu
	.align	2, 0
	.type	 InitShopData,function
	.thumb_func
InitShopData:
	push	{r4, r5, lr}
	ldr	r4, .L96
	mov	r5, #0x80
	lsl	r5, r5, #0x4
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L94	@cond_branch
	ldr	r4, .L96+0x4
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L94	@cond_branch
	ldr	r4, .L96+0x8
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L94	@cond_branch
	ldr	r4, .L96+0xc
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L94	@cond_branch
	mov	r0, #0x1
	b	.L95
.L97:
	.align	2, 0
.L96:
	.word	gShopTilemapBuffer1
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer4
.L94:
	bl	BuyMenuFreeMemory
	bl	SetShopExitCallback
	mov	r0, #0x0
.L95:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 InitShopData,.Lfe18-InitShopData
	.align	2, 0
	.type	 BuyMenuInitBgs,function
	.thumb_func
BuyMenuInitBgs:
	push	{lr}
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L99
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L99+0x4
	ldr	r1, [r0]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r0, .L99+0x8
	ldr	r1, [r0]
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r0, .L99+0xc
	ldr	r1, [r0]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	sShopBuyMenuBgTemplates
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer4
	.word	gShopTilemapBuffer3
.Lfe19:
	.size	 BuyMenuInitBgs,.Lfe19-BuyMenuInitBgs
	.align	2, 0
	.type	 BuyMenuDecompressBgGraphics,function
	.thumb_func
BuyMenuDecompressBgGraphics:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L104
	mov	r2, #0x90
	lsl	r2, r2, #0x3
	mov	r3, #0xf7
	lsl	r3, r3, #0x2
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L104+0x4
	ldrb	r1, [r0, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L102	@cond_branch
	ldr	r0, .L104+0x8
	ldr	r1, .L104+0xc
	ldr	r1, [r1]
	bl	LZDecompressWram
	b	.L103
.L105:
	.align	2, 0
.L104:
	.word	gBuyMenuFrame_Gfx
	.word	gShopData
	.word	gBuyMenuFrame_Tilemap
	.word	gShopTilemapBuffer1
.L102:
	ldr	r0, .L106
	ldr	r1, .L106+0x4
	ldr	r1, [r1]
	bl	LZDecompressWram
.L103:
	mov	r0, #0x40
	bl	Alloc
	add	r4, r0, #0
	ldr	r0, .L106+0x8
	add	r1, r4, #0
	bl	LZDecompressWram
	add	r0, r4, #0
	mov	r1, #0xb0
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, r4, #0
	add	r0, r0, #0x20
	mov	r1, #0x60
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, r4, #0
	bl	Free
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gBuyMenuFrame_TmHmTilemap
	.word	gShopTilemapBuffer1
	.word	gBuyMenuFrame_Pal
.Lfe20:
	.size	 BuyMenuDecompressBgGraphics,.Lfe20-BuyMenuDecompressBgGraphics
	.align	2, 0
	.type	 RecolorItemDescriptionBox,function
	.thumb_func
RecolorItemDescriptionBox:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r2, #0x6
	cmp	r0, #0
	bne	.L109	@cond_branch
	mov	r2, #0xb
.L109:
	ldr	r0, .L113
	ldrb	r1, [r0, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L111	@cond_branch
	mov	r0, #0x6
	str	r0, [sp]
	str	r2, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x1e
	bl	SetBgTilemapPalette
	b	.L112
.L114:
	.align	2, 0
.L113:
	.word	gShopData
.L111:
	mov	r0, #0x8
	str	r0, [sp]
	str	r2, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0xc
	mov	r3, #0x1e
	bl	SetBgTilemapPalette
.L112:
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 RecolorItemDescriptionBox,.Lfe21-RecolorItemDescriptionBox
	.align	2, 0
	.type	 BuyMenuDrawGraphics,function
	.thumb_func
BuyMenuDrawGraphics:
	push	{lr}
	bl	BuyMenuDrawMapView
	bl	BuyMenuCopyTilemapData
	bl	BuyMenuDrawMoneyBox
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x3
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 BuyMenuDrawGraphics,.Lfe22-BuyMenuDrawGraphics
	.align	2, 0
	.type	 BuyMenuBuildListMenuTemplate,function
	.thumb_func
BuyMenuBuildListMenuTemplate:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L130
	ldr	r4, .L130+0x4
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x3
	bl	Alloc
	str	r0, [r7]
	cmp	r0, #0
	beq	.L118	@cond_branch
	ldr	r5, .L130+0x8
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	mov	r1, #0xd
	mul	r0, r0, r1
	bl	Alloc
	str	r0, [r5]
	cmp	r0, #0
	bne	.L117	@cond_branch
.L118:
	bl	BuyMenuFreeMemory
	bl	SetShopExitCallback
	mov	r0, #0x0
	b	.L128
.L131:
	.align	2, 0
.L130:
	.word	sShopMenuListMenu
	.word	gShopData
	.word	sShopMenuItemStrings
.L117:
	mov	r6, #0x0
	b	.L129
.L122:
	lsl	r1, r6, #0x3
	ldr	r0, [r7]
	add	r0, r0, r1
	ldr	r2, [r4, #0x4]
	lsl	r1, r6, #0x1
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r2, #0xd
	mov	r3, r6
	mul	r3, r3, r2
	ldr	r2, [r5]
	add	r2, r2, r3
	bl	PokeMartWriteNameAndIdAt
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L129:
	ldrh	r0, [r4, #0x10]
	cmp	r6, r0
	bcc	.L122	@cond_branch
	ldr	r5, .L132
	mov	r0, #0xd
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L132+0x4
	bl	StringCopy
	ldr	r0, .L132+0x8
	ldr	r2, [r0]
	lsl	r1, r6, #0x3
	add	r1, r1, r2
	ldr	r0, [r5]
	add	r0, r0, r4
	str	r0, [r1]
	mov	r0, #0x2
	neg	r0, r0
	str	r0, [r1, #0x4]
	ldr	r5, .L132+0xc
	str	r2, [r5]
	ldr	r6, .L132+0x10
	ldrh	r0, [r6, #0x10]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0xc]
	mov	r0, #0x4
	strb	r0, [r5, #0x10]
	strb	r1, [r5, #0x11]
	mov	r0, #0x9
	strb	r0, [r5, #0x12]
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	ldrb	r1, [r5, #0x16]
	sub	r0, r0, #0x9
	and	r0, r0, r1
	mov	r1, #0x39
	neg	r1, r1
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r5, #0x16]
	ldrb	r2, [r5, #0x14]
	mov	r1, #0x10
	neg	r1, r1
	add	r0, r1, #0
	and	r0, r0, r2
	mov	r3, #0x2
	orr	r0, r0, r3
	strb	r0, [r5, #0x14]
	ldrb	r2, [r5, #0x17]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r5, #0x17]
	ldrb	r0, [r5, #0x15]
	and	r1, r1, r0
	strb	r1, [r5, #0x15]
	mov	r0, #0x2
	mov	r1, #0x5
	bl	GetFontAttribute
	lsl	r0, r0, #0x4
	ldrb	r2, [r5, #0x14]
	mov	r4, #0xf
	add	r1, r4, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x14]
	mov	r0, #0x2
	mov	r1, #0x7
	bl	GetFontAttribute
	lsl	r0, r0, #0x4
	ldrb	r2, [r5, #0x15]
	add	r1, r4, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x15]
	ldr	r0, .L132+0x14
	str	r0, [r5, #0x4]
	ldr	r0, .L132+0x18
	str	r0, [r5, #0x8]
	ldrb	r2, [r5, #0x16]
	mov	r1, #0x3f
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r5, #0x16]
	ldrb	r0, [r5, #0x17]
	and	r1, r1, r0
	strb	r1, [r5, #0x17]
	ldrb	r0, [r6, #0x16]
	and	r4, r4, r0
	mov	r1, #0x6
	cmp	r4, #0x1
	bne	.L124	@cond_branch
	mov	r1, #0x5
.L124:
	ldrh	r0, [r6, #0x10]
	add	r0, r0, #0x1
	cmp	r0, r1
	ble	.L126	@cond_branch
	strh	r1, [r5, #0xe]
	b	.L127
.L133:
	.align	2, 0
.L132:
	.word	sShopMenuItemStrings
	.word	gFameCheckerText_Cancel
	.word	sShopMenuListMenu
	.word	gMultiuseListMenuTemplate
	.word	gShopData
	.word	BuyMenuPrintItemDescriptionAndShowItemIcon
	.word	BuyMenuPrintPriceInList
.L126:
	strh	r0, [r5, #0xe]
.L127:
	ldr	r0, .L134
	ldr	r1, .L134+0x4
	ldrh	r1, [r1, #0xe]
	strh	r1, [r0, #0x12]
	mov	r0, #0x1
.L128:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L135:
	.align	2, 0
.L134:
	.word	gShopData
	.word	gMultiuseListMenuTemplate
.Lfe23:
	.size	 BuyMenuBuildListMenuTemplate,.Lfe23-BuyMenuBuildListMenuTemplate
	.align	2, 0
	.type	 PokeMartWriteNameAndIdAt,function
	.thumb_func
PokeMartWriteNameAndIdAt:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r5, #0
	add	r1, r6, #0
	bl	CopyItemName
	str	r6, [r4]
	str	r5, [r4, #0x4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 PokeMartWriteNameAndIdAt,.Lfe24-PokeMartWriteNameAndIdAt
	.align	2, 0
	.type	 BuyMenuPrintItemDescriptionAndShowItemIcon,function
	.thumb_func
BuyMenuPrintItemDescriptionAndShowItemIcon:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L138	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L138:
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L139	@cond_branch
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	bl	ItemId_GetDescription
	add	r7, r0, #0
	b	.L140
.L139:
	ldr	r7, .L145
.L140:
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r6, .L145+0x4
	ldrb	r0, [r6, #0x16]
	mov	r4, #0xf
	and	r4, r4, r0
	cmp	r4, #0x1
	beq	.L141	@cond_branch
	ldrb	r1, [r6, #0x17]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1e
	mov	r0, #0x1
	eor	r0, r0, r1
	bl	DestroyItemMenuIcon
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L142	@cond_branch
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r6, #0x17]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1e
	bl	CreateItemMenuIcon
	b	.L143
.L146:
	.align	2, 0
.L145:
	.word	gText_QuitShopping
	.word	gShopData
.L142:
	ldr	r0, .L147
	ldrb	r1, [r6, #0x17]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1e
	bl	CreateItemMenuIcon
.L143:
	ldr	r3, .L147+0x4
	ldrb	r2, [r3, #0x17]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1e
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x7
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x17]
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	str	r0, [sp, #0xc]
	str	r0, [sp, #0x10]
	mov	r0, #0x5
	mov	r1, #0x2
	add	r2, r7, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	b	.L144
.L148:
	.align	2, 0
.L147:
	.word	0x177
	.word	gShopData
.L141:
	mov	r0, #0x6
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r5, #0
	bl	LoadTmHmNameInMart
	mov	r0, #0x3
	str	r0, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r0, [sp, #0x10]
	mov	r0, #0x5
	mov	r1, #0x2
	add	r2, r7, #0
	mov	r3, #0x2
	bl	BuyMenuPrint
.L144:
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 BuyMenuPrintItemDescriptionAndShowItemIcon,.Lfe25-BuyMenuPrintItemDescriptionAndShowItemIcon
	.align	2, 0
	.type	 BuyMenuPrintPriceInList,function
	.thumb_func
BuyMenuPrintPriceInList:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L150	@cond_branch
	ldr	r4, .L155
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	bl	itemid_get_market_price
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x4
	sub	r1, r1, r0
	ldr	r2, .L155+0x4
	add	r0, r1, #0
	sub	r1, r1, #0x1
	cmp	r0, #0
	beq	.L152	@cond_branch
	mov	r3, #0x0
.L153:
	strb	r3, [r2]
	add	r2, r2, #0x1
	add	r0, r1, #0
	sub	r1, r1, #0x1
	cmp	r0, #0
	bne	.L153	@cond_branch
.L152:
	ldr	r1, .L155+0x8
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L155+0x4
	str	r5, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	mov	r0, #0x1
	str	r0, [sp, #0x10]
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r3, #0x69
	bl	BuyMenuPrint
.L150:
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L156:
	.align	2, 0
.L155:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PokedollarVar1
.Lfe26:
	.size	 BuyMenuPrintPriceInList,.Lfe26-BuyMenuPrintPriceInList
	.align	2, 0
	.type	 LoadTmHmNameInMart,function
	.thumb_func
LoadTmHmNameInMart:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r7, r0, #0
	mov	r0, #0x2
	neg	r0, r0
	cmp	r7, r0
	beq	.L158	@cond_branch
	ldr	r4, .L160
	ldr	r0, .L160+0x4
	add	r1, r7, r0
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L160+0x8
	ldr	r1, .L160+0xc
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	mov	r6, #0x1
	str	r6, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	lsl	r0, r7, #0x10
	lsr	r0, r0, #0x10
	bl	ItemIdToBattleMoveId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L160+0x10
	add	r1, r1, r0
	add	r0, r5, #0
	bl	StringCopy
	mov	r0, #0x10
	str	r0, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	str	r6, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	b	.L159
.L161:
	.align	2, 0
.L160:
	.word	gStringVar1
	.word	-0x120
	.word	gStringVar4
	.word	gText_NumberClear01
	.word	gMoveNames
.L158:
	ldr	r2, .L162
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	mov	r5, #0x1
	str	r5, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x0
	mov	r3, #0x0
	bl	BuyMenuPrint
	ldr	r2, .L162+0x4
	mov	r0, #0x10
	str	r0, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	str	r5, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x2
	mov	r3, #0x0
	bl	BuyMenuPrint
.L159:
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L163:
	.align	2, 0
.L162:
	.word	gText_ThreeHyphens
	.word	gText_SevenHyphens
.Lfe27:
	.size	 LoadTmHmNameInMart,.Lfe27-LoadTmHmNameInMart
	.align	2, 0
	.globl	GetMartFontId
	.type	 GetMartFontId,function
	.thumb_func
GetMartFontId:
	ldr	r0, .L165
	ldrh	r0, [r0, #0x16]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x1b
	bx	lr
.L166:
	.align	2, 0
.L165:
	.word	gShopData
.Lfe28:
	.size	 GetMartFontId,.Lfe28-GetMartFontId
	.align	2, 0
	.type	 BuyMenuPrintCursor,function
	.thumb_func
BuyMenuPrintCursor:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ListMenuGetYCoordForPrintingArrowCursor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	BuyMenuPrintCursorAtYPosition
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 BuyMenuPrintCursor,.Lfe29-BuyMenuPrintCursor
	.align	2, 0
	.type	 BuyMenuPrintCursorAtYPosition,function
	.thumb_func
BuyMenuPrintCursorAtYPosition:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0xff
	bne	.L169	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x0
	bl	GetFontAttribute
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0x1
	bl	GetFontAttribute
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r4, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x4
	mov	r1, #0x0
	mov	r2, #0x1
	add	r3, r5, #0
	bl	FillWindowPixelRect
	mov	r0, #0x4
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L170
.L169:
	ldr	r2, .L171
	str	r5, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r0, #0x4
	mov	r1, #0x2
	mov	r3, #0x1
	bl	BuyMenuPrint
.L170:
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L172:
	.align	2, 0
.L171:
	.word	gText_SelectorArrow2
.Lfe30:
	.size	 BuyMenuPrintCursorAtYPosition,.Lfe30-BuyMenuPrintCursorAtYPosition
	.align	2, 0
	.type	 BuyMenuFreeMemory,function
	.thumb_func
BuyMenuFreeMemory:
	push	{lr}
	ldr	r0, .L180
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L174	@cond_branch
	bl	Free
.L174:
	ldr	r0, .L180+0x4
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L175	@cond_branch
	bl	Free
.L175:
	ldr	r0, .L180+0x8
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L176	@cond_branch
	bl	Free
.L176:
	ldr	r0, .L180+0xc
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L177	@cond_branch
	bl	Free
.L177:
	ldr	r0, .L180+0x10
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L178	@cond_branch
	bl	Free
.L178:
	ldr	r0, .L180+0x14
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L179	@cond_branch
	bl	Free
.L179:
	bl	FreeAllWindowBuffers
	pop	{r0}
	bx	r0
.L181:
	.align	2, 0
.L180:
	.word	gShopTilemapBuffer1
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer4
	.word	sShopMenuListMenu
	.word	sShopMenuItemStrings
.Lfe31:
	.size	 BuyMenuFreeMemory,.Lfe31-BuyMenuFreeMemory
	.align	2, 0
	.type	 SetShopExitCallback,function
	.thumb_func
SetShopExitCallback:
	push	{lr}
	ldr	r0, .L183
	ldr	r1, .L183+0x4
	str	r1, [r0]
	ldr	r0, .L183+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
	.word	CB2_ReturnToField
.Lfe32:
	.size	 SetShopExitCallback,.Lfe32-SetShopExitCallback
	.align	2, 0
	.type	 BuyMenuAddScrollIndicatorArrows,function
	.thumb_func
BuyMenuAddScrollIndicatorArrows:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L189
	ldrb	r1, [r4, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L186	@cond_branch
	ldrh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x12]
	sub	r0, r0, r1
	add	r0, r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	add	r0, r0, #0xe
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xa0
	mov	r2, #0x8
	mov	r3, #0x68
	b	.L188
.L190:
	.align	2, 0
.L189:
	.word	gShopData
.L186:
	ldrh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x12]
	sub	r0, r0, r1
	add	r0, r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	add	r0, r0, #0xe
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xa0
	mov	r2, #0x8
	mov	r3, #0x58
.L188:
	bl	AddScrollIndicatorArrowPairParameterized
	lsl	r0, r0, #0x3
	ldrb	r2, [r4, #0x17]
	mov	r1, #0x7
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x17]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 BuyMenuAddScrollIndicatorArrows,.Lfe33-BuyMenuAddScrollIndicatorArrows
	.align	2, 0
	.type	 BuyQuantityAddScrollIndicatorArrows,function
	.thumb_func
BuyQuantityAddScrollIndicatorArrows:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L192
	mov	r0, #0x1
	strh	r0, [r4, #0x18]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	add	r0, r0, #0x18
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0x98
	mov	r2, #0x48
	mov	r3, #0x68
	bl	AddScrollIndicatorArrowPairParameterized
	lsl	r0, r0, #0x3
	ldrb	r2, [r4, #0x17]
	mov	r1, #0x7
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x17]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	gShopData
.Lfe34:
	.size	 BuyQuantityAddScrollIndicatorArrows,.Lfe34-BuyQuantityAddScrollIndicatorArrows
	.align	2, 0
	.type	 BuyMenuRemoveScrollIndicatorArrows,function
	.thumb_func
BuyMenuRemoveScrollIndicatorArrows:
	push	{r4, lr}
	ldr	r4, .L196
	ldrb	r1, [r4, #0x17]
	mov	r0, #0xf8
	and	r0, r0, r1
	cmp	r0, #0xf8
	beq	.L194	@cond_branch
	lsr	r0, r1, #0x3
	bl	RemoveScrollIndicatorArrowPair
	ldrb	r0, [r4, #0x17]
	mov	r1, #0xf8
	orr	r0, r0, r1
	strb	r0, [r4, #0x17]
.L194:
	pop	{r4}
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	gShopData
.Lfe35:
	.size	 BuyMenuRemoveScrollIndicatorArrows,.Lfe35-BuyMenuRemoveScrollIndicatorArrows
	.align	2, 0
	.type	 BuyMenuDrawMapView,function
	.thumb_func
BuyMenuDrawMapView:
	push	{lr}
	bl	BuyMenuCollectObjectEventData
	bl	BuyMenuDrawObjectEvents
	bl	BuyMenuDrawMapBg
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 BuyMenuDrawMapView,.Lfe36-BuyMenuDrawMapView
	.align	2, 0
	.type	 BuyMenuDrawMapBg,function
	.thumb_func
BuyMenuDrawMapBg:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L212
	ldr	r0, [r0]
	mov	r9, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r1, sp
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x2
	strh	r0, [r1]
	ldrh	r0, [r4]
	sub	r0, r0, #0x3
	strh	r0, [r4]
	mov	r1, #0x0
	mov	sl, r4
.L203:
	mov	r4, #0x0
	lsl	r1, r1, #0x10
	mov	r8, r1
	asr	r7, r1, #0x10
.L207:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl	r4, r4, #0x10
	asr	r6, r4, #0x10
	add	r0, r0, r6
	mov	r2, sl
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	add	r1, r1, r7
	bl	MapGridGetMetatileIdAt
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r0, sp
	ldrh	r0, [r0]
	add	r0, r6, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r2, sl
	ldrh	r1, [r2]
	add	r1, r7, r1
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	MapGridGetMetatileLayerTypeAt
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, .L212+0x4
	cmp	r5, r0
	bhi	.L208	@cond_branch
	mov	r1, r9
	ldr	r0, [r1, #0x10]
	lsl	r1, r5, #0x4
	ldr	r2, [r0, #0xc]
	add	r2, r2, r1
	add	r0, r6, #0
	add	r1, r7, #0
	bl	BuyMenuDrawMapMetatile
	b	.L206
.L213:
	.align	2, 0
.L212:
	.word	gMapHeader
	.word	0x27f
.L208:
	mov	r2, r9
	ldr	r0, [r2, #0x14]
	ldr	r2, .L214
	add	r1, r5, r2
	lsl	r1, r1, #0x4
	ldr	r2, [r0, #0xc]
	add	r2, r2, r1
	add	r0, r6, #0
	add	r1, r7, #0
	bl	BuyMenuDrawMapMetatile
.L206:
	mov	r3, #0x80
	lsl	r3, r3, #0x9
	add	r0, r4, r3
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	ble	.L207	@cond_branch
	add	r0, r3, #0
	add	r0, r0, r8
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9
	ble	.L203	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L215:
	.align	2, 0
.L214:
	.word	-0x280
.Lfe37:
	.size	 BuyMenuDrawMapBg,.Lfe37-BuyMenuDrawMapBg
	.align	2, 0
	.type	 BuyMenuDrawMapMetatile,function
	.thumb_func
BuyMenuDrawMapMetatile:
	push	{r4, r5, r6, lr}
	add	r6, r2, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r2, r3, #0
	lsl	r0, r0, #0x11
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x16
	mov	r0, #0x80
	lsl	r0, r0, #0xf
	add	r1, r1, r0
	lsr	r1, r1, #0x10
	cmp	r3, #0x1
	beq	.L219	@cond_branch
	cmp	r3, #0x1
	bgt	.L223	@cond_branch
	cmp	r3, #0
	beq	.L218	@cond_branch
	b	.L217
.L223:
	cmp	r2, #0x2
	beq	.L220	@cond_branch
	b	.L217
.L218:
	ldr	r0, .L225
	ldr	r0, [r0]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L225+0x4
	b	.L224
.L226:
	.align	2, 0
.L225:
	.word	gShopTilemapBuffer4
	.word	gShopTilemapBuffer2
.L219:
	ldr	r0, .L227
	ldr	r0, [r0]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L227+0x4
.L224:
	ldr	r0, [r0]
	add	r3, r6, #0
	add	r3, r3, #0x8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
	b	.L217
.L228:
	.align	2, 0
.L227:
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer4
.L220:
	ldr	r0, .L229
	ldr	r0, [r0]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L229+0x4
	ldr	r0, [r0]
	add	r3, r6, #0
	add	r3, r3, #0x8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
.L217:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L230:
	.align	2, 0
.L229:
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer2
.Lfe38:
	.size	 BuyMenuDrawMapMetatile,.Lfe38-BuyMenuDrawMapMetatile
	.align	2, 0
	.type	 BuyMenuDrawMapMetatileLayer,function
	.thumb_func
BuyMenuDrawMapMetatileLayer:
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r3]
	strh	r0, [r1]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r1, #0x2]
	add	r2, r1, #0
	add	r2, r2, #0x40
	ldrh	r0, [r3, #0x4]
	strh	r0, [r2]
	add	r1, r1, #0x42
	ldrh	r0, [r3, #0x6]
	strh	r0, [r1]
	bx	lr
.Lfe39:
	.size	 BuyMenuDrawMapMetatileLayer,.Lfe39-BuyMenuDrawMapMetatileLayer
	.align	2, 0
	.type	 BuyMenuCollectObjectEventData,function
	.thumb_func
BuyMenuCollectObjectEventData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	mov	r9, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	bl	PlayerGetElevation
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r5, #0x0
	ldr	r2, .L258
	mov	r1, #0x10
.L236:
	lsl	r0, r5, #0x3
	add	r0, r0, r2
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xf
	bls	.L236	@cond_branch
	mov	r5, #0x0
	ldr	r6, .L258+0x4
	sub	r1, r6, #0x6
	mov	r8, r1
.L241:
	mov	r4, #0x0
	add	r2, r5, #0x1
	mov	sl, r2
.L245:
	mov	r1, sp
	ldr	r3, .L258+0x8
	add	r0, r3, #0
	ldrh	r1, [r1]
	add	r0, r0, r1
	add	r0, r0, r4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L258+0xc
	add	r1, r2, #0
	mov	r3, sp
	ldrh	r3, [r3, #0x2]
	add	r1, r1, r3
	add	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, [sp, #0x4]
	bl	GetObjectEventIdByPosition
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x10
	beq	.L244	@cond_branch
	mov	r0, r9
	lsl	r2, r0, #0x3
	mov	r1, r8
	add	r0, r2, r1
	mov	r7, #0x0
	strh	r3, [r0]
	mov	r0, r8
	add	r0, r0, #0x2
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r1, .L258+0x10
	add	r0, r2, r1
	strh	r5, [r0]
	ldr	r1, .L258+0x14
	lsl	r0, r3, #0x3
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x2
	beq	.L249	@cond_branch
	cmp	r0, #0x2
	bgt	.L254	@cond_branch
	cmp	r0, #0x1
	beq	.L248	@cond_branch
	b	.L252
.L259:
	.align	2, 0
.L258:
	.word	sViewportObjectEvents
	.word	sViewportObjectEvents+0x6
	.word	0xfffd
	.word	0xfffe
	.word	sViewportObjectEvents+0x4
	.word	gObjectEvents
.L254:
	cmp	r0, #0x3
	beq	.L250	@cond_branch
	b	.L252
.L248:
	add	r0, r2, r6
	strh	r7, [r0]
	b	.L247
.L249:
	add	r1, r2, r6
	mov	r0, #0x1
	b	.L257
.L250:
	add	r1, r2, r6
	mov	r0, #0x2
	b	.L257
.L252:
	add	r1, r2, r6
	mov	r0, #0x3
.L257:
	strh	r0, [r1]
.L247:
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
.L244:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L245	@cond_branch
	mov	r2, sl
	lsl	r0, r2, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L241	@cond_branch
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 BuyMenuCollectObjectEventData,.Lfe40-BuyMenuCollectObjectEventData
	.align	2, 0
	.type	 BuyMenuDrawObjectEvents,function
	.thumb_func
BuyMenuDrawObjectEvents:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	mov	r6, #0x0
	ldr	r7, .L267
	ldr	r0, .L267+0x4
	mov	r8, r0
	add	r1, r7, #0x6
	mov	r9, r1
.L264:
	lsl	r5, r6, #0x3
	add	r4, r5, r7
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x10
	beq	.L263	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, #0x0
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r4, [r1, #0x5]
	add	r1, r7, #0x2
	add	r1, r5, r1
	ldrh	r2, [r1]
	lsl	r2, r2, #0x14
	ldr	r1, .L267+0x8
	add	r2, r2, r1
	asr	r2, r2, #0x10
	add	r1, r7, #0x4
	add	r1, r5, r1
	ldrh	r3, [r1]
	lsl	r3, r3, #0x4
	mov	r1, #0xa
	ldrsh	r0, [r0, r1]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	sub	r0, r0, #0x30
	sub	r3, r3, r0
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	r0, #0x2
	str	r0, [sp]
	add	r0, r4, #0
	ldr	r1, .L267+0xc
	bl	CreateObjectGraphicsSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L267+0x10
	add	r2, r2, r0
	mov	r1, r9
	add	r0, r5, r1
	ldrb	r1, [r0]
	add	r0, r2, #0
	bl	StartSpriteAnim
.L263:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0xf
	bls	.L264	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	sViewportObjectEvents
	.word	gObjectEvents
	.word	-0x80000
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe41:
	.size	 BuyMenuDrawObjectEvents,.Lfe41-BuyMenuDrawObjectEvents
	.align	2, 0
	.type	 BuyMenuCopyTilemapData,function
	.thumb_func
BuyMenuCopyTilemapData:
	push	{r4, r5, r6, lr}
	ldr	r0, .L276
	ldr	r4, [r0]
	ldr	r0, .L276+0x4
	ldr	r3, [r0]
	mov	r1, #0x0
	ldr	r0, .L276+0x8
	add	r6, r0, #0
	ldr	r5, .L276+0xc
.L273:
	lsl	r0, r1, #0x10
	asr	r2, r0, #0x10
	lsl	r1, r2, #0x1
	add	r0, r1, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L272	@cond_branch
	add	r1, r1, r4
	add	r0, r0, r6
	strh	r0, [r1]
.L272:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r5
	ble	.L273	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer1
	.word	0xb3dc
	.word	0x3ff
.Lfe42:
	.size	 BuyMenuCopyTilemapData,.Lfe42-BuyMenuCopyTilemapData
	.align	2, 0
	.type	 BuyMenuPrintItemQuantityAndPrice,function
	.thumb_func
BuyMenuPrintItemQuantityAndPrice:
	push	{r4, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L279
	add	r4, r4, r0
	mov	r0, #0x3
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L279+0x4
	ldr	r3, [r0, #0x8]
	mov	r0, #0xff
	str	r0, [sp]
	mov	r0, #0x3
	mov	r1, #0x36
	mov	r2, #0xa
	bl	PrintMoneyAmount
	ldr	r0, .L279+0x8
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L279+0xc
	ldr	r1, .L279+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0xa
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	mov	r0, #0x1
	str	r0, [sp, #0x10]
	mov	r0, #0x3
	mov	r1, #0x0
	add	r2, r4, #0
	mov	r3, #0x2
	bl	BuyMenuPrint
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L280:
	.align	2, 0
.L279:
	.word	gTasks+0x8
	.word	gShopData
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TimesStrVar1
.Lfe43:
	.size	 BuyMenuPrintItemQuantityAndPrice,.Lfe43-BuyMenuPrintItemQuantityAndPrice
	.align	2, 0
	.type	 Task_BuyMenu,function
	.thumb_func
Task_BuyMenu:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L290
	add	r5, r0, r1
	ldr	r0, .L290+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L282	@cond_branch
	ldrb	r0, [r5, #0xe]
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	ldrb	r0, [r5, #0xe]
	ldr	r7, .L290+0x8
	sub	r2, r7, #0x2
	add	r1, r7, #0
	bl	ListMenuGetScrollAndRow
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L285	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L286	@cond_branch
	b	.L282
.L291:
	.align	2, 0
.L290:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gShopData+0xe
.L285:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	ExitBuyMenu
	b	.L282
.L286:
	mov	r0, #0x5
	bl	PlaySE
	strh	r4, [r5, #0xa]
	mov	r0, #0x5
	bl	ClearWindowTilemap
	bl	BuyMenuRemoveScrollIndicatorArrows
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x2
	bl	BuyMenuPrintCursor
	mov	r0, #0x1
	bl	RecolorItemDescriptionBox
	lsl	r0, r4, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	itemid_get_market_price
	add	r1, r0, #0
	add	r0, r7, #0
	sub	r0, r0, #0xe
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [r0, #0x8]
	ldr	r0, .L292
	ldr	r0, [r0]
	mov	r2, #0xa4
	lsl	r2, r2, #0x2
	add	r0, r0, r2
	bl	IsEnoughMoney
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L287	@cond_branch
	ldr	r1, .L292+0x4
	ldr	r2, .L292+0x8
	add	r0, r6, #0
	bl	BuyMenuDisplayMessage
	b	.L282
.L293:
	.align	2, 0
.L292:
	.word	gSaveBlock1Ptr
	.word	gText_YouDontHaveMoney
	.word	BuyMenuReturnToItemList
.L287:
	ldr	r1, .L294
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r1, .L294+0x4
	ldr	r2, .L294+0x8
	add	r0, r6, #0
	bl	BuyMenuDisplayMessage
.L282:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	gStringVar1
	.word	gText_Var1CertainlyHowMany
	.word	Task_BuyHowManyDialogueInit
.Lfe44:
	.size	 Task_BuyMenu,.Lfe44-Task_BuyMenu
	.align	2, 0
	.type	 Task_BuyHowManyDialogueInit,function
	.thumb_func
Task_BuyHowManyDialogueInit:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r5, r7, #0x2
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	ldr	r0, .L301
	add	r5, r5, r0
	ldrh	r0, [r5, #0xa]
	bl	BagGetQuantityByItemId
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, #0x1
	mov	r1, #0x0
	bl	BuyMenuQuantityBoxThinBorder
	ldr	r0, .L301+0x4
	add	r1, r4, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r6, .L301+0x8
	ldr	r1, .L301+0xc
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	mov	r4, #0x1
	str	r4, [sp, #0x10]
	mov	r0, #0x1
	mov	r1, #0x2
	add	r2, r6, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	strh	r4, [r5, #0x2]
	mov	r0, #0x3
	mov	r1, #0x0
	bl	BuyMenuQuantityBoxNormalBorder
	add	r0, r7, #0
	bl	BuyMenuPrintItemQuantityAndPrice
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L301+0x10
	ldr	r0, [r0]
	mov	r1, #0xa4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	bl	GetMoney
	add	r4, r0, #0
	ldrh	r0, [r5, #0xa]
	bl	itemid_get_market_price
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x63
	bls	.L297	@cond_branch
	ldr	r1, .L301+0x14
	mov	r0, #0x63
	b	.L300
.L302:
	.align	2, 0
.L301:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_InBagVar1
	.word	gSaveBlock1Ptr
	.word	gShopData
.L297:
	ldr	r1, .L303
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
.L300:
	strh	r0, [r1, #0x14]
	cmp	r2, #0x1
	beq	.L299	@cond_branch
	bl	BuyQuantityAddScrollIndicatorArrows
.L299:
	ldr	r0, .L303+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L303+0x8
	str	r0, [r1]
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L304:
	.align	2, 0
.L303:
	.word	gShopData
	.word	gTasks
	.word	Task_BuyHowManyDialogueHandleInput
.Lfe45:
	.size	 Task_BuyHowManyDialogueInit,.Lfe45-Task_BuyHowManyDialogueInit
	.align	2, 0
	.type	 Task_BuyHowManyDialogueHandleInput,function
	.thumb_func
Task_BuyHowManyDialogueHandleInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L311
	add	r4, r0, r1
	add	r0, r4, #0x2
	ldr	r6, .L311+0x4
	ldrh	r1, [r6, #0x14]
	bl	AdjustQuantityAccordingToDPadInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L306	@cond_branch
	ldrh	r0, [r4, #0xa]
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mul	r0, r0, r1
	str	r0, [r6, #0x8]
	add	r0, r5, #0
	bl	BuyMenuPrintItemQuantityAndPrice
	b	.L307
.L312:
	.align	2, 0
.L311:
	.word	gTasks+0x8
	.word	gShopData
.L306:
	ldr	r0, .L313
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L308	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	BuyMenuRemoveScrollIndicatorArrows
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x1
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	ClearWindowTilemap
	mov	r0, #0x4
	bl	PutWindowTilemap
	ldrh	r0, [r4, #0xa]
	ldr	r1, .L313+0x4
	bl	CopyItemName
	ldr	r0, .L313+0x8
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L313+0xc
	ldr	r1, [r6, #0x8]
	mov	r2, #0x0
	mov	r3, #0x8
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L313+0x10
	ldr	r2, .L313+0x14
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
	b	.L307
.L314:
	.align	2, 0
.L313:
	.word	gMain
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_Var1AndYouWantedVar2
	.word	CreateBuyMenuConfirmPurchaseWindow
.L308:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L307	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	BuyMenuRemoveScrollIndicatorArrows
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x1
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	ClearWindowTilemap
	add	r0, r7, #0
	bl	BuyMenuReturnToItemList
.L307:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 Task_BuyHowManyDialogueHandleInput,.Lfe46-Task_BuyHowManyDialogueHandleInput
	.align	2, 0
	.type	 CreateBuyMenuConfirmPurchaseWindow,function
	.thumb_func
CreateBuyMenuConfirmPurchaseWindow:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L316
	bl	BuyMenuConfirmPurchase
	pop	{r0}
	bx	r0
.L317:
	.align	2, 0
.L316:
	.word	sShopMenuActions_BuyQuit
.Lfe47:
	.size	 CreateBuyMenuConfirmPurchaseWindow,.Lfe47-CreateBuyMenuConfirmPurchaseWindow
	.align	2, 0
	.type	 BuyMenuTryMakePurchase,function
	.thumb_func
BuyMenuTryMakePurchase:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L321
	add	r4, r0, r1
	mov	r0, #0x4
	bl	PutWindowTilemap
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x2]
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L319	@cond_branch
	ldr	r1, .L321+0x4
	ldr	r2, .L321+0x8
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
	add	r0, r5, #0
	bl	DebugFunc_PrintPurchaseDetails
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x2]
	mov	r2, #0x1
	bl	RecordItemPurchase
	b	.L320
.L322:
	.align	2, 0
.L321:
	.word	gTasks+0x8
	.word	gText_HereYouGoThankYou
	.word	BuyMenuSubtractMoney
.L319:
	ldr	r1, .L323
	ldr	r2, .L323+0x4
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
.L320:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L324:
	.align	2, 0
.L323:
	.word	gText_NoMoreRoomForThis
	.word	BuyMenuReturnToItemList
.Lfe48:
	.size	 BuyMenuTryMakePurchase,.Lfe48-BuyMenuTryMakePurchase
	.align	2, 0
	.type	 BuyMenuSubtractMoney,function
	.thumb_func
BuyMenuSubtractMoney:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x26
	bl	IncrementGameStat
	ldr	r6, .L326
	ldr	r0, [r6]
	mov	r5, #0xa4
	lsl	r5, r5, #0x2
	add	r0, r0, r5
	ldr	r1, .L326+0x4
	ldr	r1, [r1, #0x8]
	bl	RemoveMoney
	mov	r0, #0xf8
	bl	PlaySE
	ldr	r0, [r6]
	add	r0, r0, r5
	bl	GetMoney
	add	r1, r0, #0
	mov	r0, #0x0
	mov	r2, #0x0
	bl	PrintMoneyAmountInMoneyBox
	ldr	r1, .L326+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L326+0xc
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L327:
	.align	2, 0
.L326:
	.word	gSaveBlock1Ptr
	.word	gShopData
	.word	gTasks
	.word	Task_ReturnToItemListAfterItemPurchase
.Lfe49:
	.size	 BuyMenuSubtractMoney,.Lfe49-BuyMenuSubtractMoney
	.align	2, 0
	.type	 Task_ReturnToItemListAfterItemPurchase,function
	.thumb_func
Task_ReturnToItemListAfterItemPurchase:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L331
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L330	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L329	@cond_branch
.L330:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	BuyMenuReturnToItemList
.L329:
	pop	{r4}
	pop	{r0}
	bx	r0
.L332:
	.align	2, 0
.L331:
	.word	gMain
.Lfe50:
	.size	 Task_ReturnToItemListAfterItemPurchase,.Lfe50-Task_ReturnToItemListAfterItemPurchase
	.align	2, 0
	.type	 BuyMenuReturnToItemList,function
	.thumb_func
BuyMenuReturnToItemList:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r5, r1, #0x3
	ldr	r6, .L335
	add	r4, r5, r6
	mov	r0, #0x2
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	ldrb	r0, [r4, #0xe]
	mov	r1, #0x1
	bl	BuyMenuPrintCursor
	mov	r0, #0x0
	bl	RecolorItemDescriptionBox
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x5
	bl	PutWindowTilemap
	ldr	r0, .L335+0x4
	ldrb	r1, [r0, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L334	@cond_branch
	mov	r0, #0x6
	bl	PutWindowTilemap
.L334:
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	bl	BuyMenuAddScrollIndicatorArrows
	add	r0, r6, #0
	sub	r0, r0, #0x8
	add	r0, r5, r0
	ldr	r1, .L335+0x8
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L336:
	.align	2, 0
.L335:
	.word	gTasks+0x8
	.word	gShopData
	.word	Task_BuyMenu
.Lfe51:
	.size	 BuyMenuReturnToItemList,.Lfe51-BuyMenuReturnToItemList
	.align	2, 0
	.type	 ExitBuyMenu,function
	.thumb_func
ExitBuyMenu:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L338
	ldr	r0, .L338+0x4
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L338+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L338+0xc
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L339:
	.align	2, 0
.L338:
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
	.word	gTasks
	.word	Task_ExitBuyMenu
.Lfe52:
	.size	 ExitBuyMenu,.Lfe52-ExitBuyMenu
	.align	2, 0
	.type	 Task_ExitBuyMenu,function
	.thumb_func
Task_ExitBuyMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L342
	add	r2, r0, r1
	ldr	r0, .L342+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L341	@cond_branch
	ldrb	r0, [r2, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	bl	BuyMenuFreeMemory
	ldr	r0, .L342+0x8
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L341:
	pop	{r4}
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	CB2_ReturnToField
.Lfe53:
	.size	 Task_ExitBuyMenu,.Lfe53-Task_ExitBuyMenu
	.align	2, 0
	.type	 DebugFunc_PrintPurchaseDetails,function
	.thumb_func
DebugFunc_PrintPurchaseDetails:
	bx	lr
.Lfe54:
	.size	 DebugFunc_PrintPurchaseDetails,.Lfe54-DebugFunc_PrintPurchaseDetails
	.align	2, 0
	.type	 DebugFunc_PrintShopMenuHistoryBeforeClearMaybe,function
	.thumb_func
DebugFunc_PrintShopMenuHistoryBeforeClearMaybe:
	bx	lr
.Lfe55:
	.size	 DebugFunc_PrintShopMenuHistoryBeforeClearMaybe,.Lfe55-DebugFunc_PrintShopMenuHistoryBeforeClearMaybe
	.align	2, 0
	.globl	RecordItemPurchase
	.type	 RecordItemPurchase,function
	.thumb_func
RecordItemPurchase:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	ldr	r1, .L358
	ldrb	r2, [r1, #0xa]
	cmp	r2, r5
	bne	.L347	@cond_branch
	add	r4, r1, #0
	b	.L348
.L359:
	.align	2, 0
.L358:
	.word	gShopMenuHistory
.L347:
	ldrb	r0, [r1, #0x16]
	cmp	r0, r5
	bne	.L349	@cond_branch
	add	r4, r1, #0
	add	r4, r4, #0xc
	b	.L348
.L349:
	add	r4, r1, #0
	add	r4, r4, #0xc
	cmp	r2, #0
	bne	.L351	@cond_branch
	add	r4, r1, #0
.L351:
	strb	r5, [r4, #0xa]
.L348:
	ldrh	r0, [r4, #0x4]
	cmp	r0, #0
	beq	.L353	@cond_branch
	mov	r0, #0x1
	strb	r0, [r4, #0x9]
.L353:
	strh	r3, [r4, #0x4]
	ldrh	r1, [r4, #0x6]
	ldr	r0, .L360
	cmp	r1, r0
	bhi	.L354	@cond_branch
	add	r0, r6, r1
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L360+0x4
	cmp	r0, r1
	bls	.L354	@cond_branch
	strh	r1, [r4, #0x6]
.L354:
	ldr	r1, [r4]
	ldr	r0, .L360+0x8
	cmp	r1, r0
	bhi	.L356	@cond_branch
	add	r0, r3, #0
	bl	itemid_get_market_price
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	sub	r1, r5, #0x1
	asr	r0, r0, r1
	mov	r1, r0
	mul	r1, r1, r6
	ldr	r0, [r4]
	add	r0, r0, r1
	str	r0, [r4]
	ldr	r1, .L360+0xc
	cmp	r0, r1
	bls	.L356	@cond_branch
	str	r1, [r4]
.L356:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L361:
	.align	2, 0
.L360:
	.word	0x3e6
	.word	0x3e7
	.word	0xf423e
	.word	0xf423f
.Lfe56:
	.size	 RecordItemPurchase,.Lfe56-RecordItemPurchase
	.align	2, 0
	.type	 RecordQuestLogItemPurchase,function
	.thumb_func
RecordQuestLogItemPurchase:
	push	{r4, lr}
	ldr	r4, .L365
	ldrb	r0, [r4, #0xa]
	cmp	r0, #0
	beq	.L363	@cond_branch
	add	r0, r0, #0x24
	add	r1, r4, #0
	bl	SetQuestLogEvent
.L363:
	ldrb	r0, [r4, #0x16]
	cmp	r0, #0
	beq	.L364	@cond_branch
	add	r0, r0, #0x24
	add	r1, r4, #0
	add	r1, r1, #0xc
	bl	SetQuestLogEvent
.L364:
	pop	{r4}
	pop	{r0}
	bx	r0
.L366:
	.align	2, 0
.L365:
	.word	gShopMenuHistory
.Lfe57:
	.size	 RecordQuestLogItemPurchase,.Lfe57-RecordQuestLogItemPurchase
	.align	2, 0
	.globl	CreatePokemartMenu
	.type	 CreatePokemartMenu,function
	.thumb_func
CreatePokemartMenu:
	push	{r4, lr}
	bl	SetShopItemsForSale
	mov	r0, #0x0
	bl	CreateShopMenu
	ldr	r0, .L368
	bl	SetShopMenuCallback
	bl	DebugFunc_PrintShopMenuHistoryBeforeClearMaybe
	ldr	r4, .L368+0x4
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x18
	bl	memset
	ldr	r0, .L368+0x8
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0x8]
	strb	r0, [r4, #0x14]
	pop	{r4}
	pop	{r0}
	bx	r0
.L369:
	.align	2, 0
.L368:
	.word	ScriptContext_Enable
	.word	gShopMenuHistory
	.word	gMapHeader
.Lfe58:
	.size	 CreatePokemartMenu,.Lfe58-CreatePokemartMenu
	.align	2, 0
	.globl	CreateDecorationShop1Menu
	.type	 CreateDecorationShop1Menu,function
	.thumb_func
CreateDecorationShop1Menu:
	push	{lr}
	bl	SetShopItemsForSale
	mov	r0, #0x2
	bl	CreateShopMenu
	ldr	r0, .L371
	bl	SetShopMenuCallback
	pop	{r0}
	bx	r0
.L372:
	.align	2, 0
.L371:
	.word	ScriptContext_Enable
.Lfe59:
	.size	 CreateDecorationShop1Menu,.Lfe59-CreateDecorationShop1Menu
	.align	2, 0
	.globl	CreateDecorationShop2Menu
	.type	 CreateDecorationShop2Menu,function
	.thumb_func
CreateDecorationShop2Menu:
	push	{lr}
	bl	SetShopItemsForSale
	mov	r0, #0x3
	bl	CreateShopMenu
	ldr	r0, .L374
	bl	SetShopMenuCallback
	pop	{r0}
	bx	r0
.L375:
	.align	2, 0
.L374:
	.word	ScriptContext_Enable
.Lfe60:
	.size	 CreateDecorationShop2Menu,.Lfe60-CreateDecorationShop2Menu
.text
	.align	2, 0 @ Don't pad with nop

