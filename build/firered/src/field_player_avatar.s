@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sPlayerObjectPtr,object
	.size	 sPlayerObjectPtr,4
sPlayerObjectPtr:
	.word	0x0
	.type	 sTeleportSavedFacingDirection,object
	.size	 sTeleportSavedFacingDirection,1
sTeleportSavedFacingDirection:
	.byte	0x0
	.globl	gObjectEvents
	.align	2, 0
	.type	 gObjectEvents,object
	.size	 gObjectEvents,576
gObjectEvents:
	.space	576
	.globl	gPlayerAvatar
	.align	2, 0
	.type	 gPlayerAvatar,object
	.size	 gPlayerAvatar,32
gPlayerAvatar:
	.space	32
.text
	.align	2, 0
	.globl	MovementType_Player
	.type	 MovementType_Player,function
	.thumb_func
MovementType_Player:
	push	{lr}
	add	r1, r0, #0
	mov	r0, #0x2e
	ldrsh	r2, [r1, r0]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L3
	add	r0, r0, r2
	ldr	r2, .L3+0x4
	bl	UpdateObjectEventCurrentMovement
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gObjectEvents
	.word	ObjectEventCB2_NoMovement2
.Lfe1:
	.size	 MovementType_Player,.Lfe1-MovementType_Player
	.align	2, 0
	.type	 ObjectEventCB2_NoMovement2,function
	.thumb_func
ObjectEventCB2_NoMovement2:
	mov	r0, #0x0
	bx	lr
.Lfe2:
	.size	 ObjectEventCB2_NoMovement2,.Lfe2-ObjectEventCB2_NoMovement2
	.align	2, 0
	.globl	player_step
	.type	 player_step,function
	.thumb_func
player_step:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r8, r1
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	ldr	r4, .L10
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L10+0x4
	add	r5, r0, r1
	add	r0, r5, #0
	bl	HandleWarpArrowSpriteHideShow
	ldrb	r0, [r4, #0x6]
	cmp	r0, #0
	bne	.L7	@cond_branch
	bl	TryUpdatePlayerSpinDirection
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r5, #0
	add	r1, r6, #0
	bl	TryInterruptObjectEventSpecialAnim
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r5, #0
	bl	npc_clear_strange_bits
	bl	DoPlayerAvatarTransition
	bl	TryDoMetatileBehaviorForcedMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r6, #0
	mov	r1, r8
	add	r2, r7, #0
	bl	MovePlayerAvatarUsingKeypadInput
	bl	PlayerAllowForcedMovementIfMovingSameDirection
.L7:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L11:
	.align	2, 0
.L10:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe3:
	.size	 player_step,.Lfe3-player_step
	.align	2, 0
	.type	 TryInterruptObjectEventSpecialAnim,function
	.thumb_func
TryInterruptObjectEventSpecialAnim:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L13	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L13	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventGetHeldMovementActionId
	lsl	r0, r0, #0x18
	mov	r1, #0xdf
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L14	@cond_branch
	cmp	r5, #0
	beq	.L14	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	cmp	r0, r5
	beq	.L14	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovement
	b	.L13
.L14:
	mov	r0, #0x1
	b	.L16
.L13:
	mov	r0, #0x0
.L16:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 TryInterruptObjectEventSpecialAnim,.Lfe4-TryInterruptObjectEventSpecialAnim
	.align	2, 0
	.type	 npc_clear_strange_bits,function
	.thumb_func
npc_clear_strange_bits:
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x11
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x5
	neg	r2, r2
	and	r1, r1, r2
	add	r2, r2, #0x2
	and	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldr	r2, .L18
	ldrb	r1, [r2]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
	bx	lr
.L19:
	.align	2, 0
.L18:
	.word	gPlayerAvatar
.Lfe5:
	.size	 npc_clear_strange_bits,.Lfe5-npc_clear_strange_bits
	.align	2, 0
	.type	 MovePlayerAvatarUsingKeypadInput,function
	.thumb_func
MovePlayerAvatarUsingKeypadInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L23
	ldrb	r1, [r0]
	mov	r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L21	@cond_branch
	add	r0, r3, #0
	add	r1, r4, #0
	bl	MovePlayerOnBike
	b	.L22
.L24:
	.align	2, 0
.L23:
	.word	gPlayerAvatar
.L21:
	add	r0, r3, #0
	add	r1, r2, #0
	bl	MovePlayerNotOnBike
.L22:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 MovePlayerAvatarUsingKeypadInput,.Lfe6-MovePlayerAvatarUsingKeypadInput
	.align	2, 0
	.type	 PlayerAllowForcedMovementIfMovingSameDirection,function
	.thumb_func
PlayerAllowForcedMovementIfMovingSameDirection:
	push	{lr}
	ldr	r2, .L27
	ldrb	r0, [r2, #0x2]
	cmp	r0, #0x2
	bne	.L26	@cond_branch
	ldrb	r1, [r2]
	mov	r0, #0xdf
	and	r0, r0, r1
	strb	r0, [r2]
.L26:
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	gPlayerAvatar
.Lfe7:
	.size	 PlayerAllowForcedMovementIfMovingSameDirection,.Lfe7-PlayerAllowForcedMovementIfMovingSameDirection
	.align	2, 0
	.type	 TryUpdatePlayerSpinDirection,function
	.thumb_func
TryUpdatePlayerSpinDirection:
	push	{r4, r5, lr}
	ldr	r5, .L35
	ldrb	r1, [r5]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L30	@cond_branch
	ldrb	r0, [r5, #0x1c]
	bl	MetatileBehavior_IsSpinTile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L30	@cond_branch
	ldr	r4, .L35+0x4
	ldrb	r1, [r5, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L35+0x8
	add	r1, r0, r1
	str	r1, [r4]
	ldrb	r0, [r1]
	lsr	r0, r0, #0x7
	cmp	r0, #0
	beq	.L31	@cond_branch
	ldrb	r0, [r1, #0x1e]
	bl	MetatileBehavior_IsStopSpinning
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L30	@cond_branch
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1e]
	bl	MetatileBehavior_IsSpinTile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L33	@cond_branch
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1e]
	strh	r0, [r5, #0x1c]
.L33:
	ldr	r0, [r4]
	bl	ObjectEventClearHeldMovement
	ldrb	r0, [r5, #0x1c]
	bl	PlayerApplyTileForcedMovement
.L31:
	mov	r0, #0x1
	b	.L34
.L36:
	.align	2, 0
.L35:
	.word	gPlayerAvatar
	.word	sPlayerObjectPtr
	.word	gObjectEvents
.L30:
	mov	r0, #0x0
.L34:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 TryUpdatePlayerSpinDirection,.Lfe8-TryUpdatePlayerSpinDirection
	.section .rodata
	.align	2, 0
	.type	 sForcedMovementFuncs,object
sForcedMovementFuncs:
	.word	MetatileBehavior_IsTrickHouseSlipperyFloor
	.word	ForcedMovement_Slip
	.word	MetatileBehavior_IsIce_2
	.word	ForcedMovement_Slip
	.word	MetatileBehavior_IsWalkSouth
	.word	ForcedMovement_WalkSouth
	.word	MetatileBehavior_IsWalkNorth
	.word	ForcedMovement_WalkNorth
	.word	MetatileBehavior_IsWalkWest
	.word	ForcedMovement_WalkWest
	.word	MetatileBehavior_IsWalkEast
	.word	ForcedMovement_WalkEast
	.word	MetatileBehavior_IsSouthwardCurrent
	.word	ForcedMovement_PushedSouthByCurrent
	.word	MetatileBehavior_IsNorthwardCurrent
	.word	ForcedMovement_PushedNorthByCurrent
	.word	MetatileBehavior_IsWestwardCurrent
	.word	ForcedMovement_PushedWestByCurrent
	.word	MetatileBehavior_IsEastwardCurrent
	.word	ForcedMovement_PushedEastByCurrent
	.word	MetatileBehavior_IsSpinRight
	.word	ForcedMovement_SpinRight
	.word	MetatileBehavior_IsSpinLeft
	.word	ForcedMovement_SpinLeft
	.word	MetatileBehavior_IsSpinUp
	.word	ForcedMovement_SpinUp
	.word	MetatileBehavior_IsSpinDown
	.word	ForcedMovement_SpinDown
	.word	MetatileBehavior_IsSlideSouth
	.word	ForcedMovement_SlideSouth
	.word	MetatileBehavior_IsSlideNorth
	.word	ForcedMovement_SlideNorth
	.word	MetatileBehavior_IsSlideWest
	.word	ForcedMovement_SlideWest
	.word	MetatileBehavior_IsSlideEast
	.word	ForcedMovement_SlideEast
	.word	MetatileBehavior_IsWaterfall
	.word	ForcedMovement_PushedSouthByCurrent
	.word	MetatileBehavior_IsSecretBaseJumpMat
	.word	ForcedMovement_MatJump
	.word	MetatileBehavior_IsSecretBaseSpinMat
	.word	ForcedMovement_MatSpin
	.word	0x0
	.word	ForcedMovement_None
	.size	 sForcedMovementFuncs,176
.text
	.align	2, 0
	.type	 TryDoMetatileBehaviorForcedMovement,function
	.thumb_func
TryDoMetatileBehaviorForcedMovement:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r3, .L56
	ldrb	r1, [r3]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L38	@cond_branch
	ldr	r2, .L56+0x4
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r7, [r0, #0x1e]
	mov	r6, #0x0
	ldr	r0, .L56+0x8
	ldr	r1, [r0]
	add	r2, r0, #0
	cmp	r1, #0
	beq	.L47	@cond_branch
	mov	r5, #0x0
.L42:
	add	r4, r5, #0
	add	r0, r4, r2
	ldr	r1, [r0]
	add	r0, r7, #0
	str	r2, [sp]
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	ldr	r2, [sp]
	cmp	r0, #0
	bne	.L52	@cond_branch
	add	r5, r5, #0x8
	add	r6, r6, #0x1
	add	r0, r5, r2
	ldr	r0, [r0]
	ldr	r2, .L56+0x8
	cmp	r0, #0
	bne	.L42	@cond_branch
	b	.L47
.L57:
	.align	2, 0
.L56:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	sForcedMovementFuncs
.L52:
	ldr	r0, .L58
	strh	r7, [r0, #0x1c]
	add	r0, r2, #0x4
	add	r0, r5, r0
	b	.L55
.L59:
	.align	2, 0
.L58:
	.word	gPlayerAvatar
.L38:
	mov	r6, #0x0
	ldr	r0, .L60
	ldr	r1, [r0]
	add	r2, r0, #0
	cmp	r1, #0
	beq	.L47	@cond_branch
	add	r1, r2, #0
.L48:
	add	r1, r1, #0x8
	add	r6, r6, #0x1
	ldr	r0, [r1]
	cmp	r0, #0
	bne	.L48	@cond_branch
.L47:
	lsl	r0, r6, #0x3
	add	r1, r2, #0x4
	add	r0, r0, r1
.L55:
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L61:
	.align	2, 0
.L60:
	.word	sForcedMovementFuncs
.Lfe9:
	.size	 TryDoMetatileBehaviorForcedMovement,.Lfe9-TryDoMetatileBehaviorForcedMovement
	.align	2, 0
	.type	 ForcedMovement_None,function
	.thumb_func
ForcedMovement_None:
	push	{r4, lr}
	ldr	r4, .L64
	ldrb	r1, [r4]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L63	@cond_branch
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L64+0x4
	add	r0, r0, r1
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x3
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldrb	r1, [r0, #0x18]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	bl	SetObjectEventDirection
	ldrb	r1, [r4]
	mov	r0, #0xbf
	and	r0, r0, r1
	strb	r0, [r4]
.L63:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L65:
	.align	2, 0
.L64:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe10:
	.size	 ForcedMovement_None,.Lfe10-ForcedMovement_None
	.align	2, 0
	.type	 DoForcedMovement,function
	.thumb_func
DoForcedMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r6, .L74
	add	r0, r5, #0
	bl	CheckForPlayerAvatarCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	ldrb	r0, [r6]
	mov	r1, #0x40
	mov	sl, r1
	mov	r1, #0x0
	mov	r8, r1
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r6]
	cmp	r4, #0
	beq	.L67	@cond_branch
	bl	ForcedMovement_None
	cmp	r4, #0x4
	bhi	.L68	@cond_branch
	mov	r0, #0x0
	b	.L72
.L75:
	.align	2, 0
.L74:
	.word	gPlayerAvatar
.L68:
	cmp	r7, #0x6
	bne	.L70	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
.L70:
	ldrb	r0, [r6]
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r6]
	mov	r0, #0x2
	strb	r0, [r6, #0x2]
	b	.L73
.L67:
	mov	r0, #0x2
	strb	r0, [r6, #0x2]
	add	r0, r5, #0
	bl	_call_via_r9
.L73:
	mov	r0, #0x1
.L72:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 DoForcedMovement,.Lfe11-DoForcedMovement
	.align	2, 0
	.type	 DoForcedMovementInCurrentDirection,function
	.thumb_func
DoForcedMovementInCurrentDirection:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L77
	ldrb	r2, [r0, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L77+0x4
	add	r0, r0, r2
	ldrb	r2, [r0, #0x1]
	mov	r3, #0x4
	orr	r2, r2, r3
	strb	r2, [r0, #0x1]
	ldrb	r0, [r0, #0x18]
	lsr	r0, r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L78:
	.align	2, 0
.L77:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe12:
	.size	 DoForcedMovementInCurrentDirection,.Lfe12-DoForcedMovementInCurrentDirection
	.align	2, 0
	.type	 ForcedMovement_Slip,function
	.thumb_func
ForcedMovement_Slip:
	push	{lr}
	ldr	r0, .L80
	bl	DoForcedMovementInCurrentDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L81:
	.align	2, 0
.L80:
	.word	PlayerWalkFast
.Lfe13:
	.size	 ForcedMovement_Slip,.Lfe13-ForcedMovement_Slip
	.align	2, 0
	.type	 ForcedMovement_WalkSouth,function
	.thumb_func
ForcedMovement_WalkSouth:
	push	{lr}
	ldr	r1, .L83
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L84:
	.align	2, 0
.L83:
	.word	PlayerWalkNormal
.Lfe14:
	.size	 ForcedMovement_WalkSouth,.Lfe14-ForcedMovement_WalkSouth
	.align	2, 0
	.type	 ForcedMovement_WalkNorth,function
	.thumb_func
ForcedMovement_WalkNorth:
	push	{lr}
	ldr	r1, .L86
	mov	r0, #0x2
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L87:
	.align	2, 0
.L86:
	.word	PlayerWalkNormal
.Lfe15:
	.size	 ForcedMovement_WalkNorth,.Lfe15-ForcedMovement_WalkNorth
	.align	2, 0
	.type	 ForcedMovement_WalkWest,function
	.thumb_func
ForcedMovement_WalkWest:
	push	{lr}
	ldr	r1, .L89
	mov	r0, #0x3
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L90:
	.align	2, 0
.L89:
	.word	PlayerWalkNormal
.Lfe16:
	.size	 ForcedMovement_WalkWest,.Lfe16-ForcedMovement_WalkWest
	.align	2, 0
	.type	 ForcedMovement_WalkEast,function
	.thumb_func
ForcedMovement_WalkEast:
	push	{lr}
	ldr	r1, .L92
	mov	r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L93:
	.align	2, 0
.L92:
	.word	PlayerWalkNormal
.Lfe17:
	.size	 ForcedMovement_WalkEast,.Lfe17-ForcedMovement_WalkEast
	.align	2, 0
	.type	 ForcedMovement_SpinRight,function
	.thumb_func
ForcedMovement_SpinRight:
	push	{lr}
	bl	PlaySpinSound
	ldr	r1, .L95
	mov	r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L96:
	.align	2, 0
.L95:
	.word	PlayerGoSpin
.Lfe18:
	.size	 ForcedMovement_SpinRight,.Lfe18-ForcedMovement_SpinRight
	.align	2, 0
	.type	 ForcedMovement_SpinLeft,function
	.thumb_func
ForcedMovement_SpinLeft:
	push	{lr}
	bl	PlaySpinSound
	ldr	r1, .L98
	mov	r0, #0x3
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L99:
	.align	2, 0
.L98:
	.word	PlayerGoSpin
.Lfe19:
	.size	 ForcedMovement_SpinLeft,.Lfe19-ForcedMovement_SpinLeft
	.align	2, 0
	.type	 ForcedMovement_SpinUp,function
	.thumb_func
ForcedMovement_SpinUp:
	push	{lr}
	bl	PlaySpinSound
	ldr	r1, .L101
	mov	r0, #0x2
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L102:
	.align	2, 0
.L101:
	.word	PlayerGoSpin
.Lfe20:
	.size	 ForcedMovement_SpinUp,.Lfe20-ForcedMovement_SpinUp
	.align	2, 0
	.type	 ForcedMovement_SpinDown,function
	.thumb_func
ForcedMovement_SpinDown:
	push	{lr}
	bl	PlaySpinSound
	ldr	r1, .L104
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L105:
	.align	2, 0
.L104:
	.word	PlayerGoSpin
.Lfe21:
	.size	 ForcedMovement_SpinDown,.Lfe21-ForcedMovement_SpinDown
	.align	2, 0
	.type	 PlaySpinSound,function
	.thumb_func
PlaySpinSound:
	push	{lr}
	mov	r0, #0x99
	bl	PlaySE
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 PlaySpinSound,.Lfe22-PlaySpinSound
	.align	2, 0
	.type	 ForcedMovement_PushedSouthByCurrent,function
	.thumb_func
ForcedMovement_PushedSouthByCurrent:
	push	{lr}
	ldr	r1, .L108
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L109:
	.align	2, 0
.L108:
	.word	PlayerRideWaterCurrent
.Lfe23:
	.size	 ForcedMovement_PushedSouthByCurrent,.Lfe23-ForcedMovement_PushedSouthByCurrent
	.align	2, 0
	.type	 ForcedMovement_PushedNorthByCurrent,function
	.thumb_func
ForcedMovement_PushedNorthByCurrent:
	push	{lr}
	ldr	r1, .L111
	mov	r0, #0x2
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L112:
	.align	2, 0
.L111:
	.word	PlayerRideWaterCurrent
.Lfe24:
	.size	 ForcedMovement_PushedNorthByCurrent,.Lfe24-ForcedMovement_PushedNorthByCurrent
	.align	2, 0
	.type	 ForcedMovement_PushedWestByCurrent,function
	.thumb_func
ForcedMovement_PushedWestByCurrent:
	push	{lr}
	ldr	r1, .L114
	mov	r0, #0x3
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L115:
	.align	2, 0
.L114:
	.word	PlayerRideWaterCurrent
.Lfe25:
	.size	 ForcedMovement_PushedWestByCurrent,.Lfe25-ForcedMovement_PushedWestByCurrent
	.align	2, 0
	.type	 ForcedMovement_PushedEastByCurrent,function
	.thumb_func
ForcedMovement_PushedEastByCurrent:
	push	{lr}
	ldr	r1, .L117
	mov	r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L118:
	.align	2, 0
.L117:
	.word	PlayerRideWaterCurrent
.Lfe26:
	.size	 ForcedMovement_PushedEastByCurrent,.Lfe26-ForcedMovement_PushedEastByCurrent
	.align	2, 0
	.type	 ForcedMovement_Slide,function
	.thumb_func
ForcedMovement_Slide:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L120
	ldrb	r3, [r2, #0x5]
	lsl	r2, r3, #0x3
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	ldr	r3, .L120+0x4
	add	r2, r2, r3
	ldrb	r3, [r2, #0x1]
	mov	r4, #0x4
	orr	r3, r3, r4
	mov	r4, #0x2
	orr	r3, r3, r4
	strb	r3, [r2, #0x1]
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L121:
	.align	2, 0
.L120:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe27:
	.size	 ForcedMovement_Slide,.Lfe27-ForcedMovement_Slide
	.align	2, 0
	.type	 ForcedMovement_SlideSouth,function
	.thumb_func
ForcedMovement_SlideSouth:
	push	{lr}
	ldr	r1, .L123
	mov	r0, #0x1
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L124:
	.align	2, 0
.L123:
	.word	PlayerWalkFast
.Lfe28:
	.size	 ForcedMovement_SlideSouth,.Lfe28-ForcedMovement_SlideSouth
	.align	2, 0
	.type	 ForcedMovement_SlideNorth,function
	.thumb_func
ForcedMovement_SlideNorth:
	push	{lr}
	ldr	r1, .L126
	mov	r0, #0x2
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L127:
	.align	2, 0
.L126:
	.word	PlayerWalkFast
.Lfe29:
	.size	 ForcedMovement_SlideNorth,.Lfe29-ForcedMovement_SlideNorth
	.align	2, 0
	.type	 ForcedMovement_SlideWest,function
	.thumb_func
ForcedMovement_SlideWest:
	push	{lr}
	ldr	r1, .L129
	mov	r0, #0x3
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L130:
	.align	2, 0
.L129:
	.word	PlayerWalkFast
.Lfe30:
	.size	 ForcedMovement_SlideWest,.Lfe30-ForcedMovement_SlideWest
	.align	2, 0
	.type	 ForcedMovement_SlideEast,function
	.thumb_func
ForcedMovement_SlideEast:
	push	{lr}
	ldr	r1, .L132
	mov	r0, #0x4
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L133:
	.align	2, 0
.L132:
	.word	PlayerWalkFast
.Lfe31:
	.size	 ForcedMovement_SlideEast,.Lfe31-ForcedMovement_SlideEast
	.align	2, 0
	.type	 ForcedMovement_MatJump,function
	.thumb_func
ForcedMovement_MatJump:
	push	{lr}
	bl	DoPlayerMatJump
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 ForcedMovement_MatJump,.Lfe32-ForcedMovement_MatJump
	.align	2, 0
	.type	 ForcedMovement_MatSpin,function
	.thumb_func
ForcedMovement_MatSpin:
	push	{lr}
	bl	DoPlayerMatSpin
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 ForcedMovement_MatSpin,.Lfe33-ForcedMovement_MatSpin
	.section .rodata
	.align	2, 0
	.type	 sPlayerNotOnBikeFuncs,object
sPlayerNotOnBikeFuncs:
	.word	PlayerNotOnBikeNotMoving
	.word	PlayerNotOnBikeTurningInPlace
	.word	PlayerNotOnBikeMoving
	.size	 sPlayerNotOnBikeFuncs,12
.text
	.align	2, 0
	.globl	MovePlayerNotOnBike
	.type	 MovePlayerNotOnBike,function
	.thumb_func
MovePlayerNotOnBike:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L137
	add	r0, r4, #0
	bl	CheckMovementInputNotOnBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r6
	ldr	r2, [r0]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	_call_via_r2
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L138:
	.align	2, 0
.L137:
	.word	sPlayerNotOnBikeFuncs
.Lfe34:
	.size	 MovePlayerNotOnBike,.Lfe34-MovePlayerNotOnBike
	.align	2, 0
	.type	 CheckMovementInputNotOnBike,function
	.thumb_func
CheckMovementInputNotOnBike:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L140	@cond_branch
	ldr	r0, .L147
	strb	r4, [r0, #0x2]
	mov	r0, #0x0
	b	.L144
.L148:
	.align	2, 0
.L147:
	.word	gPlayerAvatar
.L140:
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	beq	.L142	@cond_branch
	ldr	r1, .L149
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x2
	beq	.L142	@cond_branch
	mov	r0, #0x1
	b	.L146
.L150:
	.align	2, 0
.L149:
	.word	gPlayerAvatar
.L142:
	ldr	r1, .L151
	mov	r0, #0x2
.L146:
	strb	r0, [r1, #0x2]
.L144:
	pop	{r4}
	pop	{r1}
	bx	r1
.L152:
	.align	2, 0
.L151:
	.word	gPlayerAvatar
.Lfe35:
	.size	 CheckMovementInputNotOnBike,.Lfe35-CheckMovementInputNotOnBike
	.align	2, 0
	.type	 PlayerNotOnBikeNotMoving,function
	.thumb_func
PlayerNotOnBikeNotMoving:
	push	{lr}
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerFaceDirection
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 PlayerNotOnBikeNotMoving,.Lfe36-PlayerNotOnBikeNotMoving
	.align	2, 0
	.type	 PlayerNotOnBikeTurningInPlace,function
	.thumb_func
PlayerNotOnBikeTurningInPlace:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerTurnInPlace
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 PlayerNotOnBikeTurningInPlace,.Lfe37-PlayerNotOnBikeTurningInPlace
	.align	2, 0
	.type	 PlayerNotOnBikeMoving,function
	.thumb_func
PlayerNotOnBikeMoving:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	add	r0, r4, #0
	bl	CheckForPlayerAvatarCollision
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0
	beq	.L156	@cond_branch
	cmp	r0, #0x6
	bne	.L157	@cond_branch
	add	r0, r4, #0
	bl	PlayerJumpLedge
	b	.L155
.L157:
	cmp	r0, #0x8
	bne	.L159	@cond_branch
	add	r0, r4, #0
	bl	PlayerFaceDirection
	b	.L155
.L159:
	sub	r0, r1, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L155	@cond_branch
	add	r0, r4, #0
	bl	PlayerNotOnBikeCollide
	b	.L155
.L156:
	ldr	r6, .L169
	ldrb	r1, [r6]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L162	@cond_branch
	add	r0, r4, #0
	bl	PlayerWalkFast
	b	.L155
.L170:
	.align	2, 0
.L169:
	.word	gPlayerAvatar
.L162:
	mov	r0, #0x2
	and	r5, r5, r0
	cmp	r5, #0
	beq	.L163	@cond_branch
	ldr	r0, .L171
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L163	@cond_branch
	ldr	r2, .L171+0x4
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1e]
	bl	IsRunningDisallowed
	cmp	r0, #0
	bne	.L163	@cond_branch
	add	r0, r4, #0
	bl	PlayerIsMovingOnRockStairs
	cmp	r0, #0
	beq	.L164	@cond_branch
	add	r0, r4, #0
	bl	PlayerRunSlow
	b	.L165
.L172:
	.align	2, 0
.L171:
	.word	0x82f
	.word	gObjectEvents
.L164:
	add	r0, r4, #0
	bl	PlayerRun
.L165:
	ldr	r2, .L173
	ldrb	r1, [r2]
	mov	r0, #0x80
	orr	r0, r0, r1
	strb	r0, [r2]
	b	.L155
.L174:
	.align	2, 0
.L173:
	.word	gPlayerAvatar
.L163:
	add	r0, r4, #0
	bl	PlayerIsMovingOnRockStairs
	cmp	r0, #0
	beq	.L167	@cond_branch
	add	r0, r4, #0
	bl	PlayerWalkSlow
	b	.L155
.L167:
	add	r0, r4, #0
	bl	PlayerWalkNormal
.L155:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 PlayerNotOnBikeMoving,.Lfe38-PlayerNotOnBikeMoving
	.align	2, 0
	.globl	PlayerIsMovingOnRockStairs
	.type	 PlayerIsMovingOnRockStairs,function
	.thumb_func
PlayerIsMovingOnRockStairs:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, .L183
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L183+0x4
	add	r0, r0, r1
	ldrh	r2, [r0, #0x10]
	mov	r1, sp
	strh	r2, [r1]
	ldrh	r1, [r0, #0x12]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r1, [r4]
	cmp	r3, #0x1
	beq	.L178	@cond_branch
	cmp	r3, #0x2
	bne	.L179	@cond_branch
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	b	.L182
.L184:
	.align	2, 0
.L183:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L178:
	mov	r0, #0x1
	mov	r1, sp
	add	r2, r4, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
.L182:
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsRockStairs
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L181
.L179:
	mov	r0, #0x0
.L181:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 PlayerIsMovingOnRockStairs,.Lfe39-PlayerIsMovingOnRockStairs
	.align	2, 0
	.type	 CheckForPlayerAvatarCollision,function
	.thumb_func
CheckForPlayerAvatarCollision:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L188
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L188+0x4
	add	r5, r0, r1
	ldrh	r1, [r5, #0x10]
	add	r0, sp, #0x4
	strh	r1, [r0]
	ldrh	r1, [r5, #0x12]
	mov	r4, sp
	add	r4, r4, #0x6
	strh	r1, [r4]
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	IsDirectionalStairWarpMetatileBehavior
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L186	@cond_branch
	add	r0, r6, #0
	add	r1, sp, #0x4
	add	r2, r4, #0
	bl	MoveCoords
	add	r0, sp, #0x4
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, sp, #0x4
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	str	r0, [sp]
	add	r0, r5, #0
	add	r3, r6, #0
	bl	CheckForObjectEventCollision
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L187
.L189:
	.align	2, 0
.L188:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L186:
	mov	r0, #0x8
.L187:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 CheckForPlayerAvatarCollision,.Lfe40-CheckForPlayerAvatarCollision
	.align	2, 0
	.globl	CheckForObjectEventCollision
	.type	 CheckForObjectEventCollision,function
	.thumb_func
CheckForObjectEventCollision:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0x24]
	lsl	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r6, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	sl, r4
	lsr	r7, r1, #0x10
	asr	r5, r1, #0x10
	lsr	r1, r2, #0x10
	mov	r9, r1
	asr	r4, r2, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	strb	r0, [r1]
	cmp	r0, #0x3
	bne	.L191	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	CanStopSurfing
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L191	@cond_branch
	mov	r0, #0x5
	b	.L195
.L191:
	lsl	r5, r7, #0x10
	asr	r0, r5, #0x10
	mov	r8, r0
	mov	r1, r9
	lsl	r4, r1, #0x10
	asr	r7, r4, #0x10
	add	r1, r7, #0
	add	r2, r6, #0
	bl	ShouldJumpLedge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L192	@cond_branch
	mov	r0, #0x2b
	bl	IncrementGameStat
	mov	r0, #0x6
	b	.L195
.L192:
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L193	@cond_branch
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	bl	TryPushBoulder
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L193	@cond_branch
	mov	r0, #0x7
	b	.L195
.L193:
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L194	@cond_branch
	asr	r0, r5, #0x10
	asr	r1, r4, #0x10
	mov	r2, sl
	mov	r3, sp
	bl	CheckAcroBikeCollision
.L194:
	mov	r0, sp
	ldrb	r0, [r0]
.L195:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 CheckForObjectEventCollision,.Lfe41-CheckForObjectEventCollision
	.section .rodata
	.type	 sQuestLogSurfDismountActionIds,object
sQuestLogSurfDismountActionIds:
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.byte	0x7
	.size	 sQuestLogSurfDismountActionIds,5
.text
	.align	2, 0
	.type	 CanStopSurfing,function
	.thumb_func
CanStopSurfing:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L200
	ldrb	r1, [r0]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L197	@cond_branch
	lsl	r5, r3, #0x10
	asr	r0, r5, #0x10
	lsl	r4, r4, #0x10
	asr	r1, r4, #0x10
	bl	MapGridGetElevationAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L197	@cond_branch
	lsr	r0, r5, #0x10
	lsr	r1, r4, #0x10
	mov	r2, #0x3
	bl	GetObjectEventIdByPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x10
	bne	.L197	@cond_branch
	ldr	r0, .L200+0x4
	add	r0, r6, r0
	ldrb	r0, [r0]
	mov	r1, #0x10
	bl	QuestLogRecordPlayerAvatarGfxTransitionWithDuration
	add	r0, r6, #0
	bl	CreateStopSurfingTask
	mov	r0, #0x1
	b	.L199
.L201:
	.align	2, 0
.L200:
	.word	gPlayerAvatar
	.word	sQuestLogSurfDismountActionIds
.L197:
	mov	r0, #0x0
.L199:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 CanStopSurfing,.Lfe42-CanStopSurfing
	.align	2, 0
	.type	 ShouldJumpLedge,function
	.thumb_func
ShouldJumpLedge:
	push	{lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetLedgeJumpDirection
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L203	@cond_branch
	mov	r0, #0x0
	b	.L205
.L203:
	mov	r0, #0x1
.L205:
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 ShouldJumpLedge,.Lfe43-ShouldJumpLedge
	.align	2, 0
	.type	 TryPushBoulder,function
	.thumb_func
TryPushBoulder:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	mov	r3, sp
	strh	r0, [r3]
	mov	r5, sp
	add	r5, r5, #0x2
	strh	r1, [r5]
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r0, .L214
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L210	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	GetObjectEventIdByXY
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x10
	beq	.L210	@cond_branch
	ldr	r0, .L214+0x4
	lsl	r1, r6, #0x3
	add	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r4, r1, r0
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0x61
	bne	.L210	@cond_branch
	ldrh	r1, [r4, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	strh	r0, [r5]
	add	r0, r7, #0
	mov	r1, sp
	add	r2, r5, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	cmp	r0, #0x66
	beq	.L211	@cond_branch
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r0, #0x0
	ldrsh	r2, [r5, r0]
	add	r0, r4, #0
	add	r3, r7, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L210	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L210	@cond_branch
.L211:
	add	r0, r6, #0
	add	r1, r7, #0
	bl	StartStrengthAnim
	mov	r0, #0x1
	b	.L213
.L215:
	.align	2, 0
.L214:
	.word	0x805
	.word	gObjectEvents
.L210:
	mov	r0, #0x0
.L213:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 TryPushBoulder,.Lfe44-TryPushBoulder
	.section .rodata
	.align	2, 0
	.type	 sAcroBikeTrickMetatiles,object
sAcroBikeTrickMetatiles:
	.word	MetatileBehavior_IsBumpySlope
	.word	MetatileBehavior_IsIsolatedVerticalRail
	.word	MetatileBehavior_IsIsolatedHorizontalRail
	.word	MetatileBehavior_IsVerticalRail
	.word	MetatileBehavior_IsHorizontalRail
	.size	 sAcroBikeTrickMetatiles,20
	.type	 sAcroBikeTrickCollisionTypes,object
sAcroBikeTrickCollisionTypes:
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.size	 sAcroBikeTrickCollisionTypes,5
.text
	.align	2, 0
	.type	 CheckAcroBikeCollision,function
	.thumb_func
CheckAcroBikeCollision:
	push	{r4, r5, r6, r7, lr}
	add	r6, r3, #0
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r4, #0x0
	ldr	r7, .L223
.L220:
	lsl	r0, r4, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L219	@cond_branch
	ldr	r0, .L223+0x4
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r6]
	b	.L216
.L224:
	.align	2, 0
.L223:
	.word	sAcroBikeTrickMetatiles
	.word	sAcroBikeTrickCollisionTypes
.L219:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L220	@cond_branch
.L216:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 CheckAcroBikeCollision,.Lfe45-CheckAcroBikeCollision
	.align	2, 0
	.globl	SetPlayerAvatarTransitionFlags
	.type	 SetPlayerAvatarTransitionFlags,function
	.thumb_func
SetPlayerAvatarTransitionFlags:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L226
	ldrb	r1, [r2, #0x1]
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	bl	DoPlayerAvatarTransition
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	gPlayerAvatar
.Lfe46:
	.size	 SetPlayerAvatarTransitionFlags,.Lfe46-SetPlayerAvatarTransitionFlags
	.section .rodata
	.align	2, 0
	.type	 sPlayerAvatarTransitionFuncs,object
sPlayerAvatarTransitionFuncs:
	.word	PlayerAvatarTransition_Normal
	.word	PlayerAvatarTransition_Bike
	.word	PlayerAvatarTransition_Bike
	.word	PlayerAvatarTransition_Surfing
	.word	PlayerAvatarTransition_Underwater
	.word	PlayerAvatarTransition_ReturnToField
	.word	PlayerAvatarTransition_Dummy
	.word	PlayerAvatarTransition_Dummy
	.size	 sPlayerAvatarTransitionFuncs,32
.text
	.align	2, 0
	.type	 DoPlayerAvatarTransition,function
	.thumb_func
DoPlayerAvatarTransition:
	push	{r4, r5, lr}
	ldr	r0, .L236
	ldrb	r4, [r0, #0x1]
	cmp	r4, #0
	beq	.L229	@cond_branch
	mov	r5, #0x0
.L233:
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L232	@cond_branch
	ldr	r0, .L236+0x4
	lsl	r2, r5, #0x2
	add	r2, r2, r0
	ldr	r0, .L236
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L236+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	bl	_call_via_r1
.L232:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsr	r4, r4, #0x1
	cmp	r5, #0x7
	bls	.L233	@cond_branch
	ldr	r1, .L236
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
.L229:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L237:
	.align	2, 0
.L236:
	.word	gPlayerAvatar
	.word	sPlayerAvatarTransitionFuncs
	.word	gObjectEvents
.Lfe47:
	.size	 DoPlayerAvatarTransition,.Lfe47-DoPlayerAvatarTransition
	.align	2, 0
	.type	 PlayerAvatarTransition_Dummy,function
	.thumb_func
PlayerAvatarTransition_Dummy:
	bx	lr
.Lfe48:
	.size	 PlayerAvatarTransition_Dummy,.Lfe48-PlayerAvatarTransition_Dummy
	.align	2, 0
	.type	 PlayerAvatarTransition_Normal,function
	.thumb_func
PlayerAvatarTransition_Normal:
	push	{lr}
	mov	r0, #0x0
	bl	QuestLogTryRecordPlayerAvatarGfxTransition
	mov	r0, #0x0
	bl	QuestLogCallUpdatePlayerSprite
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 PlayerAvatarTransition_Normal,.Lfe49-PlayerAvatarTransition_Normal
	.align	2, 0
	.type	 PlayerAvatarTransition_Bike,function
	.thumb_func
PlayerAvatarTransition_Bike:
	push	{lr}
	mov	r0, #0x1
	bl	QuestLogTryRecordPlayerAvatarGfxTransition
	mov	r0, #0x1
	bl	QuestLogCallUpdatePlayerSprite
	mov	r0, #0x0
	mov	r1, #0x0
	bl	BikeClearState
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 PlayerAvatarTransition_Bike,.Lfe50-PlayerAvatarTransition_Bike
	.align	2, 0
	.type	 PlayerAvatarTransition_Surfing,function
	.thumb_func
PlayerAvatarTransition_Surfing:
	push	{lr}
	mov	r0, #0x3
	bl	QuestLogTryRecordPlayerAvatarGfxTransition
	mov	r0, #0x3
	bl	QuestLogCallUpdatePlayerSprite
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 PlayerAvatarTransition_Surfing,.Lfe51-PlayerAvatarTransition_Surfing
	.align	2, 0
	.type	 PlayerAvatarTransition_Underwater,function
	.thumb_func
PlayerAvatarTransition_Underwater:
	bx	lr
.Lfe52:
	.size	 PlayerAvatarTransition_Underwater,.Lfe52-PlayerAvatarTransition_Underwater
	.align	2, 0
	.type	 PlayerAvatarTransition_ReturnToField,function
	.thumb_func
PlayerAvatarTransition_ReturnToField:
	ldr	r2, .L244
	ldrb	r1, [r2]
	mov	r0, #0x20
	orr	r0, r0, r1
	strb	r0, [r2]
	bx	lr
.L245:
	.align	2, 0
.L244:
	.word	gPlayerAvatar
.Lfe53:
	.size	 PlayerAvatarTransition_ReturnToField,.Lfe53-PlayerAvatarTransition_ReturnToField
	.align	2, 0
	.globl	UpdatePlayerAvatarTransitionState
	.type	 UpdatePlayerAvatarTransitionState,function
	.thumb_func
UpdatePlayerAvatarTransitionState:
	push	{r4, lr}
	ldr	r4, .L253
	mov	r0, #0x0
	strb	r0, [r4, #0x3]
	bl	PlayerIsAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L247	@cond_branch
	bl	PlayerCheckIfAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L248	@cond_branch
	bl	PlayerAnimIsMultiFrameStationary
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L247	@cond_branch
	mov	r0, #0x1
	b	.L252
.L254:
	.align	2, 0
.L253:
	.word	gPlayerAvatar
.L248:
	bl	PlayerAnimIsMultiFrameStationaryAndStateNotTurning
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L247	@cond_branch
	mov	r0, #0x2
.L252:
	strb	r0, [r4, #0x3]
.L247:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 UpdatePlayerAvatarTransitionState,.Lfe54-UpdatePlayerAvatarTransitionState
	.align	2, 0
	.type	 PlayerAnimIsMultiFrameStationary,function
	.thumb_func
PlayerAnimIsMultiFrameStationary:
	push	{lr}
	ldr	r2, .L260
	ldr	r0, .L260+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1c]
	cmp	r1, #0x7
	bls	.L257	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x18
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bls	.L257	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x21
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bls	.L257	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x70
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xb
	bls	.L257	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x78
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L256	@cond_branch
.L257:
	mov	r0, #0x1
	b	.L259
.L261:
	.align	2, 0
.L260:
	.word	gObjectEvents
	.word	gPlayerAvatar
.L256:
	mov	r0, #0x0
.L259:
	pop	{r1}
	bx	r1
.Lfe55:
	.size	 PlayerAnimIsMultiFrameStationary,.Lfe55-PlayerAnimIsMultiFrameStationary
	.align	2, 0
	.type	 PlayerAnimIsMultiFrameStationaryAndStateNotTurning,function
	.thumb_func
PlayerAnimIsMultiFrameStationaryAndStateNotTurning:
	push	{lr}
	bl	PlayerAnimIsMultiFrameStationary
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L263	@cond_branch
	ldr	r0, .L266
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x1
	beq	.L263	@cond_branch
	mov	r0, #0x1
	b	.L265
.L267:
	.align	2, 0
.L266:
	.word	gPlayerAvatar
.L263:
	mov	r0, #0x0
.L265:
	pop	{r1}
	bx	r1
.Lfe56:
	.size	 PlayerAnimIsMultiFrameStationaryAndStateNotTurning,.Lfe56-PlayerAnimIsMultiFrameStationaryAndStateNotTurning
	.align	2, 0
	.type	 PlayerIsAnimActive,function
	.thumb_func
PlayerIsAnimActive:
	push	{lr}
	ldr	r0, .L269
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L269+0x4
	add	r0, r0, r1
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L270:
	.align	2, 0
.L269:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe57:
	.size	 PlayerIsAnimActive,.Lfe57-PlayerIsAnimActive
	.align	2, 0
	.type	 PlayerCheckIfAnimFinishedOrInactive,function
	.thumb_func
PlayerCheckIfAnimFinishedOrInactive:
	push	{lr}
	ldr	r0, .L272
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L272+0x4
	add	r0, r0, r1
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L273:
	.align	2, 0
.L272:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe58:
	.size	 PlayerCheckIfAnimFinishedOrInactive,.Lfe58-PlayerCheckIfAnimFinishedOrInactive
	.align	2, 0
	.type	 PlayerSetCopyableMovement,function
	.thumb_func
PlayerSetCopyableMovement:
	ldr	r3, .L275
	ldr	r1, .L275+0x4
	ldrb	r2, [r1, #0x5]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	add	r1, r1, #0x22
	strb	r0, [r1]
	bx	lr
.L276:
	.align	2, 0
.L275:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe59:
	.size	 PlayerSetCopyableMovement,.Lfe59-PlayerSetCopyableMovement
	.align	2, 0
	.globl	PlayerGetCopyableMovement
	.type	 PlayerGetCopyableMovement,function
	.thumb_func
PlayerGetCopyableMovement:
	ldr	r2, .L278
	ldr	r0, .L278+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x22
	ldrb	r0, [r0]
	bx	lr
.L279:
	.align	2, 0
.L278:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe60:
	.size	 PlayerGetCopyableMovement,.Lfe60-PlayerGetCopyableMovement
	.align	2, 0
	.type	 PlayerForceSetHeldMovement,function
	.thumb_func
PlayerForceSetHeldMovement:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L281
	ldrb	r2, [r0, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L281+0x4
	add	r0, r0, r2
	bl	ObjectEventForceSetHeldMovement
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe61:
	.size	 PlayerForceSetHeldMovement,.Lfe61-PlayerForceSetHeldMovement
	.align	2, 0
	.type	 PlayerSetAnimId,function
	.thumb_func
PlayerSetAnimId:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	PlayerIsAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L284	@cond_branch
	add	r0, r4, #0
	bl	PlayerSetCopyableMovement
	ldr	r0, .L286
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L286+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	bl	ObjectEventSetHeldMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L284	@cond_branch
	add	r0, r5, #0
	bl	QuestLogRecordPlayerStep
.L284:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L287:
	.align	2, 0
.L286:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe62:
	.size	 PlayerSetAnimId,.Lfe62-PlayerSetAnimId
	.align	2, 0
	.type	 QL_TryRecordPlayerStepWithDuration0,function
	.thumb_func
QL_TryRecordPlayerStepWithDuration0:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r0, .L290
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L290+0x4
	add	r0, r0, r1
	add	r1, r4, #0
	bl	ObjectEventSetHeldMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L289	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	QuestLogRecordPlayerStepWithDuration
.L289:
	pop	{r4}
	pop	{r0}
	bx	r0
.L291:
	.align	2, 0
.L290:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe63:
	.size	 QL_TryRecordPlayerStepWithDuration0,.Lfe63-QL_TryRecordPlayerStepWithDuration0
	.align	2, 0
	.type	 QL_TryRecordNPCStepWithDuration32,function
	.thumb_func
QL_TryRecordNPCStepWithDuration32:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	add	r1, r5, #0
	bl	ObjectEventSetHeldMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L293	@cond_branch
	ldrb	r0, [r4, #0x8]
	ldrb	r1, [r4, #0x9]
	ldrb	r2, [r4, #0xa]
	mov	r3, #0x20
	str	r3, [sp]
	add	r3, r5, #0
	bl	QuestLogRecordNPCStepWithDuration
.L293:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 QL_TryRecordNPCStepWithDuration32,.Lfe64-QL_TryRecordNPCStepWithDuration32
	.align	2, 0
	.globl	PlayerWalkSlower
	.type	 PlayerWalkSlower,function
	.thumb_func
PlayerWalkSlower:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkSlowerMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 PlayerWalkSlower,.Lfe65-PlayerWalkSlower
	.align	2, 0
	.globl	PlayerWalkSlow
	.type	 PlayerWalkSlow,function
	.thumb_func
PlayerWalkSlow:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkSlowMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 PlayerWalkSlow,.Lfe66-PlayerWalkSlow
	.align	2, 0
	.globl	PlayerWalkNormal
	.type	 PlayerWalkNormal,function
	.thumb_func
PlayerWalkNormal:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkNormalMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 PlayerWalkNormal,.Lfe67-PlayerWalkNormal
	.align	2, 0
	.globl	PlayerWalkFast
	.type	 PlayerWalkFast,function
	.thumb_func
PlayerWalkFast:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkFastMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe68:
	.size	 PlayerWalkFast,.Lfe68-PlayerWalkFast
	.align	2, 0
	.globl	PlayerGlide
	.type	 PlayerGlide,function
	.thumb_func
PlayerGlide:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetGlideMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe69:
	.size	 PlayerGlide,.Lfe69-PlayerGlide
	.align	2, 0
	.globl	PlayerRideWaterCurrent
	.type	 PlayerRideWaterCurrent,function
	.thumb_func
PlayerRideWaterCurrent:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetRideWaterCurrentMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 PlayerRideWaterCurrent,.Lfe70-PlayerRideWaterCurrent
	.align	2, 0
	.globl	PlayerWalkFaster
	.type	 PlayerWalkFaster,function
	.thumb_func
PlayerWalkFaster:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkFasterMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 PlayerWalkFaster,.Lfe71-PlayerWalkFaster
	.align	2, 0
	.globl	PlayerRun
	.type	 PlayerRun,function
	.thumb_func
PlayerRun:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetPlayerRunMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 PlayerRun,.Lfe72-PlayerRun
	.align	2, 0
	.globl	PlayerRunSlow
	.type	 PlayerRunSlow,function
	.thumb_func
PlayerRunSlow:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetPlayerRunSlowMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 PlayerRunSlow,.Lfe73-PlayerRunSlow
	.align	2, 0
	.globl	PlayerOnBikeCollide
	.type	 PlayerOnBikeCollide,function
	.thumb_func
PlayerOnBikeCollide:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PlayCollisionSoundIfNotFacingWarp
	add	r0, r4, #0
	bl	GetWalkInPlaceNormalMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 PlayerOnBikeCollide,.Lfe74-PlayerOnBikeCollide
	.align	2, 0
	.globl	PlayerNotOnBikeCollide
	.type	 PlayerNotOnBikeCollide,function
	.thumb_func
PlayerNotOnBikeCollide:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PlayCollisionSoundIfNotFacingWarp
	add	r0, r4, #0
	bl	GetWalkInPlaceSlowMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 PlayerNotOnBikeCollide,.Lfe75-PlayerNotOnBikeCollide
	.align	2, 0
	.globl	PlayerFaceDirection
	.type	 PlayerFaceDirection,function
	.thumb_func
PlayerFaceDirection:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 PlayerFaceDirection,.Lfe76-PlayerFaceDirection
	.align	2, 0
	.globl	PlayerFaceDirectionFast
	.type	 PlayerFaceDirectionFast,function
	.thumb_func
PlayerFaceDirectionFast:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionFastMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 PlayerFaceDirectionFast,.Lfe77-PlayerFaceDirectionFast
	.align	2, 0
	.globl	PlayerTurnInPlace
	.type	 PlayerTurnInPlace,function
	.thumb_func
PlayerTurnInPlace:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceFastMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 PlayerTurnInPlace,.Lfe78-PlayerTurnInPlace
	.align	2, 0
	.globl	PlayerJumpLedge
	.type	 PlayerJumpLedge,function
	.thumb_func
PlayerJumpLedge:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0xa
	bl	PlaySE
	add	r0, r4, #0
	bl	GetJump2MovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x8
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 PlayerJumpLedge,.Lfe79-PlayerJumpLedge
	.align	2, 0
	.globl	PlayerShakeHeadOrWalkInPlace
	.type	 PlayerShakeHeadOrWalkInPlace,function
	.thumb_func
PlayerShakeHeadOrWalkInPlace:
	push	{lr}
	mov	r0, #0x9f
	mov	r1, #0x0
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 PlayerShakeHeadOrWalkInPlace,.Lfe80-PlayerShakeHeadOrWalkInPlace
	.align	2, 0
	.globl	HandleEnforcedLookDirectionOnPlayerStopMoving
	.type	 HandleEnforcedLookDirectionOnPlayerStopMoving,function
	.thumb_func
HandleEnforcedLookDirectionOnPlayerStopMoving:
	push	{r4, lr}
	ldr	r4, .L314
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	beq	.L312	@cond_branch
	cmp	r0, #0
	bne	.L311	@cond_branch
.L312:
	bl	IsPlayerNotUsingAcroBikeOnBumpySlope
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L311	@cond_branch
	ldr	r2, .L314+0x4
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerForceSetHeldMovement
.L311:
	pop	{r4}
	pop	{r0}
	bx	r0
.L315:
	.align	2, 0
.L314:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe81:
	.size	 HandleEnforcedLookDirectionOnPlayerStopMoving,.Lfe81-HandleEnforcedLookDirectionOnPlayerStopMoving
	.align	2, 0
	.type	 PlayerGoSpin,function
	.thumb_func
PlayerGoSpin:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetSpinMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x3
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe82:
	.size	 PlayerGoSpin,.Lfe82-PlayerGoSpin
	.align	2, 0
	.type	 PlayerApplyTileForcedMovement,function
	.thumb_func
PlayerApplyTileForcedMovement:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L324
	ldr	r0, [r1]
	cmp	r0, #0
	beq	.L319	@cond_branch
	add	r4, r1, #0
	add	r7, r4, #0
	mov	r5, #0x0
.L321:
	ldr	r1, [r4]
	add	r0, r6, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L320	@cond_branch
	add	r0, r7, #0x4
	add	r0, r5, r0
	ldr	r0, [r0]
	bl	_call_via_r0
.L320:
	add	r4, r4, #0x8
	add	r5, r5, #0x8
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L321	@cond_branch
.L319:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L325:
	.align	2, 0
.L324:
	.word	sForcedMovementFuncs
.Lfe83:
	.size	 PlayerApplyTileForcedMovement,.Lfe83-PlayerApplyTileForcedMovement
	.align	2, 0
	.type	 PlayerIdleWheelie,function
	.thumb_func
PlayerIdleWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroWheelieFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe84:
	.size	 PlayerIdleWheelie,.Lfe84-PlayerIdleWheelie
	.align	2, 0
	.type	 PlayerStartWheelie,function
	.thumb_func
PlayerStartWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroPopWheelieFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe85:
	.size	 PlayerStartWheelie,.Lfe85-PlayerStartWheelie
	.align	2, 0
	.type	 PlayerEndWheelie,function
	.thumb_func
PlayerEndWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroEndWheelieFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe86:
	.size	 PlayerEndWheelie,.Lfe86-PlayerEndWheelie
	.align	2, 0
	.type	 PlayerStandingHoppingWheelie,function
	.thumb_func
PlayerStandingHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1c
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieHopFaceDirectionMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe87:
	.size	 PlayerStandingHoppingWheelie,.Lfe87-PlayerStandingHoppingWheelie
	.align	2, 0
	.type	 PlayerMovingHoppingWheelie,function
	.thumb_func
PlayerMovingHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1c
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieHopMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe88:
	.size	 PlayerMovingHoppingWheelie,.Lfe88-PlayerMovingHoppingWheelie
	.align	2, 0
	.type	 PlayerLedgeHoppingWheelie,function
	.thumb_func
PlayerLedgeHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1c
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieJumpMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x8
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe89:
	.size	 PlayerLedgeHoppingWheelie,.Lfe89-PlayerLedgeHoppingWheelie
	.align	2, 0
	.type	 PlayerAcroTurnJump,function
	.thumb_func
PlayerAcroTurnJump:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1c
	bl	PlaySE
	add	r0, r4, #0
	bl	GetJumpInPlaceTurnAroundMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe90:
	.size	 PlayerAcroTurnJump,.Lfe90-PlayerAcroTurnJump
	.align	2, 0
	.type	 PlayerAcroWheelieCollide,function
	.thumb_func
PlayerAcroWheelieCollide:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	bl	PlaySE
	add	r0, r4, #0
	bl	GetAcroWheelieInPlaceMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 PlayerAcroWheelieCollide,.Lfe91-PlayerAcroWheelieCollide
	.align	2, 0
	.type	 PlayerAcroPopWheelie,function
	.thumb_func
PlayerAcroPopWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroPopWheelieMoveMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe92:
	.size	 PlayerAcroPopWheelie,.Lfe92-PlayerAcroPopWheelie
	.align	2, 0
	.type	 PlayerAcroWheelieMove,function
	.thumb_func
PlayerAcroWheelieMove:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetAcroWheelieMoveMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe93:
	.size	 PlayerAcroWheelieMove,.Lfe93-PlayerAcroWheelieMove
	.section .rodata
	.align	2, 0
	.type	 sArrowWarpMetatileBehaviorChecks,object
sArrowWarpMetatileBehaviorChecks:
	.word	MetatileBehavior_IsSouthArrowWarp
	.word	MetatileBehavior_IsNorthArrowWarp
	.word	MetatileBehavior_IsWestArrowWarp
	.word	MetatileBehavior_IsEastArrowWarp
	.size	 sArrowWarpMetatileBehaviorChecks,16
.text
	.align	2, 0
	.type	 PlayCollisionSoundIfNotFacingWarp,function
	.thumb_func
PlayCollisionSoundIfNotFacingWarp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	ldr	r2, .L346
	ldr	r0, .L346+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r4, [r0, #0x1e]
	ldr	r1, .L346+0x8
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L336	@cond_branch
	cmp	r5, #0x3
	bne	.L338	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalUpLeftStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L336	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalDownLeftStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L336	@cond_branch
.L338:
	cmp	r5, #0x4
	bne	.L341	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalUpRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L336	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalDownRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L336	@cond_branch
.L341:
	cmp	r6, #0x2
	bne	.L344	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, #0x2
	mov	r1, sp
	add	r2, r4, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsWarpDoor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L336	@cond_branch
.L344:
	mov	r0, #0x7
	bl	PlaySE
.L336:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L347:
	.align	2, 0
.L346:
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	sArrowWarpMetatileBehaviorChecks
.Lfe94:
	.size	 PlayCollisionSoundIfNotFacingWarp,.Lfe94-PlayCollisionSoundIfNotFacingWarp
	.align	2, 0
	.globl	GetXYCoordsOneStepInFrontOfPlayer
	.type	 GetXYCoordsOneStepInFrontOfPlayer,function
	.thumb_func
GetXYCoordsOneStepInFrontOfPlayer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r3, .L349
	ldr	r2, .L349+0x4
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x10]
	strh	r0, [r4]
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x12]
	strh	r0, [r5]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	MoveCoords
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L350:
	.align	2, 0
.L349:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe95:
	.size	 GetXYCoordsOneStepInFrontOfPlayer,.Lfe95-GetXYCoordsOneStepInFrontOfPlayer
	.align	2, 0
	.globl	PlayerGetDestCoords
	.type	 PlayerGetDestCoords,function
	.thumb_func
PlayerGetDestCoords:
	push	{r4, r5, lr}
	ldr	r5, .L352
	ldr	r4, .L352+0x4
	ldrb	r3, [r4, #0x5]
	lsl	r2, r3, #0x3
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r2, [r2, #0x10]
	strh	r2, [r0]
	ldrb	r2, [r4, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r0, [r0, #0x12]
	strh	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L353:
	.align	2, 0
.L352:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe96:
	.size	 PlayerGetDestCoords,.Lfe96-PlayerGetDestCoords
	.align	2, 0
	.globl	player_get_pos_including_state_based_drift
	.type	 player_get_pos_including_state_based_drift,function
	.thumb_func
player_get_pos_including_state_based_drift:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L370
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L370+0x4
	add	r3, r0, r1
	ldrb	r1, [r3]
	mov	r0, #0xc0
	and	r0, r0, r1
	cmp	r0, #0x40
	beq	.LCB3526
	b	.L355	@long jump
.LCB3526:
	ldr	r2, .L370+0x8
	ldrb	r1, [r3, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x32
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.LCB3537
	b	.L355	@long jump
.LCB3537:
	ldrh	r0, [r3, #0x10]
	strh	r0, [r4]
	ldrh	r0, [r3, #0x12]
	strh	r0, [r5]
	ldrb	r0, [r3, #0x1c]
	sub	r0, r0, #0x10
	cmp	r0, #0x30
	bls	.LCB3547
	b	.L355	@long jump
.LCB3547:
	lsl	r0, r0, #0x2
	ldr	r1, .L370+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L371:
	.align	2, 0
.L370:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	.L365
	.align	2, 0
	.align	2, 0
.L365:
	.word	.L358
	.word	.L360
	.word	.L362
	.word	.L364
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L358
	.word	.L360
	.word	.L362
	.word	.L364
.L358:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	b	.L368
.L360:
	ldrh	r0, [r5]
	sub	r0, r0, #0x1
.L368:
	strh	r0, [r5]
	mov	r0, #0x1
	b	.L367
.L362:
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	b	.L369
.L364:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
.L369:
	strh	r0, [r4]
	mov	r0, #0x1
	b	.L367
.L355:
	mov	r1, #0x1
	neg	r1, r1
	add	r0, r1, #0
	strh	r0, [r4]
	strh	r0, [r5]
	mov	r0, #0x0
.L367:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe97:
	.size	 player_get_pos_including_state_based_drift,.Lfe97-player_get_pos_including_state_based_drift
	.align	2, 0
	.globl	GetPlayerFacingDirection
	.type	 GetPlayerFacingDirection,function
	.thumb_func
GetPlayerFacingDirection:
	ldr	r2, .L373
	ldr	r0, .L373+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bx	lr
.L374:
	.align	2, 0
.L373:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe98:
	.size	 GetPlayerFacingDirection,.Lfe98-GetPlayerFacingDirection
	.align	2, 0
	.globl	GetPlayerMovementDirection
	.type	 GetPlayerMovementDirection,function
	.thumb_func
GetPlayerMovementDirection:
	ldr	r2, .L376
	ldr	r0, .L376+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsr	r0, r0, #0x4
	bx	lr
.L377:
	.align	2, 0
.L376:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe99:
	.size	 GetPlayerMovementDirection,.Lfe99-GetPlayerMovementDirection
	.align	2, 0
	.globl	PlayerGetElevation
	.type	 PlayerGetElevation,function
	.thumb_func
PlayerGetElevation:
	ldr	r2, .L379
	ldr	r0, .L379+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0xb]
	lsr	r0, r0, #0x4
	bx	lr
.L380:
	.align	2, 0
.L379:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe100:
	.size	 PlayerGetElevation,.Lfe100-PlayerGetElevation
	.align	2, 0
	.globl	MovePlayerToMapCoords
	.type	 MovePlayerToMapCoords,function
	.thumb_func
MovePlayerToMapCoords:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r0, .L382
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L382+0x4
	add	r0, r0, r1
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r3, #0
	bl	MoveObjectEventToMapCoords
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe101:
	.size	 MovePlayerToMapCoords,.Lfe101-MovePlayerToMapCoords
	.align	2, 0
	.globl	TestPlayerAvatarFlags
	.type	 TestPlayerAvatarFlags,function
	.thumb_func
TestPlayerAvatarFlags:
	ldr	r1, .L385
	ldrb	r1, [r1]
	and	r1, r1, r0
	add	r0, r1, #0
	bx	lr
.L386:
	.align	2, 0
.L385:
	.word	gPlayerAvatar
.Lfe102:
	.size	 TestPlayerAvatarFlags,.Lfe102-TestPlayerAvatarFlags
	.align	2, 0
	.globl	GetPlayerAvatarFlags
	.type	 GetPlayerAvatarFlags,function
	.thumb_func
GetPlayerAvatarFlags:
	ldr	r0, .L388
	ldrb	r0, [r0]
	bx	lr
.L389:
	.align	2, 0
.L388:
	.word	gPlayerAvatar
.Lfe103:
	.size	 GetPlayerAvatarFlags,.Lfe103-GetPlayerAvatarFlags
	.align	2, 0
	.globl	GetPlayerAvatarObjectId
	.type	 GetPlayerAvatarObjectId,function
	.thumb_func
GetPlayerAvatarObjectId:
	ldr	r0, .L391
	ldrb	r0, [r0, #0x4]
	bx	lr
.L392:
	.align	2, 0
.L391:
	.word	gPlayerAvatar
.Lfe104:
	.size	 GetPlayerAvatarObjectId,.Lfe104-GetPlayerAvatarObjectId
	.align	2, 0
	.globl	CancelPlayerForcedMovement
	.type	 CancelPlayerForcedMovement,function
	.thumb_func
CancelPlayerForcedMovement:
	push	{lr}
	bl	ForcedMovement_None
	pop	{r0}
	bx	r0
.Lfe105:
	.size	 CancelPlayerForcedMovement,.Lfe105-CancelPlayerForcedMovement
	.align	2, 0
	.globl	StopPlayerAvatar
	.type	 StopPlayerAvatar,function
	.thumb_func
StopPlayerAvatar:
	push	{r4, lr}
	ldr	r0, .L396
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L396+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	bl	npc_clear_strange_bits
	ldrb	r1, [r4, #0x18]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	SetObjectEventDirection
	mov	r0, #0x6
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L395	@cond_branch
	bl	Bike_HandleBumpySlopeJump
	mov	r0, #0x0
	bl	Bike_UpdateBikeCounterSpeed
.L395:
	pop	{r4}
	pop	{r0}
	bx	r0
.L397:
	.align	2, 0
.L396:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe106:
	.size	 StopPlayerAvatar,.Lfe106-StopPlayerAvatar
	.section .rodata
	.type	 sPlayerAvatarGfxIds,object
sPlayerAvatarGfxIds:
	.byte	0x0
	.byte	0x7
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x9
	.byte	0x3
	.byte	0xa
	.byte	0x4
	.byte	0xb
	.byte	0x5
	.byte	0xc
	.size	 sPlayerAvatarGfxIds,12
	.type	 sHoennLinkPartnerGfxIds,object
sHoennLinkPartnerGfxIds:
	.byte	0xe
	.byte	0xf
	.size	 sHoennLinkPartnerGfxIds,2
.text
	.align	2, 0
	.globl	GetRivalAvatarGraphicsIdByStateIdAndGender
	.type	 GetRivalAvatarGraphicsIdByStateIdAndGender,function
	.thumb_func
GetRivalAvatarGraphicsIdByStateIdAndGender:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe107:
	.size	 GetRivalAvatarGraphicsIdByStateIdAndGender,.Lfe107-GetRivalAvatarGraphicsIdByStateIdAndGender
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	.type	 GetPlayerAvatarGraphicsIdByStateIdAndGender,function
	.thumb_func
GetPlayerAvatarGraphicsIdByStateIdAndGender:
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L400
	lsr	r0, r0, #0x17
	add	r1, r1, r0
	add	r1, r1, r2
	ldrb	r0, [r1]
	bx	lr
.L401:
	.align	2, 0
.L400:
	.word	sPlayerAvatarGfxIds
.Lfe108:
	.size	 GetPlayerAvatarGraphicsIdByStateIdAndGender,.Lfe108-GetPlayerAvatarGraphicsIdByStateIdAndGender
	.align	2, 0
	.globl	GetRSAvatarGraphicsIdByGender
	.type	 GetRSAvatarGraphicsIdByGender,function
	.thumb_func
GetRSAvatarGraphicsIdByGender:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L403
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L404:
	.align	2, 0
.L403:
	.word	sHoennLinkPartnerGfxIds
.Lfe109:
	.size	 GetRSAvatarGraphicsIdByGender,.Lfe109-GetRSAvatarGraphicsIdByGender
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByStateId
	.type	 GetPlayerAvatarGraphicsIdByStateId,function
	.thumb_func
GetPlayerAvatarGraphicsIdByStateId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L406
	ldrb	r1, [r1, #0x7]
	bl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L407:
	.align	2, 0
.L406:
	.word	gPlayerAvatar
.Lfe110:
	.size	 GetPlayerAvatarGraphicsIdByStateId,.Lfe110-GetPlayerAvatarGraphicsIdByStateId
	.align	2, 0
	.globl	GetPlayerAvatarGenderByGraphicsId
	.type	 GetPlayerAvatarGenderByGraphicsId,function
	.thumb_func
GetPlayerAvatarGenderByGraphicsId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xb
	bgt	.L415	@cond_branch
	cmp	r0, #0x7
	blt	.L415	@cond_branch
	mov	r0, #0x1
	b	.L417
.L415:
	mov	r0, #0x0
.L417:
	pop	{r1}
	bx	r1
.Lfe111:
	.size	 GetPlayerAvatarGenderByGraphicsId,.Lfe111-GetPlayerAvatarGenderByGraphicsId
	.align	2, 0
	.globl	PartyHasMonWithSurf
	.type	 PartyHasMonWithSurf,function
	.thumb_func
PartyHasMonWithSurf:
	push	{r4, r5, lr}
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L419	@cond_branch
	mov	r5, #0x0
	b	.L420
.L424:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	MonKnowsMove
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L422	@cond_branch
	mov	r0, #0x1
	b	.L427
.L422:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L420:
	cmp	r5, #0x5
	bhi	.L419	@cond_branch
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L428
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	bne	.L424	@cond_branch
.L419:
	mov	r0, #0x0
.L427:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L429:
	.align	2, 0
.L428:
	.word	gPlayerParty
.Lfe112:
	.size	 PartyHasMonWithSurf,.Lfe112-PartyHasMonWithSurf
	.align	2, 0
	.globl	IsPlayerSurfingNorth
	.type	 IsPlayerSurfingNorth,function
	.thumb_func
IsPlayerSurfingNorth:
	push	{lr}
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L431	@cond_branch
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L431	@cond_branch
	mov	r0, #0x1
	b	.L433
.L431:
	mov	r0, #0x0
.L433:
	pop	{r1}
	bx	r1
.Lfe113:
	.size	 IsPlayerSurfingNorth,.Lfe113-IsPlayerSurfingNorth
	.align	2, 0
	.globl	IsPlayerFacingSurfableFishableWater
	.type	 IsPlayerFacingSurfableFishableWater,function
	.thumb_func
IsPlayerFacingSurfableFishableWater:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L438
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L438+0x4
	add	r4, r4, r0
	ldrh	r1, [r4, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	mov	r5, sp
	add	r5, r5, #0x2
	strh	r0, [r5]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	mov	r1, sp
	add	r2, r5, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r0, #0x0
	ldrsh	r2, [r5, r0]
	ldrb	r3, [r4, #0x18]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1c
	add	r0, r4, #0
	bl	GetCollisionAtCoords
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L435	@cond_branch
	bl	PlayerGetElevation
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L435	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MetatileAtCoordsIsWaterTile
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L435	@cond_branch
	mov	r0, #0x1
	b	.L437
.L439:
	.align	2, 0
.L438:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L435:
	mov	r0, #0x0
.L437:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe114:
	.size	 IsPlayerFacingSurfableFishableWater,.Lfe114-IsPlayerFacingSurfableFishableWater
	.align	2, 0
	.type	 MetatileAtCoordsIsWaterTile,function
	.thumb_func
MetatileAtCoordsIsWaterTile:
	push	{lr}
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x1
	bl	MapGridGetMetatileAttributeAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	TestMetatileAttributeBit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe115:
	.size	 MetatileAtCoordsIsWaterTile,.Lfe115-MetatileAtCoordsIsWaterTile
	.align	2, 0
	.globl	ClearPlayerAvatarInfo
	.type	 ClearPlayerAvatarInfo,function
	.thumb_func
ClearPlayerAvatarInfo:
	push	{lr}
	ldr	r0, .L442
	mov	r1, #0x0
	mov	r2, #0x20
	bl	memset
	pop	{r0}
	bx	r0
.L443:
	.align	2, 0
.L442:
	.word	gPlayerAvatar
.Lfe116:
	.size	 ClearPlayerAvatarInfo,.Lfe116-ClearPlayerAvatarInfo
	.align	2, 0
	.globl	SetPlayerAvatarStateMask
	.type	 SetPlayerAvatarStateMask,function
	.thumb_func
SetPlayerAvatarStateMask:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L445
	ldrb	r2, [r3]
	mov	r1, #0xe0
	and	r1, r1, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	bx	lr
.L446:
	.align	2, 0
.L445:
	.word	gPlayerAvatar
.Lfe117:
	.size	 SetPlayerAvatarStateMask,.Lfe117-SetPlayerAvatarStateMask
	.section .rodata
	.type	 sPlayerAvatarGfxToStateFlag,object
sPlayerAvatarGfxToStateFlag:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x8
	.byte	0x7
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x9
	.byte	0x8
	.size	 sPlayerAvatarGfxToStateFlag,12
.text
	.align	2, 0
	.globl	GetPlayerAvatarStateTransitionByGraphicsId
	.type	 GetPlayerAvatarStateTransitionByGraphicsId,function
	.thumb_func
GetPlayerAvatarStateTransitionByGraphicsId:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x0
	ldr	r3, .L455
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r4, r0, #0x1
	add	r6, r3, #0x1
.L451:
	lsl	r0, r2, #0x1
	add	r1, r0, r4
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, r5
	bne	.L450	@cond_branch
	add	r0, r1, r6
	ldrb	r0, [r0]
	b	.L454
.L456:
	.align	2, 0
.L455:
	.word	sPlayerAvatarGfxToStateFlag
.L450:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L451	@cond_branch
	mov	r0, #0x1
.L454:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe118:
	.size	 GetPlayerAvatarStateTransitionByGraphicsId,.Lfe118-GetPlayerAvatarStateTransitionByGraphicsId
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByCurrentState
	.type	 GetPlayerAvatarGraphicsIdByCurrentState,function
	.thumb_func
GetPlayerAvatarGraphicsIdByCurrentState:
	push	{r4, r5, r6, lr}
	ldr	r0, .L465
	ldrb	r5, [r0]
	mov	r2, #0x0
	ldr	r3, .L465+0x4
	ldrb	r1, [r0, #0x7]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r4, r0, #0x1
	add	r6, r3, #0x1
.L461:
	lsl	r0, r2, #0x1
	add	r1, r0, r4
	add	r0, r1, r6
	ldrb	r0, [r0]
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L460	@cond_branch
	add	r0, r1, r3
	ldrb	r0, [r0]
	b	.L464
.L466:
	.align	2, 0
.L465:
	.word	gPlayerAvatar
	.word	sPlayerAvatarGfxToStateFlag
.L460:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L461	@cond_branch
	mov	r0, #0x0
.L464:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe119:
	.size	 GetPlayerAvatarGraphicsIdByCurrentState,.Lfe119-GetPlayerAvatarGraphicsIdByCurrentState
	.align	2, 0
	.globl	SetPlayerAvatarExtraStateTransition
	.type	 SetPlayerAvatarExtraStateTransition,function
	.thumb_func
SetPlayerAvatarExtraStateTransition:
	push	{r4, r5, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L468
	ldrb	r1, [r5, #0x7]
	bl	GetPlayerAvatarStateTransitionByGraphicsId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	orr	r0, r0, r4
	ldrb	r1, [r5, #0x1]
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	bl	DoPlayerAvatarTransition
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L469:
	.align	2, 0
.L468:
	.word	gPlayerAvatar
.Lfe120:
	.size	 SetPlayerAvatarExtraStateTransition,.Lfe120-SetPlayerAvatarExtraStateTransition
	.align	2, 0
	.globl	InitPlayerAvatar
	.type	 InitPlayerAvatar,function
	.thumb_func
InitPlayerAvatar:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x18
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	mov	r8, r3
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r1, r8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	mov	r1, sp
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r0, #0x0
	mov	r1, r8
	bl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	mov	r1, sp
	mov	r3, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, sp
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	sub	r4, r4, #0x7
	mov	r6, #0x0
	strh	r4, [r0, #0x4]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	sub	r5, r5, #0x7
	strh	r5, [r0, #0x6]
	strb	r6, [r0, #0x8]
	mov	r0, #0xb
	strb	r0, [r1, #0x9]
	mov	r2, sp
	ldrb	r1, [r2, #0xa]
	sub	r0, r0, #0x1b
	and	r0, r0, r1
	strb	r0, [r2, #0xa]
	mov	r0, sp
	strb	r6, [r0, #0xa]
	strh	r3, [r0, #0xc]
	strh	r3, [r0, #0xe]
	str	r3, [sp, #0x10]
	strh	r3, [r0, #0x14]
	bl	SpawnSpecialObjectEvent
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x3
	add	r4, r4, r5
	lsl	r4, r4, #0x2
	ldr	r0, .L471
	add	r4, r4, r0
	ldrb	r0, [r4, #0x2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x2]
	bl	CreateWarpArrowSprite
	strb	r0, [r4, #0x1b]
	add	r0, r4, #0
	mov	r1, r9
	bl	ObjectEventTurn
	bl	ClearPlayerAvatarInfo
	ldr	r0, .L471+0x4
	strb	r6, [r0, #0x2]
	strb	r6, [r0, #0x3]
	strb	r5, [r0, #0x5]
	ldrb	r1, [r4, #0x4]
	strb	r1, [r0, #0x4]
	mov	r1, r8
	strb	r1, [r0, #0x7]
	mov	r0, #0x21
	bl	SetPlayerAvatarStateMask
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L472:
	.align	2, 0
.L471:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe121:
	.size	 InitPlayerAvatar,.Lfe121-InitPlayerAvatar
	.align	2, 0
	.globl	SetPlayerInvisibility
	.type	 SetPlayerInvisibility,function
	.thumb_func
SetPlayerInvisibility:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L475
	ldr	r5, .L475+0x4
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	mov	r0, #0x1
	and	r4, r4, r0
	lsl	r3, r4, #0x5
	ldrb	r2, [r1, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L474	@cond_branch
	ldr	r2, .L475+0x8
	ldrb	r1, [r5, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0, #0x1a]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x3e
	lsl	r3, r4, #0x2
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1]
.L474:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L476:
	.align	2, 0
.L475:
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	gSprites
.Lfe122:
	.size	 SetPlayerInvisibility,.Lfe122-SetPlayerInvisibility
	.align	2, 0
	.globl	StartPlayerAvatarSummonMonForFieldMoveAnim
	.type	 StartPlayerAvatarSummonMonForFieldMoveAnim,function
	.thumb_func
StartPlayerAvatarSummonMonForFieldMoveAnim:
	push	{r4, r5, lr}
	ldr	r5, .L478
	ldrb	r0, [r5, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L478+0x4
	add	r4, r4, r0
	mov	r0, #0x3
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L478+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L479:
	.align	2, 0
.L478:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe123:
	.size	 StartPlayerAvatarSummonMonForFieldMoveAnim,.Lfe123-StartPlayerAvatarSummonMonForFieldMoveAnim
	.section .rodata
	.type	 sPlayerAvatarVsSeekerBikeGfxIds,object
sPlayerAvatarVsSeekerBikeGfxIds:
	.byte	0x6
	.byte	0xd
	.size	 sPlayerAvatarVsSeekerBikeGfxIds,2
.text
	.align	2, 0
	.globl	GetPlayerAvatarVsSeekerGfxId
	.type	 GetPlayerAvatarVsSeekerGfxId,function
	.thumb_func
GetPlayerAvatarVsSeekerGfxId:
	push	{lr}
	ldr	r2, .L485
	ldrb	r1, [r2]
	mov	r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L481	@cond_branch
	mov	r0, #0x5
	bl	GetPlayerAvatarGraphicsIdByStateId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L484
.L486:
	.align	2, 0
.L485:
	.word	gPlayerAvatar
.L481:
	ldr	r0, .L487
	ldrb	r1, [r2, #0x7]
	add	r1, r1, r0
	ldrb	r0, [r1]
.L484:
	pop	{r1}
	bx	r1
.L488:
	.align	2, 0
.L487:
	.word	sPlayerAvatarVsSeekerBikeGfxIds
.Lfe124:
	.size	 GetPlayerAvatarVsSeekerGfxId,.Lfe124-GetPlayerAvatarVsSeekerGfxId
	.align	2, 0
	.globl	StartPlayerAvatarVsSeekerAnim
	.type	 StartPlayerAvatarVsSeekerAnim,function
	.thumb_func
StartPlayerAvatarVsSeekerAnim:
	push	{r4, r5, lr}
	ldr	r5, .L490
	ldrb	r0, [r5, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L490+0x4
	add	r4, r4, r0
	bl	GetPlayerAvatarVsSeekerGfxId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L490+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L491:
	.align	2, 0
.L490:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe125:
	.size	 StartPlayerAvatarVsSeekerAnim,.Lfe125-StartPlayerAvatarVsSeekerAnim
	.align	2, 0
	.globl	StartPlayerAvatarFishAnim
	.type	 StartPlayerAvatarFishAnim,function
	.thumb_func
StartPlayerAvatarFishAnim:
	push	{lr}
	mov	r0, #0x2
	bl	QuestLogCallUpdatePlayerSprite
	pop	{r0}
	bx	r0
.Lfe126:
	.size	 StartPlayerAvatarFishAnim,.Lfe126-StartPlayerAvatarFishAnim
	.align	2, 0
	.globl	PlayerUseAcroBikeOnBumpySlope
	.type	 PlayerUseAcroBikeOnBumpySlope,function
	.thumb_func
PlayerUseAcroBikeOnBumpySlope:
	bx	lr
.Lfe127:
	.size	 PlayerUseAcroBikeOnBumpySlope,.Lfe127-PlayerUseAcroBikeOnBumpySlope
	.align	2, 0
	.type	 SetPlayerAvatarWatering,function
	.thumb_func
SetPlayerAvatarWatering:
	bx	lr
.Lfe128:
	.size	 SetPlayerAvatarWatering,.Lfe128-SetPlayerAvatarWatering
	.section .rodata
	.align	2, 0
	.type	 sArrowWarpMetatileBehaviorChecks2,object
sArrowWarpMetatileBehaviorChecks2:
	.word	MetatileBehavior_IsSouthArrowWarp
	.word	MetatileBehavior_IsNorthArrowWarp
	.word	MetatileBehavior_IsWestArrowWarp
	.word	MetatileBehavior_IsEastArrowWarp
	.size	 sArrowWarpMetatileBehaviorChecks2,16
.text
	.align	2, 0
	.type	 HandleWarpArrowSpriteHideShow,function
	.thumb_func
HandleWarpArrowSpriteHideShow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrb	r0, [r5, #0x1e]
	mov	r8, r0
	mov	r1, #0x0
	mov	r0, sp
	strh	r1, [r0]
	mov	r6, #0x1
	ldr	r1, .L502
	mov	r9, r1
	mov	r4, sp
	mov	r7, sp
	add	r7, r7, #0x2
.L499:
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldr	r1, [r0]
	mov	r0, r8
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L498	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	cmp	r6, r0
	bne	.L498	@cond_branch
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4]
	ldrh	r0, [r5, #0x12]
	strh	r0, [r7]
	add	r0, r6, #0
	mov	r1, sp
	add	r2, r7, #0
	bl	MoveCoords
	ldrb	r0, [r5, #0x1b]
	mov	r1, #0x0
	ldrsh	r2, [r4, r1]
	mov	r1, #0x0
	ldrsh	r3, [r7, r1]
	add	r1, r6, #0
	bl	ShowWarpArrowSprite
	b	.L495
.L503:
	.align	2, 0
.L502:
	.word	sArrowWarpMetatileBehaviorChecks2
.L498:
	ldrh	r1, [r4]
	add	r1, r1, #0x1
	strh	r1, [r4]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x3
	ble	.L499	@cond_branch
	ldrb	r0, [r5, #0x1b]
	bl	SetSpriteInvisible
.L495:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe129:
	.size	 HandleWarpArrowSpriteHideShow,.Lfe129-HandleWarpArrowSpriteHideShow
	.section .rodata
	.align	2, 0
	.type	 sBoulderTaskSteps,object
sBoulderTaskSteps:
	.word	DoBoulderInit
	.word	DoBoulderDust
	.word	DoBoulderFinish
	.size	 sBoulderTaskSteps,12
.text
	.align	2, 0
	.type	 StartStrengthAnim,function
	.thumb_func
StartStrengthAnim:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L505
	add	r0, r6, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L505+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0xc]
	bl	_call_via_r6
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L506:
	.align	2, 0
.L505:
	.word	Task_BumpBoulder
	.word	gTasks
.Lfe130:
	.size	 StartStrengthAnim,.Lfe130-StartStrengthAnim
	.align	2, 0
	.type	 Task_BumpBoulder,function
	.thumb_func
Task_BumpBoulder:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r6, .L512
	ldr	r2, .L512+0x4
	ldr	r5, .L512+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L508:
	mov	r0, #0x8
	ldrsh	r3, [r4, r0]
	lsl	r3, r3, #0x2
	add	r3, r3, r6
	ldr	r0, .L512+0xc
	ldrb	r0, [r0, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r3, [r3]
	add	r0, r4, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L508	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L513:
	.align	2, 0
.L512:
	.word	sBoulderTaskSteps
	.word	gTasks
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe131:
	.size	 Task_BumpBoulder,.Lfe131-Task_BumpBoulder
	.align	2, 0
	.type	 DoBoulderInit,function
	.thumb_func
DoBoulderInit:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LockPlayerFieldControls
	ldr	r1, .L515
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L516:
	.align	2, 0
.L515:
	.word	gPlayerAvatar
.Lfe132:
	.size	 DoBoulderInit,.Lfe132-DoBoulderInit
	.align	2, 0
	.type	 DoBoulderDust,function
	.thumb_func
DoBoulderDust:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L518	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L518	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	ldrb	r0, [r6, #0xc]
	bl	GetWalkInPlaceNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	QL_TryRecordPlayerStepWithDuration0
	ldrb	r0, [r6, #0xc]
	bl	GetWalkSlowerMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	QL_TryRecordNPCStepWithDuration32
	ldr	r2, .L519
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	str	r0, [r2]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	str	r0, [r2, #0x4]
	ldrb	r0, [r4, #0xb]
	lsr	r0, r0, #0x4
	str	r0, [r2, #0x8]
	ldr	r3, .L519+0x4
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	str	r0, [r2, #0xc]
	mov	r0, #0xa
	bl	FieldEffectStart
	mov	r0, #0xcf
	bl	PlaySE
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L518:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L520:
	.align	2, 0
.L519:
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe133:
	.size	 DoBoulderDust,.Lfe133-DoBoulderDust
	.align	2, 0
	.type	 DoBoulderFinish,function
	.thumb_func
DoBoulderFinish:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r5, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L522	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L522	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	add	r0, r4, #0
	bl	HandleBoulderFallThroughHole
	ldrh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x12]
	bl	HandleBoulderActivateVictoryRoadSwitch
	ldr	r1, .L523
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	UnlockPlayerFieldControls
	ldr	r0, .L523+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L522:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L524:
	.align	2, 0
.L523:
	.word	gPlayerAvatar
	.word	Task_BumpBoulder
.Lfe134:
	.size	 DoBoulderFinish,.Lfe134-DoBoulderFinish
	.section .rodata
	.align	2, 0
	.type	 sPlayerAvatarSecretBaseMatJump,object
sPlayerAvatarSecretBaseMatJump:
	.word	PlayerAvatar_DoSecretBaseMatJump
	.size	 sPlayerAvatarSecretBaseMatJump,4
.text
	.align	2, 0
	.type	 DoPlayerMatJump,function
	.thumb_func
DoPlayerMatJump:
	push	{r4, lr}
	ldr	r4, .L526
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L527:
	.align	2, 0
.L526:
	.word	DoPlayerAvatarSecretBaseMatJump
.Lfe135:
	.size	 DoPlayerMatJump,.Lfe135-DoPlayerMatJump
	.align	2, 0
	.type	 DoPlayerAvatarSecretBaseMatJump,function
	.thumb_func
DoPlayerAvatarSecretBaseMatJump:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L533
	ldr	r2, .L533+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L529:
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r0, .L533+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L533+0xc
	add	r1, r1, r0
	ldr	r2, [r2]
	add	r0, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L529	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L534:
	.align	2, 0
.L533:
	.word	sPlayerAvatarSecretBaseMatJump
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe136:
	.size	 DoPlayerAvatarSecretBaseMatJump,.Lfe136-DoPlayerAvatarSecretBaseMatJump
	.align	2, 0
	.type	 PlayerAvatar_DoSecretBaseMatJump,function
	.thumb_func
PlayerAvatar_DoSecretBaseMatJump:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	ldr	r5, .L538
	mov	r0, #0x1
	strb	r0, [r5, #0x6]
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L536	@cond_branch
	mov	r0, #0xa
	bl	PlaySE
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetJumpInPlaceMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	QL_TryRecordPlayerStepWithDuration0
	ldrh	r0, [r6, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r6, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L536	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5, #0x6]
	ldrb	r0, [r5, #0x1]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	ldr	r0, .L538+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L536:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L539:
	.align	2, 0
.L538:
	.word	gPlayerAvatar
	.word	DoPlayerAvatarSecretBaseMatJump
.Lfe137:
	.size	 PlayerAvatar_DoSecretBaseMatJump,.Lfe137-PlayerAvatar_DoSecretBaseMatJump
	.section .rodata
	.align	2, 0
	.type	 sPlayerAvatarSecretBaseMatSpin,object
sPlayerAvatarSecretBaseMatSpin:
	.word	PlayerAvatar_SecretBaseMatSpinStep0
	.word	PlayerAvatar_SecretBaseMatSpinStep1
	.word	PlayerAvatar_SecretBaseMatSpinStep2
	.word	PlayerAvatar_SecretBaseMatSpinStep3
	.size	 sPlayerAvatarSecretBaseMatSpin,16
.text
	.align	2, 0
	.type	 DoPlayerMatSpin,function
	.thumb_func
DoPlayerMatSpin:
	push	{r4, lr}
	ldr	r4, .L541
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L542:
	.align	2, 0
.L541:
	.word	PlayerAvatar_DoSecretBaseMatSpin
.Lfe138:
	.size	 DoPlayerMatSpin,.Lfe138-DoPlayerMatSpin
	.align	2, 0
	.type	 PlayerAvatar_DoSecretBaseMatSpin,function
	.thumb_func
PlayerAvatar_DoSecretBaseMatSpin:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L548
	ldr	r2, .L548+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L544:
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r0, .L548+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L548+0xc
	add	r1, r1, r0
	ldr	r2, [r2]
	add	r0, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L544	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L549:
	.align	2, 0
.L548:
	.word	sPlayerAvatarSecretBaseMatSpin
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe139:
	.size	 PlayerAvatar_DoSecretBaseMatSpin,.Lfe139-PlayerAvatar_DoSecretBaseMatSpin
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep0,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep0:
	push	{lr}
	ldrh	r2, [r0, #0x8]
	add	r2, r2, #0x1
	strh	r2, [r0, #0x8]
	ldrb	r1, [r1, #0x18]
	lsr	r1, r1, #0x4
	strh	r1, [r0, #0xa]
	ldr	r1, .L551
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	bl	LockPlayerFieldControls
	mov	r0, #0x27
	bl	PlaySE
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L552:
	.align	2, 0
.L551:
	.word	gPlayerAvatar
.Lfe140:
	.size	 PlayerAvatar_SecretBaseMatSpinStep0,.Lfe140-PlayerAvatar_SecretBaseMatSpinStep0
	.section .rodata
.LC221:
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x1
.text
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep1,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep1:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r1, .L557
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L554	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	sub	r0, r0, #0x1
	add	r0, r0, sp
	ldrb	r6, [r0]
	add	r0, r6, #0
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	QL_TryRecordPlayerStepWithDuration0
	ldrb	r0, [r4, #0xa]
	cmp	r6, r0
	bne	.L555	@cond_branch
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
.L555:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	ble	.L554	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	bne	.L554	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L554:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L558:
	.align	2, 0
.L557:
	.word	.LC221
.Lfe141:
	.size	 PlayerAvatar_SecretBaseMatSpinStep1,.Lfe141-PlayerAvatar_SecretBaseMatSpinStep1
	.section .rodata
.LC223:
	.byte	0x18
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.byte	0x1b
.text
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep2,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep2:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L561
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L560	@cond_branch
	mov	r1, #0xc
	ldrsh	r0, [r5, r1]
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	QL_TryRecordPlayerStepWithDuration0
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
.L560:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L562:
	.align	2, 0
.L561:
	.word	.LC223
.Lfe142:
	.size	 PlayerAvatar_SecretBaseMatSpinStep2,.Lfe142-PlayerAvatar_SecretBaseMatSpinStep2
	.align	2, 0
	.type	 PlayerAvatar_SecretBaseMatSpinStep3,function
	.thumb_func
PlayerAvatar_SecretBaseMatSpinStep3:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L564	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkSlowerMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	QL_TryRecordPlayerStepWithDuration0
	bl	UnlockPlayerFieldControls
	ldr	r1, .L565
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	ldr	r0, .L565+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L564:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L566:
	.align	2, 0
.L565:
	.word	gPlayerAvatar
	.word	PlayerAvatar_DoSecretBaseMatSpin
.Lfe143:
	.size	 PlayerAvatar_SecretBaseMatSpinStep3,.Lfe143-PlayerAvatar_SecretBaseMatSpinStep3
	.align	2, 0
	.type	 CreateStopSurfingTask,function
	.thumb_func
CreateStopSurfingTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	Overworld_ClearSavedMusic
	bl	Overworld_ChangeMusicToDefault
	ldr	r2, .L568
	ldrb	r1, [r2]
	mov	r0, #0xf7
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x1
	strb	r0, [r2, #0x6]
	ldr	r5, .L568+0x4
	add	r0, r5, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L568+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	bl	_call_via_r5
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L569:
	.align	2, 0
.L568:
	.word	gPlayerAvatar
	.word	Task_StopSurfingInit
	.word	gTasks
.Lfe144:
	.size	 CreateStopSurfingTask,.Lfe144-CreateStopSurfingTask
	.align	2, 0
	.globl	CreateStopSurfingTask_NoMusicChange
	.type	 CreateStopSurfingTask_NoMusicChange,function
	.thumb_func
CreateStopSurfingTask_NoMusicChange:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r2, .L571
	ldrb	r1, [r2]
	mov	r0, #0xf7
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x1
	strb	r0, [r2, #0x6]
	ldr	r5, .L571+0x4
	add	r0, r5, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L571+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	bl	_call_via_r5
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L572:
	.align	2, 0
.L571:
	.word	gPlayerAvatar
	.word	Task_StopSurfingInit
	.word	gTasks
.Lfe145:
	.size	 CreateStopSurfingTask_NoMusicChange,.Lfe145-CreateStopSurfingTask_NoMusicChange
	.align	2, 0
	.globl	SeafoamIslandsB4F_CurrentDumpsPlayerOnLand
	.type	 SeafoamIslandsB4F_CurrentDumpsPlayerOnLand,function
	.thumb_func
SeafoamIslandsB4F_CurrentDumpsPlayerOnLand:
	push	{lr}
	ldr	r0, .L575
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L574	@cond_branch
	cmp	r0, #0x3
	beq	.L574	@cond_branch
	ldr	r0, .L575+0x4
	ldrb	r0, [r0, #0x2]
	mov	r1, #0x10
	bl	QuestLogRecordPlayerAvatarGfxTransitionWithDuration
	mov	r0, #0x2
	bl	CreateStopSurfingTask
.L574:
	pop	{r0}
	bx	r0
.L576:
	.align	2, 0
.L575:
	.word	gQuestLogPlaybackState
	.word	sQuestLogSurfDismountActionIds
.Lfe146:
	.size	 SeafoamIslandsB4F_CurrentDumpsPlayerOnLand,.Lfe146-SeafoamIslandsB4F_CurrentDumpsPlayerOnLand
	.align	2, 0
	.type	 Task_StopSurfingInit,function
	.thumb_func
Task_StopSurfingInit:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L580
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L580+0x4
	add	r5, r0, r1
	add	r0, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L578	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L577	@cond_branch
.L578:
	ldrb	r0, [r5, #0x1a]
	mov	r1, #0x2
	bl	SetSurfBlob_BobState
	ldr	r0, .L580+0x8
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x8]
	bl	GetJumpSpecialWithEffectMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	QL_TryRecordPlayerStepWithDuration0
	ldr	r0, .L580+0xc
	str	r0, [r4]
.L577:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L581:
	.align	2, 0
.L580:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gTasks
	.word	Task_WaitStopSurfing
.Lfe147:
	.size	 Task_StopSurfingInit,.Lfe147-Task_StopSurfingInit
	.align	2, 0
	.type	 Task_WaitStopSurfing,function
	.thumb_func
Task_WaitStopSurfing:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r6, .L584
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L584+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L583	@cond_branch
	mov	r0, #0x0
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	QL_TryRecordPlayerStepWithDuration0
	mov	r0, #0x0
	strb	r0, [r6, #0x6]
	bl	UnlockPlayerFieldControls
	bl	UnfreezeObjectEvents
	ldrb	r1, [r4, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L584+0x8
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r5, #0
	bl	DestroyTask
	bl	SetHelpContextForMap
.L583:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L585:
	.align	2, 0
.L584:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe148:
	.size	 Task_WaitStopSurfing,.Lfe148-Task_WaitStopSurfing
	.section .rodata
	.align	2, 0
	.type	 sFishingStateFuncs,object
sFishingStateFuncs:
	.word	Fishing1
	.word	Fishing2
	.word	Fishing3
	.word	Fishing4
	.word	Fishing5
	.word	Fishing6
	.word	Fishing7
	.word	Fishing8
	.word	Fishing9
	.word	Fishing10
	.word	Fishing11
	.word	Fishing12
	.word	Fishing13
	.word	Fishing14
	.word	Fishing15
	.word	Fishing16
	.size	 sFishingStateFuncs,64
.text
	.align	2, 0
	.globl	StartFishing
	.type	 StartFishing,function
	.thumb_func
StartFishing:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L588
	add	r0, r5, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L588+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x26]
	bl	_call_via_r5
	mov	r0, #0x2
	bl	QuestLogTryRecordPlayerAvatarGfxTransition
	cmp	r0, #0x1
	bne	.L587	@cond_branch
	bl	QL_AfterRecordFishActionSuccessful
.L587:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L589:
	.align	2, 0
.L588:
	.word	Task_Fishing
	.word	gTasks
.Lfe149:
	.size	 StartFishing,.Lfe149-StartFishing
	.align	2, 0
	.type	 Task_Fishing,function
	.thumb_func
Task_Fishing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L595
	ldr	r2, .L595+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L591:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L591	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L596:
	.align	2, 0
.L595:
	.word	sFishingStateFuncs
	.word	gTasks
.Lfe150:
	.size	 Task_Fishing,.Lfe150-Task_Fishing
	.align	2, 0
	.type	 Fishing1,function
	.thumb_func
Fishing1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LockPlayerFieldControls
	ldr	r1, .L598
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L599:
	.align	2, 0
.L598:
	.word	gPlayerAvatar
.Lfe151:
	.size	 Fishing1,.Lfe151-Fishing1
	.section .rodata
	.align	1, 0
.LC255:
	.short	0x1
	.short	0x1
	.short	0x1
	.align	1, 0
.LC257:
	.short	0x1
	.short	0x3
	.short	0x6
.text
	.align	2, 0
	.type	 Fishing2,function
	.thumb_func
Fishing2:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	ldr	r1, .L601
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	add	r4, sp, #0x8
	ldr	r1, .L601+0x4
	add	r0, r4, #0
	mov	r2, #0x6
	bl	memcpy
	mov	r0, #0x0
	strh	r0, [r5, #0x20]
	bl	Random
	mov	r2, #0x26
	ldrsh	r1, [r5, r2]
	lsl	r1, r1, #0x1
	mov	r2, sp
	add	r6, r2, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r4, r4, r1
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	__modsi3
	ldrh	r1, [r6]
	add	r1, r1, r0
	strh	r1, [r5, #0x22]
	ldr	r3, .L601+0x8
	ldr	r2, .L601+0xc
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	strh	r0, [r5, #0x24]
	ldrb	r0, [r2, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r3
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfActive
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x8
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	StartPlayerAvatarFishAnim
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L602:
	.align	2, 0
.L601:
	.word	.LC255
	.word	.LC257
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe152:
	.size	 Fishing2,.Lfe152-Fishing2
	.align	2, 0
	.type	 Fishing3,function
	.thumb_func
Fishing3:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L605
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L605+0x4
	add	r0, r0, r1
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3b
	ble	.L604	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L604:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L606:
	.align	2, 0
.L605:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe153:
	.size	 Fishing3,.Lfe153-Fishing3
	.align	2, 0
	.type	 Fishing4,function
	.thumb_func
Fishing4:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	mov	r1, #0x1
	bl	LoadMessageBoxAndFrameGfx
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x8]
	strh	r1, [r4, #0xa]
	strh	r1, [r4, #0xc]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	add	r1, r0, #0
	add	r0, r1, #0x1
	strh	r0, [r4, #0xe]
	mov	r2, #0x20
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L608	@cond_branch
	add	r0, r1, #0x4
	strh	r0, [r4, #0xe]
.L608:
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	ble	.L609	@cond_branch
	mov	r0, #0xa
	strh	r0, [r4, #0xe]
.L609:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe154:
	.size	 Fishing4,.Lfe154-Fishing4
	.section .rodata
	.type	 dot.465,object
dot.465:
	.byte	0xaf
	.byte	0xff
.text
	.align	2, 0
	.type	 Fishing5,function
	.thumb_func
Fishing5:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	ldr	r0, .L615
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L615+0x4
	add	r0, r0, r1
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x13
	ble	.L611	@cond_branch
	strh	r5, [r4, #0xa]
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	mov	r2, #0xe
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	blt	.L612	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r1, r0, #0x1
	strh	r1, [r4, #0x8]
	ldrh	r2, [r4, #0x20]
	mov	r3, #0x20
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	beq	.L613	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r4, #0x8]
.L613:
	add	r0, r2, #0x1
	strh	r0, [r4, #0x20]
	b	.L611
.L616:
	.align	2, 0
.L615:
	.word	gPlayerAvatar
	.word	gSprites
.L612:
	ldr	r2, .L617
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	lsl	r3, r0, #0x1
	add	r3, r3, r0
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x18
	mov	r0, #0x1
	str	r0, [sp]
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x2
	bl	AddTextPrinterParameterized
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
.L611:
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L618:
	.align	2, 0
.L617:
	.word	dot.465
.Lfe155:
	.size	 Fishing5,.Lfe155-Fishing5
	.align	2, 0
	.type	 Fishing6,function
	.thumb_func
Fishing6:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldr	r6, .L623
	ldrb	r1, [r6, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L623+0x4
	add	r0, r0, r5
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	bl	DoesCurrentMapHaveFishingMons
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L621	@cond_branch
	bl	Random
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L620	@cond_branch
.L621:
	mov	r0, #0xb
	strh	r0, [r4, #0x8]
	b	.L622
.L624:
	.align	2, 0
.L623:
	.word	gPlayerAvatar
	.word	gSprites
.L620:
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r5
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFishingBiteDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
.L622:
	mov	r0, #0x1
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe156:
	.size	 Fishing6,.Lfe156-Fishing6
	.align	2, 0
	.type	 Fishing7,function
	.thumb_func
Fishing7:
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x3
	strh	r1, [r0, #0x8]
	mov	r0, #0x0
	bx	lr
.Lfe157:
	.size	 Fishing7,.Lfe157-Fishing7
	.section .rodata
	.align	1, 0
.LC272:
	.short	0x24
	.short	0x21
	.short	0x1e
.text
	.align	2, 0
	.type	 Fishing8,function
	.thumb_func
Fishing8:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L631
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	ldr	r0, .L631+0x4
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L631+0x8
	add	r0, r0, r1
	bl	AlignFishingAnimationFrames
	ldrh	r1, [r4, #0xa]
	add	r1, r1, #0x1
	strh	r1, [r4, #0xa]
	mov	r2, #0x26
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r1, r0
	blt	.L627	@cond_branch
	mov	r0, #0xc
	b	.L630
.L632:
	.align	2, 0
.L631:
	.word	.LC272
	.word	gPlayerAvatar
	.word	gSprites
.L627:
	ldr	r0, .L633
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L628	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
.L630:
	strh	r0, [r4, #0x8]
.L628:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L634:
	.align	2, 0
.L633:
	.word	gMain
.Lfe158:
	.size	 Fishing8,.Lfe158-Fishing8
	.section .rodata
	.align	1, 0
.LC279:
	.short	0x0
	.short	0x0
	.short	0x28
	.short	0xa
	.short	0x46
	.short	0x1e
.text
	.align	2, 0
	.type	 Fishing9,function
	.thumb_func
Fishing9:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	ldr	r1, .L641
	mov	r0, sp
	mov	r2, #0xc
	bl	memcpy
	ldr	r0, .L641+0x4
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L641+0x8
	add	r0, r0, r1
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x20
	ldrsh	r1, [r4, r0]
	mov	r2, #0x22
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	blt	.L640	@cond_branch
	cmp	r1, #0x1
	bgt	.L637	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	mov	r3, #0x20
	ldrsh	r2, [r4, r3]
	lsl	r2, r2, #0x1
	mov	r3, #0x26
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r2, r2, r1
	mov	r3, sp
	add	r1, r3, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	ble	.L637	@cond_branch
.L640:
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
.L637:
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.L642:
	.align	2, 0
.L641:
	.word	.LC279
	.word	gPlayerAvatar
	.word	gSprites
.Lfe159:
	.size	 Fishing9,.Lfe159-Fishing9
	.align	2, 0
	.type	 Fishing10,function
	.thumb_func
Fishing10:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	ldr	r0, .L644
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L644+0x4
	add	r0, r0, r1
	bl	AlignFishingAnimationFrames
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L644+0x8
	mov	r5, #0x0
	str	r5, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r3, #0x1
	bl	AddTextPrinterParameterized2
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	strh	r5, [r4, #0xa]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L645:
	.align	2, 0
.L644:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gText_PokemonOnHook
.Lfe160:
	.size	 Fishing10,.Lfe160-Fishing10
	.align	2, 0
	.type	 Fishing11,function
	.thumb_func
Fishing11:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L647	@cond_branch
	ldr	r0, .L654
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L654+0x4
	add	r0, r0, r1
	bl	AlignFishingAnimationFrames
.L647:
	bl	RunTextPrinters
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L653	@cond_branch
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0
	bne	.L648	@cond_branch
	ldr	r7, .L654
	ldrb	r0, [r7, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L654+0x8
	mov	r8, r0
	add	r4, r4, r8
	ldrh	r1, [r5, #0x24]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	ldrb	r1, [r7]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L650	@cond_branch
	ldrb	r0, [r7, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r0, [r1, #0x1a]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetSurfBlob_PlayerOffset
.L650:
	ldr	r2, .L654+0x4
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r6, [r0, #0x24]
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r6, [r0, #0x26]
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	ldrh	r0, [r5, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xa]
	b	.L651
.L655:
	.align	2, 0
.L654:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gObjectEvents
.L648:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L651	@cond_branch
.L653:
	ldr	r1, .L656
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	UnlockPlayerFieldControls
	ldrh	r0, [r5, #0x26]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	FishingWildEncounter
	ldr	r0, .L656+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L651:
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L657:
	.align	2, 0
.L656:
	.word	gPlayerAvatar
	.word	Task_Fishing
.Lfe161:
	.size	 Fishing11,.Lfe161-Fishing11
	.align	2, 0
	.type	 Fishing12,function
	.thumb_func
Fishing12:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r6, r0, #0
	ldr	r4, .L659
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L659+0x4
	add	r0, r0, r5
	bl	AlignFishingAnimationFrames
	ldrb	r0, [r4, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r5
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFishingNoCatchDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L659+0x8
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r3, #0x1
	bl	AddTextPrinterParameterized2
	mov	r0, #0xd
	strh	r0, [r6, #0x8]
	mov	r0, #0x1
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L660:
	.align	2, 0
.L659:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gText_NotEvenANibble
.Lfe162:
	.size	 Fishing12,.Lfe162-Fishing12
	.align	2, 0
	.type	 Fishing13,function
	.thumb_func
Fishing13:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r6, r0, #0
	ldr	r4, .L662
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L662+0x4
	add	r0, r0, r5
	bl	AlignFishingAnimationFrames
	ldrb	r0, [r4, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r5
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFishingNoCatchDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	ldr	r2, .L662+0x8
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r3, #0x1
	bl	AddTextPrinterParameterized2
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	mov	r0, #0x1
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L663:
	.align	2, 0
.L662:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gText_ItGotAway
.Lfe163:
	.size	 Fishing13,.Lfe163-Fishing13
	.align	2, 0
	.type	 Fishing14,function
	.thumb_func
Fishing14:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L665
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L665+0x4
	add	r0, r0, r1
	bl	AlignFishingAnimationFrames
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L666:
	.align	2, 0
.L665:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe164:
	.size	 Fishing14,.Lfe164-Fishing14
	.align	2, 0
	.type	 Fishing15,function
	.thumb_func
Fishing15:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	ldr	r5, .L670
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r7, .L670+0x4
	add	r0, r0, r7
	bl	AlignFishingAnimationFrames
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	cmp	r0, #0
	bge	.L668	@cond_branch
	ldrb	r0, [r5, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L670+0x8
	mov	r8, r0
	add	r4, r4, r8
	ldrh	r1, [r6, #0x24]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	ObjectEventTurn
	ldrb	r1, [r5]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L669	@cond_branch
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r0, [r1, #0x1a]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetSurfBlob_PlayerOffset
.L669:
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	mov	r2, #0x0
	strh	r2, [r0, #0x24]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	strh	r2, [r0, #0x26]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L668:
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L671:
	.align	2, 0
.L670:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gObjectEvents
.Lfe165:
	.size	 Fishing15,.Lfe165-Fishing15
	.align	2, 0
	.type	 Fishing16,function
	.thumb_func
Fishing16:
	push	{lr}
	bl	RunTextPrinters
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	bne	.L673	@cond_branch
	ldr	r0, .L674
	strb	r1, [r0, #0x6]
	bl	UnlockPlayerFieldControls
	bl	UnfreezeObjectEvents
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	ldr	r0, .L674+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L673:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L675:
	.align	2, 0
.L674:
	.word	gPlayerAvatar
	.word	Task_Fishing
.Lfe166:
	.size	 Fishing16,.Lfe166-Fishing16
	.align	2, 0
	.globl	AlignFishingAnimationFrames
	.type	 AlignFishingAnimationFrames,function
	.thumb_func
AlignFishingAnimationFrames:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	bl	AnimateSprite
	mov	r0, #0x0
	strh	r0, [r4, #0x24]
	strh	r0, [r4, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r5, [r0]
	mov	r0, #0x2a
	add	r0, r0, r4
	mov	ip, r0
	ldrb	r0, [r0]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	lsl	r6, r5, #0x2
	add	r0, r6, r0
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r7, #0x1
	neg	r7, r7
	cmp	r0, r7
	beq	.L685	@cond_branch
	add	r3, r4, #0
	add	r3, r3, #0x2c
	ldrb	r2, [r3]
	lsl	r1, r2, #0x1a
	lsr	r1, r1, #0x1a
	add	r1, r1, #0x1
	mov	r0, #0x3f
	and	r1, r1, r0
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r1, ip
	ldrb	r0, [r1]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	add	r0, r6, r0
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, r7
	bne	.L678	@cond_branch
.L685:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L678:
	add	r0, r4, #0
	add	r0, r0, #0x2a
	ldrb	r0, [r0]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrb	r5, [r0]
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L680	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x24]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L680	@cond_branch
	ldr	r0, .L686
	strh	r0, [r4, #0x24]
.L680:
	cmp	r5, #0x5
	bne	.L682	@cond_branch
	ldr	r0, .L686
	strh	r0, [r4, #0x26]
.L682:
	add	r0, r5, #0
	sub	r0, r0, #0xa
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L683	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x26]
.L683:
	ldr	r3, .L686+0x4
	ldrb	r1, [r3]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L684	@cond_branch
	ldr	r2, .L686+0x8
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1a]
	mov	r1, #0x26
	ldrsh	r2, [r4, r1]
	mov	r1, #0x1
	bl	SetSurfBlob_PlayerOffset
.L684:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L687:
	.align	2, 0
.L686:
	.word	0xfff8
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe167:
	.size	 AlignFishingAnimationFrames,.Lfe167-AlignFishingAnimationFrames
	.section .rodata
	.type	 sTeleportFacingDirectionSequence,object
sTeleportFacingDirectionSequence:
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.size	 sTeleportFacingDirectionSequence,5
.text
	.align	2, 0
	.globl	StartTeleportWarpOutPlayerAnim
	.type	 StartTeleportWarpOutPlayerAnim,function
	.thumb_func
StartTeleportWarpOutPlayerAnim:
	push	{r4, lr}
	ldr	r4, .L689
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L690:
	.align	2, 0
.L689:
	.word	Task_TeleportWarpOutPlayerAnim
.Lfe168:
	.size	 StartTeleportWarpOutPlayerAnim,.Lfe168-StartTeleportWarpOutPlayerAnim
	.align	2, 0
	.globl	WaitTeleportWarpOutPlayerAnim
	.type	 WaitTeleportWarpOutPlayerAnim,function
	.thumb_func
WaitTeleportWarpOutPlayerAnim:
	push	{lr}
	ldr	r0, .L692
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L693:
	.align	2, 0
.L692:
	.word	Task_TeleportWarpOutPlayerAnim
.Lfe169:
	.size	 WaitTeleportWarpOutPlayerAnim,.Lfe169-WaitTeleportWarpOutPlayerAnim
	.align	2, 0
	.globl	SavePlayerFacingDirectionForTeleport
	.type	 SavePlayerFacingDirectionForTeleport,function
	.thumb_func
SavePlayerFacingDirectionForTeleport:
	ldr	r1, .L695
	strb	r0, [r1]
	bx	lr
.L696:
	.align	2, 0
.L695:
	.word	sTeleportSavedFacingDirection
.Lfe170:
	.size	 SavePlayerFacingDirectionForTeleport,.Lfe170-SavePlayerFacingDirectionForTeleport
	.align	2, 0
	.type	 GetTeleportSavedFacingDirection,function
	.thumb_func
GetTeleportSavedFacingDirection:
	push	{lr}
	ldr	r1, .L701
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L700	@cond_branch
	mov	r0, #0x1
.L700:
	pop	{r1}
	bx	r1
.L702:
	.align	2, 0
.L701:
	.word	sTeleportSavedFacingDirection
.Lfe171:
	.size	 GetTeleportSavedFacingDirection,.Lfe171-GetTeleportSavedFacingDirection
	.align	2, 0
	.type	 Task_TeleportWarpOutPlayerAnim,function
	.thumb_func
Task_TeleportWarpOutPlayerAnim:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	ldr	r0, .L713
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L713+0x4
	add	r4, r0, r1
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L713+0x8
	add	r7, r0, r1
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L713+0xc
	add	r5, r0, r1
	mov	r0, #0x0
	ldrsh	r6, [r5, r0]
	cmp	r6, #0x1
	beq	.L707	@cond_branch
	cmp	r6, #0x1
	bgt	.L712	@cond_branch
	cmp	r6, #0
	beq	.L705	@cond_branch
	b	.L703
.L714:
	.align	2, 0
.L713:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	gTasks+0x8
.L712:
	cmp	r6, #0x2
	beq	.L709	@cond_branch
	b	.L703
.L705:
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L703	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	SavePlayerFacingDirectionForTeleport
	mov	r1, #0x0
	mov	r8, r1
	strh	r6, [r5, #0x2]
	mov	r0, #0x1
	strh	r0, [r5, #0x4]
	ldrh	r0, [r7, #0x26]
	ldrh	r2, [r7, #0x22]
	add	r0, r0, r2
	lsl	r0, r0, #0x4
	strh	r0, [r5, #0x6]
	strh	r6, [r7, #0x26]
	bl	CameraObjectReset2
	ldrb	r0, [r4, #0x3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r4, #0x3]
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r7, #0x5]
	add	r0, r7, #0
	add	r0, r0, #0x43
	mov	r1, r8
	strb	r1, [r0]
	add	r2, r7, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L707:
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	TeleportAnim_RotatePlayer
	ldrh	r0, [r5, #0x6]
	ldrh	r1, [r5, #0x4]
	sub	r0, r0, r1
	strh	r0, [r5, #0x6]
	add	r1, r1, #0x3
	strh	r1, [r5, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x14
	strh	r0, [r7, #0x22]
	mov	r2, #0x22
	ldrsh	r1, [r7, r2]
	ldr	r0, .L715
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	add	r1, r1, r0
	mov	r0, #0x20
	neg	r0, r0
	cmp	r1, r0
	bge	.L703	@cond_branch
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L703
.L716:
	.align	2, 0
.L715:
	.word	gTotalCameraPixelOffsetY
.L709:
	add	r0, r2, #0
	bl	DestroyTask
.L703:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe172:
	.size	 Task_TeleportWarpOutPlayerAnim,.Lfe172-Task_TeleportWarpOutPlayerAnim
	.align	2, 0
	.globl	StartTeleportInPlayerAnim
	.type	 StartTeleportInPlayerAnim,function
	.thumb_func
StartTeleportInPlayerAnim:
	push	{r4, lr}
	ldr	r4, .L718
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L719:
	.align	2, 0
.L718:
	.word	Task_TeleportWarpInPlayerAnim
.Lfe173:
	.size	 StartTeleportInPlayerAnim,.Lfe173-StartTeleportInPlayerAnim
	.align	2, 0
	.globl	WaitTeleportInPlayerAnim
	.type	 WaitTeleportInPlayerAnim,function
	.thumb_func
WaitTeleportInPlayerAnim:
	push	{lr}
	ldr	r0, .L721
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L722:
	.align	2, 0
.L721:
	.word	Task_TeleportWarpInPlayerAnim
.Lfe174:
	.size	 WaitTeleportInPlayerAnim,.Lfe174-WaitTeleportInPlayerAnim
	.align	2, 0
	.type	 Task_TeleportWarpInPlayerAnim,function
	.thumb_func
Task_TeleportWarpInPlayerAnim:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L737
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L737+0x4
	add	r4, r0, r1
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L737+0x8
	add	r7, r0, r1
	mov	r1, r8
	lsl	r0, r1, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	ldr	r1, .L737+0xc
	add	r5, r0, r1
	mov	r2, #0x0
	ldrsh	r6, [r5, r2]
	cmp	r6, #0x1
	beq	.L726	@cond_branch
	cmp	r6, #0x1
	bgt	.L735	@cond_branch
	cmp	r6, #0
	beq	.L725	@cond_branch
	b	.L724
.L738:
	.align	2, 0
.L737:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	gTasks+0x8
.L735:
	cmp	r6, #0x2
	beq	.L729	@cond_branch
	cmp	r6, #0x3
	beq	.L731	@cond_branch
	b	.L724
.L725:
	bl	GetTeleportSavedFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	ldr	r1, .L739
	mov	r3, #0xa
	ldrsh	r0, [r5, r3]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventForceSetHeldMovement
	mov	r0, #0x0
	mov	r9, r0
	strh	r6, [r5, #0x2]
	mov	r0, #0x74
	strh	r0, [r5, #0x4]
	ldrh	r0, [r7, #0x22]
	strh	r0, [r5, #0x8]
	ldrb	r0, [r7, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	strh	r0, [r5, #0xc]
	mov	r1, #0x43
	add	r1, r1, r7
	mov	r8, r1
	ldrb	r0, [r1]
	strh	r0, [r5, #0xe]
	ldrh	r0, [r7, #0x26]
	add	r0, r0, #0x20
	neg	r0, r0
	lsl	r0, r0, #0x4
	strh	r0, [r5, #0x6]
	strh	r6, [r7, #0x26]
	bl	CameraObjectReset2
	ldrb	r0, [r4, #0x3]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r4, #0x3]
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r7, #0x5]
	mov	r3, r9
	mov	r2, r8
	strb	r3, [r2]
	add	r2, r7, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L726:
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	TeleportAnim_RotatePlayer
	ldrh	r0, [r5, #0x4]
	ldrh	r2, [r5, #0x6]
	add	r1, r0, r2
	strh	r1, [r5, #0x6]
	sub	r0, r0, #0x3
	strh	r0, [r5, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bgt	.L727	@cond_branch
	mov	r0, #0x4
	strh	r0, [r5, #0x4]
.L727:
	ldrh	r0, [r5, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x14
	strh	r0, [r7, #0x22]
	ldrh	r2, [r5, #0x8]
	mov	r3, #0x8
	ldrsh	r1, [r5, r3]
	cmp	r0, r1
	blt	.L724	@cond_branch
	strh	r2, [r7, #0x22]
	mov	r0, #0x0
	strh	r0, [r5, #0x10]
	b	.L736
.L740:
	.align	2, 0
.L739:
	.word	sTeleportFacingDirectionSequence
.L729:
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	TeleportAnim_RotatePlayer
	ldrh	r0, [r5, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L724	@cond_branch
.L736:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L724
.L731:
	mov	r0, #0xa
	ldrsh	r6, [r5, r0]
	add	r1, r5, #0x2
	add	r0, r4, #0
	bl	TeleportAnim_RotatePlayer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	bne	.L724	@cond_branch
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x3]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r7, #0x5]
	ldrh	r1, [r5, #0xe]
	add	r0, r7, #0
	add	r0, r0, #0x43
	strb	r1, [r0]
	bl	CameraObjectReset1
	mov	r0, r8
	bl	DestroyTask
.L724:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe175:
	.size	 Task_TeleportWarpInPlayerAnim,.Lfe175-Task_TeleportWarpInPlayerAnim
	.align	2, 0
	.type	 TeleportAnim_RotatePlayer,function
	.thumb_func
TeleportAnim_RotatePlayer:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldrh	r1, [r6]
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp	r0, #0x7
	bgt	.L742	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L743	@cond_branch
.L742:
	add	r0, r5, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L743	@cond_branch
	ldr	r4, .L747
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventForceSetHeldMovement
	mov	r0, #0x0
	strh	r0, [r6]
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, r4
	ldrb	r0, [r0]
	b	.L746
.L748:
	.align	2, 0
.L747:
	.word	sTeleportFacingDirectionSequence
.L743:
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
.L746:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe176:
	.size	 TeleportAnim_RotatePlayer,.Lfe176-TeleportAnim_RotatePlayer
.text
	.align	2, 0 @ Don't pad with nop

