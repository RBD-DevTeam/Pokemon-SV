@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sSpriteTextTileBuffer,object
	.size	 sSpriteTextTileBuffer,4
sSpriteTextTileBuffer:
	.word	0x0
	.align	2, 0
	.type	 sSpriteTextTilePtrs,object
	.size	 sSpriteTextTilePtrs,56
sSpriteTextTilePtrs:
	.space	56
	.globl	gLinkPartnerMail
	.align	2, 0
	.type	 gLinkPartnerMail,object
	.size	 gLinkPartnerMail,216
gLinkPartnerMail:
	.space	216
	.globl	gSelectedTradeMonPositions
	.type	 gSelectedTradeMonPositions,object
	.size	 gSelectedTradeMonPositions,2
gSelectedTradeMonPositions:
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sTradeMenuResourcesPtr,object
	.size	 sTradeMenuResourcesPtr,4
sTradeMenuResourcesPtr:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sSizesAndOffsets,object
sSizesAndOffsets:
	.word	0xf24
	.word	0x3d68
	.word	0x1c
	.word	0x530
	.word	0x34
	.word	0x24
	.word	0x64
	.word	0x528
	.size	 sSizesAndOffsets,32
	.align	1, 0
	.type	 sTradeMovesBoxTilemap,object
sTradeMovesBoxTilemap:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xd
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x3
	.short	0x3
	.short	0xc
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xe
	.short	0x3
	.short	0x3
	.short	0x402
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x7
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x6
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x20
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x22
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0xc22
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc20
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.size	 sTradeMovesBoxTilemap,510
	.align	1, 0
	.type	 sTradePartyBoxTilemap,object
sTradePartyBoxTilemap:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xd
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x3
	.short	0x3
	.short	0xc
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xe
	.short	0x3
	.short	0x3
	.short	0x402
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x7
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x6
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.size	 sTradePartyBoxTilemap,510
	.type	 sTradeStripesBG2Tilemap,object
sTradeStripesBG2Tilemap:
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.size	 sTradeStripesBG2Tilemap,2048
	.type	 sTradeStripesBG3Tilemap,object
sTradeStripesBG3Tilemap:
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.size	 sTradeStripesBG3Tilemap,2048
	.align	2, 0
	.type	 gOamData_8261C30,object
	.size	 gOamData_8261C30,8
gOamData_8261C30:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x80
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gOamData_8261C38,object
	.size	 gOamData_8261C38,8
gOamData_8261C38:
	.space	1
	.byte	0x40
	.space	1
	.byte	0xc0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gSpriteAnim_8261C40,object
gSpriteAnim_8261C40:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C40,8
	.align	2, 0
	.type	 gSpriteAnim_8261C48,object
gSpriteAnim_8261C48:
	.short	0x20
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C48,8
	.align	2, 0
	.type	 gSpriteAnimTable_8261C50,object
gSpriteAnimTable_8261C50:
	.word	gSpriteAnim_8261C40
	.word	gSpriteAnim_8261C48
	.size	 gSpriteAnimTable_8261C50,8
	.align	2, 0
	.type	 sTradeButtons_SpriteSheet,object
	.size	 sTradeButtons_SpriteSheet,8
sTradeButtons_SpriteSheet:
	.word	gTradeButtons_Gfx
	.short	0x800
	.short	0x12c
	.align	2, 0
	.type	 sTradeButtons_SpritePal,object
	.size	 sTradeButtons_SpritePal,8
sTradeButtons_SpritePal:
	.word	gTradeButtons_Pal
	.short	0x929
	.space	2
	.align	2, 0
	.type	 gSpriteAnim_8261C68,object
gSpriteAnim_8261C68:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C68,8
	.align	2, 0
	.type	 gSpriteAnim_8261C70,object
gSpriteAnim_8261C70:
	.short	0x8
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C70,8
	.align	2, 0
	.type	 gSpriteAnim_8261C78,object
gSpriteAnim_8261C78:
	.short	0x10
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C78,8
	.align	2, 0
	.type	 gSpriteAnim_8261C80,object
gSpriteAnim_8261C80:
	.short	0x18
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C80,8
	.align	2, 0
	.type	 gSpriteAnim_8261C88,object
gSpriteAnim_8261C88:
	.short	0x20
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C88,8
	.align	2, 0
	.type	 gSpriteAnim_8261C90,object
gSpriteAnim_8261C90:
	.short	0x28
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_8261C90,8
	.align	2, 0
	.type	 gSpriteAnimTable_8261C98,object
gSpriteAnimTable_8261C98:
	.word	gSpriteAnim_8261C68
	.word	gSpriteAnim_8261C70
	.word	gSpriteAnim_8261C78
	.word	gSpriteAnim_8261C80
	.word	gSpriteAnim_8261C88
	.word	gSpriteAnim_8261C90
	.size	 gSpriteAnimTable_8261C98,24
	.align	2, 0
	.type	 sSpriteTemplate_TradeButtons,object
	.size	 sSpriteTemplate_TradeButtons,24
sSpriteTemplate_TradeButtons:
	.short	0x12c
	.short	0x929
	.word	gOamData_8261C38
	.word	gSpriteAnimTable_8261C50
	.space	4
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Text,object
	.size	 sSpriteTemplate_Text,24
sSpriteTemplate_Text:
	.short	0xc8
	.short	0x133d
	.word	gOamData_8261C30
	.word	gSpriteAnimTable_8261C98
	.space	4
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	1, 0
	.type	 sTradeTextPal,object
sTradeTextPal:
	.short	0x0
	.short	0x2529
	.short	0x1f
	.short	0x3e0
	.short	0x7c00
	.short	0x3ff
	.short	0x7fe0
	.short	0x7c1f
	.short	0x675a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7fff
	.short	0x0
	.short	0x39ce
	.short	0x7fff
	.size	 sTradeTextPal,32
	.align	2, 0
	.type	 sSpritePalette_Text,object
	.size	 sSpritePalette_Text,8
sSpritePalette_Text:
	.word	sTradeTextPal
	.short	0x133d
	.space	2
	.type	 sCursorMoveDestinations,object
sCursorMoveDestinations:
	.byte	0x4
	.byte	0x2
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x6
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x3
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x5
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x6
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x7
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x9
	.byte	0x6
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0xa
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x6
	.byte	0x5
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x8
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x8
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0xa
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0xb
	.byte	0x9
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0x9
	.byte	0x7
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sCursorMoveDestinations,312
	.type	 sTradeMonSpriteCoords,object
sTradeMonSpriteCoords:
	.byte	0x1
	.byte	0x5
	.byte	0x8
	.byte	0x5
	.byte	0x1
	.byte	0xa
	.byte	0x8
	.byte	0xa
	.byte	0x1
	.byte	0xf
	.byte	0x8
	.byte	0xf
	.byte	0x10
	.byte	0x5
	.byte	0x17
	.byte	0x5
	.byte	0x10
	.byte	0xa
	.byte	0x17
	.byte	0xa
	.byte	0x10
	.byte	0xf
	.byte	0x17
	.byte	0xf
	.byte	0x17
	.byte	0x12
	.size	 sTradeMonSpriteCoords,26
	.type	 sTradeMenuGenderLevelPrintCoords,object
sTradeMenuGenderLevelPrintCoords:
	.byte	0x5
	.byte	0x4
	.byte	0xc
	.byte	0x4
	.byte	0x5
	.byte	0x9
	.byte	0xc
	.byte	0x9
	.byte	0x5
	.byte	0xe
	.byte	0xc
	.byte	0xe
	.byte	0x14
	.byte	0x4
	.byte	0x1b
	.byte	0x4
	.byte	0x14
	.byte	0x9
	.byte	0x1b
	.byte	0x9
	.byte	0x14
	.byte	0xe
	.byte	0x1b
	.byte	0xe
	.size	 sTradeMenuGenderLevelPrintCoords,24
	.type	 sTradeMenuGenderLevelWindowCoords,object
sTradeMenuGenderLevelWindowCoords:
	.byte	0x1
	.byte	0x3
	.byte	0x8
	.byte	0x3
	.byte	0x1
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x1
	.byte	0xd
	.byte	0x8
	.byte	0xd
	.byte	0x10
	.byte	0x3
	.byte	0x17
	.byte	0x3
	.byte	0x10
	.byte	0x8
	.byte	0x17
	.byte	0x8
	.byte	0x10
	.byte	0xd
	.byte	0x17
	.byte	0xd
	.size	 sTradeMenuGenderLevelWindowCoords,24
	.type	 sTradeUnknownSpriteCoords,object
sTradeUnknownSpriteCoords:
	.byte	0x3c
	.byte	0x9
	.byte	0xb4
	.byte	0x9
	.byte	0x30
	.byte	0x9
	.byte	0xa8
	.byte	0x9
	.size	 sTradeUnknownSpriteCoords,8
	.type	 gUnknown_8261E92,object
gUnknown_8261E92:
	.byte	0x0
	.byte	0xe
	.byte	0xf
	.byte	0x1d
	.byte	0x3
	.byte	0x5
	.byte	0x3
	.byte	0x7
	.byte	0x12
	.byte	0x5
	.byte	0x12
	.byte	0x7
	.byte	0x8
	.byte	0x7
	.byte	0x16
	.byte	0xc
	.byte	0x8
	.byte	0x7
	.byte	0x16
	.byte	0xc
	.byte	0x6
	.byte	0x7
	.byte	0x18
	.byte	0xc
	.byte	0x6
	.byte	0x7
	.byte	0x18
	.byte	0xc
	.byte	0x8
	.byte	0x7
	.byte	0x16
	.byte	0xc
	.byte	0x7
	.byte	0x7
	.byte	0x17
	.byte	0xc
	.size	 gUnknown_8261E92,36
	.globl	sText_Dummy
	.type	 sText_Dummy,object
sText_Dummy:
	.byte	0xff
	.size	 sText_Dummy,1
	.globl	sText_ClrWhtHltTranspShdwDrkGry
	.type	 sText_ClrWhtHltTranspShdwDrkGry,object
sText_ClrWhtHltTranspShdwDrkGry:
	.byte	0xfc
	.byte	0x1
	.byte	0x1
	.byte	0xfc
	.byte	0x2
	.byte	0x0
	.byte	0xfc
	.byte	0x3
	.byte	0x2
	.byte	0xff
	.size	 sText_ClrWhtHltTranspShdwDrkGry,10
	.globl	gText_MaleSymbol4
	.type	 gText_MaleSymbol4,object
gText_MaleSymbol4:
	.byte	0xb5
	.byte	0xff
	.size	 gText_MaleSymbol4,2
	.globl	gText_FemaleSymbol4
	.type	 gText_FemaleSymbol4,object
gText_FemaleSymbol4:
	.byte	0xb6
	.byte	0xff
	.size	 gText_FemaleSymbol4,2
	.globl	gText_GenderlessSymbol
	.type	 gText_GenderlessSymbol,object
gText_GenderlessSymbol:
	.byte	0xff
	.size	 gText_GenderlessSymbol,1
	.globl	sText_Dummy2
	.type	 sText_Dummy2,object
sText_Dummy2:
	.byte	0xff
	.size	 sText_Dummy2,1
	.globl	sText_Newline
	.type	 sText_Newline,object
sText_Newline:
	.byte	0xfe
	.byte	0xff
	.size	 sText_Newline,2
	.globl	sText_Slash
	.type	 sText_Slash,object
sText_Slash:
	.byte	0xba
	.byte	0xff
	.size	 sText_Slash,2
	.align	2, 0
	.type	 sTradeUITextPtrs,object
sTradeUITextPtrs:
	.word	gTradeText_Cancel
	.word	gTradeText_ChooseAPokemon
	.word	gTradeText_Summary
	.word	gTradeText_Trade
	.word	gText_CancelTrade
	.word	gTradeText_PressBButtonToExit
	.size	 sTradeUITextPtrs,24
	.align	2, 0
	.type	 sMenuAction_SummaryTrade,object
sMenuAction_SummaryTrade:
	.word	gText_TradeAction_Summary
	.word	TradeMenuAction_Summary
	.word	gText_TradeAction_Trade
	.word	TradeMenuAction_Trade
	.size	 sMenuAction_SummaryTrade,16
	.align	2, 0
	.type	 sTradeErrorOrStatusMessagePtrs,object
sTradeErrorOrStatusMessagePtrs:
	.word	gText_Trade_CommunicationStandby
	.word	gText_TradeHasBeenCanceled
	.word	gText_Trade_OnlyPkmnForBattle
	.word	gText_OnlyPkmnForBattle
	.word	gText_WaitingForFriendToFinish
	.word	gText_FriendWantsToTrade
	.word	gText_PkmnCantBeTradedNow
	.word	gText_EggCantBeTradedNow
	.word	gText_OtherTrainersPkmnCantBeTraded
	.size	 sTradeErrorOrStatusMessagePtrs,36
	.type	 sTextColor_PartyMonNickname,object
sTextColor_PartyMonNickname:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sTextColor_PartyMonNickname,3
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0x51
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0x62
	.byte	0x20
	.byte	0x0
	.space	1
	.byte	0x73
	.byte	0x30
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x4
	.byte	0x7
	.byte	0x16
	.byte	0x4
	.byte	0xf
	.short	0x1e
	.byte	0x0
	.byte	0x11
	.byte	0xf
	.byte	0xc
	.byte	0x4
	.byte	0xf
	.short	0x76
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xa6
	.byte	0x0
	.byte	0x7
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xb6
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xc6
	.byte	0x0
	.byte	0x7
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xd6
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xe6
	.byte	0x0
	.byte	0x7
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xf6
	.byte	0x0
	.byte	0xf
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x106
	.byte	0x0
	.byte	0x16
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x116
	.byte	0x0
	.byte	0xf
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x126
	.byte	0x0
	.byte	0x16
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x136
	.byte	0x0
	.byte	0xf
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x146
	.byte	0x0
	.byte	0x16
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x156
	.byte	0x0
	.byte	0x2
	.byte	0x5
	.byte	0xe
	.byte	0x2
	.byte	0xd
	.short	0x166
	.byte	0x0
	.byte	0x3
	.byte	0x8
	.byte	0xb
	.byte	0x8
	.byte	0xf
	.short	0x182
	.byte	0x0
	.byte	0x11
	.byte	0x5
	.byte	0xe
	.byte	0x2
	.byte	0xf
	.short	0x1da
	.byte	0x0
	.byte	0x12
	.byte	0x8
	.byte	0xb
	.byte	0x8
	.byte	0xf
	.short	0x1f6
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,152
	.align	2, 0
	.type	 sWindowTemplate_YesNo,object
	.size	 sWindowTemplate_YesNo,8
sWindowTemplate_YesNo:
	.byte	0x0
	.byte	0x15
	.byte	0xd
	.byte	0x6
	.byte	0x4
	.byte	0xf
	.short	0x24e
	.type	 gUnknown_8261FCC,object
gUnknown_8261FCC:
	.byte	0x6
	.byte	0x2
	.byte	0x22
	.byte	0x19
	.byte	0x0
	.byte	0xf
	.byte	0x3
	.byte	0xc
	.byte	0x2e
	.byte	0xff
	.space	3
	.byte	0x6
	.byte	0x2
	.byte	0x22
	.byte	0x19
	.byte	0x0
	.byte	0x3d
	.byte	0x35
	.byte	0xc
	.byte	0x2e
	.byte	0xff
	.space	3
	.byte	0x9f
	.byte	0x59
	.byte	0x73
	.byte	0x7e
	.byte	0x51
	.byte	0x52
	.byte	0x5a
	.byte	0x7e
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	1
	.byte	0xc9
	.byte	0xbc
	.byte	0xc4
	.byte	0x63
	.byte	0x57
	.byte	0x5d
	.byte	0x64
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	2
	.byte	0x5e
	.byte	0x79
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	7
	.byte	0xc9
	.byte	0xbc
	.byte	0xc4
	.byte	0x63
	.byte	0x57
	.byte	0x5d
	.byte	0x64
	.byte	0xbb
	.byte	0xbe
	.byte	0xbe
	.byte	0xff
	.space	2
	.byte	0x5c
	.byte	0x5d
	.byte	0x63
	.byte	0x71
	.byte	0x72
	.byte	0xa0
	.byte	0x5e
	.byte	0xae
	.byte	0x8d
	.byte	0xbb
	.byte	0xbe
	.byte	0xbe
	.byte	0xff
	.byte	0x1a
	.byte	0x2
	.byte	0x9
	.byte	0x2
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	5
	.size	 gUnknown_8261FCC,104
	.type	 gJPText_Shedinja,object
gJPText_Shedinja:
	.byte	0x67
	.byte	0x59
	.byte	0x66
	.byte	0x7e
	.byte	0xff
	.size	 gJPText_Shedinja,5
	.type	 gUnknown_8262039,object
gUnknown_8262039:
	.byte	0xa
	.byte	0x3
	.byte	0x6
	.byte	0x2e
	.byte	0xe
	.byte	0x2
	.byte	0x28
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gUnknown_8262039,14
	.type	 gUnknown_8262047,object
gUnknown_8262047:
	.byte	0x41
	.byte	0x22
	.byte	0x41
	.byte	0x10
	.byte	0x27
	.byte	0xc
	.byte	0x2
	.byte	0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gUnknown_8262047,14
	.type	 gUnknown_8262055,object
gUnknown_8262055:
	.byte	0x4
	.byte	0x3
	.byte	0x13
	.byte	0x3
	.size	 gUnknown_8262055,4

	.lcomm	dummy.3,2
.text
	.align	2, 0
	.type	 InitTradeMenuResources,function
	.thumb_func
InitTradeMenuResources:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	bl	ResetPaletteFade
	ldr	r2, .L9
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L9+0x4
	bl	SetVBlankCallback
	ldr	r4, .L9+0x8
	add	r0, r4, #0
	mov	r1, #0xf0
	mov	r2, #0x14
	bl	LoadPalette
	add	r0, r4, #0
	mov	r1, #0xd0
	mov	r2, #0x14
	bl	LoadPalette
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L9+0xc
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L9+0x10
	ldr	r1, [r0]
	mov	r0, #0x8f
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r0, .L9+0x14
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L3	@cond_branch
	bl	DeactivateAllTextPrinters
	ldr	r1, .L9+0x18
	ldr	r2, .L9+0x1c
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r5, #0x0
.L7:
	lsl	r4, r5, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	ClearWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r5, r5, #0x1
	cmp	r5, #0x11
	bls	.L7	@cond_branch
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xc0
	bl	LoadStdWindowGfx
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0xe0
	bl	LoadUserWindowGfx
	bl	LoadMonIconPalettes
	ldr	r2, .L9+0x10
	ldr	r0, [r2]
	add	r0, r0, #0x69
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x6f
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x70
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x74
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x75
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x7a
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x7b
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0xa8
	strb	r1, [r0]
.L3:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gPaletteFade
	.word	VblankCB_Trade
	.word	gStandardMenuPalette
	.word	sBgTemplates
	.word	sTradeMenuResourcesPtr
	.word	sWindowTemplates
	.word	dummy.3
	.word	0x24e
.Lfe1:
	.size	 InitTradeMenuResources,.Lfe1-InitTradeMenuResources
	.align	2, 0
	.globl	CB2_ReturnFromLinkTrade
	.type	 CB2_ReturnFromLinkTrade,function
	.thumb_func
CB2_ReturnFromLinkTrade:
	push	{lr}
	ldr	r0, .L12
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	CB2_ReturnFromLinkTrade2
.Lfe2:
	.size	 CB2_ReturnFromLinkTrade,.Lfe2-CB2_ReturnFromLinkTrade
	.align	2, 0
	.type	 CB2_ReturnFromLinkTrade2,function
	.thumb_func
CB2_ReturnFromLinkTrade2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x28
	ldr	r1, .L96
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r3, r1, #0
	cmp	r0, #0x16
	bls	.LCB176
	b	.L15	@long jump
.LCB176:
	lsl	r0, r0, #0x2
	ldr	r1, .L96+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L97:
	.align	2, 0
.L96:
	.word	gMain
	.word	.L92
	.align	2, 0
	.align	2, 0
.L92:
	.word	.L16
	.word	.L22
	.word	.L33
	.word	.L35
	.word	.L40
	.word	.L43
	.word	.L47
	.word	.L49
	.word	.L60
	.word	.L61
	.word	.L62
	.word	.L63
	.word	.L65
	.word	.L76
	.word	.L82
	.word	.L83
	.word	.L84
	.word	.L85
	.word	.L86
	.word	.L87
	.word	.L88
	.word	.L89
	.word	.L90
.L16:
	ldr	r4, .L98
	ldr	r0, .L98+0x4
	bl	AllocZeroed
	str	r0, [r4]
	bl	InitTradeMenuResources
	ldr	r4, .L98+0x8
	mov	r0, #0xe0
	lsl	r0, r0, #0x4
	bl	AllocZeroed
	str	r0, [r4]
	mov	r6, #0x0
	ldr	r2, .L98+0xc
.L20:
	lsl	r1, r6, #0x8
	ldr	r0, [r4]
	add	r0, r0, r1
	stmia	r2!, {r0}
	add	r6, r6, #0x1
	cmp	r6, #0xd
	ble	.L20	@cond_branch
	ldr	r1, .L98+0x10
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L94
.L99:
	.align	2, 0
.L98:
	.word	sTradeMenuResourcesPtr
	.word	0x10f0
	.word	sSpriteTextTileBuffer
	.word	sSpriteTextTilePtrs
	.word	gMain
.L22:
	ldr	r2, .L100
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	mov	r6, #0x0
	mov	r4, #0x0
.L26:
	mov	r0, #0x64
	mul	r0, r0, r6
	ldr	r1, .L100+0x4
	add	r0, r0, r1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x20
	bl	CreateMon
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L26	@cond_branch
	mov	r0, #0x0
	bl	PrintTradeErrorOrStatusMessage
	mov	r0, #0x0
	bl	ShowBg
	ldr	r0, .L100+0x8
	ldrb	r2, [r0]
	cmp	r2, #0
	bne	.L28	@cond_branch
	ldr	r1, .L100+0xc
	ldr	r5, .L100+0x10
	add	r0, r5, #0
	strh	r0, [r1]
	ldr	r0, .L100+0x14
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	ldr	r0, .L100+0x18
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L29	@cond_branch
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	LinkRfu_CreateIdleTask
	b	.L30
.L101:
	.align	2, 0
.L100:
	.word	gPaletteFade
	.word	gEnemyParty
	.word	gReceivedRemoteLinkPlayers
	.word	gLinkType
	.word	0x1122
	.word	sTradeMenuResourcesPtr
	.word	gWirelessCommType
.L29:
	bl	OpenLink
	ldr	r1, .L102
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L30:
	ldr	r0, .L102+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB339
	b	.L15	@long jump
.LCB339:
	ldr	r0, .L102+0x8
	mov	r1, #0x1
	bl	CreateTask
	b	.L15
.L103:
	.align	2, 0
.L102:
	.word	gMain
	.word	gWirelessCommType
	.word	Task_WaitForLinkPlayerConnection
.L28:
	ldr	r0, .L104
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x4
	strb	r1, [r0]
	b	.L15
.L105:
	.align	2, 0
.L104:
	.word	gMain
.L33:
	ldr	r2, .L106
	ldr	r1, [r2]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	cmp	r0, #0xb
	bhi	.LCB386
	b	.L15	@long jump
.LCB386:
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r3, r2
	b	.L94
.L107:
	.align	2, 0
.L106:
	.word	sTradeMenuResourcesPtr
.L35:
	bl	GetLinkPlayerCount_2
	add	r4, r0, #0
	bl	GetSavedPlayerCount
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bcs	.LCB413
	b	.L15	@long jump
.LCB413:
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L37	@cond_branch
	ldr	r0, .L108
	ldr	r1, [r0]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1e
	bhi	.LCB433
	b	.L15	@long jump
.LCB433:
	bl	CheckShouldAdvanceLinkState
	ldr	r1, .L108+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L94
.L109:
	.align	2, 0
.L108:
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L37:
	ldr	r1, .L110
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L94
.L111:
	.align	2, 0
.L110:
	.word	gMain
.L40:
	ldr	r0, .L112
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.LCB471
	b	.L15	@long jump
.LCB471:
	bl	IsLinkPlayerDataExchangeComplete
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.LCB477
	b	.L15	@long jump
.LCB477:
	bl	LinkRfu_DestroyIdleTask
	bl	CalculatePlayerPartyCount
	ldr	r1, .L112+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, .L112+0x8
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	ldr	r0, .L112+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB499
	b	.L15	@long jump
.LCB499:
	mov	r0, #0x1
	bl	ToggleLMANlinkRecovery
	bl	SetLinkStandbyCallback
	b	.L15
.L113:
	.align	2, 0
.L112:
	.word	gReceivedRemoteLinkPlayers
	.word	gMain
	.word	sTradeMenuResourcesPtr
	.word	gWirelessCommType
.L43:
	ldr	r0, .L114
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L44	@cond_branch
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB528
	b	.L15	@long jump
.LCB528:
	ldr	r1, .L114+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L15
.L115:
	.align	2, 0
.L114:
	.word	gWirelessCommType
	.word	gMain
.L44:
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r3, r2
	b	.L94
.L47:
	bl	shedinja_maker_maybe
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB566
	b	.L15	@long jump
.LCB566:
	bl	CopyGiftRibbonsToSav1
	ldr	r1, .L116
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L94
.L117:
	.align	2, 0
.L116:
	.word	gMain
.L49:
	bl	CalculateEnemyPartyCount
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r2, .L118
	ldr	r0, [r2]
	ldr	r1, .L118+0x4
	ldrb	r1, [r1]
	add	r0, r0, #0x36
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r1, .L118+0x8
	ldrb	r1, [r1]
	add	r0, r0, #0x37
	strb	r1, [r0]
	mov	r6, #0x0
	ldr	r0, [r2]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L51	@cond_branch
	mov	r8, r2
	ldr	r7, .L118+0xc
.L53:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L118+0x10
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r1, #0xe0
	lsl	r1, r1, #0xc
	add	r2, r2, r1
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L118+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L118+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x28
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L53	@cond_branch
.L51:
	mov	r6, #0x0
	ldr	r1, .L118
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L56	@cond_branch
	ldr	r0, .L118+0xc
	mov	r8, r1
	add	r7, r0, #0
	add	r7, r7, #0xc
.L58:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L118+0x1c
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r3, #0xe0
	lsl	r3, r3, #0xc
	add	r2, r2, r3
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L118+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L118+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x2e
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L58	@cond_branch
.L56:
	ldr	r1, .L118+0x20
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L94
.L119:
	.align	2, 0
.L118:
	.word	sTradeMenuResourcesPtr
	.word	gPlayerPartyCount
	.word	gEnemyPartyCount
	.word	sTradeMonSpriteCoords
	.word	gPlayerParty
	.word	-0xc0000
	.word	SpriteCB_MonIcon
	.word	gEnemyParty
	.word	gMain
.L60:
	bl	LoadHeldItemIcons
	ldr	r0, .L120
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x0
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L120+0x4
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L94
.L121:
	.align	2, 0
.L120:
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L61:
	ldr	r0, .L122
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x1
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L122+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	b	.L94
.L123:
	.align	2, 0
.L122:
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L62:
	ldr	r0, .L124
	ldr	r0, [r0]
	ldr	r6, .L124+0x4
	ldr	r1, [r6]
	ldr	r5, .L124+0x8
	str	r5, [sp]
	mov	r4, #0x3
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L124+0xc
	add	r0, r0, r1
	ldr	r1, [r6, #0xc]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r4, .L124+0x10
	ldr	r0, [r4]
	ldr	r1, [r6, #0x18]
	str	r5, [sp]
	mov	r2, #0x2
	str	r2, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r0, [r4, #0x4]
	ldr	r1, [r6, #0x20]
	mov	r2, #0x18
	bl	RenderTextToVramViaBuffer
	ldr	r1, .L124+0x14
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, .L124+0x18
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	b	.L15
.L125:
	.align	2, 0
.L124:
	.word	gSaveBlock2Ptr
	.word	sSpriteTextTilePtrs
	.word	gDecompressionBuffer
	.word	gLinkPlayers+0x8
	.word	sTradeUITextPtrs
	.word	gMain
	.word	sTradeMenuResourcesPtr
.L63:
	bl	LoadUISprites
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB901
	b	.L15	@long jump
.LCB901:
	b	.L95
.L65:
	ldr	r0, .L126
	ldr	r1, [r0]
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0x10
	ldr	r3, .L126+0x4
	mov	r8, r3
	asr	r0, r0, #0x1
	ldrb	r7, [r3, #0x4]
	add	r4, r0, r7
.L69:
	add	r1, sp, #0x10
	ldr	r0, .L126+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldrh	r0, [r5]
	add	r0, r0, r6
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0x10
	mov	r3, r8
	ldrb	r2, [r3, #0x5]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L69	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L126+0xc
	add	r1, r0, r1
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0x10
	ldr	r7, .L126+0x4
	mov	r8, r7
	asr	r0, r0, #0x1
	mov	r1, r8
	ldrb	r1, [r1, #0x6]
	add	r4, r0, r1
.L74:
	add	r1, sp, #0x10
	ldr	r0, .L126+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0x3
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0x10
	mov	r3, r8
	ldrb	r2, [r3, #0x7]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L74	@cond_branch
	ldr	r1, .L126+0x10
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L94
.L127:
	.align	2, 0
.L126:
	.word	gSaveBlock2Ptr
	.word	sTradeUnknownSpriteCoords
	.word	sSpriteTemplate_Text
	.word	gLinkPlayers+0x8
	.word	gMain
.L76:
	ldr	r4, .L128
	add	r1, sp, #0x10
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	add	r1, sp, #0x10
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x6
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xd7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	add	r0, sp, #0x10
	ldmia	r4!, {r3, r5, r7}
	stmia	r0!, {r3, r5, r7}
	ldmia	r4!, {r1, r2, r3}
	stmia	r0!, {r1, r2, r3}
	add	r1, sp, #0x10
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x7
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xf7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	mov	r6, #0x0
	add	r4, sp, #0x10
	mov	r5, #0xc0
	lsl	r5, r5, #0xd
.L80:
	add	r1, sp, #0x10
	ldr	r0, .L128
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0
	add	r0, r0, #0x8
	ldrh	r7, [r4]
	add	r0, r0, r7
	strh	r0, [r4]
	asr	r1, r5, #0x10
	add	r0, sp, #0x10
	mov	r2, #0x96
	mov	r3, #0x1
	bl	CreateSprite
	mov	r0, #0x80
	lsl	r0, r0, #0xe
	add	r5, r5, r0
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L80	@cond_branch
	ldr	r0, .L128+0x4
	ldr	r2, .L128+0x8
	ldrb	r1, [r2]
	lsl	r1, r1, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0xe
	add	r1, r1, r3
	asr	r1, r1, #0x10
	ldrb	r2, [r2, #0x1]
	lsl	r2, r2, #0x3
	mov	r3, #0x2
	bl	CreateSprite
	ldr	r2, .L128+0xc
	ldr	r1, [r2]
	add	r1, r1, #0x34
	mov	r3, #0x0
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r0, r0, #0x35
	strb	r3, [r0]
	ldr	r1, .L128+0x10
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	b	.L15
.L129:
	.align	2, 0
.L128:
	.word	sSpriteTemplate_Text
	.word	sSpriteTemplate_TradeButtons
	.word	sTradeMonSpriteCoords
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L82:
	mov	r0, #0x0
	bl	ComputePartyTradeableFlags
	mov	r0, #0x0
	bl	PrintPartyNicknames
	ldr	r2, .L130
	ldr	r0, [r2]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x1]
	bl	SetTradeMenuOptionActiveFlags
	ldr	r1, .L130+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L130+0x8
	bl	PlayBGM
	b	.L15
.L131:
	.align	2, 0
.L130:
	.word	sTradeMenuResourcesPtr
	.word	gMain
	.word	0x111
.L83:
	mov	r0, #0x1
	bl	ComputePartyTradeableFlags
	mov	r0, #0x1
	bl	PrintPartyNicknames
	ldr	r1, .L132
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L84:
	mov	r0, #0x0
	bl	LoadTradeBackgroundGfxAndPals
	b	.L95
.L133:
	.align	2, 0
.L132:
	.word	gMain
.L85:
	mov	r0, #0x1
	bl	LoadTradeBackgroundGfxAndPals
	ldr	r1, .L134
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L94
.L135:
	.align	2, 0
.L134:
	.word	gMain
.L86:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, .L136
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L94
.L137:
	.align	2, 0
.L136:
	.word	gMain
.L87:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x2
	bl	LoadTradeBackgroundGfxAndPals
	ldr	r1, .L138
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	b	.L94
.L139:
	.align	2, 0
.L138:
	.word	gMain
.L88:
	mov	r0, #0x0
	bl	ComputePartyHPBarLevels
	ldr	r1, .L140
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L94
.L141:
	.align	2, 0
.L140:
	.word	gMain
.L89:
	mov	r0, #0x1
	bl	ComputePartyHPBarLevels
	bl	SetMonIconsAnimByHPBarLevel
.L95:
	ldr	r1, .L142
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
.L94:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L15
.L143:
	.align	2, 0
.L142:
	.word	gMain
.L90:
	ldr	r0, .L144
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L15	@cond_branch
	ldr	r0, .L144+0x4
	str	r0, [r3]
	ldr	r0, .L144+0x8
	bl	SetMainCallback2
.L15:
	bl	RunTextPrinters
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	gPaletteFade
	.word	CB1_HandleBlockReceive
	.word	CB2_TradeMenu
.Lfe3:
	.size	 CB2_ReturnFromLinkTrade2,.Lfe3-CB2_ReturnFromLinkTrade2
	.align	2, 0
	.globl	CB2_ReturnToTradeMenuFromSummary
	.type	 CB2_ReturnToTradeMenuFromSummary,function
	.thumb_func
CB2_ReturnToTradeMenuFromSummary:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x24
	ldr	r1, .L205
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x16
	bls	.LCB1361
	b	.L147	@long jump
.LCB1361:
	lsl	r0, r0, #0x2
	ldr	r1, .L205+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L206:
	.align	2, 0
.L205:
	.word	gMain
	.word	.L199
	.align	2, 0
	.align	2, 0
.L199:
	.word	.L148
	.word	.L149
	.word	.L150
	.word	.L151
	.word	.L152
	.word	.L153
	.word	.L155
	.word	.L156
	.word	.L167
	.word	.L168
	.word	.L169
	.word	.L170
	.word	.L172
	.word	.L183
	.word	.L147
	.word	.L147
	.word	.L191
	.word	.L192
	.word	.L193
	.word	.L194
	.word	.L195
	.word	.L196
	.word	.L197
.L148:
	bl	InitTradeMenuResources
	ldr	r1, .L207
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L201
.L208:
	.align	2, 0
.L207:
	.word	gMain
.L149:
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r2, r5
	b	.L202
.L150:
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r2, r7
	b	.L201
.L151:
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r2, r0
	b	.L201
.L152:
	bl	CalculatePlayerPartyCount
	ldr	r1, .L209
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L201
.L210:
	.align	2, 0
.L209:
	.word	gMain
.L153:
	ldr	r0, .L211
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L154	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
.L154:
	ldr	r1, .L211+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L201
.L212:
	.align	2, 0
.L211:
	.word	gWirelessCommType
	.word	gMain
.L155:
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r2, r5
	b	.L201
.L156:
	bl	CalculateEnemyPartyCount
	ldr	r4, .L213
	ldr	r0, [r4]
	ldr	r1, .L213+0x4
	ldrb	r1, [r1]
	add	r0, r0, #0x36
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L213+0x8
	ldrb	r1, [r1]
	add	r0, r0, #0x37
	strb	r1, [r0]
	mov	r0, #0x0
	bl	ClearWindowTilemap
	mov	r0, #0x0
	bl	PrintPartyNicknames
	mov	r0, #0x1
	bl	PrintPartyNicknames
	mov	r6, #0x0
	ldr	r0, [r4]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L158	@cond_branch
	mov	r8, r4
	ldr	r7, .L213+0xc
.L160:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L213+0x10
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r1, #0xe0
	lsl	r1, r1, #0xc
	add	r2, r2, r1
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L213+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L213+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x28
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L160	@cond_branch
.L158:
	mov	r6, #0x0
	ldr	r1, .L213
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L163	@cond_branch
	ldr	r0, .L213+0xc
	mov	r8, r1
	add	r7, r0, #0
	add	r7, r7, #0xc
.L165:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L213+0x1c
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r3, #0xe0
	lsl	r3, r3, #0xc
	add	r2, r2, r3
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L213+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L213+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x2e
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L165	@cond_branch
.L163:
	ldr	r1, .L213+0x20
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L201
.L214:
	.align	2, 0
.L213:
	.word	sTradeMenuResourcesPtr
	.word	gPlayerPartyCount
	.word	gEnemyPartyCount
	.word	sTradeMonSpriteCoords
	.word	gPlayerParty
	.word	-0xc0000
	.word	SpriteCB_MonIcon
	.word	gEnemyParty
	.word	gMain
.L167:
	bl	LoadHeldItemIcons
	ldr	r0, .L215
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x0
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L215+0x4
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L201
.L216:
	.align	2, 0
.L215:
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L168:
	ldr	r0, .L217
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x1
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L217+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	b	.L201
.L218:
	.align	2, 0
.L217:
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L169:
	ldr	r0, .L219
	ldr	r0, [r0]
	ldr	r6, .L219+0x4
	ldr	r1, [r6]
	ldr	r5, .L219+0x8
	str	r5, [sp]
	mov	r4, #0x3
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L219+0xc
	add	r0, r0, r1
	ldr	r1, [r6, #0xc]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r4, .L219+0x10
	ldr	r0, [r4]
	ldr	r1, [r6, #0x18]
	str	r5, [sp]
	mov	r2, #0x2
	str	r2, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r0, [r4, #0x4]
	ldr	r1, [r6, #0x20]
	mov	r2, #0x18
	bl	RenderTextToVramViaBuffer
	ldr	r1, .L219+0x14
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
.L202:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, .L219+0x18
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	b	.L147
.L220:
	.align	2, 0
.L219:
	.word	gSaveBlock2Ptr
	.word	sSpriteTextTilePtrs
	.word	gDecompressionBuffer
	.word	gLinkPlayers+0x8
	.word	sTradeUITextPtrs
	.word	gMain
	.word	sTradeMenuResourcesPtr
.L170:
	bl	LoadUISprites
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1789
	b	.L147	@long jump
.LCB1789:
	ldr	r1, .L221
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L201
.L222:
	.align	2, 0
.L221:
	.word	gMain
.L172:
	ldr	r0, .L223
	ldr	r1, [r0]
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0xc
	ldr	r3, .L223+0x4
	mov	r8, r3
	asr	r0, r0, #0x1
	ldrb	r7, [r3, #0x4]
	add	r4, r0, r7
.L176:
	add	r1, sp, #0xc
	ldr	r0, .L223+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldrh	r0, [r5]
	add	r0, r0, r6
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0xc
	mov	r3, r8
	ldrb	r2, [r3, #0x5]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L176	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L223+0xc
	add	r1, r0, r1
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0xc
	ldr	r7, .L223+0x4
	mov	r8, r7
	asr	r0, r0, #0x1
	mov	r1, r8
	ldrb	r1, [r1, #0x6]
	add	r4, r0, r1
.L181:
	add	r1, sp, #0xc
	ldr	r0, .L223+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0x3
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0xc
	mov	r3, r8
	ldrb	r2, [r3, #0x7]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L181	@cond_branch
	ldr	r1, .L223+0x10
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L201
.L224:
	.align	2, 0
.L223:
	.word	gSaveBlock2Ptr
	.word	sTradeUnknownSpriteCoords
	.word	sSpriteTemplate_Text
	.word	gLinkPlayers+0x8
	.word	gMain
.L183:
	ldr	r4, .L225
	add	r1, sp, #0xc
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	add	r1, sp, #0xc
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x6
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xd7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	add	r0, sp, #0xc
	ldmia	r4!, {r3, r5, r7}
	stmia	r0!, {r3, r5, r7}
	ldmia	r4!, {r1, r2, r3}
	stmia	r0!, {r1, r2, r3}
	add	r1, sp, #0xc
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x7
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xf7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	mov	r6, #0x0
	add	r4, sp, #0xc
	mov	r5, #0xc0
	lsl	r5, r5, #0xd
.L187:
	add	r1, sp, #0xc
	ldr	r0, .L225
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0
	add	r0, r0, #0x8
	ldrh	r7, [r4]
	add	r0, r0, r7
	strh	r0, [r4]
	asr	r1, r5, #0x10
	add	r0, sp, #0xc
	mov	r2, #0x96
	mov	r3, #0x1
	bl	CreateSprite
	mov	r0, #0x80
	lsl	r0, r0, #0xe
	add	r5, r5, r0
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L187	@cond_branch
	ldr	r4, .L225+0x4
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L189	@cond_branch
	bl	GetLastViewedMonIndex
	ldr	r1, [r4]
	b	.L203
.L226:
	.align	2, 0
.L225:
	.word	sSpriteTemplate_Text
	.word	sTradeMenuResourcesPtr
.L189:
	bl	GetLastViewedMonIndex
	ldr	r1, [r4]
	add	r0, r0, #0x6
.L203:
	add	r1, r1, #0x35
	strb	r0, [r1]
	ldr	r0, .L227
	ldr	r3, .L227+0x4
	ldr	r4, .L227+0x8
	ldr	r1, [r4]
	add	r1, r1, #0x35
	ldrb	r2, [r1]
	lsl	r2, r2, #0x1
	add	r1, r2, r3
	ldrb	r1, [r1]
	lsl	r1, r1, #0x13
	mov	r5, #0x80
	lsl	r5, r5, #0xe
	add	r1, r1, r5
	asr	r1, r1, #0x10
	add	r3, r3, #0x1
	add	r2, r2, r3
	ldrb	r2, [r2]
	lsl	r2, r2, #0x3
	mov	r3, #0x2
	bl	CreateSprite
	ldr	r1, [r4]
	add	r1, r1, #0x34
	strb	r0, [r1]
	ldr	r0, .L227+0xc
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r0, r0, r7
	mov	r1, #0x10
	strb	r1, [r0]
	b	.L147
.L228:
	.align	2, 0
.L227:
	.word	sSpriteTemplate_TradeButtons
	.word	sTradeMonSpriteCoords
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L191:
	mov	r0, #0x0
	bl	LoadTradeBackgroundGfxAndPals
	b	.L204
.L192:
	mov	r0, #0x1
	bl	LoadTradeBackgroundGfxAndPals
	ldr	r2, .L229
	ldr	r0, [r2]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x1]
	bl	SetTradeMenuOptionActiveFlags
	ldr	r1, .L229+0x4
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L201
.L230:
	.align	2, 0
.L229:
	.word	sTradeMenuResourcesPtr
	.word	gMain
.L193:
	ldr	r2, .L231
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, .L231+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L201
.L232:
	.align	2, 0
.L231:
	.word	gPaletteFade
	.word	gMain
.L194:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x2
	bl	LoadTradeBackgroundGfxAndPals
	ldr	r1, .L233
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L201
.L234:
	.align	2, 0
.L233:
	.word	gMain
.L195:
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r2, r7
	b	.L201
.L196:
	bl	SetMonIconsAnimByHPBarLevel
.L204:
	ldr	r1, .L235
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
.L201:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L147
.L236:
	.align	2, 0
.L235:
	.word	gMain
.L197:
	ldr	r0, .L237
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L147	@cond_branch
	ldr	r0, .L237+0x4
	bl	SetMainCallback2
.L147:
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x24
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L238:
	.align	2, 0
.L237:
	.word	gPaletteFade
	.word	CB2_TradeMenu
.Lfe4:
	.size	 CB2_ReturnToTradeMenuFromSummary,.Lfe4-CB2_ReturnToTradeMenuFromSummary
	.align	2, 0
	.type	 VblankCB_Trade,function
	.thumb_func
VblankCB_Trade:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 VblankCB_Trade,.Lfe5-VblankCB_Trade
	.align	2, 0
	.type	 TradeMenuCB_9,function
	.thumb_func
TradeMenuCB_9:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L242
	ldr	r1, [r4]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bls	.L241	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0xa
	strb	r1, [r0]
.L241:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L243:
	.align	2, 0
.L242:
	.word	sTradeMenuResourcesPtr
.Lfe6:
	.size	 TradeMenuCB_9,.Lfe6-TradeMenuCB_9
	.align	2, 0
	.type	 TradeMenuCB_10,function
	.thumb_func
TradeMenuCB_10:
	push	{r4, lr}
	ldr	r0, .L248
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L245	@cond_branch
	ldr	r1, .L248+0x4
	ldr	r4, .L248+0x8
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
	ldr	r0, .L248+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L246	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x6f
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L245
.L249:
	.align	2, 0
.L248:
	.word	gPaletteFade
	.word	gSelectedTradeMonPositions
	.word	sTradeMenuResourcesPtr
	.word	gWirelessCommType
.L246:
	mov	r0, #0x20
	bl	SetCloseLinkCallbackAndType
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0xd
	strb	r1, [r0]
.L245:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 TradeMenuCB_10,.Lfe7-TradeMenuCB_10
	.align	2, 0
	.type	 TradeMenuCB_13,function
	.thumb_func
TradeMenuCB_13:
	push	{r4, r5, lr}
	ldr	r5, .L255
	ldr	r0, .L255+0x4
	str	r0, [r5, #0x8]
	ldr	r0, .L255+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L251	@cond_branch
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L253	@cond_branch
	ldr	r0, .L255+0xc
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	ldr	r0, .L255+0x10
	ldr	r0, [r0]
	bl	Free
	mov	r0, #0x0
	str	r0, [r5]
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L255+0x14
	bl	SetMainCallback2
	b	.L253
.L256:
	.align	2, 0
.L255:
	.word	gMain
	.word	CB2_ReturnFromLinkTrade
	.word	gWirelessCommType
	.word	sSpriteTextTileBuffer
	.word	sTradeMenuResourcesPtr
	.word	CB2_InitTradeAnim_LinkTrade
.L251:
	ldr	r0, .L257
	ldrb	r4, [r0]
	cmp	r4, #0
	bne	.L253	@cond_branch
	ldr	r0, .L257+0x4
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	ldr	r0, .L257+0x8
	ldr	r0, [r0]
	bl	Free
	str	r4, [r5]
	ldr	r0, .L257+0xc
	bl	SetMainCallback2
.L253:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L258:
	.align	2, 0
.L257:
	.word	gReceivedRemoteLinkPlayers
	.word	sSpriteTextTileBuffer
	.word	sTradeMenuResourcesPtr
	.word	CB2_InitTradeAnim_LinkTrade
.Lfe8:
	.size	 TradeMenuCB_13,.Lfe8-TradeMenuCB_13
	.align	2, 0
	.type	 CB2_TradeMenu,function
	.thumb_func
CB2_TradeMenu:
	push	{r4, lr}
	bl	RunTradeMenuCallback
	bl	RunScheduledLinkTasks
	mov	r0, #0x0
	bl	HandleRedrawTradeMenuOnSide
	mov	r0, #0x1
	bl	HandleRedrawTradeMenuOnSide
	ldr	r4, .L260
	ldr	r2, [r4]
	ldrb	r1, [r2]
	add	r0, r1, #0x1
	strb	r0, [r2]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x18
	bl	SetGpuReg
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x1]
	add	r0, r1, #0
	add	r0, r0, #0xff
	strb	r0, [r2, #0x1]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x1c
	bl	SetGpuReg
	bl	RunTextPrinters_CheckPrinter0Active
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r4}
	pop	{r0}
	bx	r0
.L261:
	.align	2, 0
.L260:
	.word	sTradeMenuResourcesPtr
.Lfe9:
	.size	 CB2_TradeMenu,.Lfe9-CB2_TradeMenu
	.align	2, 0
	.type	 LoadTradeBackgroundGfxAndPals,function
	.thumb_func
LoadTradeBackgroundGfxAndPals:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	beq	.L265	@cond_branch
	cmp	r4, #0x1
	bgt	.L274	@cond_branch
	cmp	r4, #0
	beq	.L264	@cond_branch
	b	.L263
.L274:
	cmp	r4, #0x2
	beq	.L266	@cond_branch
	b	.L263
.L264:
	ldr	r0, .L275
	mov	r1, #0x0
	mov	r2, #0x60
	bl	LoadPalette
	ldr	r1, .L275+0x4
	mov	r2, #0x94
	lsl	r2, r2, #0x5
	mov	r0, #0x1
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, .L275+0x8
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r1, .L275+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r0, #0x2
	mov	r3, #0x0
	bl	LoadBgTilemap
	b	.L263
.L276:
	.align	2, 0
.L275:
	.word	gTradeMenu_Pal
	.word	gTradeMenu_Gfx
	.word	gUnknown_8E9E9FC
	.word	sTradeStripesBG2Tilemap
.L265:
	ldr	r1, .L277
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r0, #0x3
	mov	r3, #0x0
	bl	LoadBgTilemap
	mov	r0, #0x0
	bl	PrintPartyLevelsAndGendersDirectlyOnVram
	mov	r0, #0x1
	bl	PrintPartyLevelsAndGendersDirectlyOnVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L263
.L278:
	.align	2, 0
.L277:
	.word	sTradeStripesBG3Tilemap
.L266:
	mov	r5, #0x80
	lsl	r5, r5, #0x15
	mov	r4, #0x3
.L270:
	lsr	r0, r5, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	add	r5, r5, r0
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L270	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
.L263:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 LoadTradeBackgroundGfxAndPals,.Lfe10-LoadTradeBackgroundGfxAndPals
	.align	2, 0
	.type	 SetTradeMenuOptionActiveFlags,function
	.thumb_func
SetTradeMenuOptionActiveFlags:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r3, #0x0
	ldr	r5, .L289
	mov	r8, r5
	ldr	r0, .L289+0x4
	mov	ip, r0
	mov	r1, #0x5
	neg	r1, r1
	mov	r9, r1
	mov	r4, #0x6
	mov	r7, #0x1
	mov	r6, #0x0
.L283:
	mov	r1, r8
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x36
	ldrb	r1, [r1]
	cmp	r3, r1
	bge	.L284	@cond_branch
	add	r0, r0, #0x28
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, ip
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x38
	add	r0, r0, r3
	strb	r7, [r0]
	b	.L285
.L290:
	.align	2, 0
.L289:
	.word	sTradeMenuResourcesPtr
	.word	gSprites
.L284:
	add	r0, r0, #0x38
	add	r0, r0, r3
	strb	r6, [r0]
.L285:
	mov	r1, r8
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x37
	ldrb	r1, [r1]
	cmp	r3, r1
	bge	.L286	@cond_branch
	add	r0, r0, #0x2e
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, ip
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x38
	add	r0, r0, r4
	strb	r7, [r0]
	b	.L282
.L286:
	add	r0, r0, #0x38
	add	r0, r0, r4
	strb	r6, [r0]
.L282:
	add	r4, r4, #0x1
	add	r3, r3, #0x1
	cmp	r3, #0x5
	ble	.L283	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0x44
	mov	r1, #0x1
	strb	r1, [r0]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 SetTradeMenuOptionActiveFlags,.Lfe11-SetTradeMenuOptionActiveFlags
	.align	2, 0
	.type	 Trade_Memcpy,function
	.thumb_func
Trade_Memcpy:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r3, #0x0
	cmp	r3, r2
	bcs	.L293	@cond_branch
.L295:
	add	r0, r5, r3
	add	r1, r4, r3
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r3, r3, #0x1
	cmp	r3, r2
	bcc	.L295	@cond_branch
.L293:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 Trade_Memcpy,.Lfe12-Trade_Memcpy
	.align	2, 0
	.type	 shedinja_maker_maybe,function
	.thumb_func
shedinja_maker_maybe:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L347
	ldr	r0, [r0]
	add	r0, r0, #0x69
	ldrb	r0, [r0]
	cmp	r0, #0x15
	bls	.LCB2769
	b	.L298	@long jump
.LCB2769:
	lsl	r0, r0, #0x2
	ldr	r1, .L347+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L348:
	.align	2, 0
.L347:
	.word	sTradeMenuResourcesPtr
	.word	.L343
	.align	2, 0
	.align	2, 0
.L343:
	.word	.L299
	.word	.L300
	.word	.L341
	.word	.L304
	.word	.L306
	.word	.L308
	.word	.L341
	.word	.L309
	.word	.L311
	.word	.L313
	.word	.L341
	.word	.L314
	.word	.L316
	.word	.L318
	.word	.L341
	.word	.L319
	.word	.L321
	.word	.L323
	.word	.L341
	.word	.L324
	.word	.L326
	.word	.L328
.L299:
	ldr	r0, .L349
	ldr	r1, .L349+0x4
	mov	r2, #0xc8
	bl	Trade_Memcpy
	ldr	r3, .L349+0x8
	ldr	r1, [r3]
	add	r1, r1, #0x69
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, [r3]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	b	.L298
.L350:
	.align	2, 0
.L349:
	.word	gBlockSendBuffer
	.word	gPlayerParty
	.word	sTradeMenuResourcesPtr
.L300:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2821
	b	.L298	@long jump
.LCB2821:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L302	@cond_branch
	ldr	r0, .L351
	ldr	r1, [r0]
	b	.L346
.L352:
	.align	2, 0
.L351:
	.word	sTradeMenuResourcesPtr
.L302:
	bl	ResetBlockReceivedFlags
	ldr	r0, .L353
	ldr	r1, [r0]
	b	.L346
.L354:
	.align	2, 0
.L353:
	.word	sTradeMenuResourcesPtr
.L304:
	cmp	r5, #0
	bne	.L305	@cond_branch
	mov	r0, #0x1
	bl	SendBlockRequest
.L305:
	ldr	r0, .L355
	ldr	r1, [r0]
	b	.L346
.L356:
	.align	2, 0
.L355:
	.word	sTradeMenuResourcesPtr
.L306:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB2876
	b	.L298	@long jump
.LCB2876:
	ldr	r0, .L357
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L357+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L357+0x8
	ldr	r1, [r0]
	b	.L346
.L358:
	.align	2, 0
.L357:
	.word	gEnemyParty
	.word	gBlockRecvBuffer
	.word	sTradeMenuResourcesPtr
.L308:
	ldr	r0, .L359
	ldr	r1, .L359+0x4
	mov	r2, #0xc8
	bl	Trade_Memcpy
	ldr	r0, .L359+0x8
	ldr	r1, [r0]
	b	.L346
.L360:
	.align	2, 0
.L359:
	.word	gBlockSendBuffer
	.word	gPlayerParty+0xc8
	.word	sTradeMenuResourcesPtr
.L309:
	cmp	r5, #0
	bne	.L310	@cond_branch
	mov	r0, #0x1
	bl	SendBlockRequest
.L310:
	ldr	r0, .L361
	ldr	r1, [r0]
	b	.L346
.L362:
	.align	2, 0
.L361:
	.word	sTradeMenuResourcesPtr
.L311:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB2946
	b	.L298	@long jump
.LCB2946:
	ldr	r0, .L363
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L363+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L363+0x8
	ldr	r1, [r0]
	b	.L346
.L364:
	.align	2, 0
.L363:
	.word	gEnemyParty+0xc8
	.word	gBlockRecvBuffer
	.word	sTradeMenuResourcesPtr
.L313:
	ldr	r0, .L365
	ldr	r1, .L365+0x4
	mov	r2, #0xc8
	bl	Trade_Memcpy
	ldr	r0, .L365+0x8
	ldr	r1, [r0]
	b	.L346
.L366:
	.align	2, 0
.L365:
	.word	gBlockSendBuffer
	.word	gPlayerParty+0x190
	.word	sTradeMenuResourcesPtr
.L314:
	cmp	r5, #0
	bne	.L315	@cond_branch
	mov	r0, #0x1
	bl	SendBlockRequest
.L315:
	ldr	r0, .L367
	ldr	r1, [r0]
	b	.L346
.L368:
	.align	2, 0
.L367:
	.word	sTradeMenuResourcesPtr
.L316:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB3016
	b	.L298	@long jump
.LCB3016:
	ldr	r0, .L369
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L369+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L369+0x8
	ldr	r1, [r0]
	b	.L346
.L370:
	.align	2, 0
.L369:
	.word	gEnemyParty+0x190
	.word	gBlockRecvBuffer
	.word	sTradeMenuResourcesPtr
.L318:
	ldr	r0, .L371
	ldr	r1, .L371+0x4
	ldr	r1, [r1]
	ldr	r2, .L371+0x8
	add	r1, r1, r2
	mov	r2, #0xdc
	bl	Trade_Memcpy
	ldr	r0, .L371+0xc
	ldr	r1, [r0]
	b	.L346
.L372:
	.align	2, 0
.L371:
	.word	gBlockSendBuffer
	.word	gSaveBlock1Ptr
	.word	0x2cd0
	.word	sTradeMenuResourcesPtr
.L319:
	cmp	r5, #0
	bne	.L320	@cond_branch
	mov	r0, #0x3
	bl	SendBlockRequest
.L320:
	ldr	r0, .L373
	ldr	r1, [r0]
	b	.L346
.L374:
	.align	2, 0
.L373:
	.word	sTradeMenuResourcesPtr
.L321:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB3091
	b	.L298	@long jump
.LCB3091:
	ldr	r0, .L375
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L375+0x4
	add	r1, r1, r2
	mov	r2, #0xd8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L375+0x8
	ldr	r1, [r0]
	b	.L346
.L376:
	.align	2, 0
.L375:
	.word	gLinkPartnerMail
	.word	gBlockRecvBuffer
	.word	sTradeMenuResourcesPtr
.L323:
	ldr	r0, .L377
	ldr	r1, .L377+0x4
	ldr	r1, [r1]
	ldr	r2, .L377+0x8
	add	r1, r1, r2
	mov	r2, #0xb
	bl	Trade_Memcpy
	ldr	r0, .L377+0xc
	ldr	r1, [r0]
	b	.L346
.L378:
	.align	2, 0
.L377:
	.word	gBlockSendBuffer
	.word	gSaveBlock1Ptr
	.word	0x309c
	.word	sTradeMenuResourcesPtr
.L324:
	cmp	r5, #0
	bne	.L325	@cond_branch
	mov	r0, #0x4
	bl	SendBlockRequest
.L325:
	ldr	r0, .L379
	ldr	r1, [r0]
	b	.L346
.L380:
	.align	2, 0
.L379:
	.word	sTradeMenuResourcesPtr
.L326:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L298	@cond_branch
	ldr	r4, .L381
	ldr	r0, [r4]
	add	r0, r0, #0xa9
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L381+0x4
	add	r1, r1, r2
	mov	r2, #0xb
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r1, [r4]
	b	.L346
.L382:
	.align	2, 0
.L381:
	.word	sTradeMenuResourcesPtr
	.word	gBlockRecvBuffer
.L328:
	ldr	r4, .L383
	ldr	r6, .L383+0x4
	mov	r5, #0x5
.L332:
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	beq	.L331	@cond_branch
	cmp	r0, r6
	bne	.L331	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x1
	beq	.L331	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	mov	r0, sp
	ldr	r1, .L383+0x8
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	bne	.L331	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2
	ldr	r2, .L383+0xc
	bl	SetMonData
.L331:
	add	r4, r4, #0x64
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L332	@cond_branch
	mov	r0, #0x1
	b	.L345
.L384:
	.align	2, 0
.L383:
	.word	gEnemyParty
	.word	0x12f
	.word	gJPText_Shedinja
	.word	gSpeciesNames+0xd05
.L341:
	ldr	r2, .L385
	ldr	r1, [r2]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	cmp	r0, #0xa
	bls	.L298	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, [r2]
.L346:
	add	r1, r1, #0x69
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L298:
	mov	r0, #0x0
.L345:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L386:
	.align	2, 0
.L385:
	.word	sTradeMenuResourcesPtr
.Lfe13:
	.size	 shedinja_maker_maybe,.Lfe13-shedinja_maker_maybe
	.align	2, 0
	.type	 PrintIsThisTradeOkay,function
	.thumb_func
PrintIsThisTradeOkay:
	push	{lr}
	ldr	r0, .L388
	ldr	r1, .L388+0x4
	ldr	r1, [r1]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L388+0x8
	add	r1, r1, r2
	mov	r2, #0x18
	bl	RenderTextToVramViaBuffer
	pop	{r0}
	bx	r0
.L389:
	.align	2, 0
.L388:
	.word	gText_IsThisTradeOkay
	.word	sTradeMenuResourcesPtr
	.word	0x6010000
.Lfe14:
	.size	 PrintIsThisTradeOkay,.Lfe14-PrintIsThisTradeOkay
	.align	2, 0
	.type	 Master_HandleBlockReceivedStatus,function
	.thumb_func
Master_HandleBlockReceivedStatus:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	mov	r2, #0x1
	add	r0, r4, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L391	@cond_branch
	ldr	r0, .L412
	ldrh	r1, [r0]
	ldr	r0, .L412+0x4
	cmp	r1, r0
	beq	.L395	@cond_branch
	cmp	r1, r0
	bgt	.L399	@cond_branch
	ldr	r0, .L412+0x8
	cmp	r1, r0
	beq	.L394	@cond_branch
	b	.L392
.L413:
	.align	2, 0
.L412:
	.word	gBlockRecvBuffer
	.word	0xbbbb
	.word	0xaabb
.L399:
	ldr	r0, .L414
	cmp	r1, r0
	beq	.L396	@cond_branch
	ldr	r0, .L414+0x4
	cmp	r1, r0
	bne	.L392	@cond_branch
	ldr	r0, .L414+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x78
	b	.L409
.L415:
	.align	2, 0
.L414:
	.word	0xbbcc
	.word	0xeeaa
	.word	sTradeMenuResourcesPtr
.L394:
	ldr	r0, .L416
	ldr	r0, [r0]
	add	r0, r0, #0x78
	strb	r2, [r0]
	b	.L392
.L417:
	.align	2, 0
.L416:
	.word	sTradeMenuResourcesPtr
.L395:
	ldr	r0, .L418
	ldr	r0, [r0]
	add	r0, r0, #0x7a
	strb	r2, [r0]
	b	.L392
.L419:
	.align	2, 0
.L418:
	.word	sTradeMenuResourcesPtr
.L396:
	ldr	r0, .L420
	ldr	r0, [r0]
	add	r0, r0, #0x7a
.L409:
	mov	r1, #0x2
	strb	r1, [r0]
.L392:
	mov	r0, #0x0
	bl	ResetBlockReceivedFlag
.L391:
	mov	r2, #0x2
	add	r0, r4, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L400	@cond_branch
	ldr	r3, .L420+0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	ldrh	r1, [r0]
	ldr	r0, .L420+0x8
	cmp	r1, r0
	beq	.L404	@cond_branch
	cmp	r1, r0
	bgt	.L408	@cond_branch
	ldr	r0, .L420+0xc
	cmp	r1, r0
	beq	.L403	@cond_branch
	b	.L401
.L421:
	.align	2, 0
.L420:
	.word	sTradeMenuResourcesPtr
	.word	gBlockRecvBuffer
	.word	0xbbbb
	.word	0xaabb
.L408:
	ldr	r0, .L422
	cmp	r1, r0
	beq	.L405	@cond_branch
	ldr	r0, .L422+0x4
	cmp	r1, r0
	bne	.L401	@cond_branch
	ldr	r0, .L422+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x79
	b	.L410
.L423:
	.align	2, 0
.L422:
	.word	0xbbcc
	.word	0xeeaa
	.word	sTradeMenuResourcesPtr
.L403:
	ldr	r2, .L424
	ldr	r1, [r2]
	mov	r4, #0x81
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	ldrb	r0, [r0]
	add	r0, r0, #0x6
	add	r1, r1, #0x7e
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r0, r0, #0x79
	b	.L411
.L425:
	.align	2, 0
.L424:
	.word	sTradeMenuResourcesPtr
.L404:
	ldr	r0, .L426
	ldr	r0, [r0]
	add	r0, r0, #0x7b
.L411:
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L401
.L427:
	.align	2, 0
.L426:
	.word	sTradeMenuResourcesPtr
.L405:
	ldr	r0, .L428
	ldr	r0, [r0]
	add	r0, r0, #0x7b
.L410:
	strb	r2, [r0]
.L401:
	mov	r0, #0x1
	bl	ResetBlockReceivedFlag
.L400:
	pop	{r4}
	pop	{r0}
	bx	r0
.L429:
	.align	2, 0
.L428:
	.word	sTradeMenuResourcesPtr
.Lfe15:
	.size	 Master_HandleBlockReceivedStatus,.Lfe15-Master_HandleBlockReceivedStatus
	.align	2, 0
	.type	 Slave_HandleBlockReceivedStatus,function
	.thumb_func
Slave_HandleBlockReceivedStatus:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r0, #0x1
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L431	@cond_branch
	ldr	r2, .L444
	ldrh	r1, [r2]
	ldr	r0, .L444+0x4
	cmp	r1, r0
	beq	.L437	@cond_branch
	cmp	r1, r0
	bgt	.L440	@cond_branch
	ldr	r0, .L444+0x8
	cmp	r1, r0
	beq	.L436	@cond_branch
	ldr	r0, .L444+0xc
	cmp	r1, r0
	beq	.L435	@cond_branch
	b	.L432
.L445:
	.align	2, 0
.L444:
	.word	gBlockRecvBuffer
	.word	0xddee
	.word	0xccdd
	.word	0xdddd
.L440:
	ldr	r0, .L446
	cmp	r1, r0
	beq	.L433	@cond_branch
	add	r0, r0, #0x11
	cmp	r1, r0
	beq	.L434	@cond_branch
	b	.L432
.L447:
	.align	2, 0
.L446:
	.word	0xeebb
.L433:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x4
	bl	PrintTradeErrorOrStatusMessage
	ldr	r0, .L448
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xb
	b	.L442
.L449:
	.align	2, 0
.L448:
	.word	sTradeMenuResourcesPtr
.L434:
	mov	r0, #0x5
	b	.L443
.L435:
	ldr	r4, .L450
	ldr	r1, [r4]
	ldrb	r0, [r2, #0x2]
	add	r0, r0, #0x6
	add	r1, r1, #0x7e
	strb	r0, [r1]
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	bl	SignalRedrawTradeMenus
	ldr	r0, [r4]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	bl	SignalRedrawTradeMenus
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x7
	b	.L442
.L451:
	.align	2, 0
.L450:
	.word	sTradeMenuResourcesPtr
.L436:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L452
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xa
	b	.L442
.L453:
	.align	2, 0
.L452:
	.word	sTradeMenuResourcesPtr
.L437:
	mov	r0, #0x1
.L443:
	bl	PrintTradeErrorOrStatusMessage
	ldr	r0, .L454
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x8
.L442:
	strb	r1, [r0]
.L432:
	mov	r0, #0x0
	bl	ResetBlockReceivedFlag
.L431:
	mov	r0, #0x2
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L441	@cond_branch
	mov	r0, #0x1
	bl	ResetBlockReceivedFlag
.L441:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L455:
	.align	2, 0
.L454:
	.word	sTradeMenuResourcesPtr
.Lfe16:
	.size	 Slave_HandleBlockReceivedStatus,.Lfe16-Slave_HandleBlockReceivedStatus
	.align	2, 0
	.type	 Master_HandleCommunication,function
	.thumb_func
Master_HandleCommunication:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r6, .L470
	ldr	r2, [r6]
	add	r1, r2, #0
	add	r1, r1, #0x78
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.LCB3732
	b	.L457	@long jump
.LCB3732:
	add	r0, r2, #0
	add	r0, r0, #0x79
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB3739
	b	.L457	@long jump
.LCB3739:
	ldrh	r1, [r1]
	ldr	r0, .L470+0x4
	cmp	r1, r0
	bne	.L458	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x6f
	mov	r0, #0x6
	strb	r0, [r1]
	ldr	r2, [r6]
	add	r1, r2, #0
	add	r1, r1, #0x80
	mov	r4, #0x0
	ldr	r0, .L470+0x8
	strh	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x35
	ldrb	r1, [r0]
	add	r0, r0, #0x4d
	strh	r1, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r6]
	add	r2, r0, #0
	add	r2, r2, #0x79
	strb	r4, [r2]
	add	r0, r0, #0x78
	strb	r4, [r0]
	b	.L457
.L471:
	.align	2, 0
.L470:
	.word	sTradeMenuResourcesPtr
	.word	0x101
	.word	0xdddd
.L458:
	ldr	r0, .L472
	cmp	r1, r0
	bne	.L460	@cond_branch
	mov	r0, #0x1
	bl	PrintTradeErrorOrStatusMessage
	ldr	r1, [r6]
	add	r2, r1, #0
	add	r2, r2, #0x80
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r0, .L472+0x4
	strh	r0, [r2]
	add	r1, r1, #0x82
	strh	r3, [r1]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x7b
	strb	r4, [r1]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x79
	strb	r4, [r1]
	add	r0, r0, #0x78
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x6f
	mov	r1, #0x8
	b	.L469
.L473:
	.align	2, 0
.L472:
	.word	0x201
	.word	0xeecc
.L460:
	mov	r0, #0x81
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L462	@cond_branch
	mov	r0, #0x5
	bl	PrintTradeErrorOrStatusMessage
	ldr	r1, [r6]
	add	r2, r1, #0
	add	r2, r2, #0x80
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r0, .L474
	strh	r0, [r2]
	add	r1, r1, #0x82
	strh	r3, [r1]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x7b
	strb	r4, [r1]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x79
	strb	r4, [r1]
	add	r0, r0, #0x78
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x6f
	mov	r1, #0x8
	b	.L469
.L475:
	.align	2, 0
.L474:
	.word	0xddee
.L462:
	ldr	r0, .L476
	cmp	r1, r0
	bne	.L457	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x80
	mov	r5, #0x0
	mov	r4, #0x0
	ldr	r0, .L476+0x4
	strh	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x82
	strh	r4, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x79
	strb	r5, [r1]
	add	r0, r0, #0x78
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x6f
	mov	r1, #0xb
.L469:
	strb	r1, [r0]
.L457:
	ldr	r5, .L476+0x8
	ldr	r3, [r5]
	add	r1, r3, #0
	add	r1, r1, #0x7a
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L465	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x7b
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L465	@cond_branch
	ldrh	r1, [r1]
	ldr	r0, .L476+0xc
	cmp	r1, r0
	bne	.L466	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x80
	mov	r4, #0x0
	mov	r2, #0x0
	ldr	r0, .L476+0x10
	strh	r0, [r1]
	add	r0, r3, #0
	add	r0, r0, #0x82
	strh	r2, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r5]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x7b
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x6f
	mov	r1, #0x9
	strb	r1, [r0]
.L466:
	ldr	r1, [r5]
	add	r0, r1, #0
	add	r0, r0, #0x7a
	ldrb	r0, [r0]
	cmp	r0, #0x2
	beq	.L468	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x7b
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L465	@cond_branch
.L468:
	mov	r0, #0x1
	bl	PrintTradeErrorOrStatusMessage
	ldr	r1, [r5]
	add	r2, r1, #0
	add	r2, r2, #0x80
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r0, .L476+0x14
	strh	r0, [r2]
	add	r1, r1, #0x82
	strh	r3, [r1]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r5]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x7b
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x6f
	mov	r1, #0x8
	strb	r1, [r0]
.L465:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L477:
	.align	2, 0
.L476:
	.word	0x202
	.word	0xeebb
	.word	sTradeMenuResourcesPtr
	.word	0x101
	.word	0xccdd
	.word	0xddee
.Lfe17:
	.size	 Master_HandleCommunication,.Lfe17-Master_HandleCommunication
	.align	2, 0
	.type	 CB1_HandleBlockReceive,function
	.thumb_func
CB1_HandleBlockReceive:
	push	{r4, lr}
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L479	@cond_branch
	cmp	r4, #0
	bne	.L480	@cond_branch
	mov	r0, #0x0
	bl	Master_HandleBlockReceivedStatus
	b	.L479
.L480:
	add	r0, r4, #0
	bl	Slave_HandleBlockReceivedStatus
.L479:
	cmp	r4, #0
	bne	.L482	@cond_branch
	bl	Master_HandleCommunication
.L482:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 CB1_HandleBlockReceive,.Lfe18-CB1_HandleBlockReceive
	.align	2, 0
	.type	 TradeMenuGetNewCursorLocation,function
	.thumb_func
TradeMenuGetNewCursorLocation:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r2, .L490
	ldr	r3, [r2]
	ldr	r4, .L490+0x4
	lsl	r2, r1, #0x1
	add	r2, r2, r1
	lsl	r2, r2, #0x1
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r3, #0x38
	add	r2, r2, r1
	add	r2, r2, r4
.L487:
	ldrb	r1, [r2]
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L486	@cond_branch
	add	r6, r1, #0
	b	.L485
.L491:
	.align	2, 0
.L490:
	.word	sTradeMenuResourcesPtr
	.word	sCursorMoveDestinations
.L486:
	add	r2, r2, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L487	@cond_branch
.L485:
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 TradeMenuGetNewCursorLocation,.Lfe19-TradeMenuGetNewCursorLocation
	.align	2, 0
	.type	 TradeMenuMoveCursor,function
	.thumb_func
TradeMenuMoveCursor:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrb	r0, [r7]
	bl	TradeMenuGetNewCursorLocation
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0xc
	bne	.L493	@cond_branch
	ldr	r5, .L496
	ldr	r0, [r5]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L496+0x4
	add	r0, r0, r4
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r2, [r5]
	add	r2, r2, #0x34
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xe0
	strh	r1, [r0, #0x20]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xa0
	strh	r1, [r0, #0x22]
	b	.L494
.L497:
	.align	2, 0
.L496:
	.word	sTradeMenuResourcesPtr
	.word	gSprites
.L493:
	ldr	r4, .L498
	ldr	r0, [r4]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L498+0x4
	add	r0, r0, r5
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r4, [r4]
	add	r4, r4, #0x34
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldr	r2, .L498+0x8
	lsl	r3, r6, #0x1
	add	r0, r3, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, #0x20
	strh	r0, [r1, #0x20]
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r2, r2, #0x1
	add	r3, r3, r2
	ldrb	r0, [r3]
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x22]
.L494:
	ldrb	r0, [r7]
	cmp	r0, r6
	beq	.L495	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L495:
	strb	r6, [r7]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L499:
	.align	2, 0
.L498:
	.word	sTradeMenuResourcesPtr
	.word	gSprites
	.word	sTradeMonSpriteCoords
.Lfe20:
	.size	 TradeMenuMoveCursor,.Lfe20-TradeMenuMoveCursor
	.align	2, 0
	.type	 CommunicatePlayerSelectedMonForTrade,function
	.thumb_func
CommunicatePlayerSelectedMonForTrade:
	push	{r4, lr}
	mov	r0, #0x0
	bl	PrintTradeErrorOrStatusMessage
	ldr	r4, .L503
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x5
	strb	r1, [r0]
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L501	@cond_branch
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x80
	ldr	r0, .L503+0x4
	strh	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x35
	ldrb	r1, [r0]
	add	r0, r0, #0x4d
	strh	r1, [r0]
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
	b	.L502
.L504:
	.align	2, 0
.L503:
	.word	sTradeMenuResourcesPtr
	.word	0xaabb
.L501:
	ldr	r0, [r4]
	add	r0, r0, #0x78
	mov	r1, #0x1
	strb	r1, [r0]
.L502:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 CommunicatePlayerSelectedMonForTrade,.Lfe21-CommunicatePlayerSelectedMonForTrade
	.align	2, 0
	.type	 TradeMenuCB_0,function
	.thumb_func
TradeMenuCB_0:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L525
	ldrh	r1, [r0, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L506	@cond_branch
	ldr	r0, .L525+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x0
	bl	TradeMenuMoveCursor
	b	.L507
.L526:
	.align	2, 0
.L525:
	.word	gMain
	.word	sTradeMenuResourcesPtr
.L506:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L508	@cond_branch
	ldr	r0, .L527
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x1
	bl	TradeMenuMoveCursor
	b	.L507
.L528:
	.align	2, 0
.L527:
	.word	sTradeMenuResourcesPtr
.L508:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L510	@cond_branch
	ldr	r0, .L529
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x2
	bl	TradeMenuMoveCursor
	b	.L507
.L530:
	.align	2, 0
.L529:
	.word	sTradeMenuResourcesPtr
.L510:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L507	@cond_branch
	ldr	r0, .L531
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x3
	bl	TradeMenuMoveCursor
.L507:
	ldr	r0, .L531+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r5, #0x1
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L513	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L531
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L514	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x1
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L531+0x8
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x10
	mov	r3, #0x2
	bl	UnionRoomAndTradeMenuPrintOptions
	mov	r0, #0x10
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	Menu_InitCursor
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L513
.L532:
	.align	2, 0
.L531:
	.word	sTradeMenuResourcesPtr
	.word	gMain
	.word	sMenuAction_SummaryTrade
.L514:
	cmp	r0, #0xb
	bhi	.L516	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x2
	strb	r1, [r0]
	b	.L513
.L516:
	cmp	r0, #0xc
	bne	.L513	@cond_branch
	ldr	r0, .L533
	str	r5, [sp]
	mov	r1, #0xe
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x4
	strb	r1, [r0]
	ldr	r0, .L533+0x4
	ldr	r0, [r0, #0x10]
	ldr	r1, [r4]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L533+0x8
	add	r1, r1, r2
	mov	r2, #0x18
	bl	RenderTextToVramViaBuffer
.L513:
	ldr	r0, .L533+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L519	@cond_branch
	mov	r2, #0x0
	ldr	r3, .L533+0x10
.L523:
	ldr	r0, [r3]
	lsl	r1, r2, #0x1
	add	r0, r0, #0x80
	add	r0, r0, r1
	strh	r2, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x9
	ble	.L523	@cond_branch
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L533+0x10
	ldr	r1, [r1]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
.L519:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L534:
	.align	2, 0
.L533:
	.word	sWindowTemplate_YesNo
	.word	sTradeUITextPtrs
	.word	0x6010000
	.word	gMain
	.word	sTradeMenuResourcesPtr
.Lfe22:
	.size	 TradeMenuCB_0,.Lfe22-TradeMenuCB_0
	.align	2, 0
	.type	 RedrawChooseAPokemonWindow,function
	.thumb_func
RedrawChooseAPokemonWindow:
	push	{lr}
	bl	PrintTradePartnerPartyNicknames
	ldr	r3, .L536
	ldr	r0, [r3]
	add	r0, r0, #0x6f
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r2, .L536+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L536+0x8
	ldr	r0, [r0, #0x4]
	ldr	r1, [r3]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L536+0xc
	add	r1, r1, r2
	mov	r2, #0x18
	bl	RenderTextToVramViaBuffer
	pop	{r0}
	bx	r0
.L537:
	.align	2, 0
.L536:
	.word	sTradeMenuResourcesPtr
	.word	gSprites
	.word	sTradeUITextPtrs
	.word	0x6010000
.Lfe23:
	.size	 RedrawChooseAPokemonWindow,.Lfe23-RedrawChooseAPokemonWindow
	.align	2, 0
	.type	 TradeMenuCB_1,function
	.thumb_func
TradeMenuCB_1:
	push	{lr}
	add	sp, sp, #-0x4
	bl	Menu_ProcessInputNoWrapAround
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L540	@cond_branch
	cmp	r0, r1
	ble	.L539	@cond_branch
	cmp	r0, #0
	beq	.L542	@cond_branch
	cmp	r0, #0x1
	beq	.L543	@cond_branch
	b	.L539
.L540:
	mov	r0, #0x5
	bl	PlaySE
	bl	RedrawChooseAPokemonWindow
	b	.L539
.L542:
	str	r0, [sp]
	add	r0, r1, #0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L558
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x2
	b	.L556
.L559:
	.align	2, 0
.L558:
	.word	sTradeMenuResourcesPtr
.L543:
	ldr	r0, .L560
	ldr	r1, .L560+0x4
	ldrb	r1, [r1]
	ldr	r2, .L560+0x8
	ldr	r2, [r2]
	add	r2, r2, #0x35
	ldrb	r2, [r2]
	bl	TestWhetherSelectedMonCanBeTraded
	cmp	r0, #0x5
	bhi	.L539	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L560+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L561:
	.align	2, 0
.L560:
	.word	gPlayerParty
	.word	gPlayerPartyCount
	.word	sTradeMenuResourcesPtr
	.word	.L551
	.align	2, 0
	.align	2, 0
.L551:
	.word	.L545
	.word	.L546
	.word	.L548
	.word	.L550
	.word	.L548
	.word	.L550
.L545:
	bl	CommunicatePlayerSelectedMonForTrade
	ldr	r2, .L562
	ldr	r0, .L562+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	b	.L556
.L563:
	.align	2, 0
.L562:
	.word	gSprites
	.word	sTradeMenuResourcesPtr
.L546:
	mov	r0, #0x3
	mov	r1, #0x3
	b	.L557
.L548:
	mov	r0, #0x3
	mov	r1, #0x6
	b	.L557
.L550:
	mov	r0, #0x3
	mov	r1, #0x7
.L557:
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, .L564
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x8
.L556:
	strb	r1, [r0]
.L539:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L565:
	.align	2, 0
.L564:
	.word	sTradeMenuResourcesPtr
.Lfe24:
	.size	 TradeMenuCB_1,.Lfe24-TradeMenuCB_1
	.align	2, 0
	.type	 TradeMenuCB_15,function
	.thumb_func
TradeMenuCB_15:
	push	{lr}
	ldr	r0, .L569
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L568	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L567	@cond_branch
.L568:
	mov	r0, #0x5
	bl	PlaySE
	bl	RedrawChooseAPokemonWindow
.L567:
	pop	{r0}
	bx	r0
.L570:
	.align	2, 0
.L569:
	.word	gMain
.Lfe25:
	.size	 TradeMenuCB_15,.Lfe25-TradeMenuCB_15
	.align	2, 0
	.type	 TradeMenuCB_2,function
	.thumb_func
TradeMenuCB_2:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L575
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L572	@cond_branch
	ldr	r0, .L575+0x4
	ldr	r2, [r0]
	add	r3, r2, #0
	add	r3, r3, #0x35
	ldrb	r1, [r3]
	cmp	r1, #0x5
	bhi	.L573	@cond_branch
	ldr	r0, .L575+0x8
	ldrb	r1, [r3]
	add	r2, r2, #0x36
	ldrb	r2, [r2]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r3, .L575+0xc
	mov	r4, #0x4
	str	r4, [sp]
	bl	ShowPokemonSummaryScreen
	b	.L574
.L576:
	.align	2, 0
.L575:
	.word	gPaletteFade
	.word	sTradeMenuResourcesPtr
	.word	gPlayerParty
	.word	CB2_ReturnToTradeMenuFromSummary
.L573:
	ldr	r0, .L577
	sub	r1, r1, #0x6
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r2, #0x37
	ldrb	r2, [r2]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r3, .L577+0x4
	mov	r4, #0x4
	str	r4, [sp]
	bl	ShowPokemonSummaryScreen
.L574:
	bl	FreeAllWindowBuffers
.L572:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L578:
	.align	2, 0
.L577:
	.word	gEnemyParty
	.word	CB2_ReturnToTradeMenuFromSummary
.Lfe26:
	.size	 TradeMenuCB_2,.Lfe26-TradeMenuCB_2
	.align	2, 0
	.type	 PlayerHasEnoughPokemonToTrade_HandleMewDeoxys,function
	.thumb_func
PlayerHasEnoughPokemonToTrade_HandleMewDeoxys:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r6, .L590
	ldr	r7, .L590+0x4
	cmp	r4, r1
	bge	.L581	@cond_branch
.L583:
	cmp	r2, r3
	beq	.L582	@cond_branch
	add	r0, r5, r3
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L582:
	add	r3, r3, #0x1
	cmp	r3, r1
	blt	.L583	@cond_branch
.L581:
	ldr	r0, [r6]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x64
	mul	r0, r0, r5
	add	r0, r0, r7
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L587	@cond_branch
	cmp	r1, #0x97
	bne	.L586	@cond_branch
.L587:
	ldr	r0, [r6]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r7
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0
	bne	.L586	@cond_branch
	mov	r0, #0x2
	b	.L589
.L591:
	.align	2, 0
.L590:
	.word	sTradeMenuResourcesPtr
	.word	gEnemyParty
.L586:
	cmp	r4, #0
	beq	.L588	@cond_branch
	mov	r4, #0x1
.L588:
	add	r0, r4, #0
.L589:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 PlayerHasEnoughPokemonToTrade_HandleMewDeoxys,.Lfe27-PlayerHasEnoughPokemonToTrade_HandleMewDeoxys
	.align	2, 0
	.type	 CommunicateWhetherMonCanBeTraded,function
	.thumb_func
CommunicateWhetherMonCanBeTraded:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r2, #0x0
	ldr	r0, .L606
	ldr	r1, [r0]
	add	r3, r1, #0
	add	r3, r3, #0x36
	add	r5, r0, #0
	ldrb	r0, [r3]
	cmp	r2, r0
	bge	.L594	@cond_branch
	add	r4, r1, #0
	add	r4, r4, #0x45
.L596:
	mov	r1, sp
	add	r0, r1, r2
	add	r1, r4, r2
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r2, r2, #0x1
	ldrb	r0, [r3]
	cmp	r2, r0
	blt	.L596	@cond_branch
.L594:
	add	r4, r5, #0
	ldr	r0, [r4]
	add	r1, r0, #0
	add	r1, r1, #0x36
	ldrb	r1, [r1]
	add	r0, r0, #0x35
	ldrb	r2, [r0]
	mov	r0, sp
	bl	PlayerHasEnoughPokemonToTrade_HandleMewDeoxys
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L600	@cond_branch
	cmp	r0, #0x1
	bgt	.L605	@cond_branch
	cmp	r0, #0
	beq	.L599	@cond_branch
	b	.L598
.L607:
	.align	2, 0
.L606:
	.word	sTradeMenuResourcesPtr
.L605:
	cmp	r0, #0x2
	beq	.L602	@cond_branch
	b	.L598
.L599:
	mov	r0, #0x3
	mov	r1, #0x3
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r4]
	add	r0, r0, #0x80
	ldr	r1, .L608
	strh	r1, [r0]
	mov	r0, #0xb4
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	b	.L598
.L609:
	.align	2, 0
.L608:
	.word	0xbbcc
.L600:
	mov	r0, #0x3
	mov	r1, #0x1
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r4]
	add	r0, r0, #0x80
	ldr	r1, .L610
	strh	r1, [r0]
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L598	@cond_branch
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
	b	.L598
.L611:
	.align	2, 0
.L610:
	.word	0xbbbb
.L602:
	mov	r0, #0x3
	mov	r1, #0x8
	bl	ScheduleLinkTaskWithDelay
	ldr	r0, [r5]
	add	r0, r0, #0x80
	ldr	r1, .L612
	strh	r1, [r0]
	mov	r0, #0xb4
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
.L598:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L613:
	.align	2, 0
.L612:
	.word	0xbbcc
.Lfe28:
	.size	 CommunicateWhetherMonCanBeTraded,.Lfe28-CommunicateWhetherMonCanBeTraded
	.align	2, 0
	.type	 TradeMenuCB_3,function
	.thumb_func
TradeMenuCB_3:
	push	{r4, lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L616	@cond_branch
	cmp	r1, #0
	bgt	.L622	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L618	@cond_branch
	b	.L615
.L622:
	cmp	r1, #0x1
	beq	.L618	@cond_branch
	b	.L615
.L616:
	bl	CommunicateWhetherMonCanBeTraded
	ldr	r0, .L623
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x64
	strb	r1, [r0]
	mov	r0, #0x11
	bl	PutWindowTilemap
	b	.L615
.L624:
	.align	2, 0
.L623:
	.word	sTradeMenuResourcesPtr
.L618:
	mov	r0, #0x3
	mov	r1, #0x1
	bl	ScheduleLinkTaskWithDelay
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L619	@cond_branch
	ldr	r4, .L625
	ldr	r0, [r4]
	add	r0, r0, #0x80
	ldr	r1, .L625+0x4
	strh	r1, [r0]
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
.L619:
	ldr	r0, .L625
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x64
	strb	r1, [r0]
	mov	r0, #0x11
	bl	PutWindowTilemap
.L615:
	pop	{r4}
	pop	{r0}
	bx	r0
.L626:
	.align	2, 0
.L625:
	.word	sTradeMenuResourcesPtr
	.word	0xbbcc
.Lfe29:
	.size	 TradeMenuCB_3,.Lfe29-TradeMenuCB_3
	.align	2, 0
	.type	 CommitWindows,function
	.thumb_func
CommitWindows:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r0, .L633
	ldr	r0, [r0]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	cmp	r5, r0
	bge	.L629	@cond_branch
	mov	r6, #0xc0
	lsl	r6, r6, #0x14
.L631:
	lsr	r4, r6, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x1
	bl	CopyWindowToVram
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r6, r6, r0
	add	r5, r5, #0x1
	ldr	r0, .L633
	ldr	r0, [r0]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	cmp	r5, r0
	blt	.L631	@cond_branch
.L629:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L634:
	.align	2, 0
.L633:
	.word	sTradeMenuResourcesPtr
.Lfe30:
	.size	 CommitWindows,.Lfe30-CommitWindows
	.align	2, 0
	.type	 TradeMenuCB_4,function
	.thumb_func
TradeMenuCB_4:
	push	{r4, r5, lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L637	@cond_branch
	cmp	r5, #0
	bgt	.L642	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	beq	.L639	@cond_branch
	b	.L636
.L642:
	cmp	r5, #0x1
	beq	.L639	@cond_branch
	b	.L636
.L637:
	mov	r0, #0x4
	bl	PrintTradeErrorOrStatusMessage
	ldr	r4, .L643
	ldr	r0, [r4]
	add	r2, r0, #0
	add	r2, r2, #0x80
	ldr	r1, .L643+0x4
	strh	r1, [r2]
	add	r0, r0, #0x82
	strh	r5, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	ScheduleLinkTaskWithDelay
	ldr	r2, .L643+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x64
	strb	r1, [r0]
	bl	CommitWindows
	b	.L636
.L644:
	.align	2, 0
.L643:
	.word	sTradeMenuResourcesPtr
	.word	0xeeaa
	.word	gSprites
.L639:
	mov	r0, #0x5
	bl	PlaySE
	bl	RedrawChooseAPokemonWindow
.L636:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 TradeMenuCB_4,.Lfe31-TradeMenuCB_4
	.align	2, 0
	.type	 TradeMenuCB_6,function
	.thumb_func
TradeMenuCB_6:
	push	{r4, lr}
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L646	@cond_branch
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	ldr	r4, .L647
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	bl	SignalRedrawTradeMenus
	ldr	r0, [r4]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	bl	SignalRedrawTradeMenus
.L646:
	ldr	r0, .L647
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x7
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L648:
	.align	2, 0
.L647:
	.word	sTradeMenuResourcesPtr
.Lfe32:
	.size	 TradeMenuCB_6,.Lfe32-TradeMenuCB_6
	.align	2, 0
	.type	 TradeMenuCB_7,function
	.thumb_func
TradeMenuCB_7:
	push	{r4, lr}
	ldr	r4, .L651
	ldr	r0, [r4]
	add	r0, r0, #0x74
	ldrh	r1, [r0]
	ldr	r0, .L651+0x4
	cmp	r1, r0
	bne	.L650	@cond_branch
	bl	PrintIsThisTradeOkay
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0xe
	strb	r1, [r0]
.L650:
	pop	{r4}
	pop	{r0}
	bx	r0
.L652:
	.align	2, 0
.L651:
	.word	sTradeMenuResourcesPtr
	.word	0x505
.Lfe33:
	.size	 TradeMenuCB_7,.Lfe33-TradeMenuCB_7
	.align	2, 0
	.type	 TradeMenuCB_14,function
	.thumb_func
TradeMenuCB_14:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L655
	ldr	r1, [r4]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strb	r0, [r1]
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	ldrb	r0, [r0]
	cmp	r0, #0x78
	bls	.L654	@cond_branch
	ldr	r0, .L655+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xe
	str	r1, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	strb	r5, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x3
	strb	r1, [r0]
.L654:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L656:
	.align	2, 0
.L655:
	.word	sTradeMenuResourcesPtr
	.word	sWindowTemplate_YesNo
.Lfe34:
	.size	 TradeMenuCB_14,.Lfe34-TradeMenuCB_14
	.align	2, 0
	.type	 TradeMenuCB_8,function
	.thumb_func
TradeMenuCB_8:
	push	{r4, r5, r6, lr}
	ldr	r0, .L664
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L658	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	mov	r0, #0x1
	bl	rbox_fill_rectangle
	mov	r6, #0x0
	mov	r5, #0xe0
	lsl	r5, r5, #0x14
.L662:
	lsr	r4, r5, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0
	bl	rbox_fill_rectangle
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r5, r5, r0
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L662	@cond_branch
	mov	r0, #0x0
	bl	RedrawPartyWindow
	mov	r0, #0x1
	bl	RedrawPartyWindow
	ldr	r2, .L664+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x6f
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r3, .L664+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L658:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L665:
	.align	2, 0
.L664:
	.word	gMain
	.word	sTradeMenuResourcesPtr
	.word	gSprites
.Lfe35:
	.size	 TradeMenuCB_8,.Lfe35-TradeMenuCB_8
	.align	2, 0
	.type	 TradeMenuCB_11,function
	.thumb_func
TradeMenuCB_11:
	push	{lr}
	ldr	r0, .L670
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L667	@cond_branch
	ldr	r0, .L670+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L668	@cond_branch
	bl	SetLinkStandbyCallback
	b	.L669
.L671:
	.align	2, 0
.L670:
	.word	gPaletteFade
	.word	gWirelessCommType
.L668:
	mov	r0, #0xc
	bl	SetCloseLinkCallbackAndType
.L669:
	ldr	r0, .L672
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xc
	strb	r1, [r0]
.L667:
	pop	{r0}
	bx	r0
.L673:
	.align	2, 0
.L672:
	.word	sTradeMenuResourcesPtr
.Lfe36:
	.size	 TradeMenuCB_11,.Lfe36-TradeMenuCB_11
	.align	2, 0
	.type	 TradeMenuCB_12,function
	.thumb_func
TradeMenuCB_12:
	push	{lr}
	ldr	r0, .L679
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L675	@cond_branch
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L677	@cond_branch
	ldr	r0, .L679+0x4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L679+0x8
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L679+0xc
	bl	SetMainCallback2
	b	.L677
.L680:
	.align	2, 0
.L679:
	.word	gWirelessCommType
	.word	sSpriteTextTileBuffer
	.word	sTradeMenuResourcesPtr
	.word	CB2_ReturnToFieldFromMultiplayer
.L675:
	ldr	r0, .L681
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L677	@cond_branch
	ldr	r0, .L681+0x4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L681+0x8
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	ldr	r0, .L681+0xc
	bl	SetMainCallback2
.L677:
	pop	{r0}
	bx	r0
.L682:
	.align	2, 0
.L681:
	.word	gReceivedRemoteLinkPlayers
	.word	sSpriteTextTileBuffer
	.word	sTradeMenuResourcesPtr
	.word	CB2_ReturnToFieldFromMultiplayer
.Lfe37:
	.size	 TradeMenuCB_12,.Lfe37-TradeMenuCB_12
	.align	2, 0
	.type	 TradeMenuCB_16,function
	.thumb_func
TradeMenuCB_16:
	push	{lr}
	mov	r0, #0x0
	bl	ToggleLMANlinkRecovery
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L684	@cond_branch
	bl	SetLinkStandbyCallback
	ldr	r0, .L685
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xd
	strb	r1, [r0]
.L684:
	pop	{r0}
	bx	r0
.L686:
	.align	2, 0
.L685:
	.word	sTradeMenuResourcesPtr
.Lfe38:
	.size	 TradeMenuCB_16,.Lfe38-TradeMenuCB_16
	.align	2, 0
	.type	 RunTradeMenuCallback,function
	.thumb_func
RunTradeMenuCallback:
	push	{lr}
	ldr	r0, .L708
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	ldrb	r0, [r0]
	cmp	r0, #0x10
	bhi	.L688	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L708+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L709:
	.align	2, 0
.L708:
	.word	sTradeMenuResourcesPtr
	.word	.L706
	.align	2, 0
	.align	2, 0
.L706:
	.word	.L689
	.word	.L690
	.word	.L691
	.word	.L692
	.word	.L693
	.word	.L688
	.word	.L695
	.word	.L696
	.word	.L697
	.word	.L698
	.word	.L699
	.word	.L700
	.word	.L701
	.word	.L702
	.word	.L703
	.word	.L704
	.word	.L705
.L689:
	bl	TradeMenuCB_0
	b	.L688
.L690:
	bl	TradeMenuCB_1
	b	.L688
.L691:
	bl	TradeMenuCB_2
	b	.L688
.L692:
	bl	TradeMenuCB_3
	b	.L688
.L693:
	bl	TradeMenuCB_4
	b	.L688
.L695:
	bl	TradeMenuCB_6
	b	.L688
.L696:
	bl	TradeMenuCB_7
	b	.L688
.L697:
	bl	TradeMenuCB_8
	b	.L688
.L698:
	bl	TradeMenuCB_9
	b	.L688
.L699:
	bl	TradeMenuCB_10
	b	.L688
.L700:
	bl	TradeMenuCB_11
	b	.L688
.L701:
	bl	TradeMenuCB_12
	b	.L688
.L702:
	bl	TradeMenuCB_13
	b	.L688
.L703:
	bl	TradeMenuCB_14
	b	.L688
.L704:
	bl	TradeMenuCB_15
	b	.L688
.L705:
	bl	TradeMenuCB_16
.L688:
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 RunTradeMenuCallback,.Lfe39-RunTradeMenuCallback
	.align	2, 0
	.type	 SignalRedrawTradeMenus,function
	.thumb_func
SignalRedrawTradeMenus:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0x6
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r3, .L712
	ldr	r0, [r3]
	add	r0, r0, #0x74
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L711	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r3]
	add	r0, r0, #0x76
	add	r0, r0, r2
	strb	r4, [r0]
.L711:
	pop	{r4}
	pop	{r0}
	bx	r0
.L713:
	.align	2, 0
.L712:
	.word	sTradeMenuResourcesPtr
.Lfe40:
	.size	 SignalRedrawTradeMenus,.Lfe40-SignalRedrawTradeMenus
	.align	2, 0
	.type	 HandleRedrawTradeMenuOnSide,function
	.thumb_func
HandleRedrawTradeMenuOnSide:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x68
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L737
	ldr	r4, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x76
	add	r0, r0, r7
	ldrb	r0, [r0]
	mov	r1, #0x1
	str	r1, [sp, #0x60]
	cmp	r0, #0x5
	bhi	.L715	@cond_branch
	mov	r2, #0x0
	str	r2, [sp, #0x60]
.L715:
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	mov	r0, #0x0
	mov	r8, r0
	add	r0, r4, #0
	add	r0, r0, #0x74
	add	r3, r0, r7
	ldrb	r0, [r3]
	cmp	r0, #0x2
	bne	.LCB5980
	b	.L729	@long jump
.LCB5980:
	cmp	r0, #0x2
	bgt	.L735	@cond_branch
	cmp	r0, #0x1
	beq	.L717	@cond_branch
	b	.L716
.L738:
	.align	2, 0
.L737:
	.word	sTradeMenuResourcesPtr
.L735:
	cmp	r0, #0x3
	bne	.LCB5995
	b	.L731	@long jump
.LCB5995:
	cmp	r0, #0x4
	bne	.LCB5997
	b	.L732	@long jump
.LCB5997:
	b	.L716
.L717:
	mov	r5, #0x0
	add	r0, r4, #0
	add	r0, r0, #0x36
	add	r0, r0, r7
	ldr	r1, [sp, #0x60]
	lsl	r1, r1, #0x1
	mov	r9, r1
	lsl	r6, r7, #0x1
	lsl	r2, r7, #0x4
	str	r2, [sp, #0x64]
	ldrb	r0, [r0]
	cmp	r8, r0
	bcs	.L719	@cond_branch
	ldr	r0, .L739
	mov	r8, r0
	ldr	r4, .L739+0x4
	ldr	r0, [sp, #0x60]
	add	r0, r0, r9
	lsl	r2, r0, #0x1
	mov	r3, #0x4
.L721:
	ldr	r0, [r4]
	add	r1, r5, r2
	add	r0, r0, #0x28
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r4]
	add	r0, r0, #0x36
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L721	@cond_branch
.L719:
	mov	r5, #0x0
	add	r0, r6, r7
	lsl	r0, r0, #0x1
	add	r4, r0, #0x2
.L726:
	lsl	r0, r5, #0x18
	asr	r0, r0, #0x18
	add	r0, r0, r4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L726	@cond_branch
	ldr	r1, .L739
	mov	r8, r1
	ldr	r2, .L739+0x4
	ldr	r0, [r2]
	ldr	r6, [sp, #0x60]
	add	r6, r6, r9
	lsl	r3, r6, #0x1
	add	sl, sl, r3
	add	r0, r0, #0x28
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L739+0x4
	ldr	r4, [r0]
	add	r4, r4, #0x28
	add	r4, r4, sl
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, #0x14
	strh	r1, [r0, #0x2e]
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldr	r5, .L739+0x8
	lsl	r6, r6, #0x2
	add	r0, r6, r5
	ldrb	r0, [r0]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x1
	add	r3, r3, r5
	ldrb	r1, [r3]
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0xe
	strh	r0, [r2, #0x32]
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	add	r5, r5, #0x1
	add	r6, r6, r5
	ldrb	r0, [r6]
	lsl	r0, r0, #0x3
	sub	r0, r0, #0xc
	strh	r0, [r1, #0x36]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldr	r1, .L739+0xc
	bl	StoreSpriteCallbackInData6
	ldr	r2, .L739+0x4
	ldr	r1, [r2]
	add	r1, r1, #0x74
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r0, r0, #0x28
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	bl	TradeMenuBouncePartySprites
	ldr	r1, .L739+0x10
	ldr	r0, [sp, #0x64]
	sub	r2, r0, r7
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xf
	str	r0, [sp]
	mov	r0, #0x11
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r1, [sp, #0x60]
	cmp	r1, #0
	beq	.LCB6201
	b	.L716	@long jump
.LCB6201:
	bl	PrintTradePartnerPartyNicknames
	b	.L716
.L740:
	.align	2, 0
.L739:
	.word	gSprites
	.word	sTradeMenuResourcesPtr
	.word	sTradeMonSpriteCoords
	.word	SpriteCB_MonIcon
	.word	sTradePartyBoxTilemap
.L729:
	ldr	r2, .L741
	ldr	r1, [sp, #0x60]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, sl
	add	r1, r4, #0
	add	r1, r1, #0x28
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, [r0]
	ldr	r0, .L741+0x4
	cmp	r1, r0
	beq	.LCB6234
	b	.L716	@long jump
.LCB6234:
	mov	r0, #0x3
	strb	r0, [r3]
	b	.L716
.L742:
	.align	2, 0
.L741:
	.word	gSprites
	.word	SpriteCB_MonIcon
.L731:
	ldr	r1, .L743
	ldr	r0, [sp, #0x60]
	lsl	r2, r0, #0x4
	sub	r2, r2, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xf
	str	r0, [sp]
	mov	r0, #0x11
	str	r0, [sp, #0x4]
	mov	r0, r8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r6, .L743+0x4
	ldr	r1, .L743+0x8
	ldr	r4, [r1]
	ldr	r2, [sp, #0x60]
	lsl	r3, r2, #0x1
	add	r3, r3, r2
	lsl	r1, r3, #0x1
	mov	r2, sl
	add	r0, r2, r1
	add	r4, r4, #0x28
	add	r4, r4, r0
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	ldr	r5, .L743+0xc
	lsl	r3, r3, #0x2
	add	r0, r3, r5
	ldrb	r0, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x1
	add	r1, r1, r5
	ldrb	r1, [r1]
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0xe
	strh	r0, [r2, #0x20]
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r5, r5, #0x1
	add	r3, r3, r5
	ldrb	r0, [r3]
	lsl	r0, r0, #0x3
	sub	r0, r0, #0xc
	strh	r0, [r1, #0x22]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, r8
	strh	r1, [r0, #0x24]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r2, r8
	strh	r2, [r0, #0x26]
	add	r0, sp, #0x14
	ldr	r1, [sp, #0x60]
	mov	r2, sl
	bl	GetNicknameStringWidthByPartyAndMonIdx
	lsl	r4, r7, #0x1
	add	r5, r4, #0
	add	r5, r5, #0xe
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r2, #0x50
	sub	r2, r2, r0
	lsr	r0, r2, #0x1f
	add	r2, r2, r0
	asr	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L743+0x10
	mov	r8, r0
	str	r0, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	add	r0, sp, #0x14
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	mov	r3, #0x4
	bl	AddTextPrinterParameterized3
	add	r6, sp, #0x28
	add	r0, r6, #0
	ldr	r1, [sp, #0x60]
	mov	r2, sl
	bl	BuildMovesString
	add	r4, r4, #0xf
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	mov	r2, r8
	str	r2, [sp, #0x8]
	str	r1, [sp, #0xc]
	str	r6, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized4
	add	r0, r5, #0
	bl	PutWindowTilemap
	add	r0, r5, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L743+0x8
	ldr	r1, [r0]
	b	.L736
.L744:
	.align	2, 0
.L743:
	.word	sTradeMovesBoxTilemap
	.word	gSprites
	.word	sTradeMenuResourcesPtr
	.word	sTradeMonSpriteCoords
	.word	sTextColor_PartyMonNickname
.L732:
	ldr	r0, .L745
	lsl	r1, r7, #0x1
	add	r4, r1, r0
	ldrb	r2, [r4]
	add	r2, r2, #0x4
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r0, #0x1
	add	r1, r1, r0
	ldrb	r3, [r1]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r0, [r4]
	str	r0, [sp]
	ldrb	r0, [r1]
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, sl
	bl	PrintLevelAndGenderDirectlyOnVram
	ldr	r2, .L745+0x4
	ldr	r1, [r2]
.L736:
	add	r1, r1, #0x74
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L716:
	add	sp, sp, #0x68
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L746:
	.align	2, 0
.L745:
	.word	gUnknown_8262055
	.word	sTradeMenuResourcesPtr
.Lfe41:
	.size	 HandleRedrawTradeMenuOnSide,.Lfe41-HandleRedrawTradeMenuOnSide
	.align	2, 0
	.type	 GetNicknameStringWidthByPartyAndMonIdx,function
	.thumb_func
GetNicknameStringWidthByPartyAndMonIdx:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	cmp	r1, #0
	bne	.L748	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L750
	add	r0, r0, r1
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	b	.L749
.L751:
	.align	2, 0
.L750:
	.word	gPlayerParty
.L748:
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L752
	add	r0, r0, r1
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
.L749:
	add	r0, r4, #0
	mov	r1, sp
	bl	StringCopy_Nickname
	mov	r0, #0x0
	mov	r1, #0x2
	bl	GetFontAttribute
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x0
	add	r1, r4, #0
	bl	GetStringWidth
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.L753:
	.align	2, 0
.L752:
	.word	gEnemyParty
.Lfe42:
	.size	 GetNicknameStringWidthByPartyAndMonIdx,.Lfe42-GetNicknameStringWidthByPartyAndMonIdx
	.align	2, 0
	.type	 BuildMovesString,function
	.thumb_func
BuildMovesString:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L771
	ldr	r1, [r0]
	lsl	r0, r7, #0x1
	add	r0, r0, r7
	lsl	r0, r0, #0x1
	add	r0, r2, r0
	add	r1, r1, #0x51
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L755	@cond_branch
	mov	r4, #0x0
	mov	r0, #0x64
	mov	r5, r2
	mul	r5, r5, r0
	ldr	r0, .L771+0x4
	mov	r9, r0
	ldr	r2, .L771+0x8
	mov	r8, r2
.L759:
	cmp	r7, #0
	bne	.L760	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0xd
	mov	r2, r9
	b	.L770
.L772:
	.align	2, 0
.L771:
	.word	sTradeMenuResourcesPtr
	.word	gPlayerParty
	.word	gEnemyParty
.L760:
	add	r1, r4, #0
	add	r1, r1, #0xd
	mov	r2, r8
.L770:
	add	r0, r5, r2
	mov	r2, #0x0
	bl	GetMonData
	lsl	r1, r4, #0x1
	add	r1, r1, sp
	strh	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x3
	bls	.L759	@cond_branch
	ldr	r1, .L773
	add	r0, r6, #0
	bl	StringCopy
	mov	r4, #0x0
.L766:
	lsl	r0, r4, #0x1
	mov	r2, sp
	add	r1, r2, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L767	@cond_branch
	add	r1, r0, #0
	mov	r0, #0xd
	mul	r1, r1, r0
	ldr	r0, .L773+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringAppend
.L767:
	add	r0, r6, #0
	ldr	r1, .L773+0x8
	bl	StringAppend
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x3
	bls	.L766	@cond_branch
	b	.L769
.L774:
	.align	2, 0
.L773:
	.word	sText_Dummy
	.word	gMoveNames
	.word	sText_Newline
.L755:
	ldr	r1, .L775
	add	r0, r6, #0
	bl	StringCopy
	ldr	r1, .L775+0x4
	add	r0, r6, #0
	bl	StringAppend
.L769:
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L776:
	.align	2, 0
.L775:
	.word	sText_Dummy
	.word	gText_4Qmark
.Lfe43:
	.size	 BuildMovesString,.Lfe43-BuildMovesString
	.align	2, 0
	.type	 PrintPartyMonNickname,function
	.thumb_func
PrintPartyMonNickname:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r1, #0
	add	r6, r2, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0x2
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r4, r4, r1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r5, #0x0
	mov	r0, #0x0
	mov	r1, #0x2
	bl	GetFontAttribute
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x0
	add	r1, r6, #0
	bl	GetStringWidth
	mov	r2, #0x40
	sub	r2, r2, r0
	lsr	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L778
	str	r0, [sp]
	str	r5, [sp, #0x4]
	str	r6, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r3, #0x4
	bl	AddTextPrinterParameterized3
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L779:
	.align	2, 0
.L778:
	.word	sTextColor_PartyMonNickname
.Lfe44:
	.size	 PrintPartyMonNickname,.Lfe44-PrintPartyMonNickname
	.align	2, 0
	.type	 PrintPartyNicknames,function
	.thumb_func
PrintPartyNicknames:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x34
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r7, .L788
	cmp	r6, #0
	bne	.L781	@cond_branch
	ldr	r7, .L788+0x4
.L781:
	mov	r4, #0x0
	ldr	r0, .L788+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r4, r0
	bcs	.L784	@cond_branch
	add	r5, sp, #0x14
.L786:
	mov	r0, #0x64
	mul	r0, r0, r4
	add	r0, r7, r0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	add	r0, r5, #0
	mov	r1, sp
	bl	StringCopy_Nickname
	add	r0, r6, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	PrintPartyMonNickname
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L788+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L786	@cond_branch
.L784:
	add	sp, sp, #0x34
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L789:
	.align	2, 0
.L788:
	.word	gEnemyParty
	.word	gPlayerParty
	.word	sTradeMenuResourcesPtr
.Lfe45:
	.size	 PrintPartyNicknames,.Lfe45-PrintPartyNicknames
	.align	2, 0
	.type	 PrintLevelAndGenderDirectlyOnVram,function
	.thumb_func
PrintLevelAndGenderDirectlyOnVram:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	ldr	r4, [sp, #0x3c]
	ldr	r5, [sp, #0x40]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L810
	mov	r0, #0x6
	str	r0, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r2, r4, #0
	add	r3, r5, #0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, r8
	cmp	r0, #0
	bne	.L791	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r7
	ldr	r1, .L810+0x4
	b	.L809
.L811:
	.align	2, 0
.L810:
	.word	gTradeMenuMonBox_Tilemap
	.word	gPlayerParty
.L791:
	mov	r0, #0x64
	mul	r0, r0, r7
	ldr	r1, .L812
.L809:
	add	r0, r0, r1
	mov	r1, #0x38
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L812+0x4
	ldr	r5, [r4]
	mov	r1, r8
	lsl	r2, r1, #0x1
	add	r1, r2, r1
	lsl	r1, r1, #0x1
	add	r1, r7, r1
	add	r0, r5, #0
	add	r0, r0, #0x51
	add	r0, r0, r1
	ldrb	r0, [r0]
	str	r2, [sp, #0x18]
	cmp	r0, #0
	bne	.L793	@cond_branch
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, sl
	lsl	r3, r0, #0x5
	cmp	r2, #0
	beq	.L794	@cond_branch
	mov	r1, r9
	add	r0, r1, r3
	lsl	r0, r0, #0x1
	mov	r1, #0x8f
	lsl	r1, r1, #0x4
	add	r5, r5, r1
	add	r1, r5, r0
	add	r0, r2, #0
	add	r0, r0, #0x60
	strh	r0, [r1]
.L794:
	ldr	r4, [r4]
	mov	r1, r9
	add	r0, r1, r3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x1
	mov	r3, #0x8f
	lsl	r3, r3, #0x4
	add	r4, r4, r3
	add	r4, r4, r0
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, #0x70
	strh	r0, [r4]
	b	.L795
.L813:
	.align	2, 0
.L812:
	.word	gEnemyParty
	.word	sTradeMenuResourcesPtr
.L793:
	mov	r1, sl
	lsl	r0, r1, #0x5
	mov	r1, r9
	add	r3, r1, r0
	add	r1, r3, #0
	sub	r1, r1, #0x20
	lsl	r1, r1, #0x1
	mov	r0, #0x8f
	lsl	r0, r0, #0x4
	add	r2, r5, r0
	add	r1, r2, r1
	add	r0, r3, #0
	sub	r0, r0, #0x21
	lsl	r0, r0, #0x1
	add	r0, r2, r0
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r3, #0
	sub	r1, r1, #0x1f
	lsl	r1, r1, #0x1
	add	r1, r2, r1
	add	r0, r3, #0
	sub	r0, r0, #0x24
	lsl	r0, r0, #0x1
	add	r2, r2, r0
	ldrh	r2, [r2]
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	add	r0, r3, #0
	orr	r0, r0, r2
	strh	r0, [r1]
.L795:
	ldr	r0, .L814
	ldr	r1, [r0]
	ldr	r0, [sp, #0x18]
	add	r0, r0, r8
	lsl	r0, r0, #0x1
	add	r0, r7, r0
	add	r1, r1, #0x51
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L796	@cond_branch
	mov	r2, #0x90
	lsl	r2, r2, #0x3
	b	.L797
.L815:
	.align	2, 0
.L814:
	.word	sTradeMenuResourcesPtr
.L796:
	mov	r0, r8
	cmp	r0, #0
	bne	.L798	@cond_branch
	mov	r0, #0x64
	mov	r4, r7
	mul	r4, r4, r0
	ldr	r0, .L816
	add	r4, r4, r0
	add	r0, r4, #0
	bl	GetMonGender
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, sp, #0xc
	bl	GetMonData
	b	.L799
.L817:
	.align	2, 0
.L816:
	.word	gPlayerParty
.L798:
	mov	r0, #0x64
	mov	r4, r7
	mul	r4, r4, r0
	ldr	r0, .L818
	add	r4, r4, r0
	add	r0, r4, #0
	bl	GetMonGender
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, sp, #0xc
	bl	GetMonData
.L799:
	cmp	r5, #0
	beq	.L801	@cond_branch
	cmp	r5, #0xfe
	beq	.L804	@cond_branch
	mov	r2, #0x83
	b	.L797
.L819:
	.align	2, 0
.L818:
	.word	gEnemyParty
.L801:
	add	r0, sp, #0xc
	mov	r1, #0x0
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	mov	r2, #0x83
	cmp	r0, #0
	bne	.L797	@cond_branch
	mov	r2, #0x84
	b	.L797
.L804:
	add	r0, sp, #0xc
	mov	r1, #0xfe
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	mov	r2, #0x83
	cmp	r0, #0
	bne	.L797	@cond_branch
	mov	r2, #0x85
.L797:
	ldr	r0, .L820
	ldr	r1, [r0]
	mov	r0, sl
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x5
	add	r0, r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x1
	mov	r3, #0x8f
	lsl	r3, r3, #0x4
	add	r1, r1, r3
	add	r1, r1, r0
	strh	r2, [r1]
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L821:
	.align	2, 0
.L820:
	.word	sTradeMenuResourcesPtr
.Lfe46:
	.size	 PrintLevelAndGenderDirectlyOnVram,.Lfe46-PrintLevelAndGenderDirectlyOnVram
	.align	2, 0
	.type	 PrintPartyLevelsAndGendersDirectlyOnVram,function
	.thumb_func
PrintPartyLevelsAndGendersDirectlyOnVram:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r7, #0x0
	ldr	r0, .L828
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L824	@cond_branch
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	ldr	r1, .L828+0x4
	lsl	r0, r0, #0x2
	add	r5, r0, r1
	ldr	r1, .L828+0x8
	add	r4, r0, r1
.L826:
	lsl	r1, r7, #0x18
	lsr	r1, r1, #0x18
	ldrb	r2, [r5]
	ldrb	r3, [r5, #0x1]
	ldrb	r0, [r4]
	str	r0, [sp]
	ldrb	r0, [r4, #0x1]
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	bl	PrintLevelAndGenderDirectlyOnVram
	add	r5, r5, #0x2
	add	r4, r4, #0x2
	add	r7, r7, #0x1
	ldr	r0, .L828
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L826	@cond_branch
.L824:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L829:
	.align	2, 0
.L828:
	.word	sTradeMenuResourcesPtr
	.word	sTradeMenuGenderLevelPrintCoords
	.word	sTradeMenuGenderLevelWindowCoords
.Lfe47:
	.size	 PrintPartyLevelsAndGendersDirectlyOnVram,.Lfe47-PrintPartyLevelsAndGendersDirectlyOnVram
	.align	2, 0
	.type	 ShowTradePartyMonIcons,function
	.thumb_func
ShowTradePartyMonIcons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	mov	r7, #0x0
	ldr	r3, .L836
	ldr	r0, [r3]
	add	r0, r0, #0x36
	add	r0, r0, ip
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L832	@cond_branch
	ldr	r6, .L836+0x4
	mov	r9, r3
	mov	r1, ip
	lsl	r0, r1, #0x1
	add	r0, r0, ip
	lsl	r2, r0, #0x1
	mov	sl, r2
	ldr	r1, .L836+0x8
	mov	r2, #0x0
	mov	r8, r2
	lsl	r0, r0, #0x2
	add	r5, r0, r1
.L834:
	mov	r1, r9
	ldr	r0, [r1]
	mov	r2, sl
	add	r4, r7, r2
	add	r0, r0, #0x28
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	mov	r0, r9
	ldr	r3, [r0]
	add	r2, r3, #0
	add	r2, r2, #0x28
	add	r2, r2, r4
	ldrb	r0, [r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r5]
	lsl	r0, r0, #0x3
	add	r0, r0, #0xe
	strh	r0, [r1, #0x20]
	ldrb	r0, [r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r5, #0x1]
	lsl	r0, r0, #0x3
	sub	r0, r0, #0xc
	strh	r0, [r1, #0x22]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, r8
	strh	r1, [r0, #0x24]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r2, r8
	strh	r2, [r0, #0x26]
	add	r5, r5, #0x2
	add	r7, r7, #0x1
	add	r3, r3, #0x36
	add	r3, r3, ip
	ldrb	r3, [r3]
	cmp	r7, r3
	blt	.L834	@cond_branch
.L832:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L837:
	.align	2, 0
.L836:
	.word	sTradeMenuResourcesPtr
	.word	gSprites
	.word	sTradeMonSpriteCoords
.Lfe48:
	.size	 ShowTradePartyMonIcons,.Lfe48-ShowTradePartyMonIcons
	.align	2, 0
	.type	 PrintTradePartnerPartyNicknames,function
	.thumb_func
PrintTradePartnerPartyNicknames:
	push	{lr}
	mov	r0, #0x1
	bl	rbox_fill_rectangle
	mov	r0, #0x1
	bl	PrintPartyNicknames
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 PrintTradePartnerPartyNicknames,.Lfe49-PrintTradePartnerPartyNicknames
	.align	2, 0
	.type	 RedrawPartyWindow,function
	.thumb_func
RedrawPartyWindow:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L840
	lsl	r2, r4, #0x4
	sub	r2, r2, r4
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xf
	str	r0, [sp]
	mov	r0, #0x11
	str	r0, [sp, #0x4]
	mov	r6, #0x0
	str	r6, [sp, #0x8]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	add	r0, r4, #0
	bl	PrintPartyLevelsAndGendersDirectlyOnVram
	add	r0, r4, #0
	bl	PrintPartyNicknames
	add	r0, r4, #0
	bl	ShowTradePartyMonIcons
	ldr	r0, .L840+0x4
	ldr	r0, [r0, #0x4]
	ldr	r5, .L840+0x8
	ldr	r1, [r5]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L840+0xc
	add	r1, r1, r2
	mov	r2, #0x18
	bl	RenderTextToVramViaBuffer
	ldr	r0, [r5]
	add	r0, r0, #0x74
	add	r0, r0, r4
	strb	r6, [r0]
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L841:
	.align	2, 0
.L840:
	.word	sTradePartyBoxTilemap
	.word	sTradeUITextPtrs
	.word	sTradeMenuResourcesPtr
	.word	0x6010000
.Lfe50:
	.size	 RedrawPartyWindow,.Lfe50-RedrawPartyWindow
	.align	2, 0
	.type	 TradeMenuAction_Summary,function
	.thumb_func
TradeMenuAction_Summary:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 TradeMenuAction_Summary,.Lfe51-TradeMenuAction_Summary
	.align	2, 0
	.type	 TradeMenuAction_Trade,function
	.thumb_func
TradeMenuAction_Trade:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 TradeMenuAction_Trade,.Lfe52-TradeMenuAction_Trade
	.align	2, 0
	.type	 ScheduleLinkTaskWithDelay,function
	.thumb_func
ScheduleLinkTaskWithDelay:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	mov	r3, #0x0
	ldr	r4, .L851
	mov	ip, r4
	mov	r7, #0x8d
	lsl	r7, r7, #0x4
.L848:
	mov	r1, ip
	ldr	r0, [r1]
	lsl	r1, r3, #0x3
	add	r2, r0, r1
	add	r0, r2, r7
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L847	@cond_branch
	ldr	r3, .L851+0x4
	add	r0, r2, r3
	strh	r5, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strb	r6, [r0]
	ldr	r0, [r4]
	add	r0, r0, r1
	mov	r1, #0x8d
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L846
.L852:
	.align	2, 0
.L851:
	.word	sTradeMenuResourcesPtr
	.word	0x8d2
.L847:
	add	r3, r3, #0x1
	cmp	r3, #0x3
	ble	.L848	@cond_branch
.L846:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 ScheduleLinkTaskWithDelay,.Lfe53-ScheduleLinkTaskWithDelay
	.align	2, 0
	.type	 RunScheduledLinkTasks,function
	.thumb_func
RunScheduledLinkTasks:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r3, .L874
.L857:
	ldr	r0, [r3]
	lsl	r1, r4, #0x3
	add	r2, r0, r1
	mov	r5, #0x8d
	lsl	r5, r5, #0x4
	add	r0, r2, r5
	ldrb	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0
	beq	.L856	@cond_branch
	ldr	r0, .L874+0x4
	add	r1, r2, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L859	@cond_branch
	sub	r0, r0, #0x1
	strh	r0, [r1]
	b	.L856
.L875:
	.align	2, 0
.L874:
	.word	sTradeMenuResourcesPtr
	.word	0x8d2
.L859:
	ldr	r1, .L876
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bhi	.L861	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L876+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L877:
	.align	2, 0
.L876:
	.word	0x8d4
	.word	.L871
	.align	2, 0
	.align	2, 0
.L871:
	.word	.L862
	.word	.L863
	.word	.L864
	.word	.L867
	.word	.L867
	.word	.L867
	.word	.L868
	.word	.L869
	.word	.L870
.L862:
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L878
	ldr	r1, [r1]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
	b	.L861
.L879:
	.align	2, 0
.L878:
	.word	sTradeMenuResourcesPtr
.L863:
	mov	r0, #0x0
	bl	PrintTradeErrorOrStatusMessage
	b	.L861
.L864:
	mov	r0, #0x2
	bl	PrintTradeErrorOrStatusMessage
	b	.L861
.L867:
	mov	r0, #0x3
	bl	PrintTradeErrorOrStatusMessage
	b	.L861
.L868:
	mov	r0, #0x6
	bl	PrintTradeErrorOrStatusMessage
	b	.L861
.L869:
	mov	r0, #0x7
	bl	PrintTradeErrorOrStatusMessage
	b	.L861
.L870:
	mov	r0, #0x8
	bl	PrintTradeErrorOrStatusMessage
.L861:
	ldr	r0, .L880
	ldr	r1, [r0]
	add	r1, r1, r5
	mov	r2, #0x8d
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	mov	r2, #0x0
	strb	r2, [r1]
	add	r3, r0, #0
.L856:
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L857	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L881:
	.align	2, 0
.L880:
	.word	sTradeMenuResourcesPtr
.Lfe54:
	.size	 RunScheduledLinkTasks,.Lfe54-RunScheduledLinkTasks
	.align	2, 0
	.type	 PrintTradeErrorOrStatusMessage,function
	.thumb_func
PrintTradeErrorOrStatusMessage:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L883
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r2, [r4]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x3
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xc
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L884:
	.align	2, 0
.L883:
	.word	sTradeErrorOrStatusMessagePtrs
.Lfe55:
	.size	 PrintTradeErrorOrStatusMessage,.Lfe55-PrintTradeErrorOrStatusMessage
	.align	2, 0
	.type	 LoadUISprites,function
	.thumb_func
LoadUISprites:
	push	{r4, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L901
	ldr	r1, [r0]
	add	r3, r1, #0
	add	r3, r3, #0xa8
	ldrb	r1, [r3]
	add	r4, r0, #0
	cmp	r1, #0xd
	bhi	.L886	@cond_branch
	ldr	r1, .L901+0x4
	ldrb	r0, [r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [sp]
	ldr	r0, .L901+0x8
	ldr	r2, [sp, #0x4]
	and	r2, r2, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	orr	r2, r2, r0
	str	r2, [sp, #0x4]
	ldrb	r1, [r3]
	add	r1, r1, #0xc8
	lsl	r1, r1, #0x10
	ldr	r0, .L901+0xc
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
.L886:
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	ldrb	r0, [r0]
	cmp	r0, #0x11
	bhi	.L887	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L901+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L902:
	.align	2, 0
.L901:
	.word	sTradeMenuResourcesPtr
	.word	sSpriteTextTilePtrs
	.word	-0x10000
	.word	0xffff
	.word	.L895
	.align	2, 0
	.align	2, 0
.L895:
	.word	.L888
	.word	.L888
	.word	.L888
	.word	.L888
	.word	.L888
	.word	.L888
	.word	.L888
	.word	.L888
	.word	.L889
	.word	.L890
	.word	.L890
	.word	.L890
	.word	.L890
	.word	.L890
	.word	.L891
	.word	.L892
	.word	.L893
	.word	.L894
.L888:
	mov	r0, sp
	b	.L898
.L889:
	mov	r0, sp
	bl	LoadSpriteSheet
	ldr	r1, .L903
	ldr	r1, [r1]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	b	.L899
.L904:
	.align	2, 0
.L903:
	.word	sTradeMenuResourcesPtr
.L890:
	mov	r0, sp
	b	.L898
.L891:
	ldr	r0, .L905
	bl	LoadSpritePalette
	b	.L900
.L906:
	.align	2, 0
.L905:
	.word	sSpritePalette_Text
.L892:
	ldr	r0, .L907
	bl	LoadSpritePalette
	b	.L900
.L908:
	.align	2, 0
.L907:
	.word	sTradeButtons_SpritePal
.L893:
	ldr	r0, .L909
.L898:
	bl	LoadSpriteSheet
.L900:
	ldr	r0, .L909+0x4
	ldr	r1, [r0]
.L899:
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L887
.L910:
	.align	2, 0
.L909:
	.word	sTradeButtons_SpriteSheet
	.word	sTradeMenuResourcesPtr
.L894:
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L897
.L887:
	mov	r0, #0x0
.L897:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe56:
	.size	 LoadUISprites,.Lfe56-LoadUISprites
	.align	2, 0
	.type	 RenderTextToVramViaBuffer,function
	.thumb_func
RenderTextToVramViaBuffer:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r2, .L912
	str	r2, [sp]
	mov	r2, #0x6
	str	r2, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L913:
	.align	2, 0
.L912:
	.word	gDecompressionBuffer
.Lfe57:
	.size	 RenderTextToVramViaBuffer,.Lfe57-RenderTextToVramViaBuffer
	.align	2, 0
	.type	 ComputePartyTradeableFlags,function
	.thumb_func
ComputePartyTradeableFlags:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0
	beq	.L916	@cond_branch
	cmp	r0, #0x1
	beq	.L926	@cond_branch
	b	.L915
.L916:
	mov	r7, #0x0
	ldr	r1, .L940
	ldr	r0, [r1]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.LCB7946
	b	.L915	@long jump
.LCB7946:
	add	r6, r1, #0
	mov	r5, #0x0
	mov	r9, r5
.L920:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L940+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0x1
	bne	.L921	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r2, r9
	strb	r2, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L938
.L941:
	.align	2, 0
.L940:
	.word	sTradeMenuResourcesPtr
	.word	gPlayerParty
.L921:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L923	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L938
.L923:
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	mov	r1, r9
.L938:
	strb	r1, [r0]
	ldr	r0, .L942
	add	r5, r5, #0x1
	add	r7, r7, #0x1
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r8
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L920	@cond_branch
	b	.L915
.L943:
	.align	2, 0
.L942:
	.word	sTradeMenuResourcesPtr
.L926:
	mov	r7, #0x0
	ldr	r1, .L944
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L915	@cond_branch
	add	r6, r1, #0
	mov	r5, #0x6
	mov	r2, #0x0
	mov	r9, r2
.L930:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L944+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0x1
	bne	.L931	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r2, r9
	strb	r2, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L939
.L945:
	.align	2, 0
.L944:
	.word	sTradeMenuResourcesPtr
	.word	gEnemyParty
.L931:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L933	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L939
.L933:
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	mov	r1, r9
.L939:
	strb	r1, [r0]
	ldr	r0, .L946
	add	r5, r5, #0x1
	add	r7, r7, #0x1
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r8
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L930	@cond_branch
.L915:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L947:
	.align	2, 0
.L946:
	.word	sTradeMenuResourcesPtr
.Lfe58:
	.size	 ComputePartyTradeableFlags,.Lfe58-ComputePartyTradeableFlags
	.align	2, 0
	.type	 ComputePartyHPBarLevels,function
	.thumb_func
ComputePartyHPBarLevels:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L950	@cond_branch
	cmp	r0, #0x1
	beq	.L956	@cond_branch
	b	.L949
.L950:
	mov	r6, #0x0
	ldr	r1, .L964
	ldr	r0, [r1]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L949	@cond_branch
	add	r7, r1, #0
.L954:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L964+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x3a
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetHPBarLevel
	ldr	r1, [r7]
	add	r1, r1, #0x5d
	add	r1, r1, r6
	strb	r0, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L954	@cond_branch
	b	.L949
.L965:
	.align	2, 0
.L964:
	.word	sTradeMenuResourcesPtr
	.word	gPlayerParty
.L956:
	mov	r6, #0x0
	ldr	r1, .L966
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L949	@cond_branch
	add	r7, r1, #0
.L960:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L966+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x3a
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetHPBarLevel
	ldr	r1, [r7]
	add	r1, r1, #0x63
	add	r1, r1, r6
	strb	r0, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L960	@cond_branch
.L949:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L967:
	.align	2, 0
.L966:
	.word	sTradeMenuResourcesPtr
	.word	gEnemyParty
.Lfe59:
	.size	 ComputePartyHPBarLevels,.Lfe59-ComputePartyHPBarLevels
	.align	2, 0
	.type	 SetMonIconsAnimByHPBarLevel,function
	.thumb_func
SetMonIconsAnimByHPBarLevel:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r5, #0x0
.L972:
	mov	r4, #0x0
	ldr	r2, .L979
	ldr	r0, [r2]
	add	r0, r0, #0x36
	add	r0, r0, r5
	add	r1, r5, #0x1
	mov	r8, r1
	ldrb	r0, [r0]
	cmp	r4, r0
	bge	.L971	@cond_branch
	add	r6, r2, #0
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r7, r0, #0x1
.L976:
	ldr	r2, [r6]
	add	r3, r4, r7
	add	r0, r2, #0
	add	r0, r0, #0x28
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L979+0x4
	add	r0, r0, r1
	add	r2, r2, #0x5d
	add	r2, r2, r3
	ldrb	r2, [r2]
	mov	r1, #0x4
	sub	r1, r1, r2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	SetPartyHPBarSprite
	add	r4, r4, #0x1
	ldr	r0, [r6]
	add	r0, r0, #0x36
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L976	@cond_branch
.L971:
	mov	r5, r8
	cmp	r5, #0x1
	ble	.L972	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L980:
	.align	2, 0
.L979:
	.word	sTradeMenuResourcesPtr
	.word	gSprites
.Lfe60:
	.size	 SetMonIconsAnimByHPBarLevel,.Lfe60-SetMonIconsAnimByHPBarLevel
	.align	2, 0
	.type	 CopyGiftRibbonsToSav1,function
	.thumb_func
CopyGiftRibbonsToSav1:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r5, .L988
	ldr	r4, .L988+0x4
	ldr	r3, .L988+0x8
.L985:
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L984	@cond_branch
	ldr	r0, [r3]
	add	r0, r0, #0xa9
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L984	@cond_branch
	strb	r0, [r1]
.L984:
	add	r2, r2, #0x1
	cmp	r2, #0xa
	ble	.L985	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L989:
	.align	2, 0
.L988:
	.word	gSaveBlock1Ptr
	.word	0x309c
	.word	sTradeMenuResourcesPtr
.Lfe61:
	.size	 CopyGiftRibbonsToSav1,.Lfe61-CopyGiftRibbonsToSav1
	.align	2, 0
	.type	 TestWhetherSelectedMonCanBeTraded,function
	.thumb_func
TestWhetherSelectedMonCanBeTraded:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x30
	mov	r8, r0
	add	r7, r1, #0
	mov	r9, r2
	mov	r5, #0x0
	cmp	r5, r7
	bge	.L992	@cond_branch
	mov	r6, sp
.L994:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	add	r4, r4, r8
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	str	r0, [r6, #0x18]
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	stmia	r6!, {r0}
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L994	@cond_branch
.L992:
	bl	IsNationalPokedexEnabled
	mov	r1, r9
	lsl	r4, r1, #0x2
	cmp	r0, #0
	bne	.L996	@cond_branch
	add	r0, sp, #0x18
	add	r0, r0, r4
	ldr	r0, [r0]
	cmp	r0, #0x97
	ble	.L997	@cond_branch
	mov	r0, #0x2
	b	.L1020
.L997:
	cmp	r0, #0
	bne	.L996	@cond_branch
	mov	r0, #0x3
	b	.L1020
.L996:
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1022
	add	r1, r1, r0
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L999	@cond_branch
	ldrb	r1, [r1, #0x12]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L999	@cond_branch
	add	r0, sp, #0x18
	add	r0, r0, r4
	ldr	r1, [r0]
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1001	@cond_branch
	mov	r0, #0x5
	b	.L1020
.L1023:
	.align	2, 0
.L1022:
	.word	gLinkPlayers
.L1001:
	cmp	r1, #0x97
	bgt	.L1021	@cond_branch
.L999:
	mov	r1, sp
	add	r0, r1, r4
	ldr	r1, [r0]
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1004	@cond_branch
	cmp	r1, #0x97
	bne	.L1003	@cond_branch
.L1004:
	mov	r0, #0x64
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r8
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0
	bne	.L1003	@cond_branch
.L1021:
	mov	r0, #0x4
	b	.L1020
.L1003:
	cmp	r7, #0
	ble	.L1007	@cond_branch
	mov	r3, #0xce
	lsl	r3, r3, #0x1
	mov	r2, #0x0
	add	r1, sp, #0x18
	add	r5, r7, #0
.L1009:
	ldr	r0, [r1]
	cmp	r0, r3
	bne	.L1008	@cond_branch
	str	r2, [r1]
.L1008:
	add	r1, r1, #0x4
	sub	r5, r5, #0x1
	cmp	r5, #0
	bne	.L1009	@cond_branch
.L1007:
	mov	r2, #0x0
	mov	r5, #0x0
	cmp	r2, r7
	bge	.L1013	@cond_branch
	add	r1, sp, #0x18
.L1015:
	cmp	r5, r9
	beq	.L1014	@cond_branch
	ldr	r0, [r1]
	add	r2, r2, r0
.L1014:
	add	r1, r1, #0x4
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L1015	@cond_branch
.L1013:
	cmp	r2, #0
	bne	.L1018	@cond_branch
	mov	r0, #0x1
	b	.L1020
.L1018:
	mov	r0, #0x0
.L1020:
	add	sp, sp, #0x30
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 TestWhetherSelectedMonCanBeTraded,.Lfe62-TestWhetherSelectedMonCanBeTraded
	.align	2, 0
	.globl	Trade_CalcLinkPlayerCompatibilityParam
	.type	 Trade_CalcLinkPlayerCompatibilityParam,function
	.thumb_func
Trade_CalcLinkPlayerCompatibilityParam:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1037
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1025	@cond_branch
	bl	GetMultiplayerId
	ldr	r6, .L1037+0x4
	mov	r7, #0x1
	eor	r0, r0, r7
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1]
	sub	r0, r1, #0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L1025	@cond_branch
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r4, #0x2
	cmp	r0, #0x1
	bhi	.L1028	@cond_branch
	mov	r4, #0x1
.L1028:
	cmp	r4, #0
	ble	.L1025	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1, #0x12]
	mov	r5, #0xf0
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1031	@cond_branch
	cmp	r4, #0x2
	bne	.L1025	@cond_branch
	bl	GetMultiplayerId
	eor	r0, r0, r7
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1, #0x12]
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1025	@cond_branch
	mov	r0, #0x2
	b	.L1036
.L1038:
	.align	2, 0
.L1037:
	.word	gReceivedRemoteLinkPlayers
	.word	gLinkPlayers
.L1031:
	mov	r0, #0x1
	b	.L1036
.L1025:
	mov	r0, #0x0
.L1036:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 Trade_CalcLinkPlayerCompatibilityParam,.Lfe63-Trade_CalcLinkPlayerCompatibilityParam
	.align	2, 0
	.type	 IsDeoxysOrMewUntradable,function
	.thumb_func
IsDeoxysOrMewUntradable:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r2, r0
	beq	.L1041	@cond_branch
	cmp	r2, #0x97
	bne	.L1040	@cond_branch
.L1041:
	cmp	r1, #0
	bne	.L1040	@cond_branch
	mov	r0, #0x1
	b	.L1043
.L1040:
	mov	r0, #0x0
.L1043:
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 IsDeoxysOrMewUntradable,.Lfe64-IsDeoxysOrMewUntradable
	.align	2, 0
	.globl	GetUnionRoomTradeMessageId
	.type	 GetUnionRoomTradeMessageId,function
	.thumb_func
GetUnionRoomTradeMessageId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0x24]
	ldr	r5, [sp, #0x28]
	ldr	r6, [sp, #0x2c]
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r8, r4
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r2, r0, #0x17
	lsr	r2, r2, #0x1f
	mov	r9, r2
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x1f
	lsl	r0, r1, #0x17
	lsr	r0, r0, #0x1f
	mov	sl, r0
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x1f
	lsl	r1, r1, #0x12
	lsr	r1, r1, #0x1c
	sub	r1, r1, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x1
	cmp	r1, #0x1
	bhi	.L1045	@cond_branch
	mov	r2, #0x0
.L1045:
	cmp	r2, #0
	beq	.L1047	@cond_branch
	cmp	r4, #0
	bne	.L1048	@cond_branch
	mov	r0, #0x8
	b	.L1062
.L1048:
	cmp	r0, #0
	bne	.L1047	@cond_branch
	mov	r0, #0x9
	b	.L1062
.L1047:
	add	r0, r5, #0
	add	r1, r6, #0
	str	r3, [sp]
	bl	IsDeoxysOrMewUntradable
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1063	@cond_branch
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r3, r0
	bne	.L1052	@cond_branch
	cmp	r7, r3
	beq	.L1054	@cond_branch
	mov	r0, #0x2
	b	.L1062
.L1052:
	ldr	r0, .L1064
	lsl	r1, r7, #0x3
	sub	r1, r1, r7
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x6]
	cmp	r0, r8
	beq	.L1054	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, r8
	beq	.L1054	@cond_branch
	mov	r0, #0x1
	b	.L1062
.L1065:
	.align	2, 0
.L1064:
	.word	gBaseStats
.L1054:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r7, r0
	bne	.L1056	@cond_branch
	cmp	r7, r3
	beq	.L1056	@cond_branch
	mov	r0, #0x3
	b	.L1062
.L1056:
	mov	r0, r9
	cmp	r0, #0
	bne	.L1057	@cond_branch
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r7, r0
	bne	.L1058	@cond_branch
	mov	r0, #0x6
	b	.L1062
.L1058:
	cmp	r7, #0x97
	bls	.L1059	@cond_branch
.L1063:
	mov	r0, #0x4
	b	.L1062
.L1059:
	cmp	r3, #0x97
	bls	.L1057	@cond_branch
	mov	r0, #0x5
	b	.L1062
.L1057:
	mov	r0, sl
	cmp	r0, #0
	bne	.L1061	@cond_branch
	cmp	r7, #0x97
	bls	.L1061	@cond_branch
	mov	r0, #0x7
	b	.L1062
.L1061:
	mov	r0, #0x0
.L1062:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 GetUnionRoomTradeMessageId,.Lfe65-GetUnionRoomTradeMessageId
	.align	2, 0
	.globl	CanRegisterMonForTradingBoard
	.type	 CanRegisterMonForTradingBoard,function
	.thumb_func
CanRegisterMonForTradingBoard:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	add	r6, r5, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r0, r0, #0x17
	lsr	r4, r0, #0x1f
	add	r0, r2, #0
	add	r1, r3, #0
	bl	IsDeoxysOrMewUntradable
	cmp	r0, #0
	bne	.L1072	@cond_branch
	cmp	r4, #0
	bne	.L1070	@cond_branch
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r5, r0
	bne	.L1069	@cond_branch
	mov	r0, #0x2
	b	.L1071
.L1069:
	cmp	r6, #0x97
	bls	.L1070	@cond_branch
	cmp	r6, r0
	beq	.L1070	@cond_branch
.L1072:
	mov	r0, #0x1
	b	.L1071
.L1070:
	mov	r0, #0x0
.L1071:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 CanRegisterMonForTradingBoard,.Lfe66-CanRegisterMonForTradingBoard
.text
	.align	2, 0 @ Don't pad with nop

