@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	palette_bg_faded_fill_white
	.type	 palette_bg_faded_fill_white,function
	.thumb_func
palette_bg_faded_fill_white:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L3
	str	r0, [sp]
	ldr	r1, .L3+0x4
	ldr	r2, .L3+0x8
	mov	r0, sp
	bl	CpuFastSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x7fff7fff
	.word	gPlttBufferFaded
	.word	0x1000100
.Lfe1:
	.size	 palette_bg_faded_fill_white,.Lfe1-palette_bg_faded_fill_white
	.align	2, 0
	.globl	palette_bg_faded_fill_black
	.type	 palette_bg_faded_fill_black,function
	.thumb_func
palette_bg_faded_fill_black:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, .L6
	ldr	r2, .L6+0x4
	mov	r0, sp
	bl	CpuFastSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gPlttBufferFaded
	.word	0x1000100
.Lfe2:
	.size	 palette_bg_faded_fill_black,.Lfe2-palette_bg_faded_fill_black
	.align	2, 0
	.globl	WarpFadeInScreen
	.type	 WarpFadeInScreen,function
	.thumb_func
WarpFadeInScreen:
	push	{r4, lr}
	bl	GetLastUsedWarpMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCurrentMapType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	MapTransitionIsExit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L10	@cond_branch
	cmp	r0, #0x1
	beq	.L11	@cond_branch
	b	.L9
.L10:
	bl	palette_bg_faded_fill_black
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FadeScreen
	bl	palette_bg_faded_fill_black
	b	.L9
.L11:
	bl	palette_bg_faded_fill_white
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FadeScreen
	bl	palette_bg_faded_fill_white
.L9:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 WarpFadeInScreen,.Lfe3-WarpFadeInScreen
	.align	2, 0
	.type	 WarpFadeInScreenWithDelay,function
	.thumb_func
WarpFadeInScreenWithDelay:
	push	{r4, lr}
	bl	GetLastUsedWarpMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCurrentMapType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	MapTransitionIsExit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L16	@cond_branch
	cmp	r0, #0x1
	beq	.L17	@cond_branch
	b	.L15
.L16:
	bl	palette_bg_faded_fill_black
	mov	r0, #0x0
	mov	r1, #0x3
	bl	FadeScreen
	bl	palette_bg_faded_fill_black
	b	.L15
.L17:
	bl	palette_bg_faded_fill_white
	mov	r0, #0x2
	mov	r1, #0x3
	bl	FadeScreen
	bl	palette_bg_faded_fill_white
.L15:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 WarpFadeInScreenWithDelay,.Lfe4-WarpFadeInScreenWithDelay
	.align	2, 0
	.globl	FadeInFromBlack
	.type	 FadeInFromBlack,function
	.thumb_func
FadeInFromBlack:
	push	{lr}
	bl	palette_bg_faded_fill_black
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FadeScreen
	bl	palette_bg_faded_fill_black
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 FadeInFromBlack,.Lfe5-FadeInFromBlack
	.align	2, 0
	.globl	WarpFadeOutScreen
	.type	 WarpFadeOutScreen,function
	.thumb_func
WarpFadeOutScreen:
	push	{r4, lr}
	bl	GetDestinationWarpMapHeader
	add	r4, r0, #0
	ldr	r1, .L29
	ldrb	r0, [r4, #0x14]
	ldrb	r1, [r1, #0x14]
	cmp	r0, r1
	beq	.L22	@cond_branch
	mov	r1, #0x0
	bl	MapHasPreviewScreen
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L25	@cond_branch
.L22:
	bl	GetCurrentMapType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r4, #0x17]
	bl	MapTransitionIsEnter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L25	@cond_branch
	cmp	r0, #0x1
	beq	.L26	@cond_branch
	b	.L23
.L30:
	.align	2, 0
.L29:
	.word	gMapHeader
.L25:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	b	.L23
.L26:
	mov	r0, #0x3
	mov	r1, #0x0
	bl	FadeScreen
.L23:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 WarpFadeOutScreen,.Lfe6-WarpFadeOutScreen
	.align	2, 0
	.type	 WarpFadeOutScreenWithDelay,function
	.thumb_func
WarpFadeOutScreenWithDelay:
	push	{r4, lr}
	bl	GetCurrentMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetDestinationWarpMapHeader
	ldrb	r1, [r0, #0x17]
	add	r0, r4, #0
	bl	MapTransitionIsEnter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L33	@cond_branch
	cmp	r0, #0x1
	beq	.L34	@cond_branch
	b	.L32
.L33:
	mov	r0, #0x1
	mov	r1, #0x3
	bl	FadeScreen
	b	.L32
.L34:
	mov	r0, #0x3
	mov	r1, #0x3
	bl	FadeScreen
.L32:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 WarpFadeOutScreenWithDelay,.Lfe7-WarpFadeOutScreenWithDelay
	.align	2, 0
	.type	 SetPlayerVisibility,function
	.thumb_func
SetPlayerVisibility:
	push	{lr}
	lsl	r0, r0, #0x18
	mov	r1, #0x0
	cmp	r0, #0
	bne	.L38	@cond_branch
	mov	r1, #0x1
.L38:
	add	r0, r1, #0
	bl	SetPlayerInvisibility
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 SetPlayerVisibility,.Lfe8-SetPlayerVisibility
	.align	2, 0
	.type	 Task_ContinueScriptUnionRoom,function
	.thumb_func
Task_ContinueScriptUnionRoom:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L40	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L40:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 Task_ContinueScriptUnionRoom,.Lfe9-Task_ContinueScriptUnionRoom
	.align	2, 0
	.globl	FieldCB_ContinueScriptUnionRoom
	.type	 FieldCB_ContinueScriptUnionRoom,function
	.thumb_func
FieldCB_ContinueScriptUnionRoom:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L42
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	Task_ContinueScriptUnionRoom
.Lfe10:
	.size	 FieldCB_ContinueScriptUnionRoom,.Lfe10-FieldCB_ContinueScriptUnionRoom
	.align	2, 0
	.type	 Task_ContinueScript,function
	.thumb_func
Task_ContinueScript:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L45	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	ScriptContext_Enable
.L45:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 Task_ContinueScript,.Lfe11-Task_ContinueScript
	.align	2, 0
	.globl	FieldCB_ContinueScriptHandleMusic
	.type	 FieldCB_ContinueScriptHandleMusic,function
	.thumb_func
FieldCB_ContinueScriptHandleMusic:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L47
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	Task_ContinueScript
.Lfe12:
	.size	 FieldCB_ContinueScriptHandleMusic,.Lfe12-FieldCB_ContinueScriptHandleMusic
	.align	2, 0
	.globl	FieldCB_ContinueScript
	.type	 FieldCB_ContinueScript,function
	.thumb_func
FieldCB_ContinueScript:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FadeInFromBlack
	ldr	r0, .L50
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	Task_ContinueScript
.Lfe13:
	.size	 FieldCB_ContinueScript,.Lfe13-FieldCB_ContinueScript
	.align	2, 0
	.type	 Task_ReturnToFieldCableLink,function
	.thumb_func
Task_ReturnToFieldCableLink:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r2, .L63
	add	r4, r0, r2
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L55	@cond_branch
	cmp	r0, #0x1
	bgt	.L61	@cond_branch
	cmp	r0, #0
	beq	.L54	@cond_branch
	b	.L53
.L64:
	.align	2, 0
.L63:
	.word	gTasks
.L61:
	cmp	r0, #0x2
	beq	.L57	@cond_branch
	b	.L53
.L54:
	bl	CreateTask_ReestablishCableClubLink
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	b	.L62
.L55:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L53	@cond_branch
	bl	WarpFadeInScreen
.L62:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L53
.L57:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L53	@cond_branch
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L53:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 Task_ReturnToFieldCableLink,.Lfe14-Task_ReturnToFieldCableLink
	.align	2, 0
	.globl	FieldCB_ReturnToFieldCableLink
	.type	 FieldCB_ReturnToFieldCableLink,function
	.thumb_func
FieldCB_ReturnToFieldCableLink:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	palette_bg_faded_fill_black
	ldr	r0, .L66
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	Task_ReturnToFieldCableLink
.Lfe15:
	.size	 FieldCB_ReturnToFieldCableLink,.Lfe15-FieldCB_ReturnToFieldCableLink
	.align	2, 0
	.type	 Task_ReturnToFieldRecordMixing,function
	.thumb_func
Task_ReturnToFieldRecordMixing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L79
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L71	@cond_branch
	cmp	r0, #0x1
	bgt	.L77	@cond_branch
	cmp	r0, #0
	beq	.L70	@cond_branch
	b	.L69
.L80:
	.align	2, 0
.L79:
	.word	gTasks
.L77:
	cmp	r0, #0x2
	beq	.L73	@cond_branch
	b	.L69
.L70:
	bl	SetLinkStandbyCallback
	b	.L78
.L71:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L69	@cond_branch
	bl	WarpFadeInScreen
.L78:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L69
.L73:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L69	@cond_branch
	bl	StartSendingKeysToLink
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L69:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 Task_ReturnToFieldRecordMixing,.Lfe16-Task_ReturnToFieldRecordMixing
	.align	2, 0
	.globl	FieldCB_ReturnToFieldWirelessLink
	.type	 FieldCB_ReturnToFieldWirelessLink,function
	.thumb_func
FieldCB_ReturnToFieldWirelessLink:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	palette_bg_faded_fill_black
	ldr	r0, .L82
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	Task_ReturnToFieldRecordMixing
.Lfe17:
	.size	 FieldCB_ReturnToFieldWirelessLink,.Lfe17-FieldCB_ReturnToFieldWirelessLink
	.align	2, 0
	.type	 SetUpWarpExitTask,function
	.thumb_func
SetUpWarpExitTask:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsWarpDoor_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L85	@cond_branch
	ldr	r5, .L97
	bl	GetLastUsedWarpMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCurrentMapType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	MapTransitionIsExit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L87	@cond_branch
	cmp	r0, #0x1
	beq	.L88	@cond_branch
	b	.L91
.L98:
	.align	2, 0
.L97:
	.word	Task_ExitDoor
.L87:
	bl	palette_bg_faded_fill_black
	b	.L91
.L88:
	bl	palette_bg_faded_fill_white
	b	.L91
.L85:
	add	r0, r5, #0
	bl	ExitWarpFadeInScreen
	add	r0, r4, #0
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L92	@cond_branch
	ldr	r5, .L99
	b	.L91
.L100:
	.align	2, 0
.L99:
	.word	Task_ExitNonAnimDoor
.L92:
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L94	@cond_branch
	ldr	r0, .L101
	ldrb	r0, [r0]
	ldr	r5, .L101+0x4
	cmp	r0, #0
	bne	.L91	@cond_branch
	ldr	r5, .L101+0x8
	b	.L91
.L102:
	.align	2, 0
.L101:
	.word	gExitStairsMovementDisabled
	.word	Task_ExitNonDoor
	.word	Task_ExitStairs
.L94:
	ldr	r5, .L103
.L91:
	ldr	r1, .L103+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0xa
	bl	CreateTask
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	Task_ExitNonDoor
	.word	gExitStairsMovementDisabled
.Lfe18:
	.size	 SetUpWarpExitTask,.Lfe18-SetUpWarpExitTask
	.align	2, 0
	.type	 ExitWarpFadeInScreen,function
	.thumb_func
ExitWarpFadeInScreen:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	WarpFadeInScreen
	b	.L107
.L106:
	bl	FadeInFromBlack
.L107:
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 ExitWarpFadeInScreen,.Lfe19-ExitWarpFadeInScreen
	.align	2, 0
	.globl	FieldCB_DefaultWarpExit
	.type	 FieldCB_DefaultWarpExit,function
	.thumb_func
FieldCB_DefaultWarpExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	mov	r0, #0x0
	bl	SetUpWarpExitTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 FieldCB_DefaultWarpExit,.Lfe20-FieldCB_DefaultWarpExit
	.align	2, 0
	.globl	FieldCB_WarpExitFadeFromBlack
	.type	 FieldCB_WarpExitFadeFromBlack,function
	.thumb_func
FieldCB_WarpExitFadeFromBlack:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	mov	r0, #0x1
	bl	SetUpWarpExitTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 FieldCB_WarpExitFadeFromBlack,.Lfe21-FieldCB_WarpExitFadeFromBlack
	.align	2, 0
	.type	 FieldCB_TeleportWarpIn,function
	.thumb_func
FieldCB_TeleportWarpIn:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	mov	r0, #0x28
	bl	PlaySE
	ldr	r0, .L111
	mov	r1, #0xa
	bl	CreateTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.L112:
	.align	2, 0
.L111:
	.word	Task_TeleportWarpIn
.Lfe22:
	.size	 FieldCB_TeleportWarpIn,.Lfe22-FieldCB_TeleportWarpIn
	.align	2, 0
	.type	 Task_ExitDoor,function
	.thumb_func
Task_ExitDoor:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L136
	add	r4, r0, r1
	add	r6, r4, #0
	add	r6, r6, #0xc
	add	r7, r4, #0
	add	r7, r7, #0xe
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	add	r2, r1, #0
	cmp	r0, #0
	bne	.L114	@cond_branch
	mov	r0, #0x5
	strh	r0, [r4, #0x8]
.L114:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	bls	.LCB844
	b	.L115	@long jump
.LCB844:
	lsl	r0, r0, #0x2
	ldr	r1, .L136+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L137:
	.align	2, 0
.L136:
	.word	gTasks
	.word	.L134
	.align	2, 0
	.align	2, 0
.L134:
	.word	.L116
	.word	.L126
	.word	.L128
	.word	.L130
	.word	.L133
	.word	.L117
	.word	.L118
	.word	.L120
	.word	.L122
	.word	.L124
.L116:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldSetDoorOpened
	mov	r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L115
.L117:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	bl	DoOutwardBarnDoorWipe
	bl	WarpFadeInScreenWithDelay
	mov	r0, #0x6
	strh	r0, [r4, #0x8]
	b	.L115
.L118:
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x19
	beq	.LCB897
	b	.L115	@long jump
.LCB897:
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	GetDoorSoundEffect
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	PlaySE
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldAnimateDoorOpen
	mov	r0, #0x7
	strh	r0, [r4, #0x8]
	b	.L115
.L120:
	bl	FieldIsDoorAnimationRunning
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB927
	b	.L115	@long jump
.LCB927:
	add	r0, r4, #0
	add	r0, r0, #0x20
	add	r1, r4, #0
	add	r1, r1, #0x22
	bl	PlayerGetDestCoords
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L138
	add	r0, r0, r1
	mov	r1, #0x10
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x8
	strh	r0, [r4, #0x8]
	b	.L115
.L139:
	.align	2, 0
.L138:
	.word	gObjectEvents
.L122:
	ldrh	r0, [r4, #0x24]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x24]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xe
	beq	.LCB971
	b	.L115	@long jump
.LCB971:
	mov	r1, #0x20
	ldrsh	r0, [r4, r1]
	mov	r2, #0x22
	ldrsh	r1, [r4, r2]
	bl	FieldAnimateDoorClose
	mov	r0, #0x9
	strh	r0, [r4, #0x8]
	b	.L115
.L124:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L115	@cond_branch
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L115	@cond_branch
	bl	FieldIsDoorAnimationRunning
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L115	@cond_branch
	ldr	r0, .L140
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L115	@cond_branch
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L140+0x4
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	b	.L132
.L141:
	.align	2, 0
.L140:
	.word	Task_BarnDoorWipe
	.word	gObjectEvents
.L126:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L115	@cond_branch
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L142
	add	r0, r0, r1
	mov	r1, #0x10
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r4, #0x8]
	b	.L115
.L143:
	.align	2, 0
.L142:
	.word	gObjectEvents
.L128:
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L115	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldAnimateDoorClose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L144
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
	b	.L115
.L145:
	.align	2, 0
.L144:
	.word	gObjectEvents
.L130:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	blt	.L132	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L115	@cond_branch
.L132:
	mov	r0, #0x4
	strh	r0, [r4, #0x8]
	b	.L115
.L133:
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L115:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 Task_ExitDoor,.Lfe23-Task_ExitDoor
	.align	2, 0
	.type	 Task_ExitNonAnimDoor,function
	.thumb_func
Task_ExitNonAnimDoor:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L157
	add	r5, r0, r1
	add	r6, r5, #0
	add	r6, r6, #0xc
	add	r7, r5, #0
	add	r7, r7, #0xe
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L149	@cond_branch
	cmp	r0, #0x1
	bgt	.L156	@cond_branch
	cmp	r0, #0
	beq	.L148	@cond_branch
	b	.L147
.L158:
	.align	2, 0
.L157:
	.word	gTasks
.L156:
	cmp	r0, #0x2
	beq	.L151	@cond_branch
	cmp	r0, #0x3
	beq	.L153	@cond_branch
	b	.L147
.L148:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L147
.L149:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L147	@cond_branch
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L159
	add	r4, r4, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L147
.L160:
	.align	2, 0
.L159:
	.word	gObjectEvents
.L151:
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L147	@cond_branch
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L147
.L153:
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
.L147:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 Task_ExitNonAnimDoor,.Lfe24-Task_ExitNonAnimDoor
	.align	2, 0
	.type	 Task_ExitNonDoor,function
	.thumb_func
Task_ExitNonDoor:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L168
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L163	@cond_branch
	cmp	r0, #0x1
	beq	.L164	@cond_branch
	b	.L162
.L169:
	.align	2, 0
.L168:
	.word	gTasks
.L163:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L162
.L164:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L162	@cond_branch
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L162:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 Task_ExitNonDoor,.Lfe25-Task_ExitNonDoor
	.align	2, 0
	.type	 Task_TeleportWarpIn,function
	.thumb_func
Task_TeleportWarpIn:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L177
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L172	@cond_branch
	cmp	r0, #0x1
	beq	.L173	@cond_branch
	b	.L171
.L178:
	.align	2, 0
.L177:
	.word	gTasks
.L172:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	bl	StartTeleportInPlayerAnim
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L171
.L173:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L171	@cond_branch
	bl	WaitTeleportInPlayerAnim
	cmp	r0, #0x1
	beq	.L171	@cond_branch
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L171:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 Task_TeleportWarpIn,.Lfe26-Task_TeleportWarpIn
	.align	2, 0
	.type	 Task_WaitFadeAndCreateStartMenuTask,function
	.thumb_func
Task_WaitFadeAndCreateStartMenuTask:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L180	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L181
	mov	r1, #0x50
	bl	CreateTask
.L180:
	pop	{r4}
	pop	{r0}
	bx	r0
.L182:
	.align	2, 0
.L181:
	.word	Task_StartMenuHandleInput
.Lfe27:
	.size	 Task_WaitFadeAndCreateStartMenuTask,.Lfe27-Task_WaitFadeAndCreateStartMenuTask
	.align	2, 0
	.globl	FadeTransition_FadeInOnReturnToStartMenu
	.type	 FadeTransition_FadeInOnReturnToStartMenu,function
	.thumb_func
FadeTransition_FadeInOnReturnToStartMenu:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L184
	mov	r1, #0x50
	bl	CreateTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.L185:
	.align	2, 0
.L184:
	.word	Task_WaitFadeAndCreateStartMenuTask
.Lfe28:
	.size	 FadeTransition_FadeInOnReturnToStartMenu,.Lfe28-FadeTransition_FadeInOnReturnToStartMenu
	.align	2, 0
	.globl	FieldCB_ReturnToFieldOpenStartMenu
	.type	 FieldCB_ReturnToFieldOpenStartMenu,function
	.thumb_func
FieldCB_ReturnToFieldOpenStartMenu:
	push	{lr}
	bl	SetUpReturnToStartMenu
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 FieldCB_ReturnToFieldOpenStartMenu,.Lfe29-FieldCB_ReturnToFieldOpenStartMenu
	.align	2, 0
	.type	 Task_SafariZoneRanOutOfBalls,function
	.thumb_func
Task_SafariZoneRanOutOfBalls:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L188	@cond_branch
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
	bl	ClearPlayerHeldMovementAndUnfreezeObjectEvents
.L188:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 Task_SafariZoneRanOutOfBalls,.Lfe30-Task_SafariZoneRanOutOfBalls
	.align	2, 0
	.globl	FieldCB_SafariZoneRanOutOfBalls
	.type	 FieldCB_SafariZoneRanOutOfBalls,function
	.thumb_func
FieldCB_SafariZoneRanOutOfBalls:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L190
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L191:
	.align	2, 0
.L190:
	.word	Task_SafariZoneRanOutOfBalls
.Lfe31:
	.size	 FieldCB_SafariZoneRanOutOfBalls,.Lfe31-FieldCB_SafariZoneRanOutOfBalls
	.align	2, 0
	.type	 WaitWarpFadeOutScreen,function
	.thumb_func
WaitWarpFadeOutScreen:
	ldr	r0, .L193
	ldrb	r0, [r0, #0x7]
	lsr	r0, r0, #0x7
	bx	lr
.L194:
	.align	2, 0
.L193:
	.word	gPaletteFade
.Lfe32:
	.size	 WaitWarpFadeOutScreen,.Lfe32-WaitWarpFadeOutScreen
	.align	2, 0
	.globl	FieldFadeTransitionBackgroundEffectIsFinished
	.type	 FieldFadeTransitionBackgroundEffectIsFinished,function
	.thumb_func
FieldFadeTransitionBackgroundEffectIsFinished:
	push	{lr}
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L196	@cond_branch
	bl	ForestMapPreviewScreenIsRunning
	cmp	r0, #0
	beq	.L196	@cond_branch
	mov	r0, #0x1
	b	.L198
.L196:
	mov	r0, #0x0
.L198:
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 FieldFadeTransitionBackgroundEffectIsFinished,.Lfe33-FieldFadeTransitionBackgroundEffectIsFinished
	.align	2, 0
	.globl	DoWarp
	.type	 DoWarp,function
	.thumb_func
DoWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	mov	r0, #0x9
	bl	PlaySE
	ldr	r0, .L200
	ldr	r1, .L200+0x4
	str	r1, [r0]
	ldr	r0, .L200+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L201:
	.align	2, 0
.L200:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_Teleport2Warp
.Lfe34:
	.size	 DoWarp,.Lfe34-DoWarp
	.align	2, 0
	.globl	DoDiveWarp
	.type	 DoDiveWarp,function
	.thumb_func
DoDiveWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	ldr	r0, .L203
	ldr	r1, .L203+0x4
	str	r1, [r0]
	ldr	r0, .L203+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L204:
	.align	2, 0
.L203:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_Teleport2Warp
.Lfe35:
	.size	 DoDiveWarp,.Lfe35-DoDiveWarp
	.align	2, 0
	.globl	DoStairWarp
	.type	 DoStairWarp,function
	.thumb_func
DoStairWarp:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L206
	add	r0, r6, #0
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L206+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0x26]
	bl	_call_via_r6
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L207:
	.align	2, 0
.L206:
	.word	Task_StairWarp
	.word	gTasks
.Lfe36:
	.size	 DoStairWarp,.Lfe36-DoStairWarp
	.align	2, 0
	.globl	DoDoorWarp
	.type	 DoDoorWarp,function
	.thumb_func
DoDoorWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r0, .L209
	ldr	r1, .L209+0x4
	str	r1, [r0]
	ldr	r0, .L209+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L210:
	.align	2, 0
.L209:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_DoorWarp
.Lfe37:
	.size	 DoDoorWarp,.Lfe37-DoDoorWarp
	.align	2, 0
	.globl	DoTeleport2Warp
	.type	 DoTeleport2Warp,function
	.thumb_func
DoTeleport2Warp:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r0, .L212
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L212+0x4
	ldr	r0, .L212+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L213:
	.align	2, 0
.L212:
	.word	Task_Teleport2Warp
	.word	gFieldCallback
	.word	FieldCB_TeleportWarpIn
.Lfe38:
	.size	 DoTeleport2Warp,.Lfe38-DoTeleport2Warp
	.align	2, 0
	.globl	DoUnionRoomWarp
	.type	 DoUnionRoomWarp,function
	.thumb_func
DoUnionRoomWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r0, .L215
	ldr	r1, .L215+0x4
	str	r1, [r0]
	ldr	r0, .L215+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L216:
	.align	2, 0
.L215:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_TeleportWarp
.Lfe39:
	.size	 DoUnionRoomWarp,.Lfe39-DoUnionRoomWarp
	.align	2, 0
	.globl	DoFallWarp
	.type	 DoFallWarp,function
	.thumb_func
DoFallWarp:
	push	{lr}
	bl	DoDiveWarp
	ldr	r1, .L218
	ldr	r0, .L218+0x4
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	gFieldCallback
	.word	FieldCB_FallWarpExit
.Lfe40:
	.size	 DoFallWarp,.Lfe40-DoFallWarp
	.align	2, 0
	.globl	DoEscalatorWarp
	.type	 DoEscalatorWarp,function
	.thumb_func
DoEscalatorWarp:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	LockPlayerFieldControls
	add	r0, r4, #0
	mov	r1, #0xa
	bl	StartEscalatorWarp
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 DoEscalatorWarp,.Lfe41-DoEscalatorWarp
	.align	2, 0
	.globl	DoLavaridgeGymB1FWarp
	.type	 DoLavaridgeGymB1FWarp,function
	.thumb_func
DoLavaridgeGymB1FWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	mov	r0, #0xa
	bl	StartLavaridgeGymB1FWarp
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 DoLavaridgeGymB1FWarp,.Lfe42-DoLavaridgeGymB1FWarp
	.align	2, 0
	.globl	DoLavaridgeGym1FWarp
	.type	 DoLavaridgeGym1FWarp,function
	.thumb_func
DoLavaridgeGym1FWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	mov	r0, #0xa
	bl	StartLavaridgeGym1FWarp
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 DoLavaridgeGym1FWarp,.Lfe43-DoLavaridgeGym1FWarp
	.align	2, 0
	.globl	DoTeleportWarp
	.type	 DoTeleportWarp,function
	.thumb_func
DoTeleportWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	ldr	r0, .L224
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L224+0x4
	ldr	r0, .L224+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L225:
	.align	2, 0
.L224:
	.word	Task_TeleportWarp
	.word	gFieldCallback
	.word	FieldCB_TeleportWarpIn
.Lfe44:
	.size	 DoTeleportWarp,.Lfe44-DoTeleportWarp
	.align	2, 0
	.type	 DoPortholeWarp,function
	.thumb_func
DoPortholeWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	WarpFadeOutScreen
	ldr	r0, .L227
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L227+0x4
	ldr	r0, .L227+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L228:
	.align	2, 0
.L227:
	.word	Task_Teleport2Warp
	.word	gFieldCallback
	.word	FieldCB_ShowPortholeView
.Lfe45:
	.size	 DoPortholeWarp,.Lfe45-DoPortholeWarp
	.align	2, 0
	.type	 Task_CableClubWarp,function
	.thumb_func
Task_CableClubWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L239
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L232	@cond_branch
	cmp	r0, #0x1
	bgt	.L237	@cond_branch
	cmp	r0, #0
	beq	.L231	@cond_branch
	b	.L230
.L240:
	.align	2, 0
.L239:
	.word	gTasks
.L237:
	cmp	r0, #0x2
	beq	.L234	@cond_branch
	b	.L230
.L231:
	bl	LockPlayerFieldControls
	b	.L238
.L232:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L230	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L230	@cond_branch
.L238:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L230
.L234:
	bl	WarpIntoMap
	ldr	r0, .L241
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L230:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L242:
	.align	2, 0
.L241:
	.word	CB2_ReturnToFieldCableClub
.Lfe46:
	.size	 Task_CableClubWarp,.Lfe46-Task_CableClubWarp
	.align	2, 0
	.globl	DoCableClubWarp
	.type	 DoCableClubWarp,function
	.thumb_func
DoCableClubWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	mov	r0, #0x9
	bl	PlaySE
	ldr	r0, .L244
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L245:
	.align	2, 0
.L244:
	.word	Task_CableClubWarp
.Lfe47:
	.size	 DoCableClubWarp,.Lfe47-DoCableClubWarp
	.align	2, 0
	.type	 Task_ReturnFromLinkRoomWarp,function
	.thumb_func
Task_ReturnFromLinkRoomWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L257
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L249	@cond_branch
	cmp	r0, #0x1
	bgt	.L255	@cond_branch
	cmp	r0, #0
	beq	.L248	@cond_branch
	b	.L247
.L258:
	.align	2, 0
.L257:
	.word	gTasks+0x8
.L255:
	cmp	r0, #0x2
	beq	.L251	@cond_branch
	b	.L247
.L248:
	bl	ClearLinkCallback_2
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	TryFadeOutOldMapMusic
	mov	r0, #0x9
	bl	PlaySE
	b	.L256
.L249:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L247	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L247	@cond_branch
	bl	SetCloseLinkCallback
.L256:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L247
.L251:
	ldr	r0, .L259
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L247	@cond_branch
	bl	WarpIntoMap
	ldr	r0, .L259+0x4
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L247:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_LoadMap
.Lfe48:
	.size	 Task_ReturnFromLinkRoomWarp,.Lfe48-Task_ReturnFromLinkRoomWarp
	.align	2, 0
	.globl	ReturnFromLinkRoom
	.type	 ReturnFromLinkRoom,function
	.thumb_func
ReturnFromLinkRoom:
	push	{lr}
	ldr	r0, .L262
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L263:
	.align	2, 0
.L262:
	.word	Task_ReturnFromLinkRoomWarp
.Lfe49:
	.size	 ReturnFromLinkRoom,.Lfe49-ReturnFromLinkRoom
	.align	2, 0
	.type	 Task_Teleport2Warp,function
	.thumb_func
Task_Teleport2Warp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L274
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L267	@cond_branch
	cmp	r0, #0x1
	bgt	.L272	@cond_branch
	cmp	r0, #0
	beq	.L266	@cond_branch
	b	.L265
.L275:
	.align	2, 0
.L274:
	.word	gTasks
.L272:
	cmp	r0, #0x2
	beq	.L269	@cond_branch
	b	.L265
.L266:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	b	.L273
.L267:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L265	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L265	@cond_branch
.L273:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L265
.L269:
	bl	WarpIntoMap
	ldr	r0, .L276
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L265:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	CB2_LoadMap
.Lfe50:
	.size	 Task_Teleport2Warp,.Lfe50-Task_Teleport2Warp
	.align	2, 0
	.type	 Task_TeleportWarp,function
	.thumb_func
Task_TeleportWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L290
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L281	@cond_branch
	cmp	r0, #0x1
	bgt	.L288	@cond_branch
	cmp	r0, #0
	beq	.L280	@cond_branch
	b	.L279
.L291:
	.align	2, 0
.L290:
	.word	gTasks
.L288:
	cmp	r0, #0x2
	beq	.L283	@cond_branch
	cmp	r0, #0x3
	beq	.L285	@cond_branch
	b	.L279
.L280:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	mov	r0, #0x27
	bl	PlaySE
	bl	StartTeleportWarpOutPlayerAnim
	b	.L289
.L281:
	bl	WaitTeleportWarpOutPlayerAnim
	cmp	r0, #0
	bne	.L279	@cond_branch
	bl	WarpFadeOutScreen
	b	.L289
.L283:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L279	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L279	@cond_branch
.L289:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L279
.L285:
	bl	WarpIntoMap
	ldr	r0, .L292
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L279:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L293:
	.align	2, 0
.L292:
	.word	CB2_LoadMap
.Lfe51:
	.size	 Task_TeleportWarp,.Lfe51-Task_TeleportWarp
	.align	2, 0
	.type	 Task_DoorWarp,function
	.thumb_func
Task_DoorWarp:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L310
	add	r5, r1, r0
	add	r4, r5, #0
	add	r4, r4, #0xc
	add	r6, r5, #0
	add	r6, r6, #0xe
	mov	r2, #0x8
	ldrsh	r1, [r5, r2]
	add	r2, r0, #0
	cmp	r1, #0x5
	bls	.LCB2216
	b	.L295	@long jump
.LCB2216:
	lsl	r0, r1, #0x2
	ldr	r1, .L310+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L311:
	.align	2, 0
.L310:
	.word	gTasks
	.word	.L307
	.align	2, 0
	.align	2, 0
.L307:
	.word	.L296
	.word	.L297
	.word	.L300
	.word	.L302
	.word	.L305
	.word	.L306
.L296:
	bl	FreezeObjectEvents
	add	r0, r4, #0
	add	r1, r6, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	GetDoorSoundEffect
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	PlaySE
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	FieldAnimateDoorOpen
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L295
.L297:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L299	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L295	@cond_branch
.L299:
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L312
	add	r0, r0, r4
	bl	ObjectEventClearHeldMovementIfActive
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x11
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L295
.L313:
	.align	2, 0
.L312:
	.word	gObjectEvents
.L300:
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L295	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	FieldAnimateDoorClose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L314
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	mov	r0, #0x0
	bl	SetPlayerVisibility
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L295
.L315:
	.align	2, 0
.L314:
	.word	gObjectEvents
.L302:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L304	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L295	@cond_branch
.L304:
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	b	.L295
.L305:
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	b	.L309
.L306:
	bl	TryFadeOutOldMapMusic
.L309:
	bl	PlayRainStoppingSoundEffect
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	ldr	r0, .L316
	str	r0, [r5]
.L295:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L317:
	.align	2, 0
.L316:
	.word	Task_Teleport2Warp
.Lfe52:
	.size	 Task_DoorWarp,.Lfe52-Task_DoorWarp
	.align	2, 0
	.type	 Task_StairWarp,function
	.thumb_func
Task_StairWarp:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L334
	add	r5, r0, r1
	ldr	r2, .L334+0x4
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L334+0x8
	add	r6, r0, r1
	ldrb	r1, [r2, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L334+0xc
	add	r7, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L321	@cond_branch
	cmp	r0, #0x1
	bgt	.L332	@cond_branch
	cmp	r0, #0
	beq	.L320	@cond_branch
	b	.L330
.L335:
	.align	2, 0
.L334:
	.word	gTasks+0x8
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.L332:
	cmp	r0, #0x2
	beq	.L326	@cond_branch
	cmp	r0, #0x3
	beq	.L328	@cond_branch
	b	.L330
.L320:
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	CameraObjectReset2
	b	.L333
.L321:
	add	r0, r6, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L323	@cond_branch
	add	r0, r6, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L319	@cond_branch
.L323:
	ldrh	r1, [r5, #0x1e]
	mov	r2, #0x1e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	beq	.L324	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r5, #0x1e]
	b	.L319
.L324:
	bl	TryFadeOutOldMapMusic
	bl	PlayRainStoppingSoundEffect
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r7, #0x5]
	ldrh	r0, [r5, #0x2]
	add	r1, r5, #0x4
	add	r2, r5, #0x6
	bl	ForceStairsMovement
	mov	r0, #0x9
	bl	PlaySE
	b	.L333
.L326:
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	mov	r2, #0x6
	ldrsh	r1, [r5, r2]
	add	r2, r5, #0
	add	r2, r2, #0x8
	add	r3, r5, #0
	add	r3, r3, #0xa
	add	r4, r5, #0
	add	r4, r4, #0xc
	str	r4, [sp]
	bl	UpdateStairsMovement
	ldrh	r0, [r5, #0x1e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x1e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb
	ble	.L319	@cond_branch
	bl	WarpFadeOutScreen
	b	.L333
.L328:
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	mov	r2, #0x6
	ldrsh	r1, [r5, r2]
	add	r2, r5, #0
	add	r2, r2, #0x8
	add	r3, r5, #0
	add	r3, r3, #0xa
	add	r4, r5, #0
	add	r4, r4, #0xc
	str	r4, [sp]
	bl	UpdateStairsMovement
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L319	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L319	@cond_branch
.L333:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L319
.L330:
	ldr	r0, .L336
	ldr	r1, .L336+0x4
	str	r1, [r0]
	bl	WarpIntoMap
	ldr	r0, .L336+0x8
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L319:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L337:
	.align	2, 0
.L336:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	CB2_LoadMap
.Lfe53:
	.size	 Task_StairWarp,.Lfe53-Task_StairWarp
	.align	2, 0
	.type	 UpdateStairsMovement,function
	.thumb_func
UpdateStairsMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r2, #0
	add	r5, r3, #0
	ldr	r6, [sp, #0x18]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	ip, r0
	ldr	r3, .L342
	ldrb	r2, [r3, #0x4]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L342+0x4
	add	r7, r0, r2
	ldrb	r2, [r3, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L342+0x8
	add	r0, r0, r2
	mov	r8, r0
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0
	bgt	.L340	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp	r0, #0x6
	ble	.L339	@cond_branch
.L340:
	ldrh	r0, [r5]
	add	r0, r1, r0
	strh	r0, [r5]
.L339:
	mov	r1, ip
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	ldrh	r2, [r4]
	add	r0, r0, r2
	strh	r0, [r4]
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
	ldrh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r7, #0x24]
	ldrh	r0, [r5]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r7, #0x26]
	mov	r1, r8
	ldrb	r0, [r1]
	lsr	r0, r0, #0x7
	cmp	r0, #0
	beq	.L341	@cond_branch
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	ObjectEventForceSetHeldMovement
.L341:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gObjectEvents
.Lfe54:
	.size	 UpdateStairsMovement,.Lfe54-UpdateStairsMovement
	.align	2, 0
	.type	 ForceStairsMovement,function
	.thumb_func
ForceStairsMovement:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L345
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L345+0x4
	add	r4, r4, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventForceSetHeldMovement
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, r8
	bl	GetStairsMovementDirection
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe55:
	.size	 ForceStairsMovement,.Lfe55-ForceStairsMovement
	.align	2, 0
	.type	 GetStairsMovementDirection,function
	.thumb_func
GetStairsMovementDirection:
	push	{r4, r5, r6, r7, lr}
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalUpRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L348	@cond_branch
	mov	r0, #0x10
	strh	r0, [r5]
	mov	r1, #0xa
	neg	r1, r1
	add	r0, r1, #0
	b	.L356
.L348:
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalUpLeftStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L350	@cond_branch
	mov	r1, #0x11
	neg	r1, r1
	add	r0, r1, #0
	strh	r0, [r5]
	add	r1, r1, #0x7
	add	r0, r1, #0
	b	.L356
.L350:
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalDownRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L352	@cond_branch
	mov	r0, #0x11
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L356
.L352:
	add	r0, r7, #0
	bl	MetatileBehavior_IsDirectionalDownLeftStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L354	@cond_branch
	mov	r1, #0x11
	neg	r1, r1
	add	r0, r1, #0
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L356
.L354:
	strh	r0, [r5]
.L356:
	strh	r0, [r6]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 GetStairsMovementDirection,.Lfe56-GetStairsMovementDirection
	.align	2, 0
	.type	 Task_ExitStairs,function
	.thumb_func
Task_ExitStairs:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L366
	add	r5, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L361	@cond_branch
	cmp	r0, #0x1
	beq	.L362	@cond_branch
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L358	@cond_branch
	bl	CameraObjectReset1
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
	b	.L358
.L367:
	.align	2, 0
.L366:
	.word	gTasks+0x8
.L361:
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	LockPlayerFieldControls
	add	r0, r5, #0x2
	add	r1, r5, #0x4
	add	r2, r5, #0x6
	add	r3, r5, #0
	add	r3, r3, #0x8
	add	r4, r5, #0
	add	r4, r4, #0xa
	str	r4, [sp]
	bl	ExitStairsMovement
	b	.L365
.L362:
	add	r0, r5, #0x2
	add	r1, r5, #0x4
	add	r2, r5, #0x6
	add	r3, r5, #0
	add	r3, r3, #0x8
	add	r4, r5, #0
	add	r4, r4, #0xa
	str	r4, [sp]
	bl	WaitStairExitMovementFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L358	@cond_branch
.L365:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L358:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe57:
	.size	 Task_ExitStairs,.Lfe57-Task_ExitStairs
	.align	2, 0
	.type	 ExitStairsMovement,function
	.thumb_func
ExitStairsMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r7, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	mov	sl, r3
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r6, #0
	bl	MetatileBehavior_IsDirectionalDownRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L370	@cond_branch
	add	r0, r6, #0
	bl	MetatileBehavior_IsDirectionalUpRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L369	@cond_branch
.L370:
	mov	r1, #0x3
	b	.L371
.L369:
	mov	r1, #0x4
.L371:
	ldr	r0, .L372
	mov	r8, r0
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L372+0x4
	add	r4, r4, r0
	add	r0, r1, #0
	bl	GetWalkInPlaceFastMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventForceSetHeldMovement
	add	r0, r6, #0
	add	r1, r7, #0
	add	r2, r5, #0
	bl	GetStairsMovementDirection
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x4
	mov	r2, r9
	strh	r0, [r2]
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x4
	mov	r2, sl
	strh	r0, [r2]
	mov	r1, #0x10
	ldr	r0, [sp, #0x24]
	strh	r1, [r0]
	mov	r1, r8
	ldrb	r0, [r1, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L372+0x8
	add	r1, r1, r0
	mov	r2, r9
	ldrh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x24]
	mov	r2, sl
	ldrh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x26]
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	neg	r0, r0
	strh	r0, [r7]
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	neg	r0, r0
	strh	r0, [r5]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L373:
	.align	2, 0
.L372:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe58:
	.size	 ExitStairsMovement,.Lfe58-ExitStairsMovement
	.align	2, 0
	.type	 WaitStairExitMovementFinished,function
	.thumb_func
WaitStairExitMovementFinished:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldr	r4, [sp, #0x14]
	ldr	r0, .L378
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L378+0x4
	add	r1, r0, r1
	mov	r7, #0x0
	ldrsh	r0, [r4, r7]
	cmp	r0, #0
	bne	.L375	@cond_branch
	strh	r0, [r1, #0x24]
	strh	r0, [r1, #0x26]
	mov	r0, #0x0
	b	.L377
.L379:
	.align	2, 0
.L378:
	.word	gPlayerAvatar
	.word	gSprites
.L375:
	ldrh	r0, [r5]
	ldrh	r5, [r2]
	add	r0, r0, r5
	strh	r0, [r2]
	ldrh	r0, [r6]
	ldrh	r7, [r3]
	add	r0, r0, r7
	strh	r0, [r3]
	ldrh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x24]
	ldrh	r0, [r3]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x26]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	strh	r0, [r4]
	mov	r0, #0x1
.L377:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe59:
	.size	 WaitStairExitMovementFinished,.Lfe59-WaitStairExitMovementFinished
.text
	.align	2, 0 @ Don't pad with nop

