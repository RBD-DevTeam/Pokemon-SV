@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sUnionRoomPlayerName,object
	.size	 sUnionRoomPlayerName,12
sUnionRoomPlayerName:
	.space	12
	.type	 sPlayerCurrActivity,object
	.size	 sPlayerCurrActivity,1
sPlayerCurrActivity:
	.byte	0x0
	.type	 sPlayerActivityGroupSize,object
	.size	 sPlayerActivityGroupSize,1
sPlayerActivityGroupSize:
	.byte	0x0
	.align	2, 0
	.type	 sUnionRoomMain,object
	.size	 sUnionRoomMain,4
sUnionRoomMain:
	.space	4
	.align	2, 0
	.type	 sUnref_203B060,object
	.size	 sUnref_203B060,4
sUnref_203B060:
	.word	0x0
	.globl	gPartnerTgtGnameSub
	.align	2, 0
	.type	 gPartnerTgtGnameSub,object
	.size	 gPartnerTgtGnameSub,4
gPartnerTgtGnameSub:
	.space	4
	.globl	gUnionRoomOfferedSpecies
	.align	1, 0
	.type	 gUnionRoomOfferedSpecies,object
	.size	 gUnionRoomOfferedSpecies,2
gUnionRoomOfferedSpecies:
	.short	0x0
	.globl	gUnionRoomRequestedMonType
	.type	 gUnionRoomRequestedMonType,object
	.size	 gUnionRoomRequestedMonType,1
gUnionRoomRequestedMonType:
	.byte	0x0
	.align	2, 0
	.type	 sUnionRoomTrade,object
	.size	 sUnionRoomTrade,24
sUnionRoomTrade:
	.space	24
	.section .rodata
	.align	2, 0
	.type	 sUnionRoomActivityStringPtrs,object
sUnionRoomActivityStringPtrs:
	.word	gText_UR_EmptyString
	.word	gText_UR_SingleBattle
	.word	gText_UR_DoubleBattle
	.word	gText_UR_MultiBattle
	.word	gText_UR_PokemonTrades
	.word	gText_UR_Chat
	.word	gText_UR_WonderCards
	.word	gText_UR_WonderNews
	.word	gText_UR_Cards
	.word	gText_UR_PokemonJump
	.word	gText_UR_BerryCrush
	.word	gText_UR_BerryPicking
	.word	gText_UR_Search
	.word	gText_UR_SpinTrade
	.word	gText_UR_ItemTrade
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_WonderCards
	.word	gText_UR_WonderNews
	.size	 sUnionRoomActivityStringPtrs,92
	.align	2, 0
	.type	 sWindowTemplate_BButtonCancel,object
	.size	 sWindowTemplate_BButtonCancel,8
sWindowTemplate_BButtonCancel:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sLinkGroupToActivityAndCapacity,object
sLinkGroupToActivityAndCapacity:
	.word	0x201
	.word	0x202
	.word	0x403
	.word	0x204
	.word	0x2509
	.word	0x250a
	.word	0x350b
	.word	0x350d
	.word	0x350e
	.size	 sLinkGroupToActivityAndCapacity,36
	.align	2, 0
	.type	 sWindowTemplate_List_PossibleGroupMembers,object
	.size	 sWindowTemplate_List_PossibleGroupMembers,8
sWindowTemplate_List_PossibleGroupMembers:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0xd
	.byte	0xa
	.byte	0xf
	.short	0x44
	.align	2, 0
	.type	 sWindowTemplate_NumPlayerMode,object
	.size	 sWindowTemplate_NumPlayerMode,8
sWindowTemplate_NumPlayerMode:
	.byte	0x0
	.byte	0x10
	.byte	0x3
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0xc6
	.globl	sListMenuItems_PossibleGroupMembers
	.align	2, 0
	.type	 sListMenuItems_PossibleGroupMembers,object
sListMenuItems_PossibleGroupMembers:
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.size	 sListMenuItems_PossibleGroupMembers,40
	.align	2, 0
	.type	 sListMenuTemplate_PossibleGroupMembers,object
	.size	 sListMenuTemplate_PossibleGroupMembers,24
sListMenuTemplate_PossibleGroupMembers:
	.word	sListMenuItems_PossibleGroupMembers
	.word	0x0
	.word	ItemPrintFunc_PossibleGroupMembers
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x10
	.byte	0x42
	.align	2, 0
	.type	 sWindowTemplate_MysteryGiftList,object
	.size	 sWindowTemplate_MysteryGiftList,8
sWindowTemplate_MysteryGiftList:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0x11
	.byte	0xa
	.byte	0xf
	.short	0x44
	.align	2, 0
	.type	 sWindowTemplate_MysteryGiftPlayerNameAndId,object
	.size	 sWindowTemplate_MysteryGiftPlayerNameAndId,8
sWindowTemplate_MysteryGiftPlayerNameAndId:
	.byte	0x0
	.byte	0x14
	.byte	0x3
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0xee
	.align	2, 0
	.type	 sListMenuItems_UnionRoomGroups,object
sListMenuItems_UnionRoomGroups:
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.word	gText_UR_EmptyString
	.word	0x5
	.word	gText_UR_EmptyString
	.word	0x6
	.word	gText_UR_EmptyString
	.word	0x7
	.word	gText_UR_EmptyString
	.word	0x8
	.word	gText_UR_EmptyString
	.word	0x9
	.word	gText_UR_EmptyString
	.word	0xa
	.word	gText_UR_EmptyString
	.word	0xb
	.word	gText_UR_EmptyString
	.word	0xc
	.word	gText_UR_EmptyString
	.word	0xd
	.word	gText_UR_EmptyString
	.word	0xe
	.word	gText_UR_EmptyString
	.word	0xf
	.size	 sListMenuItems_UnionRoomGroups,128
	.align	2, 0
	.type	 sListMenuTemplate_UnionRoomGroups,object
	.size	 sListMenuTemplate_UnionRoomGroups,24
sListMenuTemplate_UnionRoomGroups:
	.word	sListMenuItems_UnionRoomGroups
	.word	ListMenuDefaultCursorMoveFunc
	.word	ListMenuItemPrintFunc_UnionRoomGroups
	.short	0x10
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x50
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_InviteToActivity,object
	.size	 sWindowTemplate_InviteToActivity,8
sWindowTemplate_InviteToActivity:
	.byte	0x0
	.byte	0x14
	.byte	0x6
	.byte	0x8
	.byte	0x7
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sListMenuItems_InviteToActivity,object
sListMenuItems_InviteToActivity:
	.word	gText_UR_Greetings
	.word	0x208
	.word	gText_UR_Battle
	.word	0x241
	.word	gText_UR_Chat2
	.word	0x245
	.word	gText_UR_Exit
	.word	0x40
	.size	 sListMenuItems_InviteToActivity,32
	.align	2, 0
	.type	 sListMenuTemplate_InviteToActivity,object
	.size	 sListMenuTemplate_InviteToActivity,24
sListMenuTemplate_InviteToActivity:
	.word	sListMenuItems_InviteToActivity
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x4
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_TradeBoardRegisterInfoExit,object
	.size	 sWindowTemplate_TradeBoardRegisterInfoExit,8
sWindowTemplate_TradeBoardRegisterInfoExit:
	.byte	0x0
	.byte	0x12
	.byte	0x8
	.byte	0xb
	.byte	0x5
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 gUnknown_8456E3C,object
gUnknown_8456E3C:
	.word	gText_Register
	.word	0x1
	.word	gText_UR_Info
	.word	0x2
	.word	gText_UR_Exit
	.word	0x3
	.size	 gUnknown_8456E3C,24
	.align	2, 0
	.type	 sListMenuTemplate_TradeBoardRegisterInfoExit,object
	.size	 sListMenuTemplate_TradeBoardRegisterInfoExit,24
sListMenuTemplate_TradeBoardRegisterInfoExit:
	.word	gUnknown_8456E3C
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_TypeNames,object
	.size	 sWindowTemplate_TypeNames,8
sWindowTemplate_TypeNames:
	.byte	0x0
	.byte	0x14
	.byte	0x2
	.byte	0x9
	.byte	0xb
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sListMenuItems_TypeNames,object
sListMenuItems_TypeNames:
	.word	gTypeNames
	.word	0x0
	.word	gTypeNames+0x46
	.word	0xa
	.word	gTypeNames+0x4d
	.word	0xb
	.word	gTypeNames+0x5b
	.word	0xd
	.word	gTypeNames+0x54
	.word	0xc
	.word	gTypeNames+0x69
	.word	0xf
	.word	gTypeNames+0x1c
	.word	0x4
	.word	gTypeNames+0x23
	.word	0x5
	.word	gTypeNames+0xe
	.word	0x2
	.word	gTypeNames+0x62
	.word	0xe
	.word	gTypeNames+0x7
	.word	0x1
	.word	gTypeNames+0x15
	.word	0x3
	.word	gTypeNames+0x2a
	.word	0x6
	.word	gTypeNames+0x31
	.word	0x7
	.word	gTypeNames+0x70
	.word	0x10
	.word	gTypeNames+0x38
	.word	0x8
	.word	gTypeNames+0x77
	.word	0x11
	.word	gText_UR_Exit
	.word	0x12
	.size	 sListMenuItems_TypeNames,144
	.align	2, 0
	.type	 sListMenuTemplate_TypeNames,object
	.size	 sListMenuTemplate_TypeNames,24
sListMenuTemplate_TypeNames:
	.word	sListMenuItems_TypeNames
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x12
	.short	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x22
	.byte	0x31
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sTradeBoardWindowTemplate,object
	.size	 sTradeBoardWindowTemplate,8
sTradeBoardWindowTemplate:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1c
	.byte	0x2
	.byte	0xd
	.short	0x1
	.align	2, 0
	.type	 gUnknown_8456F24,object
	.size	 gUnknown_8456F24,8
gUnknown_8456F24:
	.byte	0x0
	.byte	0x1
	.byte	0x5
	.byte	0x1c
	.byte	0xa
	.byte	0xd
	.short	0x39
	.align	2, 0
	.type	 sTradeBoardListMenuItems,object
sTradeBoardListMenuItems:
	.word	gText_UR_EmptyString
	.word	-0x3
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.word	gText_UR_EmptyString
	.word	0x5
	.word	gText_UR_EmptyString
	.word	0x6
	.word	gText_UR_EmptyString
	.word	0x7
	.word	gText_UR_Exit2
	.word	0x8
	.size	 sTradeBoardListMenuItems,80
	.align	2, 0
	.type	 sTradeBoardListMenuTemplate,object
	.size	 sTradeBoardListMenuTemplate,24
sTradeBoardListMenuTemplate:
	.word	sTradeBoardListMenuItems
	.word	ListMenuDefaultCursorMoveFunc
	.word	TradeBoardListMenuItemPrintFunc
	.short	0xa
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0xe2
	.byte	0xdf
	.byte	0x9
	.byte	0x2
	.align	2, 0
	.type	 gUnknown_8456F94,object
	.size	 gUnknown_8456F94,8
gUnknown_8456F94:
	.byte	0x0
	.byte	0x1
	.byte	0x5
	.byte	0x1c
	.byte	0xa
	.byte	0xd
	.short	0x39
	.align	2, 0
	.type	 gUnknown_8456F9C,object
gUnknown_8456F9C:
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.word	gText_UR_EmptyString
	.word	0x5
	.word	gText_UR_EmptyString
	.word	0x6
	.word	gText_UR_EmptyString
	.word	0x7
	.word	gText_UR_EmptyString
	.word	0x8
	.word	gText_UR_EmptyString
	.word	0x9
	.word	gText_UR_EmptyString
	.word	0xa
	.word	gText_UR_EmptyString
	.word	0xb
	.word	gText_UR_EmptyString
	.word	0xc
	.word	gText_UR_EmptyString
	.word	0xd
	.word	gText_UR_EmptyString
	.word	0xe
	.word	gText_UR_EmptyString
	.word	0xf
	.size	 gUnknown_8456F9C,128
	.align	2, 0
	.type	 gUnknown_845701C,object
	.size	 gUnknown_845701C,24
gUnknown_845701C:
	.word	gUnknown_8456F9C
	.word	ListMenuDefaultCursorMoveFunc
	.word	nullsub_92
	.short	0x10
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x1
	.byte	0x20
	.byte	0x31
	.byte	0x41
	.byte	0x2
	.align	2, 0
	.type	 sUnionGnameUnamePair_Dummy,object
	.size	 sUnionGnameUnamePair_Dummy,24
sUnionGnameUnamePair_Dummy:
	.space	24
	.align	2, 0
	.type	 gUnknown_845704C,object
gUnknown_845704C:
	.byte	0x1
	.byte	0xff
	.size	 gUnknown_845704C,2
	.align	2, 0
	.type	 gUnknown_8457050,object
gUnknown_8457050:
	.byte	0x2
	.byte	0xff
	.size	 gUnknown_8457050,2
	.align	2, 0
	.type	 gUnknown_8457054,object
gUnknown_8457054:
	.byte	0x3
	.byte	0xff
	.size	 gUnknown_8457054,2
	.align	2, 0
	.type	 gUnknown_8457058,object
gUnknown_8457058:
	.byte	0x4
	.byte	0xff
	.size	 gUnknown_8457058,2
	.align	2, 0
	.type	 gUnknown_845705C,object
gUnknown_845705C:
	.byte	0x9
	.byte	0xff
	.size	 gUnknown_845705C,2
	.align	2, 0
	.type	 gUnknown_8457060,object
gUnknown_8457060:
	.byte	0xa
	.byte	0xff
	.size	 gUnknown_8457060,2
	.align	2, 0
	.type	 gUnknown_8457064,object
gUnknown_8457064:
	.byte	0xb
	.byte	0xff
	.size	 gUnknown_8457064,2
	.align	2, 0
	.type	 gUnknown_8457068,object
gUnknown_8457068:
	.byte	0x15
	.byte	0xff
	.size	 gUnknown_8457068,2
	.align	2, 0
	.type	 gUnknown_845706C,object
gUnknown_845706C:
	.byte	0x16
	.byte	0xff
	.size	 gUnknown_845706C,2
	.align	2, 0
	.type	 gUnknown_8457070,object
gUnknown_8457070:
	.byte	0x40
	.byte	0x41
	.byte	0x44
	.byte	0x45
	.byte	0x48
	.byte	0x51
	.byte	0x52
	.byte	0x53
	.byte	0x54
	.byte	0xff
	.size	 gUnknown_8457070,10
	.align	2, 0
	.type	 gUnknown_845707C,object
gUnknown_845707C:
	.byte	0xc
	.byte	0xff
	.size	 gUnknown_845707C,2
	.align	2, 0
	.type	 gUnknown_8457080,object
gUnknown_8457080:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0x15
	.byte	0x16
	.byte	0xd
	.byte	0xff
	.size	 gUnknown_8457080,11
	.align	2, 0
	.type	 gUnknown_845708C,object
gUnknown_845708C:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0xa
	.byte	0xff
	.size	 gUnknown_845708C,6
	.align	2, 0
	.type	 sAcceptedActivityIds,object
sAcceptedActivityIds:
	.word	gUnknown_845704C
	.word	gUnknown_8457050
	.word	gUnknown_8457054
	.word	gUnknown_8457058
	.word	gUnknown_845705C
	.word	gUnknown_8457060
	.word	gUnknown_8457064
	.word	gUnknown_8457068
	.word	gUnknown_845706C
	.word	gUnknown_8457070
	.word	gUnknown_845707C
	.word	gUnknown_8457080
	.word	gUnknown_845708C
	.size	 sAcceptedActivityIds,52
	.type	 sLinkGroupToURoomActivity,object
sLinkGroupToURoomActivity:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0x15
	.byte	0x16
	.size	 sLinkGroupToURoomActivity,9
	.type	 sUnref_84570D1,object
sUnref_84570D1:
	.byte	0xf7
	.byte	0x0
	.byte	0xaf
	.byte	0xf7
	.byte	0x1
	.byte	0xff
	.size	 sUnref_84570D1,6
.text
	.align	2, 0
	.type	 PrintNumPlayersWaitingForMsg,function
	.thumb_func
PrintNumPlayersWaitingForMsg:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	add	r0, r6, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	lsl	r4, r4, #0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r4, r0
	beq	.L5	@cond_branch
	cmp	r4, r0
	bgt	.L10	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	cmp	r4, r0
	beq	.L4	@cond_branch
	b	.L3
.L10:
	mov	r0, #0x94
	lsl	r0, r0, #0x6
	cmp	r4, r0
	beq	.L6	@cond_branch
	mov	r0, #0xd4
	lsl	r0, r0, #0x6
	cmp	r4, r0
	beq	.L7	@cond_branch
	b	.L3
.L4:
	ldr	r1, .L12
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	b	.L11
.L13:
	.align	2, 0
.L12:
	.word	gTexts_UR_PlayersNeededOrMode
.L5:
	ldr	r1, .L14
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x14
	b	.L11
.L15:
	.align	2, 0
.L14:
	.word	gTexts_UR_PlayersNeededOrMode
.L6:
	ldr	r1, .L16
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x28
.L11:
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x0
	bl	UR_AddTextPrinterParameterized
	b	.L3
.L17:
	.align	2, 0
.L16:
	.word	gTexts_UR_PlayersNeededOrMode
.L7:
	ldr	r1, .L18
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x3c
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x0
	bl	UR_AddTextPrinterParameterized
.L3:
	add	r0, r6, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	gTexts_UR_PlayersNeededOrMode
.Lfe1:
	.size	 PrintNumPlayersWaitingForMsg,.Lfe1-PrintNumPlayersWaitingForMsg
	.align	2, 0
	.type	 PrintPlayerNameAndIdOnWindow,function
	.thumb_func
PrintPlayerNameAndIdOnWindow:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x20
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L21
	ldr	r2, [r6]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r8, r0
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r3, #0x0
	bl	UR_AddTextPrinterParameterized
	add	r5, sp, #0x14
	ldr	r1, .L21+0x4
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, #0xa
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	add	r1, sp, #0x8
	bl	StringAppend
	mov	r0, #0x10
	str	r0, [sp]
	mov	r0, r8
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	UR_AddTextPrinterParameterized
	add	sp, sp, #0x20
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	gSaveBlock2Ptr
	.word	gText_UR_ID
.Lfe2:
	.size	 PrintPlayerNameAndIdOnWindow,.Lfe2-PrintPlayerNameAndIdOnWindow
	.align	2, 0
	.type	 StringExpandPlaceholders_AwaitingCommFromAnother,function
	.thumb_func
StringExpandPlaceholders_AwaitingCommFromAnother:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L24	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L36
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L37:
	.align	2, 0
.L36:
	.word	.L34
	.align	2, 0
	.align	2, 0
.L34:
	.word	.L33
	.word	.L33
	.word	.L33
	.word	.L33
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L33
	.word	.L33
	.word	.L33
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L24
	.word	.L33
	.word	.L33
.L33:
	ldr	r0, .L38
	ldr	r1, .L38+0x4
	bl	StringExpandPlaceholders
.L24:
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	gStringVar4
	.word	gText_UR_AwaitingCommunication
.Lfe3:
	.size	 StringExpandPlaceholders_AwaitingCommFromAnother,.Lfe3-StringExpandPlaceholders_AwaitingCommFromAnother
	.align	2, 0
	.globl	TryBecomeLinkLeader
	.type	 TryBecomeLinkLeader,function
	.thumb_func
TryBecomeLinkLeader:
	push	{lr}
	ldr	r0, .L41
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L41+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L41+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L41+0xc
	str	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0xc]
	strb	r0, [r1, #0xd]
	ldr	r1, .L41+0x10
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	Task_TryBecomeLinkLeader
	.word	sUnionRoomMain
	.word	gTasks+0x8
	.word	sLeader
	.word	gSpecialVar_Result
.Lfe4:
	.size	 TryBecomeLinkLeader,.Lfe4-TryBecomeLinkLeader
	.align	2, 0
	.type	 Task_TryBecomeLinkLeader,function
	.thumb_func
Task_TryBecomeLinkLeader:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L144
	ldr	r5, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x1e
	bls	.LCB297
	b	.L44	@long jump
.LCB297:
	lsl	r0, r0, #0x2
	ldr	r1, .L144+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L145:
	.align	2, 0
.L144:
	.word	sUnionRoomMain
	.word	.L138
	.align	2, 0
	.align	2, 0
.L138:
	.word	.L45
	.word	.L44
	.word	.L44
	.word	.L46
	.word	.L47
	.word	.L52
	.word	.L54
	.word	.L70
	.word	.L44
	.word	.L62
	.word	.L64
	.word	.L72
	.word	.L81
	.word	.L92
	.word	.L94
	.word	.L96
	.word	.L98
	.word	.L122
	.word	.L124
	.word	.L108
	.word	.L110
	.word	.L131
	.word	.L133
	.word	.L131
	.word	.L132
	.word	.L44
	.word	.L134
	.word	.L44
	.word	.L44
	.word	.L67
	.word	.L128
.L45:
	ldr	r3, .L146
	ldr	r2, .L146+0x4
	ldr	r1, .L146+0x8
	ldrh	r0, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	strb	r0, [r3]
	ldr	r4, .L146+0xc
	ldrh	r0, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	lsr	r0, r0, #0x8
	strb	r0, [r4]
	ldrb	r0, [r3]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	bl	SetWirelessCommType1
	bl	OpenLink
	ldrb	r1, [r4]
	mov	r0, #0xf
	and	r0, r0, r1
	bl	InitializeRfuLinkManager_LinkLeader
	mov	r0, #0x3
	strb	r0, [r5, #0xc]
	b	.L44
.L147:
	.align	2, 0
.L146:
	.word	sPlayerCurrActivity
	.word	sLinkGroupToActivityAndCapacity
	.word	gSpecialVar_0x8004
	.word	sPlayerActivityGroupSize
.L46:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r0, [r5]
	mov	r1, #0x5
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0x10
	bl	LinkRfu3_SetGnameUnameFromStaticBuffers
	ldr	r1, [r5]
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	sub	r0, r0, #0x4
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r5]
	strb	r3, [r0, #0x1b]
	ldr	r0, [r5, #0x4]
	mov	r1, #0xff
	bl	CreateTask_ListenForPartnersWithCompatibleSerialNos
	strb	r0, [r5, #0x17]
	ldr	r0, .L148
	bl	AddWindow
	strb	r0, [r5, #0x10]
	ldr	r0, .L148+0x4
	bl	AddWindow
	strb	r0, [r5, #0xf]
	ldr	r0, .L148+0x8
	bl	AddWindow
	strb	r0, [r5, #0x11]
	ldrb	r0, [r5, #0x10]
	mov	r1, #0x22
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5, #0x10]
	ldr	r2, .L148+0xc
	mov	r1, #0x2
	str	r1, [sp]
	mov	r4, #0x4
	str	r4, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x8
	bl	UR_AddTextPrinterParameterized
	ldrb	r0, [r5, #0x10]
	bl	PutWindowTilemap
	ldrb	r0, [r5, #0x10]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r5, #0xf]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L148+0x10
	add	r2, r0, #0
	ldr	r1, .L148+0x14
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldrb	r1, [r5, #0xf]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0x12]
	ldrb	r0, [r5, #0x11]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5, #0x11]
	bl	PutWindowTilemap
	ldrb	r0, [r5, #0x11]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	strb	r4, [r5, #0xc]
	b	.L44
.L149:
	.align	2, 0
.L148:
	.word	sWindowTemplate_BButtonCancel
	.word	sWindowTemplate_List_PossibleGroupMembers
	.word	sWindowTemplate_NumPlayerMode
	.word	gText_UR_BButtonCancel
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_PossibleGroupMembers
.L47:
	ldr	r0, .L150
	ldr	r2, .L150+0x4
	ldr	r4, .L150+0x8
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L150+0xc
	ldrb	r2, [r0]
	lsr	r0, r2, #0x4
	cmp	r0, #0
	beq	.L48	@cond_branch
	ldrb	r1, [r5, #0x13]
	sub	r0, r0, #0x1
	cmp	r1, r0
	ble	.L49	@cond_branch
	mov	r0, #0xf
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L49	@cond_branch
	ldr	r0, .L150+0x10
	ldr	r1, .L150+0x14
	bl	StringExpandPlaceholders
	b	.L51
.L151:
	.align	2, 0
.L150:
	.word	gStringVar1
	.word	sUnionRoomActivityStringPtrs
	.word	sPlayerCurrActivity
	.word	sPlayerActivityGroupSize
	.word	gStringVar4
	.word	gText_UR_AwaitingLinkPressStart
.L49:
	ldr	r0, .L152
	ldr	r1, .L152+0x4
	bl	StringExpandPlaceholders
	b	.L51
.L153:
	.align	2, 0
.L152:
	.word	gStringVar4
	.word	gText_UR_AwaitingCommunication
.L48:
	ldr	r0, .L154
	ldrb	r1, [r4]
	bl	StringExpandPlaceholders_AwaitingCommFromAnother
.L51:
	ldrb	r0, [r5, #0x11]
	ldr	r1, .L154+0x4
	ldrb	r1, [r1]
	ldrb	r2, [r5, #0x13]
	bl	PrintNumPlayersWaitingForMsg
	mov	r0, #0x5
	strb	r0, [r5, #0xc]
	b	.L44
.L155:
	.align	2, 0
.L154:
	.word	gStringVar4
	.word	sPlayerActivityGroupSize
.L52:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L156
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB599
	b	.L44	@long jump
.LCB599:
	mov	r0, #0x6
	strb	r0, [r5, #0xc]
	b	.L44
.L157:
	.align	2, 0
.L156:
	.word	gStringVar4
.L54:
	add	r0, r5, #0
	mov	r1, #0x7
	mov	r2, #0xa
	bl	Leader_SetStateIfMemberListChanged
	ldr	r0, .L158
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L55	@cond_branch
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0x1
	bne	.L56	@cond_branch
	mov	r0, #0x17
	b	.L140
.L159:
	.align	2, 0
.L158:
	.word	gMain
.L56:
	ldr	r0, .L160
	ldrb	r1, [r0]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L58	@cond_branch
	mov	r0, #0x1e
	b	.L140
.L161:
	.align	2, 0
.L160:
	.word	sPlayerActivityGroupSize
.L58:
	mov	r0, #0x13
.L140:
	strb	r0, [r5, #0xc]
.L55:
	ldr	r0, .L162
	ldrb	r2, [r0]
	lsr	r0, r2, #0x4
	cmp	r0, #0
	beq	.L60	@cond_branch
	ldrb	r1, [r5, #0x13]
	sub	r0, r0, #0x1
	cmp	r1, r0
	ble	.L60	@cond_branch
	mov	r4, #0xf
	add	r0, r4, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L60	@cond_branch
	bl	sub_80FC1CC
	cmp	r0, #0
	beq	.L60	@cond_branch
	ldr	r0, .L162+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L60	@cond_branch
	strb	r4, [r5, #0xc]
	bl	LinkRfu_StopManagerAndFinalizeSlots
.L60:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x6
	beq	.LCB707
	b	.L44	@long jump
.LCB707:
	bl	sub_80FA5D4
	cmp	r0, #0
	bne	.LCB711
	b	.L44	@long jump
.LCB711:
	b	.L77
.L163:
	.align	2, 0
.L162:
	.word	sPlayerActivityGroupSize
	.word	gMain
.L62:
	bl	sub_80FA5D4
	cmp	r0, #0
	beq	.LCB726
	b	.L44	@long jump
.LCB726:
	mov	r0, #0x6
	strb	r0, [r5, #0xc]
	ldr	r0, [r5]
	bl	UnionRoomLeaderField0CompactionAndCount
	strb	r0, [r5, #0x13]
	b	.L44
.L64:
	mov	r3, #0x0
	ldr	r0, .L164
	ldrb	r1, [r0]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x2
	bne	.L65	@cond_branch
	mov	r3, #0x1
.L65:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r2, .L164+0x4
	lsl	r1, r3, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB762
	b	.L44	@long jump
.LCB762:
	ldr	r0, [r5]
	bl	UnionRoomLeaderField0CompactionAndCount
	strb	r0, [r5, #0x13]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	b	.L117
.L165:
	.align	2, 0
.L164:
	.word	sPlayerCurrActivity
	.word	gTexts_UR_PlayerUnavailable
.L67:
	ldr	r0, .L166
	ldrb	r0, [r0]
	mov	r1, #0xf
	and	r1, r1, r0
	mov	r0, #0x2
	eor	r1, r1, r0
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r3, r0, #0x1f
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r2, .L166+0x4
	lsl	r1, r3, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB808
	b	.L44	@long jump
.LCB808:
	mov	r0, #0x15
	strb	r0, [r5, #0xc]
	b	.L44
.L167:
	.align	2, 0
.L166:
	.word	sPlayerActivityGroupSize
	.word	gTexts_UR_PlayerUnavailable
.L70:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L168
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB832
	b	.L44	@long jump
.LCB832:
	mov	r0, #0xb
	strb	r0, [r5, #0xc]
	b	.L44
.L169:
	.align	2, 0
.L168:
	.word	gStringVar4
.L72:
	add	r4, r5, #0
	add	r4, r4, #0xd
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	CheckTrainerHasLeftByIdAndName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L76	@cond_branch
	cmp	r1, r0
	bgt	.L80	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	beq	.L77	@cond_branch
	b	.L44
.L80:
	cmp	r1, #0
	beq	.L74	@cond_branch
	cmp	r1, #0x1
	beq	.L76	@cond_branch
	b	.L44
.L74:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	mov	r0, #0x5
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x5
	b	.L141
.L76:
	mov	r0, #0x6
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x6
.L141:
	bl	SendByteToPartnerByIdAndName
	mov	r0, #0xc
	strb	r0, [r5, #0xc]
	b	.L44
.L77:
	mov	r0, #0x9
	strb	r0, [r5, #0xc]
	b	.L44
.L81:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	WaitSendByteToPartnerByIdAndName
	cmp	r0, #0x1
	bne	.L82	@cond_branch
	ldrb	r0, [r5, #0x19]
	cmp	r0, #0x5
	bne	.L83	@cond_branch
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	ldrb	r0, [r5, #0x13]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x13]
	ldr	r1, .L170
	ldrb	r1, [r1]
	mov	r3, #0xf
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r2, r0
	bne	.L142	@cond_branch
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L86	@cond_branch
	cmp	r2, #0x4
	bne	.L85	@cond_branch
.L86:
	strb	r3, [r5, #0xc]
	b	.L87
.L171:
	.align	2, 0
.L170:
	.word	sPlayerActivityGroupSize
.L85:
	ldr	r4, .L172
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r1, r1, r0
	sub	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L172+0x4
	ldr	r1, .L172+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
.L87:
	bl	LinkRfu_StopManagerAndFinalizeSlots
	ldrb	r0, [r5, #0x11]
	ldr	r1, .L172+0xc
	ldrb	r1, [r1]
	ldrb	r2, [r5, #0x13]
	bl	PrintNumPlayersWaitingForMsg
	b	.L89
.L173:
	.align	2, 0
.L172:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_UR_AnOKWasSentToPlayer
	.word	sPlayerActivityGroupSize
.L83:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	RequestDisconnectSlotByTrainerNameAndId
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r5]
	bl	UnionRoomLeaderField0CompactionAndCount
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
.L142:
	mov	r0, #0x4
	strb	r0, [r5, #0xc]
.L89:
	mov	r0, #0x0
	strb	r0, [r5, #0x19]
	b	.L44
.L82:
	cmp	r0, #0x2
	beq	.LCB1126
	b	.L44	@long jump
.LCB1126:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	b	.L117
.L92:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L174
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1144
	b	.L44	@long jump
.LCB1144:
	mov	r0, #0xe
	strb	r0, [r5, #0xc]
	b	.L44
.L175:
	.align	2, 0
.L174:
	.word	gStringVar4
.L94:
	ldrb	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xe]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.LCB1164
	b	.L44	@long jump
.LCB1164:
	b	.L100
.L96:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L176
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1178
	b	.L44	@long jump
.LCB1178:
	mov	r0, #0x10
	strb	r0, [r5, #0xc]
	b	.L44
.L177:
	.align	2, 0
.L176:
	.word	gText_UR_AreTheseMembersOK
.L98:
	add	r0, r5, #0
	add	r0, r0, #0xd
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L100	@cond_branch
	cmp	r1, #0
	bgt	.L107	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L102	@cond_branch
	b	.L44
.L107:
	cmp	r1, #0x1
	beq	.L102	@cond_branch
	b	.L44
.L100:
	mov	r0, #0x11
	strb	r0, [r5, #0xc]
	b	.L44
.L102:
	ldr	r0, .L178
	ldrb	r1, [r0]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L103	@cond_branch
	mov	r0, #0x1e
	strb	r0, [r5, #0xc]
	b	.L44
.L179:
	.align	2, 0
.L178:
	.word	sPlayerActivityGroupSize
.L103:
	mov	r0, #0x13
	strb	r0, [r5, #0xc]
	b	.L44
.L108:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L180
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1256
	b	.L44	@long jump
.LCB1256:
	mov	r0, #0x14
	strb	r0, [r5, #0xc]
	b	.L44
.L181:
	.align	2, 0
.L180:
	.word	gText_UR_CancelModeWithTheseMembers
.L110:
	add	r0, r5, #0
	add	r0, r0, #0xd
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L143	@cond_branch
	cmp	r1, #0
	bgt	.L121	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L114	@cond_branch
	b	.L44
.L121:
	cmp	r1, #0x1
	bne	.L44	@cond_branch
.L114:
	ldr	r0, .L182
	ldrb	r2, [r0]
	mov	r0, #0xf0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L115	@cond_branch
	mov	r0, #0xf
	strb	r0, [r5, #0xc]
	b	.L44
.L183:
	.align	2, 0
.L182:
	.word	sPlayerActivityGroupSize
.L115:
	mov	r3, #0xf
	ldrb	r1, [r5, #0x13]
	add	r0, r3, #0
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L117	@cond_branch
	strb	r3, [r5, #0xc]
	b	.L44
.L117:
	mov	r0, #0x4
	strb	r0, [r5, #0xc]
	b	.L44
.L122:
	add	r0, r5, #0
	mov	r1, #0x7
	mov	r2, #0x17
	bl	Leader_SetStateIfMemberListChanged
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L44	@cond_branch
	mov	r0, #0x12
	strb	r0, [r5, #0xc]
	b	.L44
.L124:
	bl	LmanAcceptSlotFlagIsNotZero
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L125	@cond_branch
	mov	r0, #0x0
	bl	WaitRfuState
	cmp	r0, #0
	beq	.L44	@cond_branch
	mov	r0, #0x1a
	strb	r0, [r5, #0xc]
	b	.L44
.L125:
	mov	r0, #0x1d
	strb	r0, [r5, #0xc]
	strb	r1, [r5, #0xd]
	b	.L44
.L128:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L184
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L44	@cond_branch
.L143:
	mov	r0, #0x17
	strb	r0, [r5, #0xc]
	b	.L44
.L185:
	.align	2, 0
.L184:
	.word	gText_UR_ModeWithTheseMembersWillBeCanceled
.L131:
	bl	DestroyWirelessStatusIndicatorSprite
	bl	LinkRfu_Shutdown
	add	r0, r5, #0
	bl	Leader_DestroyResources
	ldrb	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L44
.L132:
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L186
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L44
.L187:
	.align	2, 0
.L186:
	.word	gSpecialVar_Result
.L133:
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L188
	mov	r0, #0x8
	strh	r0, [r1]
	b	.L44
.L189:
	.align	2, 0
.L188:
	.word	gSpecialVar_Result
.L134:
	bl	RfuHasErrored
	cmp	r0, #0
	beq	.L135	@cond_branch
	mov	r0, #0x1d
	strb	r0, [r5, #0xc]
	b	.L44
.L135:
	ldr	r0, .L190
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L44	@cond_branch
	mov	r0, #0x1
	bl	UpdateGameData_GroupLockedIn
	bl	CreateTask_RunScriptAndFadeToActivity
	add	r0, r5, #0
	bl	Leader_DestroyResources
	add	r0, r4, #0
	bl	DestroyTask
.L44:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L191:
	.align	2, 0
.L190:
	.word	gReceivedRemoteLinkPlayers
.Lfe5:
	.size	 Task_TryBecomeLinkLeader,.Lfe5-Task_TryBecomeLinkLeader
	.align	2, 0
	.type	 Leader_DestroyResources,function
	.thumb_func
Leader_DestroyResources:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0x11]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0x11]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4, #0x10]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0xf]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r4, #0x11]
	bl	RemoveWindow
	ldrb	r0, [r4, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r4, #0x10]
	bl	RemoveWindow
	ldrb	r0, [r4, #0x17]
	bl	DestroyTask
	ldr	r0, [r4, #0x8]
	bl	Free
	ldr	r0, [r4]
	bl	Free
	ldr	r0, [r4, #0x4]
	bl	Free
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 Leader_DestroyResources,.Lfe6-Leader_DestroyResources
	.align	2, 0
	.type	 Leader_GetAcceptNewMemberPrompt,function
	.thumb_func
Leader_GetAcceptNewMemberPrompt:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L194	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L207
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L208:
	.align	2, 0
.L207:
	.word	.L204
	.align	2, 0
	.align	2, 0
.L204:
	.word	.L197
	.word	.L197
	.word	.L203
	.word	.L197
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L203
	.word	.L203
	.word	.L203
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L194
	.word	.L199
	.word	.L199
.L197:
	ldr	r1, .L209
	b	.L206
.L210:
	.align	2, 0
.L209:
	.word	gText_UR_PlayerContactedYouForXAccept
.L199:
	ldr	r1, .L211
.L206:
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L194
.L212:
	.align	2, 0
.L211:
	.word	gText_UR_PlayerContactedYouShareX
.L203:
	ldr	r1, .L213
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L194:
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	gText_UR_PlayerContactedYouAddToMembers
.Lfe7:
	.size	 Leader_GetAcceptNewMemberPrompt,.Lfe7-Leader_GetAcceptNewMemberPrompt
	.align	2, 0
	.type	 GetYouDeclinedTheOfferMessage,function
	.thumb_func
GetYouDeclinedTheOfferMessage:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x44
	beq	.L218	@cond_branch
	cmp	r1, #0x44
	bgt	.L223	@cond_branch
	cmp	r1, #0x41
	beq	.L218	@cond_branch
	b	.L216
.L223:
	cmp	r2, #0x45
	beq	.L220	@cond_branch
	cmp	r2, #0x48
	beq	.L220	@cond_branch
	b	.L216
.L218:
	ldr	r1, .L224
	bl	StringExpandPlaceholders
	b	.L216
.L225:
	.align	2, 0
.L224:
	.word	gText_UR_OfferDeclined1
.L220:
	ldr	r1, .L226
	bl	StringExpandPlaceholders
.L216:
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	gText_UR_OfferDeclined2
.Lfe8:
	.size	 GetYouDeclinedTheOfferMessage,.Lfe8-GetYouDeclinedTheOfferMessage
	.align	2, 0
	.type	 GetYouAskedToJoinGroupPleaseWaitMessage,function
	.thumb_func
GetYouAskedToJoinGroupPleaseWaitMessage:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L229	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L241
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L242:
	.align	2, 0
.L241:
	.word	.L239
	.align	2, 0
	.align	2, 0
.L239:
	.word	.L234
	.word	.L234
	.word	.L238
	.word	.L234
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L238
	.word	.L238
	.word	.L238
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L229
	.word	.L234
	.word	.L234
.L234:
	ldr	r1, .L243
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L229
.L244:
	.align	2, 0
.L243:
	.word	gText_UR_AwaitingPlayersResponse
.L238:
	ldr	r1, .L245
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L229:
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	gText_UR_PlayerHasBeenAskedToRegisterYouPleaseWait
.Lfe9:
	.size	 GetYouAskedToJoinGroupPleaseWaitMessage,.Lfe9-GetYouAskedToJoinGroupPleaseWaitMessage
	.align	2, 0
	.type	 GetGroupLeaderSentAnOKMessage,function
	.thumb_func
GetGroupLeaderSentAnOKMessage:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L248	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L260
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L261:
	.align	2, 0
.L260:
	.word	.L258
	.align	2, 0
	.align	2, 0
.L258:
	.word	.L253
	.word	.L253
	.word	.L257
	.word	.L253
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L257
	.word	.L257
	.word	.L257
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L248
	.word	.L253
	.word	.L253
.L253:
	ldr	r1, .L262
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L248
.L263:
	.align	2, 0
.L262:
	.word	gText_UR_PlayerSentBackOK
.L257:
	ldr	r1, .L264
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L248:
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	gText_UR_PlayerOKdRegistration
.Lfe10:
	.size	 GetGroupLeaderSentAnOKMessage,.Lfe10-GetGroupLeaderSentAnOKMessage
	.align	2, 0
	.type	 Leader_SetStateIfMemberListChanged,function
	.thumb_func
Leader_SetStateIfMemberListChanged:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	add	r4, r2, #0
	ldr	r0, [r5]
	bl	LeaderUpdateGroupMembership
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L268	@cond_branch
	cmp	r0, #0x2
	beq	.L269	@cond_branch
	b	.L267
.L268:
	mov	r0, #0x2
	bl	PlaySE
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	ldr	r4, .L273
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L273+0x4
	ldr	r1, .L273+0x8
	ldrb	r1, [r1]
	bl	Leader_GetAcceptNewMemberPrompt
	strb	r6, [r5, #0xc]
	b	.L267
.L274:
	.align	2, 0
.L273:
	.word	gStringVar2
	.word	gStringVar4
	.word	sPlayerCurrActivity
.L269:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	strb	r4, [r5, #0xc]
	mov	r0, #0x1
	b	.L272
.L267:
	mov	r0, #0x0
.L272:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 Leader_SetStateIfMemberListChanged,.Lfe11-Leader_SetStateIfMemberListChanged
	.align	2, 0
	.type	 ItemPrintFunc_PossibleGroupMembers,function
	.thumb_func
ItemPrintFunc_PossibleGroupMembers:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L282
	ldr	r3, [r0]
	mov	r2, #0x0
	ldr	r1, [r3]
	lsl	r0, r4, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	beq	.L277	@cond_branch
	cmp	r0, #0x2
	beq	.L279	@cond_branch
	b	.L276
.L283:
	.align	2, 0
.L282:
	.word	sUnionRoomMain
.L277:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L276	@cond_branch
	mov	r2, #0x2
	b	.L276
.L279:
	mov	r2, #0x1
.L276:
	lsl	r0, r4, #0x5
	ldr	r3, [r3]
	add	r3, r3, r0
	str	r2, [sp]
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x0
	add	r2, r6, #0
	bl	PrintGroupMemberCandidateOnWindowWithColor
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 ItemPrintFunc_PossibleGroupMembers,.Lfe12-ItemPrintFunc_PossibleGroupMembers
	.align	2, 0
	.type	 LeaderUpdateGroupMembership,function
	.thumb_func
LeaderUpdateGroupMembership:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L305
	ldr	r5, [r0]
	mov	r0, #0x0
	mov	r8, r0
	mov	r3, #0x1
.L288:
	ldr	r0, [r5]
	lsl	r6, r3, #0x5
	add	r2, r0, r6
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	mov	r9, r0
	cmp	r0, #0x1
	bne	.L287	@cond_branch
	ldr	r1, [r5, #0x4]
	add	r0, r2, #0
	str	r3, [sp]
	bl	Findx20Inx1CArray
	add	r4, r0, #0
	ldr	r3, [sp]
	cmp	r4, #0xff
	beq	.L290	@cond_branch
	ldr	r1, [r5]
	ldr	r0, [r5, #0x4]
	lsl	r2, r4, #0x3
	sub	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r1, r1, r6
	add	r0, r0, r2
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldr	r0, [r5]
	add	r0, r0, r6
	mov	r1, r9
	strh	r1, [r0, #0x18]
	b	.L287
.L306:
	.align	2, 0
.L305:
	.word	sUnionRoomMain
.L290:
	ldr	r2, [r5]
	add	r2, r2, r6
	ldrb	r1, [r2, #0x1a]
	mov	r4, #0x4
	neg	r4, r4
	add	r0, r4, #0
	and	r1, r1, r0
	mov	r0, #0x2
	orr	r1, r1, r0
	strb	r1, [r2, #0x1a]
	mov	r7, #0x2
	mov	r8, r7
.L287:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x4
	bls	.L288	@cond_branch
	mov	r6, #0x0
	mov	r4, #0x3
.L296:
	ldr	r0, [r5]
	ldr	r1, [r5, #0x4]
	add	r1, r1, r6
	mov	r2, #0x5
	bl	Appendx1Ctox20
	add	r6, r6, #0x1c
	sub	r4, r4, #0x1
	ldr	r0, [r5]
	cmp	r4, #0
	bge	.L296	@cond_branch
	mov	r1, r8
	cmp	r1, #0x2
	beq	.L298	@cond_branch
	add	r1, r0, #0
	mov	r4, #0x4
.L302:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L301	@cond_branch
	mov	r2, #0x1
	mov	r8, r2
.L301:
	add	r1, r1, #0x20
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L302	@cond_branch
.L298:
	mov	r0, r8
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 LeaderUpdateGroupMembership,.Lfe13-LeaderUpdateGroupMembership
	.align	2, 0
	.type	 UnionRoomLeaderField0CompactionAndCount,function
	.thumb_func
UnionRoomLeaderField0CompactionAndCount:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L331
	ldr	r4, [r0]
	mov	r3, #0x0
.L311:
	ldr	r0, [r4, #0x8]
	lsl	r2, r3, #0x5
	ldr	r1, [r4]
	add	r0, r0, r2
	add	r1, r1, r2
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldmia	r1!, {r2, r5, r7}
	stmia	r0!, {r2, r5, r7}
	ldmia	r1!, {r6, r7}
	stmia	r0!, {r6, r7}
	add	r3, r3, #0x1
	ldr	r0, [r4, #0x8]
	ldr	r1, [r4]
	cmp	r3, #0x4
	ble	.L311	@cond_branch
	mov	r5, #0x0
	mov	r8, r1
	mov	r9, r0
	mov	r3, #0x4
.L316:
	mov	r1, r9
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L315	@cond_branch
	lsl	r0, r5, #0x5
	add	r0, r0, r8
	ldmia	r1!, {r2, r6, r7}
	stmia	r0!, {r2, r6, r7}
	ldmia	r1!, {r2, r6, r7}
	stmia	r0!, {r2, r6, r7}
	ldmia	r1!, {r2, r6}
	stmia	r0!, {r2, r6}
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L315:
	mov	r7, #0x20
	add	r9, r9, r7
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L316	@cond_branch
	mov	sl, r5
	cmp	r5, #0x4
	bhi	.L320	@cond_branch
	ldr	r0, .L331+0x4
	mov	r9, r0
	mov	r1, #0x0
	mov	ip, r1
	mov	r2, #0x4
	neg	r2, r2
	mov	r8, r2
.L322:
	ldr	r1, [r4]
	lsl	r3, r5, #0x5
	add	r1, r1, r3
	mov	r0, r9
	ldmia	r0!, {r2, r6, r7}
	stmia	r1!, {r2, r6, r7}
	ldmia	r0!, {r2, r6, r7}
	stmia	r1!, {r2, r6, r7}
	ldr	r0, [r4]
	add	r0, r0, r3
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	ldr	r1, [r4]
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1a]
	mov	r0, r8
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r1, [r4]
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r4]
	add	r0, r0, r3
	mov	r6, ip
	strb	r6, [r0, #0x1b]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L322	@cond_branch
.L320:
	mov	r3, #0x0
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L326	@cond_branch
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0x40
	bne	.L326	@cond_branch
	mov	sl, r3
	b	.L325
.L332:
	.align	2, 0
.L331:
	.word	sUnionRoomMain
	.word	sUnionGnameUnamePair_Dummy
.L326:
	add	r3, r3, #0x1
	cmp	r3, #0x4
	bgt	.L325	@cond_branch
	lsl	r0, r3, #0x5
	add	r2, r1, r0
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L326	@cond_branch
	ldrb	r0, [r2, #0x1b]
	cmp	r0, #0x40
	bne	.L326	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
.L325:
	mov	r0, sl
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 UnionRoomLeaderField0CompactionAndCount,.Lfe14-UnionRoomLeaderField0CompactionAndCount
	.align	2, 0
	.globl	TryJoinLinkGroup
	.type	 TryJoinLinkGroup,function
	.thumb_func
TryJoinLinkGroup:
	push	{lr}
	ldr	r0, .L334
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L334+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L334+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L334+0xc
	str	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x8]
	strb	r0, [r1, #0x9]
	ldr	r1, .L334+0x10
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	Task_TryJoinLinkGroup
	.word	sUnionRoomMain
	.word	gTasks+0x8
	.word	sGroup
	.word	gSpecialVar_Result
.Lfe15:
	.size	 TryJoinLinkGroup,.Lfe15-TryJoinLinkGroup
	.align	2, 0
	.type	 Task_TryJoinLinkGroup,function
	.thumb_func
Task_TryJoinLinkGroup:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L424
	ldr	r6, [r0]
	ldrb	r0, [r6, #0x8]
	cmp	r0, #0x17
	bls	.LCB2322
	b	.L337	@long jump
.LCB2322:
	lsl	r0, r0, #0x2
	ldr	r1, .L424+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L425:
	.align	2, 0
.L424:
	.word	sUnionRoomMain
	.word	.L415
	.align	2, 0
	.align	2, 0
.L415:
	.word	.L338
	.word	.L339
	.word	.L341
	.word	.L342
	.word	.L337
	.word	.L355
	.word	.L357
	.word	.L388
	.word	.L390
	.word	.L399
	.word	.L405
	.word	.L408
	.word	.L405
	.word	.L406
	.word	.L405
	.word	.L409
	.word	.L337
	.word	.L337
	.word	.L405
	.word	.L411
	.word	.L405
	.word	.L414
	.word	.L337
	.word	.L413
.L338:
	ldr	r5, .L426
	ldr	r4, .L426+0x4
	ldrh	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	ldr	r1, .L426+0x8
	ldrh	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r6]
	mov	r0, #0x1
	strb	r0, [r6, #0x8]
	b	.L337
.L427:
	.align	2, 0
.L426:
	.word	sLinkGroupToURoomActivity
	.word	gSpecialVar_0x8004
	.word	sPlayerCurrActivity
.L339:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r2, .L428
	ldr	r1, .L428+0x4
	ldrh	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2397
	b	.L337	@long jump
.LCB2397:
	mov	r0, #0x2
	strb	r0, [r6, #0x8]
	b	.L337
.L429:
	.align	2, 0
.L428:
	.word	gTexts_UR_ChooseTrainer
	.word	gSpecialVar_0x8004
.L341:
	ldr	r0, [r6, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r0, [r6]
	mov	r1, #0x10
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r6, #0x4]
	ldr	r1, .L430
	ldrh	r1, [r1]
	bl	CreateTask_ListenForPartnersWithCompatibleSerialNos
	mov	r4, #0x0
	strb	r0, [r6, #0x11]
	ldr	r0, .L430+0x4
	bl	AddWindow
	strb	r0, [r6, #0xc]
	ldr	r0, .L430+0x8
	bl	AddWindow
	strb	r0, [r6, #0xb]
	ldr	r0, .L430+0xc
	bl	AddWindow
	strb	r0, [r6, #0xd]
	ldrb	r0, [r6, #0xc]
	mov	r1, #0x22
	bl	FillWindowPixelBuffer
	ldrb	r0, [r6, #0xc]
	ldr	r2, .L430+0x10
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0x4
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x8
	bl	UR_AddTextPrinterParameterized
	ldrb	r0, [r6, #0xc]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0xc]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r6, #0xb]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L430+0x14
	add	r2, r0, #0
	ldr	r1, .L430+0x18
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldrb	r1, [r6, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r6, #0xe]
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r6, #0xd]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0xd]
	bl	PrintPlayerNameAndIdOnWindow
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	strb	r4, [r6, #0xf]
	mov	r0, #0x3
	strb	r0, [r6, #0x8]
	b	.L337
.L431:
	.align	2, 0
.L430:
	.word	gSpecialVar_0x8004
	.word	sWindowTemplate_BButtonCancel
	.word	sWindowTemplate_MysteryGiftList
	.word	sWindowTemplate_MysteryGiftPlayerNameAndId
	.word	gText_UR_ChooseJoinCancel
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_UnionRoomGroups
.L342:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L345	@cond_branch
	cmp	r4, #0x1
	beq	.LCB2524
	b	.L417	@long jump
.LCB2524:
	mov	r0, #0x2
	bl	PlaySE
	b	.L417
.L345:
	ldrb	r0, [r6, #0xe]
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	ldr	r0, .L432
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L346	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L346	@cond_branch
	ldr	r0, [r6]
	lsl	r1, r4, #0x5
	add	r0, r0, r1
	ldrb	r1, [r0, #0xa]
	ldrb	r0, [r0, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L347	@cond_branch
	lsr	r0, r1, #0x7
	cmp	r0, #0
	bne	.L347	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	IsTryingToTradeWithHoennTooSoon
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L348	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	AskToJoinRfuGroup
	mov	r0, #0x5
	b	.L418
.L433:
	.align	2, 0
.L432:
	.word	gMain
.L348:
	ldr	r0, .L434
	ldr	r2, .L434+0x4
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x12
.L418:
	strb	r0, [r6, #0x8]
	mov	r0, #0x67
	bl	PlaySE
	b	.L337
.L435:
	.align	2, 0
.L434:
	.word	gStringVar4
	.word	gTexts_UR_CantTransmitToTrainer
.L347:
	mov	r0, #0x7
	bl	PlaySE
	b	.L337
.L346:
	ldr	r0, .L436
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB2636
	b	.L337	@long jump
.LCB2636:
	mov	r0, #0xa
	strb	r0, [r6, #0x8]
	b	.L337
.L437:
	.align	2, 0
.L436:
	.word	gMain
.L355:
	ldr	r4, .L438
	ldr	r0, .L438+0x4
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	GetYouAskedToJoinGroupPleaseWaitMessage
	add	r0, r6, #0
	add	r0, r0, #0x9
	add	r1, r4, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2665
	b	.L337	@long jump
.LCB2665:
	ldr	r4, .L438+0x8
	ldrb	r0, [r6, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r6]
	ldrb	r0, [r6, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	b	.L419
.L439:
	.align	2, 0
.L438:
	.word	gStringVar4
	.word	sPlayerCurrActivity
	.word	gStringVar1
.L357:
	ldr	r0, .L440
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L358	@cond_branch
	ldr	r4, .L440+0x4
	ldr	r1, [r6]
	ldrb	r0, [r6, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r4]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0x15
	bhi	.L358	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L440+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L441:
	.align	2, 0
.L440:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
	.word	.L372
	.align	2, 0
	.align	2, 0
.L372:
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L358
	.word	.L358
	.word	.L358
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L358
	.word	.L371
	.word	.L371
	.word	.L358
	.word	.L358
	.word	.L358
	.word	.L358
	.word	.L358
	.word	.L358
	.word	.L371
	.word	.L371
.L371:
	mov	r0, #0x14
	strb	r0, [r6, #0x8]
.L358:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bhi	.L374	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L442
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L443:
	.align	2, 0
.L442:
	.word	.L385
	.align	2, 0
	.align	2, 0
.L385:
	.word	.L375
	.word	.L378
	.word	.L374
	.word	.L374
	.word	.L379
	.word	.L378
	.word	.L381
	.word	.L374
	.word	.L378
.L375:
	mov	r0, #0xc
	strb	r0, [r6, #0x8]
	b	.L374
.L378:
	mov	r0, #0xe
	strb	r0, [r6, #0x8]
	b	.L374
.L379:
	ldr	r4, .L444
	ldr	r5, .L444+0x4
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	GetGroupLeaderSentAnOKMessage
	add	r0, r6, #0
	add	r0, r0, #0x9
	add	r1, r4, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L374	@cond_branch
	mov	r0, #0x7
	mov	r1, #0x0
	bl	RfuSetStatus
	ldr	r0, .L444+0x8
	ldr	r2, .L444+0xc
	ldrb	r1, [r5]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r1, .L444+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	b	.L374
.L445:
	.align	2, 0
.L444:
	.word	gStringVar4
	.word	sPlayerCurrActivity
	.word	gStringVar1
	.word	sUnionRoomActivityStringPtrs
	.word	gText_UR_AwaitingOtherMembers
.L381:
	ldrb	r0, [r6, #0x15]
	cmp	r0, #0xf0
	bls	.L382	@cond_branch
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L446
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L374	@cond_branch
	mov	r0, #0xc
	mov	r1, #0x0
	bl	RfuSetStatus
	mov	r0, #0x0
	b	.L420
.L447:
	.align	2, 0
.L446:
	.word	gStringVar4
.L382:
	add	r0, r0, #0x1
.L420:
	strb	r0, [r6, #0x15]
.L374:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB2873
	b	.L337	@long jump
.LCB2873:
	ldr	r0, .L448
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB2884
	b	.L337	@long jump
.LCB2884:
	mov	r0, #0x7
	strb	r0, [r6, #0x8]
	b	.L337
.L449:
	.align	2, 0
.L448:
	.word	gMain
.L388:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L450
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2906
	b	.L337	@long jump
.LCB2906:
	mov	r0, #0x8
	strb	r0, [r6, #0x8]
	b	.L337
.L451:
	.align	2, 0
.L450:
	.word	gText_UR_QuitBeingMember
.L390:
	add	r4, r6, #0
	add	r4, r4, #0x9
	bl	RfuGetStatus
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L394	@cond_branch
	cmp	r1, r0
	bgt	.L398	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	beq	.L395	@cond_branch
	b	.L337
.L398:
	cmp	r1, #0
	beq	.L392	@cond_branch
	cmp	r1, #0x1
	beq	.L394	@cond_branch
	b	.L337
.L392:
	bl	SendLeaveGroupNotice
	mov	r0, #0x9
	b	.L421
.L394:
	mov	r0, #0x5
	b	.L421
.L395:
	mov	r0, #0x6
.L421:
	strb	r0, [r6, #0x8]
.L417:
	ldrb	r0, [r6, #0xe]
	bl	RedrawListMenu
	b	.L337
.L399:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2978
	b	.L337	@long jump
.LCB2978:
.L419:
	mov	r0, #0x6
	strb	r0, [r6, #0x8]
	b	.L337
.L405:
	ldrb	r0, [r6, #0xd]
	bl	ClearWindowTilemap
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r6, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r6, #0xc]
	bl	ClearWindowTilemap
	ldrb	r0, [r6, #0xb]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r6, #0xd]
	bl	RemoveWindow
	ldrb	r0, [r6, #0xb]
	bl	RemoveWindow
	ldrb	r0, [r6, #0xc]
	bl	RemoveWindow
	ldrb	r0, [r6, #0x11]
	bl	DestroyTask
	ldr	r0, [r6]
	bl	Free
	ldr	r0, [r6, #0x4]
	bl	Free
	ldrb	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r6, #0x8]
	b	.L337
.L406:
	bl	DestroyWirelessStatusIndicatorSprite
	add	r5, r6, #0
	add	r5, r5, #0x9
	ldr	r4, .L452
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L337	@cond_branch
	ldr	r0, .L452+0x4
	mov	r1, #0x6
	b	.L422
.L453:
	.align	2, 0
.L452:
	.word	gTexts_UR_PlayerDisconnected
	.word	gSpecialVar_Result
.L408:
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L454
	mov	r1, #0x5
	b	.L422
.L455:
	.align	2, 0
.L454:
	.word	gSpecialVar_Result
.L409:
	bl	DestroyWirelessStatusIndicatorSprite
	add	r5, r6, #0
	add	r5, r5, #0x9
	ldr	r4, .L456
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	b	.L423
.L457:
	.align	2, 0
.L456:
	.word	gTexts_UR_PlayerDisconnected
.L411:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L458
.L423:
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L337	@cond_branch
	ldr	r0, .L458+0x4
	mov	r1, #0x8
.L422:
	strh	r1, [r0]
	mov	r0, #0x17
	strb	r0, [r6, #0x8]
	b	.L337
.L459:
	.align	2, 0
.L458:
	.word	gStringVar4
	.word	gSpecialVar_Result
.L413:
	add	r0, r4, #0
	bl	DestroyTask
	bl	JoinGroup_BlankBg0AndEnableScriptContexts
	bl	LinkRfu_Shutdown
	b	.L337
.L414:
	bl	CreateTask_RunScriptAndFadeToActivity
	add	r0, r4, #0
	bl	DestroyTask
.L337:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 Task_TryJoinLinkGroup,.Lfe16-Task_TryJoinLinkGroup
	.align	2, 0
	.type	 IsTryingToTradeWithHoennTooSoon,function
	.thumb_func
IsTryingToTradeWithHoennTooSoon:
	push	{lr}
	lsl	r1, r1, #0x5
	ldr	r0, [r0]
	add	r3, r0, r1
	ldr	r0, .L468
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L467	@cond_branch
	ldrb	r0, [r3, #0x1]
	mov	r1, #0x3c
	and	r1, r1, r0
	cmp	r1, #0x10
	beq	.L467	@cond_branch
	cmp	r1, #0x14
	beq	.L467	@cond_branch
	ldr	r0, .L468+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x9]
	mov	r2, #0x80
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L462	@cond_branch
	mov	r0, #0x1
	b	.L466
.L469:
	.align	2, 0
.L468:
	.word	sPlayerCurrActivity
	.word	gSaveBlock2Ptr
.L462:
	ldrb	r1, [r3]
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L465	@cond_branch
.L467:
	mov	r0, #0x0
	b	.L466
.L465:
	mov	r0, #0x2
.L466:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 IsTryingToTradeWithHoennTooSoon,.Lfe17-IsTryingToTradeWithHoennTooSoon
	.align	2, 0
	.type	 AskToJoinRfuGroup,function
	.thumb_func
AskToJoinRfuGroup:
	push	{r4, r5, lr}
	add	r4, r0, #0
	strb	r1, [r4, #0xf]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldrb	r0, [r4, #0xe]
	bl	RedrawListMenu
	ldr	r5, .L471
	ldrb	r0, [r4, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r4]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r5, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r4]
	ldrb	r0, [r4, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r5, #0
	bl	ConvertInternationalString
	ldr	r1, .L471+0x4
	ldr	r0, .L471+0x8
	ldrh	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	ldrb	r1, [r4, #0xf]
	lsl	r1, r1, #0x5
	ldr	r0, [r4]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	CreateTask_RfuReconnectWithParent
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L472:
	.align	2, 0
.L471:
	.word	gStringVar1
	.word	sLinkGroupToURoomActivity
	.word	gSpecialVar_0x8004
.Lfe18:
	.size	 AskToJoinRfuGroup,.Lfe18-AskToJoinRfuGroup
	.align	2, 0
	.globl	CreateTask_ListenToWireless
	.type	 CreateTask_ListenToWireless,function
	.thumb_func
CreateTask_ListenToWireless:
	push	{lr}
	ldr	r0, .L474
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L474+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L474+0x8
	add	r1, r1, r2
	str	r1, [r3]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	ldr	r2, .L474+0xc
	str	r1, [r2]
	pop	{r1}
	bx	r1
.L475:
	.align	2, 0
.L474:
	.word	Task_ListenToWireless
	.word	sUnionRoomMain
	.word	gTasks+0x8
	.word	sGroup
.Lfe19:
	.size	 CreateTask_ListenToWireless,.Lfe19-CreateTask_ListenToWireless
	.align	2, 0
	.type	 Task_ListenToWireless,function
	.thumb_func
Task_ListenToWireless:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L487
	ldr	r4, [r0]
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0xb
	bhi	.L477	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L487+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L488:
	.align	2, 0
.L487:
	.word	sUnionRoomMain
	.word	.L485
	.align	2, 0
	.align	2, 0
.L485:
	.word	.L478
	.word	.L477
	.word	.L479
	.word	.L480
	.word	.L477
	.word	.L477
	.word	.L477
	.word	.L477
	.word	.L477
	.word	.L477
	.word	.L483
	.word	.L484
.L478:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x1
	bl	sub_80FB128
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r4, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0x2
	strb	r0, [r4, #0x8]
	b	.L477
.L479:
	ldr	r0, [r4, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r0, [r4]
	mov	r1, #0x10
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r4, #0x4]
	mov	r1, #0xff
	bl	CreateTask_ListenForPartnersWithCompatibleSerialNos
	mov	r1, #0x0
	strb	r0, [r4, #0x11]
	strb	r1, [r4, #0xf]
	mov	r0, #0x3
	strb	r0, [r4, #0x8]
	b	.L477
.L480:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L481	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L481:
	ldr	r0, .L489
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x26
	ldrsh	r0, [r1, r2]
	cmp	r0, #0xff
	bne	.L477	@cond_branch
	mov	r0, #0xa
	strb	r0, [r4, #0x8]
	b	.L477
.L490:
	.align	2, 0
.L489:
	.word	gTasks
.L483:
	ldrb	r0, [r4, #0x11]
	bl	DestroyTask
	ldr	r0, [r4]
	bl	Free
	ldr	r0, [r4, #0x4]
	bl	Free
	bl	LinkRfu_Shutdown
	ldrb	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x8]
	b	.L477
.L484:
	bl	LinkRfu_Shutdown
	add	r0, r5, #0
	bl	DestroyTask
.L477:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 Task_ListenToWireless,.Lfe20-Task_ListenToWireless
	.align	2, 0
	.type	 IsPartnerActivityAcceptable,function
	.thumb_func
IsPartnerActivityAcceptable:
	push	{lr}
	add	r2, r0, #0
	cmp	r1, #0xff
	bne	.L492	@cond_branch
.L501:
	mov	r0, #0x1
	b	.L499
.L492:
	cmp	r1, #0xd
	bhi	.L493	@cond_branch
	ldr	r0, .L503
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L502
.L504:
	.align	2, 0
.L503:
	.word	sAcceptedActivityIds
.L496:
	ldrb	r0, [r1]
	cmp	r0, r2
	beq	.L501	@cond_branch
	add	r1, r1, #0x1
.L502:
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L496	@cond_branch
.L493:
	mov	r0, #0x0
.L499:
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 IsPartnerActivityAcceptable,.Lfe21-IsPartnerActivityAcceptable
	.align	2, 0
	.type	 URoomGroupListGetTextColor,function
	.thumb_func
URoomGroupListGetTextColor:
	push	{lr}
	ldr	r0, [r0]
	lsl	r1, r1, #0x5
	add	r1, r0, r1
	ldrb	r2, [r1, #0x1a]
	lsl	r0, r2, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L506	@cond_branch
	ldrb	r0, [r1, #0xa]
	lsr	r0, r0, #0x7
	cmp	r0, #0
	beq	.L507	@cond_branch
	mov	r0, #0x3
	b	.L512
.L507:
	lsl	r0, r2, #0x1d
	cmp	r0, #0
	bge	.L509	@cond_branch
	mov	r0, #0x1
	b	.L512
.L509:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L506	@cond_branch
	mov	r0, #0x2
	b	.L512
.L506:
	mov	r0, #0x0
.L512:
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 URoomGroupListGetTextColor,.Lfe22-URoomGroupListGetTextColor
	.align	2, 0
	.type	 ListMenuItemPrintFunc_UnionRoomGroups,function
	.thumb_func
ListMenuItemPrintFunc_UnionRoomGroups:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L514
	ldr	r0, [r0]
	mov	r8, r0
	bl	URoomGroupListGetTextColor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x5
	mov	r2, r8
	ldr	r3, [r2]
	add	r3, r3, r1
	str	r0, [sp]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x8
	add	r2, r6, #0
	bl	PrintUnionRoomGroupOnWindow
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L515:
	.align	2, 0
.L514:
	.word	sUnionRoomMain
.Lfe23:
	.size	 ListMenuItemPrintFunc_UnionRoomGroups,.Lfe23-ListMenuItemPrintFunc_UnionRoomGroups
	.align	2, 0
	.type	 GetNewLeaderCandidate,function
	.thumb_func
GetNewLeaderCandidate:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	ldr	r0, .L540
	ldr	r6, [r0]
	mov	r7, #0x0
	mov	r3, #0x0
.L520:
	ldr	r0, [r6]
	lsl	r5, r3, #0x5
	add	r2, r0, r5
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	mov	r8, r5
	cmp	r0, #0
	beq	.L519	@cond_branch
	ldr	r1, [r6, #0x4]
	add	r0, r2, #0
	str	r3, [sp]
	bl	Findx20Inx1CArray
	add	r4, r0, #0
	ldr	r3, [sp]
	cmp	r4, #0xff
	beq	.L522	@cond_branch
	ldr	r0, [r6]
	add	r2, r0, r5
	ldrb	r1, [r2, #0x1a]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L523	@cond_branch
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r4, r0, #0x2
	ldr	r1, [r6, #0x4]
	add	r1, r1, r4
	add	r0, r2, #0
	bl	AreUnionRoomPlayerGnamesDifferent
	ldr	r3, [sp]
	cmp	r0, #0
	beq	.L524	@cond_branch
	ldr	r1, [r6]
	ldr	r0, [r6, #0x4]
	add	r1, r1, r5
	add	r0, r0, r4
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	b	.L539
.L541:
	.align	2, 0
.L540:
	.word	sUnionRoomMain
.L524:
	ldr	r0, [r6]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L528	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1b]
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0
	bne	.L528	@cond_branch
	mov	r7, #0x2
	b	.L528
.L523:
	mov	r4, #0x4
	neg	r4, r4
	add	r0, r4, #0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
.L539:
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x40
	strb	r1, [r0, #0x1b]
	mov	r7, #0x1
.L528:
	ldr	r0, [r6]
	add	r0, r0, r8
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	b	.L519
.L522:
	ldr	r0, [r6]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x2
	beq	.L519	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r6]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L542
	cmp	r1, r0
	bls	.L519	@cond_branch
	ldrb	r0, [r2, #0x1a]
	mov	r7, #0x4
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	mov	r7, #0x2
.L519:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xf
	bls	.L520	@cond_branch
	mov	r5, #0x0
	mov	r4, #0x3
.L536:
	ldr	r0, [r6]
	ldr	r1, [r6, #0x4]
	add	r1, r1, r5
	mov	r2, #0x10
	bl	Appendx1Ctox20
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L535	@cond_branch
	mov	r7, #0x1
.L535:
	add	r5, r5, #0x1c
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L536	@cond_branch
	add	r0, r7, #0
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L543:
	.align	2, 0
.L542:
	.word	0x12b
.Lfe24:
	.size	 GetNewLeaderCandidate,.Lfe24-GetNewLeaderCandidate
	.align	2, 0
	.type	 Task_CallCB2ReturnFromLinkTrade,function
	.thumb_func
Task_CallCB2ReturnFromLinkTrade:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	CB2_ReturnFromLinkTrade
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 Task_CallCB2ReturnFromLinkTrade,.Lfe25-Task_CallCB2ReturnFromLinkTrade
	.align	2, 0
	.globl	UnionRoom_CreateTask_CallCB2ReturnFromLinkTrade
	.type	 UnionRoom_CreateTask_CallCB2ReturnFromLinkTrade,function
	.thumb_func
UnionRoom_CreateTask_CallCB2ReturnFromLinkTrade:
	push	{lr}
	ldr	r0, .L546
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L547:
	.align	2, 0
.L546:
	.word	Task_CallCB2ReturnFromLinkTrade
.Lfe26:
	.size	 UnionRoom_CreateTask_CallCB2ReturnFromLinkTrade,.Lfe26-UnionRoom_CreateTask_CallCB2ReturnFromLinkTrade
	.align	2, 0
	.type	 Task_StartUnionRoomTrade,function
	.thumb_func
Task_StartUnionRoomTrade:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L561
	mov	r8, r0
	bl	GetMultiplayerId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	GetPartyPositionOfRegisteredMon
	add	r7, r0, #0
	ldr	r1, .L561+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L551	@cond_branch
	cmp	r0, #0x1
	bgt	.L559	@cond_branch
	cmp	r0, #0
	beq	.L550	@cond_branch
	b	.L549
.L562:
	.align	2, 0
.L561:
	.word	sUnionRoomTrade
	.word	gTasks
.L559:
	cmp	r0, #0x2
	beq	.L553	@cond_branch
	cmp	r0, #0x3
	beq	.L555	@cond_branch
	b	.L549
.L550:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L563
	add	r1, r1, r0
	mov	r0, #0x0
	mov	r2, #0x64
	bl	SendBlock
	b	.L549
.L564:
	.align	2, 0
.L563:
	.word	gPlayerParty
.L551:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L549	@cond_branch
	bl	GetMultiplayerId
	add	r1, r0, #0
	ldr	r0, .L565
	mov	r2, #0x1
	eor	r1, r1, r2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x10
	ldr	r2, .L565+0x4
	add	r1, r1, r2
	mov	r2, #0x64
	bl	memcpy
	mov	r0, #0x32
	bl	IncrementGameStat
	bl	ResetBlockReceivedFlags
	b	.L560
.L566:
	.align	2, 0
.L565:
	.word	gEnemyParty
	.word	gBlockRecvBuffer
.L553:
	ldr	r4, .L567
	ldr	r0, .L567+0x4
	ldr	r1, [r0]
	ldr	r0, .L567+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0xdc
	bl	memcpy
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0xdc
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L549	@cond_branch
.L560:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L549
.L568:
	.align	2, 0
.L567:
	.word	gBlockSendBuffer
	.word	gSaveBlock1Ptr
	.word	0x2cd0
.L555:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L549	@cond_branch
	ldr	r4, .L569
	bl	GetMultiplayerId
	add	r1, r0, #0
	mov	r0, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x10
	ldr	r0, .L569+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0xd8
	bl	memcpy
	bl	ResetBlockReceivedFlags
	ldr	r1, .L569+0x8
	strb	r7, [r1]
	mov	r0, #0x6
	strb	r0, [r1, #0x1]
	ldr	r1, .L569+0xc
	ldr	r0, .L569+0x10
	str	r0, [r1, #0x8]
	ldr	r0, .L569+0x14
	bl	SetMainCallback2
	mov	r0, r8
	bl	ResetUnionRoomTrade
	add	r0, r6, #0
	bl	DestroyTask
.L549:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L570:
	.align	2, 0
.L569:
	.word	gLinkPartnerMail
	.word	gBlockRecvBuffer
	.word	gSelectedTradeMonPositions
	.word	gMain
	.word	CB2_ReturnToField
	.word	CB2_InitTradeAnim_LinkTrade
.Lfe27:
	.size	 Task_StartUnionRoomTrade,.Lfe27-Task_StartUnionRoomTrade
	.align	2, 0
	.type	 Task_ExchangeCards,function
	.thumb_func
Task_ExchangeCards:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r1, .L586
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L573	@cond_branch
	cmp	r0, #0x1
	beq	.L575	@cond_branch
	b	.L572
.L587:
	.align	2, 0
.L586:
	.word	gTasks
.L573:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L574	@cond_branch
	mov	r0, #0x2
	bl	SendBlockRequest
.L574:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L572
.L575:
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L572	@cond_branch
	mov	r4, #0x0
	ldr	r0, .L588
	add	r7, r0, #0
	add	r7, r7, #0x38
	ldr	r6, .L588+0x4
	add	r5, r0, #0
	b	.L577
.L589:
	.align	2, 0
.L588:
	.word	gTrainerCards
	.word	gLinkPlayers
.L580:
	lsl	r0, r4, #0x8
	ldr	r1, .L590
	add	r1, r0, r1
	add	r0, r5, #0
	mov	r2, #0x60
	bl	memcpy
	ldrh	r0, [r6]
	strb	r0, [r7]
	add	r7, r7, #0x60
	add	r6, r6, #0x1c
	add	r5, r5, #0x60
	add	r4, r4, #0x1
.L577:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L580	@cond_branch
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L582	@cond_branch
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r1, .L590
	add	r1, r0, r1
	add	r0, r1, #0
	add	r0, r0, #0x60
	ldrh	r0, [r0]
	bl	MEventHandleReceivedWonderCard
	b	.L583
.L591:
	.align	2, 0
.L590:
	.word	gBlockRecvBuffer
.L582:
	bl	ResetReceivedWonderCardFlag
.L583:
	bl	ResetBlockReceivedFlags
	mov	r0, r8
	bl	DestroyTask
.L572:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 Task_ExchangeCards,.Lfe28-Task_ExchangeCards
	.align	2, 0
	.type	 CB2_ShowCard,function
	.thumb_func
CB2_ShowCard:
	push	{r4, lr}
	ldr	r0, .L599
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L594	@cond_branch
	cmp	r0, #0x1
	beq	.L595	@cond_branch
	b	.L593
.L600:
	.align	2, 0
.L599:
	.word	gMain
.L594:
	ldr	r0, .L601
	mov	r1, #0x5
	bl	CreateTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L593
.L602:
	.align	2, 0
.L601:
	.word	Task_ExchangeCards
.L595:
	ldr	r0, .L603
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L593	@cond_branch
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L603+0x4
	bl	ShowTrainerCardInLink
.L593:
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r4}
	pop	{r0}
	bx	r0
.L604:
	.align	2, 0
.L603:
	.word	Task_ExchangeCards
	.word	CB2_ReturnToField
.Lfe29:
	.size	 CB2_ShowCard,.Lfe29-CB2_ShowCard
	.align	2, 0
	.globl	StartUnionRoomBattle
	.type	 StartUnionRoomBattle,function
	.thumb_func
StartUnionRoomBattle:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r5, .L606
	ldr	r0, .L606+0x4
	str	r0, [r5, #0x14]
	bl	GetMultiplayerId
	add	r4, r0, #0
	bl	GetMultiplayerId
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x18]
	bl	GetMultiplayerId
	add	r4, r0, #0
	bl	GetMultiplayerId
	mov	r2, #0x1
	eor	r4, r4, r2
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	eor	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x18]
	ldr	r1, .L606+0x8
	ldr	r0, .L606+0xc
	str	r0, [r1, #0x8]
	ldr	r0, .L606+0x10
	str	r6, [r0]
	bl	PlayBattleBGM
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L607:
	.align	2, 0
.L606:
	.word	gLinkPlayers
	.word	0x2211
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
	.word	gBattleTypeFlags
.Lfe30:
	.size	 StartUnionRoomBattle,.Lfe30-StartUnionRoomBattle
	.align	2, 0
	.type	 SetCableClubStateAndWarpCurrentMap,function
	.thumb_func
SetCableClubStateAndWarpCurrentMap:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r3, r0, #0
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L609
	add	r1, r3, #0
	bl	VarSet
	ldr	r6, .L609+0x4
	ldr	r1, [r6]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r2, #0x1
	neg	r2, r2
	mov	r8, r2
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	str	r5, [sp]
	add	r3, r4, #0
	bl	SetWarpDestination
	ldr	r0, [r6]
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	mov	r2, #0x5
	ldrsb	r2, [r0, r2]
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x0
	mov	r3, r8
	bl	SetDynamicWarpWithCoords
	bl	WarpIntoMap
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L610:
	.align	2, 0
.L609:
	.word	0x406f
	.word	gSaveBlock1Ptr
.Lfe31:
	.size	 SetCableClubStateAndWarpCurrentMap,.Lfe31-SetCableClubStateAndWarpCurrentMap
	.align	2, 0
	.type	 SetCableClubStateAndWarpToNewMap,function
	.thumb_func
SetCableClubStateAndWarpToNewMap:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r8, r2
	add	r6, r3, #0
	ldr	r1, [sp, #0x18]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L612
	strh	r1, [r0]
	ldr	r0, .L612+0x4
	bl	VarSet
	bl	GetLinkPlayerCount
	ldr	r1, .L612+0x8
	strb	r0, [r1]
	bl	GetMultiplayerId
	ldr	r1, .L612+0xc
	strb	r0, [r1]
	bl	SetCableClubWarp
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, r8
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r8, r0
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	str	r6, [sp]
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r3, r8
	bl	SetWarpDestination
	bl	WarpIntoMap
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L613:
	.align	2, 0
.L612:
	.word	gSpecialVar_0x8004
	.word	0x406f
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
.Lfe32:
	.size	 SetCableClubStateAndWarpToNewMap,.Lfe32-SetCableClubStateAndWarpToNewMap
	.align	2, 0
	.type	 CB2_TransitionToCableClub,function
	.thumb_func
CB2_TransitionToCableClub:
	push	{r4, lr}
	ldr	r0, .L621
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L616	@cond_branch
	cmp	r0, #0x1
	beq	.L617	@cond_branch
	b	.L615
.L622:
	.align	2, 0
.L621:
	.word	gMain
.L616:
	ldr	r0, .L623
	mov	r1, #0x5
	bl	CreateTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L615
.L624:
	.align	2, 0
.L623:
	.word	Task_ExchangeCards
.L617:
	ldr	r0, .L625
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L615	@cond_branch
	ldr	r0, .L625+0x4
	bl	SetMainCallback2
.L615:
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r4}
	pop	{r0}
	bx	r0
.L626:
	.align	2, 0
.L625:
	.word	Task_ExchangeCards
	.word	CB2_ReturnToFieldCableClub
.Lfe33:
	.size	 CB2_TransitionToCableClub,.Lfe33-CB2_TransitionToCableClub
	.align	2, 0
	.type	 CreateTrainerCardInBuffer,function
	.thumb_func
CreateTrainerCardInBuffer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	bl	TrainerCard_GenerateCardForLinkPlayer
	cmp	r5, #0
	beq	.L628	@cond_branch
	bl	GetWonderCardFlagId
	add	r1, r4, #0
	add	r1, r1, #0x60
	strh	r0, [r1]
	b	.L629
.L628:
	add	r0, r4, #0
	add	r0, r0, #0x60
	strh	r5, [r0]
.L629:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 CreateTrainerCardInBuffer,.Lfe34-CreateTrainerCardInBuffer
	.align	2, 0
	.type	 Task_StartActivity,function
	.thumb_func
Task_StartActivity:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	ResetReceivedWonderCardFlag
	ldr	r0, .L664
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xd
	bhi	.L631	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L664+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L665:
	.align	2, 0
.L664:
	.word	sPlayerCurrActivity
	.word	.L641
	.align	2, 0
	.align	2, 0
.L641:
	.word	.L640
	.word	.L640
	.word	.L640
	.word	.L640
	.word	.L631
	.word	.L631
	.word	.L631
	.word	.L631
	.word	.L640
	.word	.L640
	.word	.L640
	.word	.L631
	.word	.L640
	.word	.L640
.L640:
	bl	RecordMixTrainerNames
.L631:
	ldr	r0, .L666
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x50
	bls	.LCB4629
	b	.L643	@long jump
.LCB4629:
	lsl	r0, r0, #0x2
	ldr	r1, .L666+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L667:
	.align	2, 0
.L666:
	.word	sPlayerCurrActivity
	.word	.L660
	.align	2, 0
	.align	2, 0
.L660:
	.word	.L646
	.word	.L647
	.word	.L648
	.word	.L649
	.word	.L652
	.word	.L643
	.word	.L643
	.word	.L656
	.word	.L657
	.word	.L658
	.word	.L659
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L645
	.word	.L643
	.word	.L643
	.word	.L650
	.word	.L652
	.word	.L643
	.word	.L643
	.word	.L656
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L643
	.word	.L645
.L645:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L668
	ldr	r0, .L668+0x4
	str	r0, [r1, #0x8]
	mov	r0, #0x2
	bl	InitChooseMonsForBattle
	b	.L643
.L669:
	.align	2, 0
.L668:
	.word	gMain
	.word	CB2_UnionRoomBattle
.L646:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L670
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x6
	b	.L662
.L671:
	.align	2, 0
.L670:
	.word	gBlockSendBuffer
.L647:
	bl	CleanupOverworldWindowsAndTilemaps
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r0, .L672
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x6
	b	.L662
.L673:
	.align	2, 0
.L672:
	.word	gBlockSendBuffer
.L648:
	bl	CleanupOverworldWindowsAndTilemaps
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r0, .L674
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x3
	b	.L663
.L675:
	.align	2, 0
.L674:
	.word	gBlockSendBuffer
.L649:
	ldr	r0, .L676
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	bl	CleanupOverworldWindowsAndTilemaps
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x1
.L663:
	mov	r2, #0x5
.L662:
	mov	r3, #0x8
	bl	SetCableClubStateAndWarpToNewMap
	ldr	r0, .L676+0x4
	bl	SetMainCallback2
	b	.L643
.L677:
	.align	2, 0
.L676:
	.word	gBlockSendBuffer
	.word	CB2_TransitionToCableClub
.L650:
	ldr	r0, .L678
	mov	r1, #0x0
	bl	CreateTask
	b	.L643
.L679:
	.align	2, 0
.L678:
	.word	Task_StartUnionRoomTrade
.L652:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L653	@cond_branch
	bl	LinkRfu_CreateConnectionAsParent
	b	.L654
.L653:
	bl	LinkRfu_StopManagerBeforeEnteringChat
	mov	r0, #0x45
	mov	r1, #0x0
	mov	r2, #0x1
	bl	SetHostRFUtgtGname
.L654:
	bl	EnterUnionRoomChat
	b	.L643
.L656:
	ldr	r0, .L680
	mov	r1, #0x0
	bl	CreateTrainerCardInBuffer
	ldr	r0, .L680+0x4
	bl	SetMainCallback2
	b	.L643
.L681:
	.align	2, 0
.L680:
	.word	gBlockSendBuffer
	.word	CB2_ShowCard
.L657:
	mov	r0, #0x8
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetCableClubStateAndWarpCurrentMap
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L682
	bl	StartPokemonJump
	b	.L643
.L683:
	.align	2, 0
.L682:
	.word	CB2_LoadMap
.L658:
	mov	r0, #0x7
	mov	r1, #0x9
	mov	r2, #0x1
	bl	SetCableClubStateAndWarpCurrentMap
	ldr	r0, .L684
	bl	StartBerryCrush
	b	.L643
.L685:
	.align	2, 0
.L684:
	.word	CB2_LoadMap
.L659:
	mov	r0, #0x8
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetCableClubStateAndWarpCurrentMap
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L686
	bl	StartDodrioBerryPicking
.L643:
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L686+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	bl	UnlockPlayerFieldControls
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L687:
	.align	2, 0
.L686:
	.word	CB2_LoadMap
	.word	gSpecialVar_Result
.Lfe35:
	.size	 Task_StartActivity,.Lfe35-Task_StartActivity
	.align	2, 0
	.type	 Task_RunScriptAndFadeToActivity,function
	.thumb_func
Task_RunScriptAndFadeToActivity:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L701
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L691	@cond_branch
	cmp	r0, #0x1
	bgt	.L699	@cond_branch
	cmp	r0, #0
	beq	.L690	@cond_branch
	b	.L689
.L702:
	.align	2, 0
.L701:
	.word	gTasks+0x8
.L699:
	cmp	r0, #0x2
	beq	.L693	@cond_branch
	cmp	r0, #0x3
	beq	.L695	@cond_branch
	b	.L689
.L690:
	ldr	r1, .L703
	mov	r0, #0x1
	strh	r0, [r1]
	bl	ScriptContext_Enable
	b	.L700
.L704:
	.align	2, 0
.L703:
	.word	gSpecialVar_Result
.L691:
	bl	ScriptContext_IsEnabled
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L689	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	b	.L700
.L693:
	ldr	r0, .L705
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L689	@cond_branch
	bl	SetLinkStandbyCallback
.L700:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L689
.L706:
	.align	2, 0
.L705:
	.word	gPaletteFade
.L695:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L689	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	bl	CreateTask_StartActivity
.L689:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 Task_RunScriptAndFadeToActivity,.Lfe36-Task_RunScriptAndFadeToActivity
	.align	2, 0
	.type	 CreateTask_RunScriptAndFadeToActivity,function
	.thumb_func
CreateTask_RunScriptAndFadeToActivity:
	push	{lr}
	ldr	r0, .L708
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L709:
	.align	2, 0
.L708:
	.word	Task_RunScriptAndFadeToActivity
.Lfe37:
	.size	 CreateTask_RunScriptAndFadeToActivity,.Lfe37-CreateTask_RunScriptAndFadeToActivity
	.align	2, 0
	.type	 CreateTask_StartActivity,function
	.thumb_func
CreateTask_StartActivity:
	push	{lr}
	ldr	r0, .L711
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L711+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L712:
	.align	2, 0
.L711:
	.word	Task_StartActivity
	.word	gTasks
.Lfe38:
	.size	 CreateTask_StartActivity,.Lfe38-CreateTask_StartActivity
	.align	2, 0
	.globl	MEvent_CreateTask_Leader
	.type	 MEvent_CreateTask_Leader,function
	.thumb_func
MEvent_CreateTask_Leader:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L714
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L714+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L714+0x8
	add	r1, r1, r0
	str	r1, [r2]
	mov	r2, #0x0
	strb	r2, [r1, #0xc]
	strb	r2, [r1, #0xd]
	strb	r4, [r1, #0x18]
	ldr	r0, .L714+0xc
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L715:
	.align	2, 0
.L714:
	.word	Task_MEvent_Leader
	.word	sUnionRoomMain
	.word	gTasks+0x8
	.word	gSpecialVar_Result
.Lfe39:
	.size	 MEvent_CreateTask_Leader,.Lfe39-MEvent_CreateTask_Leader
	.align	2, 0
	.type	 Task_MEvent_Leader,function
	.thumb_func
Task_MEvent_Leader:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L765
	ldr	r5, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x11
	bls	.LCB5092
	b	.L717	@long jump
.LCB5092:
	lsl	r0, r0, #0x2
	ldr	r1, .L765+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L766:
	.align	2, 0
.L765:
	.word	sUnionRoomMain
	.word	.L760
	.align	2, 0
	.align	2, 0
.L760:
	.word	.L718
	.word	.L719
	.word	.L720
	.word	.L721
	.word	.L722
	.word	.L726
	.word	.L724
	.word	.L727
	.word	.L735
	.word	.L741
	.word	.L742
	.word	.L744
	.word	.L746
	.word	.L749
	.word	.L750
	.word	.L752
	.word	.L757
	.word	.L758
.L718:
	ldr	r1, .L767
	ldrb	r0, [r5, #0x18]
	strb	r0, [r1]
	ldr	r1, .L767+0x4
	mov	r0, #0x2
	strb	r0, [r1]
	ldrb	r0, [r5, #0x18]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGnameBufferWonderFlags
	bl	SetWirelessCommType1
	bl	OpenLink
	mov	r0, #0x2
	bl	InitializeRfuLinkManager_LinkLeader
	mov	r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L717
.L768:
	.align	2, 0
.L767:
	.word	sPlayerCurrActivity
	.word	sPlayerActivityGroupSize
.L719:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r0, [r5]
	mov	r1, #0x5
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0x10
	bl	LinkRfu3_SetGnameUnameFromStaticBuffers
	ldr	r1, [r5]
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	sub	r0, r0, #0x4
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r5]
	strb	r3, [r0, #0x1b]
	ldr	r0, [r5, #0x4]
	mov	r1, #0xff
	bl	CreateTask_ListenForPartnersWithCompatibleSerialNos
	strb	r0, [r5, #0x17]
	ldr	r0, .L769
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L769+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xf]
	ldrb	r0, [r5, #0xf]
	bl	MG_DrawTextBorder
	ldr	r0, .L769+0x8
	add	r2, r0, #0
	ldr	r1, .L769+0xc
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5, #0xf]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0x12]
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	b	.L762
.L770:
	.align	2, 0
.L769:
	.word	sWindowTemplate_List_PossibleGroupMembers
	.word	0xffff
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_PossibleGroupMembers
.L720:
	ldr	r0, .L771
	ldr	r2, .L771+0x4
	ldr	r4, .L771+0x8
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L771+0xc
	ldrb	r1, [r4]
	bl	StringExpandPlaceholders_AwaitingCommFromAnother
	mov	r0, #0x3
	strb	r0, [r5, #0xc]
	b	.L717
.L772:
	.align	2, 0
.L771:
	.word	gStringVar1
	.word	sUnionRoomActivityStringPtrs
	.word	sPlayerCurrActivity
	.word	gStringVar4
.L721:
	ldr	r0, .L773
	bl	AddTextPrinterToWindow1
	mov	r0, #0x4
	strb	r0, [r5, #0xc]
	b	.L717
.L774:
	.align	2, 0
.L773:
	.word	gStringVar4
.L722:
	add	r0, r5, #0
	mov	r1, #0x5
	mov	r2, #0x6
	bl	Leader_SetStateIfMemberListChanged
	ldr	r0, .L775
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB5303
	b	.L717	@long jump
.LCB5303:
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
	bl	DestroyWirelessStatusIndicatorSprite
	b	.L717
.L776:
	.align	2, 0
.L775:
	.word	gMain
.L724:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L777
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	bne	.LCB5325
	b	.L717	@long jump
.LCB5325:
	ldr	r0, [r5]
	bl	UnionRoomLeaderField0CompactionAndCount
	strb	r0, [r5, #0x13]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
.L762:
	mov	r0, #0x2
	strb	r0, [r5, #0xc]
	b	.L717
.L778:
	.align	2, 0
.L777:
	.word	gText_UR_LinkWithFriendDropped
.L726:
	mov	r0, #0x7
	strb	r0, [r5, #0xc]
	b	.L717
.L727:
	add	r0, r5, #0
	add	r0, r0, #0xd
	add	r1, r5, #0
	add	r1, r1, #0x14
	ldr	r3, .L779
	mov	r2, #0x0
	bl	mevent_message_print_and_prompt_yes_no
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L729	@cond_branch
	cmp	r4, #0
	bgt	.L734	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L731	@cond_branch
	b	.L717
.L780:
	.align	2, 0
.L779:
	.word	gStringVar4
.L734:
	cmp	r4, #0x1
	beq	.L731	@cond_branch
	b	.L717
.L729:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	strb	r4, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	mov	r0, #0x5
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x5
	b	.L763
.L731:
	mov	r0, #0x6
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x6
.L763:
	bl	SendByteToPartnerByIdAndName
	mov	r0, #0x8
	strb	r0, [r5, #0xc]
	b	.L717
.L735:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	WaitSendByteToPartnerByIdAndName
	add	r4, r0, #0
	cmp	r4, #0x1
	bne	.L736	@cond_branch
	ldrb	r0, [r5, #0x19]
	cmp	r0, #0x5
	bne	.L737	@cond_branch
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	ldrb	r0, [r5, #0x13]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x13]
	ldr	r4, .L781
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r1, r1, r0
	sub	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L781+0x4
	ldr	r1, .L781+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0x9
	strb	r0, [r5, #0xc]
	bl	LinkRfu_StopManagerAndFinalizeSlots
	b	.L738
.L782:
	.align	2, 0
.L781:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_UR_AnOKWasSentToPlayer
.L737:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	RequestDisconnectSlotByTrainerNameAndId
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r5]
	bl	UnionRoomLeaderField0CompactionAndCount
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	mov	r0, #0x2
	strb	r0, [r5, #0xc]
.L738:
	mov	r0, #0x0
	strb	r0, [r5, #0x19]
	b	.L717
.L736:
	cmp	r4, #0x2
	beq	.LCB5579
	b	.L717	@long jump
.LCB5579:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	strb	r4, [r5, #0xc]
	b	.L717
.L741:
	ldr	r0, .L783
	bl	AddTextPrinterToWindow1
	mov	r0, #0xa
	strb	r0, [r5, #0xc]
	b	.L717
.L784:
	.align	2, 0
.L783:
	.word	gStringVar4
.L742:
	ldrb	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xe]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.LCB5610
	b	.L717	@long jump
.LCB5610:
	mov	r0, #0xb
	strb	r0, [r5, #0xc]
	b	.L717
.L744:
	add	r0, r5, #0
	mov	r1, #0x5
	mov	r2, #0x6
	bl	Leader_SetStateIfMemberListChanged
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB5624
	b	.L717	@long jump
.LCB5624:
	mov	r0, #0xc
	strb	r0, [r5, #0xc]
	b	.L717
.L746:
	bl	LmanAcceptSlotFlagIsNotZero
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L747	@cond_branch
	mov	r0, #0x0
	bl	WaitRfuState
	mov	r0, #0xf
	strb	r0, [r5, #0xc]
	b	.L717
.L747:
	mov	r0, #0x6
	strb	r0, [r5, #0xc]
	b	.L717
.L749:
	bl	DestroyWirelessStatusIndicatorSprite
	bl	LinkRfu_Shutdown
	ldrb	r0, [r5, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x17]
	bl	DestroyTask
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	b	.L764
.L750:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L785
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	beq	.L717	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L785+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L717
.L786:
	.align	2, 0
.L785:
	.word	gText_UR_PleaseStartOver
	.word	gSpecialVar_Result
.L752:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L754	@cond_branch
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L753	@cond_branch
.L754:
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
	b	.L717
.L753:
	ldr	r0, .L787
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L717	@cond_branch
	mov	r0, #0x1
	bl	UpdateGameData_GroupLockedIn
	b	.L764
.L788:
	.align	2, 0
.L787:
	.word	gReceivedRemoteLinkPlayers
.L757:
	ldrb	r0, [r5, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x17]
	bl	DestroyTask
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	bl	SetLinkStandbyCallback
.L764:
	ldrb	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L717
.L758:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L717	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L717:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 Task_MEvent_Leader,.Lfe40-Task_MEvent_Leader
	.align	2, 0
	.globl	MEvent_CreateTask_CardOrNewsWithFriend
	.type	 MEvent_CreateTask_CardOrNewsWithFriend,function
	.thumb_func
MEvent_CreateTask_CardOrNewsWithFriend:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L790
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L790+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L790+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L790+0xc
	str	r1, [r0]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	sub	r4, r4, #0x15
	strb	r4, [r1, #0x12]
	ldr	r0, .L790+0x10
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L791:
	.align	2, 0
.L790:
	.word	Task_CardOrNewsWithFriend
	.word	sUnionRoomMain
	.word	gTasks+0x8
	.word	sGroup
	.word	gSpecialVar_Result
.Lfe41:
	.size	 MEvent_CreateTask_CardOrNewsWithFriend,.Lfe41-MEvent_CreateTask_CardOrNewsWithFriend
	.align	2, 0
	.type	 Task_CardOrNewsWithFriend,function
	.thumb_func
Task_CardOrNewsWithFriend:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L831
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0xc
	bls	.LCB5844
	b	.L793	@long jump
.LCB5844:
	lsl	r0, r0, #0x2
	ldr	r1, .L831+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L832:
	.align	2, 0
.L831:
	.word	sUnionRoomMain
	.word	.L828
	.align	2, 0
	.align	2, 0
.L828:
	.word	.L794
	.word	.L795
	.word	.L796
	.word	.L797
	.word	.L808
	.word	.L809
	.word	.L821
	.word	.L824
	.word	.L821
	.word	.L822
	.word	.L821
	.word	.L825
	.word	.L826
.L794:
	ldrb	r0, [r5, #0x12]
	add	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L793
.L795:
	ldr	r0, .L833
	bl	AddTextPrinterToWindow1
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	b	.L793
.L834:
	.align	2, 0
.L833:
	.word	gText_UR_ChooseTrainer
.L796:
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r0, [r5]
	mov	r1, #0x10
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r5, #0x4]
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	bl	CreateTask_ListenForPartnersWithCompatibleSerialNos
	mov	r4, #0x0
	strb	r0, [r5, #0x11]
	ldr	r0, .L835
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L835+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xb]
	ldr	r0, .L835+0x8
	bl	AddWindow
	strb	r0, [r5, #0xd]
	ldrb	r0, [r5, #0xb]
	bl	MG_DrawTextBorder
	ldr	r0, .L835+0xc
	add	r2, r0, #0
	ldr	r1, .L835+0x10
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldrb	r1, [r5, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0xe]
	ldrb	r0, [r5, #0xd]
	bl	MG_DrawTextBorder
	ldrb	r0, [r5, #0xd]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5, #0xd]
	bl	PutWindowTilemap
	ldrb	r0, [r5, #0xd]
	bl	PrintPlayerNameAndIdOnWindow
	ldrb	r0, [r5, #0xd]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	strb	r4, [r5, #0xf]
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	b	.L793
.L836:
	.align	2, 0
.L835:
	.word	sWindowTemplate_MysteryGiftList
	.word	0xffff
	.word	sWindowTemplate_MysteryGiftPlayerNameAndId
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_UnionRoomGroups
.L797:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L801	@cond_branch
	cmp	r2, #0x1
	bne	.L800	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L800:
	ldrb	r0, [r5, #0xe]
	bl	RedrawListMenu
	b	.L793
.L801:
	ldrb	r0, [r5, #0xe]
	bl	ListMenu_ProcessInput
	add	r2, r0, #0
	ldr	r0, .L837
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L802	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	beq	.L802	@cond_branch
	ldr	r0, [r5]
	lsl	r1, r2, #0x5
	add	r0, r0, r1
	ldrb	r1, [r0, #0xa]
	ldrb	r0, [r0, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L803	@cond_branch
	lsr	r0, r1, #0x7
	cmp	r0, #0
	bne	.L803	@cond_branch
	strb	r2, [r5, #0xf]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldrb	r0, [r5, #0xe]
	bl	RedrawListMenu
	ldr	r4, .L837+0x4
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldrb	r1, [r5, #0xf]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	CreateTask_RfuReconnectWithParent
	mov	r0, #0x67
	bl	PlaySE
	mov	r0, #0x4
	strb	r0, [r5, #0x8]
	b	.L793
.L838:
	.align	2, 0
.L837:
	.word	gMain
	.word	gStringVar1
.L803:
	mov	r0, #0x7
	bl	PlaySE
	b	.L793
.L802:
	ldr	r0, .L839
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB6136
	b	.L793	@long jump
.LCB6136:
	mov	r0, #0x6
	strb	r0, [r5, #0x8]
	b	.L793
.L840:
	.align	2, 0
.L839:
	.word	gMain
.L808:
	ldr	r0, .L841
	bl	AddTextPrinterToWindow1
	ldr	r4, .L841+0x4
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	b	.L793
.L842:
	.align	2, 0
.L841:
	.word	gText_UR_AwaitingPlayersResponse
	.word	gStringVar1
.L809:
	ldr	r0, .L843
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L810	@cond_branch
	ldr	r2, .L843+0x4
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r2]
	mov	r0, #0xa
	strb	r0, [r5, #0x8]
.L810:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L815	@cond_branch
	cmp	r0, #0x5
	bgt	.L818	@cond_branch
	cmp	r0, #0x2
	bgt	.L793	@cond_branch
	cmp	r0, #0x1
	blt	.L793	@cond_branch
	b	.L814
.L844:
	.align	2, 0
.L843:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
.L818:
	cmp	r0, #0x6
	bne	.L793	@cond_branch
.L814:
	mov	r0, #0x8
	strb	r0, [r5, #0x8]
	b	.L793
.L815:
	ldr	r0, .L845
	bl	AddTextPrinterToWindow1
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	b	.L793
.L846:
	.align	2, 0
.L845:
	.word	gText_UR_PlayerSentBackOK
.L821:
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xd]
	bl	RemoveWindow
	ldrb	r0, [r5, #0xb]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x11]
	bl	DestroyTask
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L793
.L822:
	add	r5, r5, #0x9
	ldr	r4, .L847
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	beq	.L793	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	b	.L830
.L848:
	.align	2, 0
.L847:
	.word	gTexts_UR_LinkDropped
.L824:
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L849
	bl	AddTextPrinterToWindow1
.L830:
	add	r0, r6, #0
	bl	DestroyTask
	bl	LinkRfu_Shutdown
	ldr	r1, .L849+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L793
.L850:
	.align	2, 0
.L849:
	.word	gText_UR_PleaseStartOver
	.word	gSpecialVar_Result
.L825:
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	bl	SetLinkStandbyCallback
	b	.L793
.L826:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L793	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
.L793:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 Task_CardOrNewsWithFriend,.Lfe42-Task_CardOrNewsWithFriend
	.align	2, 0
	.globl	MEvent_CreateTask_CardOrNewsOverWireless
	.type	 MEvent_CreateTask_CardOrNewsOverWireless,function
	.thumb_func
MEvent_CreateTask_CardOrNewsOverWireless:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L852
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L852+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L852+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L852+0xc
	str	r1, [r0]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	sub	r4, r4, #0x15
	strb	r4, [r1, #0x12]
	ldr	r0, .L852+0x10
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L853:
	.align	2, 0
.L852:
	.word	Task_CardOrNewsOverWireless
	.word	sUnionRoomMain
	.word	gTasks+0x8
	.word	sGroup
	.word	gSpecialVar_Result
.Lfe43:
	.size	 MEvent_CreateTask_CardOrNewsOverWireless,.Lfe43-MEvent_CreateTask_CardOrNewsOverWireless
	.align	2, 0
	.type	 Task_CardOrNewsOverWireless,function
	.thumb_func
Task_CardOrNewsOverWireless:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L902
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0xe
	bls	.LCB6413
	b	.L855	@long jump
.LCB6413:
	lsl	r0, r0, #0x2
	ldr	r1, .L902+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L903:
	.align	2, 0
.L902:
	.word	sUnionRoomMain
	.word	.L899
	.align	2, 0
	.align	2, 0
.L899:
	.word	.L856
	.word	.L857
	.word	.L858
	.word	.L860
	.word	.L874
	.word	.L875
	.word	.L888
	.word	.L892
	.word	.L888
	.word	.L890
	.word	.L888
	.word	.L894
	.word	.L888
	.word	.L896
	.word	.L897
.L856:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L855
.L857:
	ldr	r0, .L904
	bl	AddTextPrinterToWindow1
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	b	.L855
.L905:
	.align	2, 0
.L904:
	.word	gText_UR_SearchingForWirelessSystemWait
.L858:
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r0, [r5]
	mov	r1, #0x10
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r5, #0x4]
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	bl	CreateTask_ListenForPartnersWithSerial7F7D
	strb	r0, [r5, #0x11]
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L859	@cond_branch
	ldr	r0, .L906
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L906+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xb]
	ldrb	r0, [r5, #0xb]
	bl	MG_DrawTextBorder
	ldr	r0, .L906+0x8
	add	r2, r0, #0
	ldr	r1, .L906+0xc
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0xe]
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L859:
	mov	r0, #0x0
	strb	r0, [r5, #0xf]
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	b	.L855
.L907:
	.align	2, 0
.L906:
	.word	sWindowTemplate_MysteryGiftList
	.word	0xffff
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_UnionRoomGroups
.L860:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L865	@cond_branch
	cmp	r0, #0x1
	bne	.L863	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L863:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	bne	.LCB6566
	b	.L855	@long jump
.LCB6566:
	ldrb	r0, [r5, #0xe]
	bl	RedrawListMenu
	b	.L855
.L865:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L866	@cond_branch
	ldrb	r0, [r5, #0xe]
	bl	ListMenu_ProcessInput
.L866:
	ldrb	r0, [r5, #0x14]
	cmp	r0, #0x78
	bls	.L867	@cond_branch
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L871	@cond_branch
	ldrb	r1, [r2, #0xa]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L871	@cond_branch
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	add	r0, r2, #0
	bl	GetGnameWonderFlagByLinkGroup
	cmp	r0, #0
	beq	.L869	@cond_branch
	strb	r4, [r5, #0xf]
	strb	r4, [r5, #0x14]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldr	r0, [r5]
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	CreateTask_RfuReconnectWithParent
	mov	r0, #0x67
	bl	PlaySE
	mov	r0, #0x4
	strb	r0, [r5, #0x8]
	b	.L871
.L869:
	mov	r0, #0x16
	bl	PlaySE
	mov	r0, #0xa
	strb	r0, [r5, #0x8]
	b	.L871
.L867:
	ldr	r0, .L908
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L871	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x6
	strb	r0, [r5, #0x8]
	strb	r1, [r5, #0x14]
.L871:
	ldrb	r0, [r5, #0x14]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x14]
	b	.L855
.L909:
	.align	2, 0
.L908:
	.word	gMain
.L874:
	ldr	r0, .L910
	bl	AddTextPrinterToWindow1
	ldr	r4, .L910+0x4
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	b	.L855
.L911:
	.align	2, 0
.L910:
	.word	gText_UR_AwaitingResponseFromWirelessSystem
	.word	gStringVar1
.L875:
	ldr	r0, .L912
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L876	@cond_branch
	ldr	r2, .L912+0x4
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r2]
	mov	r0, #0xc
	strb	r0, [r5, #0x8]
.L876:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L881	@cond_branch
	cmp	r0, #0x5
	bgt	.L884	@cond_branch
	cmp	r0, #0x2
	bgt	.L855	@cond_branch
	cmp	r0, #0x1
	blt	.L855	@cond_branch
	b	.L880
.L913:
	.align	2, 0
.L912:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
.L884:
	cmp	r0, #0x6
	bne	.L855	@cond_branch
.L880:
	mov	r0, #0x8
	strb	r0, [r5, #0x8]
	b	.L855
.L881:
	ldr	r0, .L914
	bl	AddTextPrinterToWindow1
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	b	.L855
.L915:
	.align	2, 0
.L914:
	.word	gText_UR_WirelessLinkEstablished
.L888:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L889	@cond_branch
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xb]
	bl	RemoveWindow
.L889:
	ldrb	r0, [r5, #0x11]
	bl	DestroyTask
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L855
.L890:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L916
	b	.L901
.L917:
	.align	2, 0
.L916:
	.word	gText_UR_WirelessLinkDropped
.L892:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L918
	b	.L901
.L919:
	.align	2, 0
.L918:
	.word	gText_UR_WirelessSearchCanceled
.L894:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r2, .L920
	ldrb	r1, [r5, #0x12]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
.L901:
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	beq	.L855	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	add	r0, r4, #0
	bl	DestroyTask
	bl	LinkRfu_Shutdown
	ldr	r1, .L920+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L855
.L921:
	.align	2, 0
.L920:
	.word	gTexts_UR_NoWonderShared
	.word	gSpecialVar_Result
.L896:
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	bl	SetLinkStandbyCallback
	b	.L855
.L897:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L855	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L855:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 Task_CardOrNewsOverWireless,.Lfe44-Task_CardOrNewsOverWireless
	.align	2, 0
	.globl	UnionRoomSpecial
	.type	 UnionRoomSpecial,function
	.thumb_func
UnionRoomSpecial:
	push	{r4, lr}
	bl	ClearAndInitHostRFUtgtGname
	ldr	r0, .L923
	mov	r1, #0xa
	bl	CreateTask
	ldr	r4, .L923+0x4
	mov	r0, #0x96
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L923+0x8
	str	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r0, #0x14]
	strb	r1, [r0, #0x16]
	strh	r1, [r0, #0x10]
	strh	r1, [r0, #0x12]
	ldr	r0, .L923+0xc
	strh	r1, [r0]
	mov	r0, #0xd0
	mov	r1, #0x1
	bl	ListMenuLoadStdPalAt
	pop	{r4}
	pop	{r0}
	bx	r0
.L924:
	.align	2, 0
.L923:
	.word	Task_RunUnionRoom
	.word	sUnionRoomMain
	.word	sURoom
	.word	gSpecialVar_Result
.Lfe45:
	.size	 UnionRoomSpecial,.Lfe45-UnionRoomSpecial
	.align	2, 0
	.type	 ReadAsU16,function
	.thumb_func
ReadAsU16:
	ldrb	r1, [r0, #0x1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0]
	orr	r0, r0, r1
	bx	lr
.Lfe46:
	.size	 ReadAsU16,.Lfe46-ReadAsU16
	.align	2, 0
	.type	 UnionRoom_ScheduleFieldMessageWithFollowupState,function
	.thumb_func
UnionRoom_ScheduleFieldMessageWithFollowupState:
	push	{lr}
	add	r3, r1, #0
	ldr	r1, .L928
	ldr	r2, [r1]
	mov	r1, #0x8
	strb	r1, [r2, #0x14]
	strb	r0, [r2, #0x15]
	ldr	r0, .L928+0x4
	cmp	r3, r0
	beq	.L927	@cond_branch
	add	r1, r3, #0
	bl	StringExpandPlaceholders
.L927:
	pop	{r0}
	bx	r0
.L929:
	.align	2, 0
.L928:
	.word	sUnionRoomMain
	.word	gStringVar4
.Lfe47:
	.size	 UnionRoom_ScheduleFieldMessageWithFollowupState,.Lfe47-UnionRoom_ScheduleFieldMessageWithFollowupState
	.align	2, 0
	.type	 UnionRoom_ScheduleFieldMessageAndExit,function
	.thumb_func
UnionRoom_ScheduleFieldMessageAndExit:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L932
	ldr	r1, [r0]
	mov	r0, #0x1a
	strb	r0, [r1, #0x14]
	ldr	r0, .L932+0x4
	cmp	r2, r0
	beq	.L931	@cond_branch
	add	r1, r2, #0
	bl	StringExpandPlaceholders
.L931:
	pop	{r0}
	bx	r0
.L933:
	.align	2, 0
.L932:
	.word	sUnionRoomMain
	.word	gStringVar4
.Lfe48:
	.size	 UnionRoom_ScheduleFieldMessageAndExit,.Lfe48-UnionRoom_ScheduleFieldMessageAndExit
	.align	2, 0
	.type	 BackUpURoomField0ToDecompressionBuffer,function
	.thumb_func
BackUpURoomField0ToDecompressionBuffer:
	push	{lr}
	ldr	r3, .L935
	ldr	r1, [r0]
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r3, #0
	bl	memcpy
	pop	{r0}
	bx	r0
.L936:
	.align	2, 0
.L935:
	.word	gDecompressionBuffer+0x3f00
.Lfe49:
	.size	 BackUpURoomField0ToDecompressionBuffer,.Lfe49-BackUpURoomField0ToDecompressionBuffer
	.align	2, 0
	.type	 RestoreURoomField0FromDecompressionBuffer,function
	.thumb_func
RestoreURoomField0FromDecompressionBuffer:
	push	{lr}
	ldr	r0, [r0]
	ldr	r1, .L938
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	memcpy
	pop	{r0}
	bx	r0
.L939:
	.align	2, 0
.L938:
	.word	gDecompressionBuffer+0x3f00
.Lfe50:
	.size	 RestoreURoomField0FromDecompressionBuffer,.Lfe50-RestoreURoomField0FromDecompressionBuffer
	.align	2, 0
	.type	 Task_RunUnionRoom,function
	.thumb_func
Task_RunUnionRoom:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r5, #0x0
	ldr	r0, .L1178
	ldr	r6, [r0]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L1178+0x4
	add	r7, r0, r1
	ldrb	r0, [r6, #0x14]
	cmp	r0, #0x38
	bls	.LCB7103
	bl	.L941	@far jump
.LCB7103:
	lsl	r0, r0, #0x2
	ldr	r1, .L1178+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1179:
	.align	2, 0
.L1178:
	.word	sUnionRoomMain
	.word	gTasks+0x8
	.word	.L1172
	.align	2, 0
	.align	2, 0
.L1172:
	.word	.L942
	.word	.L943
	.word	.L945
	.word	.L946
	.word	.L961
	.word	.L1029
	.word	.L1007
	.word	.L1029
	.word	.L1170
	.word	.L1074
	.word	.L1090
	.word	.L1062
	.word	.L1063
	.word	.L1094
	.word	.L1095
	.word	.L1096
	.word	.L1098
	.word	.L1099
	.word	.L1100
	.word	.L1036
	.word	.L1044
	.word	.L1046
	.word	.L1057
	.word	.L980
	.word	.L982
	.word	.L990
	.word	.L1168
	.word	.L1017
	.word	.L1016
	.word	.L1021
	.word	.L1004
	.word	.L1020
	.word	.L1019
	.word	.L1069
	.word	.L1071
	.word	.L1073
	.word	.L1091
	.word	.L1093
	.word	.L1000
	.word	.L1067
	.word	.L1030
	.word	.L1032
	.word	.L1102
	.word	.L1107
	.word	.L1130
	.word	.L1140
	.word	.L1142
	.word	.L1109
	.word	.L1143
	.word	.L1157
	.word	.L1165
	.word	.L1167
	.word	.L1122
	.word	.L1119
	.word	.L1120
	.word	.L1129
	.word	.L1138
.L942:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0x4]
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0xc]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	AllocZeroed
	str	r0, [r6]
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [r6, #0x8]
	ldr	r0, [r6]
	mov	r1, #0x8
	bl	BlankUnkStruct_x20Array
	ldr	r1, .L1180
	mov	r0, #0x40
	strb	r0, [r1]
	ldr	r0, [r6, #0xc]
	ldr	r1, [r6, #0x4]
	mov	r2, #0x9
	bl	CreateTask_SearchForChildOrParent
	add	r1, r6, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	add	r0, r6, #0
	add	r0, r0, #0x8c
	bl	ZeroUnionObjWork
	bl	MakeGroupAssemblyAreasPassable
	mov	r0, #0x1
	bl	.L1174	@ far jump
.L1181:
	.align	2, 0
.L1180:
	.word	sPlayerCurrActivity
.L943:
	add	r0, r6, #0
	add	r0, r0, #0x21
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	CreateGroupMemberObjectsInvisible
	ldrh	r0, [r7]
	add	r0, r0, #0x1
	strh	r0, [r7]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	beq	.LCB7187
	bl	.L941	@far jump
.LCB7187:
	mov	r0, #0x2
	bl	.L1174	@ far jump
.L945:
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	ldr	r2, .L1182
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	RfuUpdatePlayerGnameStateAndSend
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_EnterUnionRoom
	ldr	r0, [r6, #0x8]
	mov	r1, #0x1
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r6, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r0, [r6, #0xc]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	ldr	r1, .L1182+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r0, #0x3
	bl	.L1174	@ far jump
.L1183:
	.align	2, 0
.L1182:
	.word	sUnionRoomTrade
	.word	gSpecialVar_Result
.L946:
	bl	GetPartyMenuType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	beq	.L948	@cond_branch
	bl	GetPartyMenuType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bne	.L947	@cond_branch
.L948:
	ldr	r4, .L1184
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L947	@cond_branch
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrh	r0, [r4]
	cmp	r0, #0x1
	beq	.L950	@cond_branch
	cmp	r0, #0x2
	beq	.L955	@cond_branch
	b	.L949
.L1185:
	.align	2, 0
.L1184:
	.word	sUnionRoomTrade
.L950:
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	cmp	r5, #0x5
	bls	.L951	@cond_branch
	add	r0, r4, #0
	bl	ResetUnionRoomTrade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	RfuUpdatePlayerGnameStateAndSend
	ldr	r0, .L1186
	bl	UnionRoom_ScheduleFieldMessageAndExit
	b	.L949
.L1187:
	.align	2, 0
.L1186:
	.word	gText_UR_RegistrationCanceled
.L951:
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	RegisterTradeMonAndGetIsEgg
	cmp	r0, #0
	bne	.L953	@cond_branch
	ldr	r1, .L1188
	mov	r0, #0x34
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	b	.L949
.L1189:
	.align	2, 0
.L1188:
	.word	gText_UR_ChooseRequestedMonType
.L953:
	mov	r0, #0x37
	b	.L1175
.L955:
	add	r0, r6, #0
	bl	RestoreURoomField0FromDecompressionBuffer
	ldrb	r0, [r4, #0x8]
	strh	r0, [r7, #0x2]
	cmp	r5, #0x5
	bls	.L956	@cond_branch
	ldr	r0, .L1190
	bl	UnionRoom_ScheduleFieldMessageAndExit
	b	.L949
.L1191:
	.align	2, 0
.L1190:
	.word	gText_UR_TradeCanceled
.L956:
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	ldr	r1, .L1192
	mov	r0, #0x44
	strb	r0, [r1]
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	RegisterTradeMon
	mov	r0, #0x33
.L1175:
	strb	r0, [r6, #0x14]
.L949:
	ldr	r1, .L1192+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	bl	.L941	@ far jump
.L1193:
	.align	2, 0
.L1192:
	.word	sPlayerCurrActivity
	.word	sUnionRoomTrade
.L947:
	mov	r0, #0x4
	bl	.L1174	@ far jump
.L961:
	ldr	r4, .L1194
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L962	@cond_branch
	cmp	r0, #0x9
	bne	.L963	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	mov	r0, #0x2
	bl	PlaySE
	ldr	r0, .L1194+0x4
	ldr	r1, .L1194+0x8
	ldr	r1, [r1]
	bl	StringCopy
	mov	r1, #0x0
	mov	r0, #0x2a
	b	.L1176
.L1195:
	.align	2, 0
.L1194:
	.word	gSpecialVar_Result
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L963:
	cmp	r0, #0xb
	bne	.L965	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	mov	r1, #0x0
	mov	r0, #0x17
	b	.L1176
.L965:
	mov	r0, #0x0
	strh	r0, [r7]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	strh	r0, [r7, #0x2]
	mov	r1, #0x0
	mov	r0, #0x18
.L1176:
	strb	r0, [r6, #0x14]
	strh	r1, [r4]
	bl	.L941	@ far jump
.L962:
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB7450
	bl	.L941	@far jump
.LCB7450:
	ldr	r0, .L1196
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L969	@cond_branch
	ldr	r0, [r6]
	add	r2, r7, #0x2
	add	r3, r6, #0
	add	r3, r3, #0x21
	add	r1, r7, #0
	bl	RfuUnionTool_GetGroupAndMemberInFrontOfPlayer
	cmp	r0, #0
	beq	.L970	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	UR_EnableScriptContext2AndFreezeObjectEvents
	mov	r0, #0x18
	bl	.L1174	@ far jump
.L1197:
	.align	2, 0
.L1196:
	.word	gMain
.L970:
	bl	PlayerIsTalkingToUnionRoomAide
	cmp	r0, #0
	beq	.L969	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	mov	r0, #0x2
	bl	PlaySE
	bl	UR_EnableScriptContext2AndFreezeObjectEvents
	ldr	r0, .L1198
	ldr	r1, .L1198+0x4
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x2d
	bl	.L1174	@ far jump
.L1199:
	.align	2, 0
.L1198:
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L969:
	bl	HandlePlayerListUpdate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L975	@cond_branch
	cmp	r0, #0x2
	bgt	.L979	@cond_branch
	cmp	r0, #0x1
	beq	.L974	@cond_branch
	b	.L973
.L979:
	cmp	r0, #0x4
	beq	.L976	@cond_branch
	b	.L973
.L974:
	mov	r0, #0x37
	bl	PlaySE
.L975:
	add	r0, r6, #0
	bl	ScheduleUnionRoomPlayerRefresh
	b	.L973
.L976:
	mov	r0, #0xb
	strb	r0, [r6, #0x14]
	bl	UR_EnableScriptContext2AndFreezeObjectEvents
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	RfuUpdatePlayerGnameStateAndSend
	add	r0, r6, #0
	bl	GetActivePartnerSpriteGenderParam
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x53
	mov	r2, #0x0
	bl	UpdateGameDataWithActivitySpriteGendersFlag
.L973:
	add	r0, r6, #0
	bl	HandleUnionRoomPlayerRefresh
	bl	.L941	@ far jump
.L980:
	ldr	r0, .L1200
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7579
	bl	.L941	@far jump
.LCB7579:
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	mov	r0, #0x4
	bl	.L1174	@ far jump
.L1201:
	.align	2, 0
.L1200:
	.word	Task_StartMenuHandleInput
.L982:
	bl	UR_RunTextPrinters_CheckPrinter0Active
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	ldr	r0, [r6]
	ldrb	r1, [r7]
	ldrb	r2, [r7, #0x2]
	add	r3, r4, #0
	bl	UnionRoomGetPlayerInteractionResponse
	cmp	r0, #0x1
	beq	.L985	@cond_branch
	cmp	r0, #0x1
	bgt	.L989	@cond_branch
	cmp	r0, #0
	beq	.L984	@cond_branch
	bl	.L941	@ far jump
.L989:
	cmp	r0, #0x2
	beq	.L986	@cond_branch
	bl	.L941	@ far jump
.L984:
	mov	r0, #0x1a
	bl	.L1174	@ far jump
.L985:
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	ldr	r2, .L1202
	ldrb	r2, [r2]
	bl	sub_80FC114
	strh	r5, [r6, #0x12]
	mov	r0, #0x19
	bl	.L1174	@ far jump
.L1203:
	.align	2, 0
.L1202:
	.word	sPlayerCurrActivity
.L986:
	ldr	r1, .L1204
	mov	r0, #0x13
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	bl	.L941	@ far jump
.L1205:
	.align	2, 0
.L1204:
	.word	gStringVar4
.L990:
	bl	UR_RunTextPrinters_CheckPrinter0Active
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	blt	.L991	@cond_branch
	cmp	r4, #0x2
	ble	.L994	@cond_branch
	cmp	r4, #0x4
	bne	.L991	@cond_branch
	mov	r0, #0x1
	bl	HandleCancelTrade
	strb	r4, [r6, #0x14]
	b	.L991
.L994:
	bl	IsUnionRoomListenTaskActive
	cmp	r0, #0x1
	bne	.L995	@cond_branch
	ldr	r0, .L1206
	bl	UnionRoom_ScheduleFieldMessageAndExit
	b	.L996
.L1207:
	.align	2, 0
.L1206:
	.word	gText_UR_TrainerAppearsBusy
.L995:
	ldr	r1, .L1208
	mov	r0, #0x1e
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
.L996:
	ldr	r1, .L1208+0x4
	mov	r0, #0x40
	strb	r0, [r1]
.L991:
	ldr	r0, .L1208+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB7729
	bl	.L941	@far jump
.LCB7729:
	ldr	r0, .L1208+0xc
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	ldr	r0, .L1208+0x10
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x26
	bl	.L1174	@ far jump
.L1209:
	.align	2, 0
.L1208:
	.word	gText_UR_TrainerAppearsBusy
	.word	sPlayerCurrActivity
	.word	gReceivedRemoteLinkPlayers
	.word	gBlockSendBuffer
	.word	Task_ExchangeCards
.L1000:
	ldr	r0, .L1210
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7760
	bl	.L941	@far jump
.LCB7760:
	ldr	r0, .L1210+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x44
	bne	.L1002	@cond_branch
	ldr	r1, .L1210+0x8
	mov	r0, #0x1f
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	bl	.L941	@ far jump
.L1211:
	.align	2, 0
.L1210:
	.word	Task_ExchangeCards
	.word	sPlayerCurrActivity
	.word	gText_UR_AwaitingPlayersResponseAboutTrade
.L1002:
	mov	r0, #0x5
	bl	.L1174	@ far jump
.L1004:
	ldr	r0, .L1212
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB7792
	bl	.L941	@far jump
.LCB7792:
	mov	r0, #0x0
	bl	HandleCancelTrade
	mov	r2, #0x0
	ldrsh	r0, [r7, r2]
	mov	r3, #0x2
	ldrsh	r1, [r7, r3]
	ldr	r2, [r6]
	bl	UpdateUnionGroupMemberFacing
	mov	r0, #0x2
	bl	.L1174	@ far jump
.L1213:
	.align	2, 0
.L1212:
	.word	gReceivedRemoteLinkPlayers
.L1007:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1b
	add	r2, r6, #0
	add	r2, r2, #0x1c
	ldr	r3, .L1214
	ldr	r4, .L1214+0x4
	str	r4, [sp]
	bl	ListMenuHandler_AllItemsAvailable
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB7835
	bl	.L941	@far jump
.LCB7835:
	ldr	r0, .L1214+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1009	@cond_branch
	mov	r0, #0x1c
	bl	.L1174	@ far jump
.L1215:
	.align	2, 0
.L1214:
	.word	sWindowTemplate_InviteToActivity
	.word	sListMenuTemplate_InviteToActivity
	.word	gReceivedRemoteLinkPlayers
.L1009:
	add	r1, r6, #0
	add	r1, r1, #0x84
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L1012	@cond_branch
	cmp	r5, #0x40
	bne	.L1011	@cond_branch
.L1012:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x40
	strh	r1, [r0]
	bl	Rfu_SendPacket
	ldr	r0, .L1216
	ldr	r2, .L1216+0x4
	ldr	r1, .L1216+0x8
	ldrb	r1, [r1, #0x13]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x20
	bl	.L1174	@ far jump
.L1217:
	.align	2, 0
.L1216:
	.word	gStringVar4
	.word	gTexts_UR_IfYouWantToDoSomething
	.word	gLinkPlayers
.L1011:
	ldr	r0, .L1218
	strb	r5, [r0]
	ldr	r1, .L1218+0x4
	lsr	r0, r5, #0x8
	strb	r0, [r1]
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x41
	bne	.L1014	@cond_branch
	bl	HasAtLeastTwoMonsOfLevel30OrLower
	cmp	r0, #0
	bne	.L1014	@cond_branch
	ldr	r1, .L1218+0x8
	mov	r0, #0x5
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	bl	.L941	@ far jump
.L1219:
	.align	2, 0
.L1218:
	.word	sPlayerCurrActivity
	.word	sPlayerActivityGroupSize
	.word	gText_UR_NeedTwoMonsOfLevel30OrLower1
.L1014:
	ldr	r0, .L1220
	ldrb	r0, [r0]
	mov	r1, #0x40
	orr	r1, r1, r0
	add	r0, r6, #0
	add	r0, r0, #0x4c
	strh	r1, [r0]
	bl	Rfu_SendPacket
	mov	r0, #0x1b
	bl	.L1174	@ far jump
.L1221:
	.align	2, 0
.L1220:
	.word	sPlayerCurrActivity
.L1016:
	ldr	r0, .L1222
	ldr	r1, .L1222+0x4
	bl	StringCopy
	mov	r0, #0x24
	bl	.L1174	@ far jump
.L1223:
	.align	2, 0
.L1222:
	.word	gStringVar4
	.word	gText_UR_TrainerBattleBusy
.L1017:
	add	r0, r6, #0
	bl	PollPartnerYesNoResponse
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	add	r0, r6, #0
	add	r0, r0, #0x4c
	ldrh	r1, [r0]
	mov	r0, #0x3f
	and	r0, r0, r1
	bl	GetResponseIdx_InviteToURoomActivity
	add	r5, r0, #0
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r3, .L1224
	lsl	r1, r5, #0x2
	lsl	r2, r4, #0x4
	add	r1, r1, r2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8005
	bl	.L941	@far jump
.LCB8005:
	mov	r0, #0x0
	strh	r0, [r7, #0x6]
	mov	r0, #0x1d
	bl	.L1174	@ far jump
.L1225:
	.align	2, 0
.L1224:
	.word	gTexts_UR_WaitOrShowCard
.L1019:
	bl	SetCloseLinkCallback
	mov	r0, #0x24
	bl	.L1174	@ far jump
.L1020:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x44
	strh	r1, [r0]
	ldr	r2, .L1226
	ldrh	r1, [r2, #0xe]
	add	r3, r6, #0
	add	r3, r3, #0x4e
	strh	r1, [r3]
	ldrh	r2, [r2, #0x10]
	add	r1, r6, #0
	add	r1, r1, #0x50
	strh	r2, [r1]
	bl	Rfu_SendPacket
	mov	r0, #0x1d
	bl	.L1174	@ far jump
.L1227:
	.align	2, 0
.L1226:
	.word	sUnionRoomTrade
.L1021:
	ldr	r0, .L1228
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1022	@cond_branch
	ldr	r0, .L1228+0x4
	ldr	r1, .L1228+0x8
	bl	StringCopy
	mov	r0, #0x1c
	bl	.L1174	@ far jump
.L1229:
	.align	2, 0
.L1228:
	.word	gReceivedRemoteLinkPlayers
	.word	gStringVar4
	.word	gText_UR_TrainerBattleBusy
.L1022:
	add	r0, r6, #0
	bl	PollPartnerYesNoResponse
	add	r0, r6, #0
	add	r0, r0, #0x84
	ldrh	r0, [r0]
	cmp	r0, #0x51
	bne	.L1024	@cond_branch
	ldr	r0, .L1230
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bne	.L1025	@cond_branch
	ldr	r0, .L1230+0x4
	add	r1, r6, #0
	mov	r2, #0x0
	bl	ViewURoomPartnerTrainerCard
	mov	r0, #0x28
	bl	.L1174	@ far jump
.L1231:
	.align	2, 0
.L1230:
	.word	sPlayerCurrActivity
	.word	gStringVar4
.L1025:
	mov	r0, #0xd
	bl	.L1174	@ far jump
.L1024:
	cmp	r0, #0x52
	beq	.LCB8113
	bl	.L941	@far jump
.LCB8113:
	mov	r5, #0x0
	mov	r0, #0x20
	strb	r0, [r6, #0x14]
	ldr	r0, .L1232
	ldr	r4, .L1232+0x4
	ldrb	r2, [r4]
	mov	r1, #0x40
	orr	r1, r1, r2
	ldr	r2, .L1232+0x8
	ldrb	r2, [r2, #0x13]
	bl	GetURoomActivityRejectMsg
	strb	r5, [r4]
	bl	.L941	@ far jump
.L1233:
	.align	2, 0
.L1232:
	.word	gStringVar4
	.word	sPlayerCurrActivity
	.word	gLinkPlayers
.L1029:
	mov	r0, #0x2
	ldrsh	r1, [r7, r0]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	bl	ConvPartnerUnameAndGetWhetherMetAlready
	add	r5, r0, #0
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	ldr	r2, .L1234
	lsl	r0, r4, #0x2
	lsl	r1, r5, #0x3
	add	r0, r0, r1
	add	r0, r0, r2
	ldr	r1, [r0]
	mov	r0, #0x6
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	bl	.L941	@ far jump
.L1235:
	.align	2, 0
.L1234:
	.word	gTexts_UR_HiDoSomething
.L1030:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1236
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8184
	bl	.L941	@far jump
.LCB8184:
	mov	r4, #0x0
	mov	r0, #0x29
	strb	r0, [r6, #0x14]
	bl	SetLinkStandbyCallback
	add	r0, r6, #0
	add	r0, r0, #0x84
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	bl	.L941	@ far jump
.L1237:
	.align	2, 0
.L1236:
	.word	gStringVar4
.L1032:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8210
	bl	.L941	@far jump
.LCB8210:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1034	@cond_branch
	ldr	r5, .L1238
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r4, .L1238+0x4
	add	r1, r1, r4
	add	r0, r5, #0
	bl	StringCopy
	ldrh	r0, [r4, #0x18]
	add	r4, r4, #0x1c
	add	r1, r4, #0
	bl	PlayerHasMetTrainerBefore
	add	r5, r0, #0
	ldr	r0, .L1238+0x8
	ldr	r2, .L1238+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	mov	r0, #0x21
	bl	.L1174	@ far jump
.L1239:
	.align	2, 0
.L1238:
	.word	gStringVar1
	.word	gLinkPlayers+0x8
	.word	gStringVar4
	.word	gTexts_UR_AwaitingResponse
.L1034:
	mov	r0, #0x7
	bl	.L1174	@ far jump
.L1036:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L1038	@cond_branch
	cmp	r5, #0
	bgt	.L1043	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	beq	.L1040	@cond_branch
	bl	.L941	@ far jump
.L1043:
	cmp	r5, #0x1
	beq	.L1040	@cond_branch
	bl	.L941	@ far jump
.L1038:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r4, .L1240
	mov	r0, #0x45
	strb	r0, [r4]
	mov	r0, #0x45
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	ldrb	r2, [r4]
	bl	sub_80FC114
	ldrh	r0, [r7, #0x2]
	strh	r0, [r6, #0x12]
	mov	r0, #0x14
	strb	r0, [r6, #0x14]
	strh	r5, [r7, #0x6]
	bl	.L941	@ far jump
.L1241:
	.align	2, 0
.L1240:
	.word	sPlayerCurrActivity
.L1040:
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	ldr	r1, .L1242
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	UnionRoom_ScheduleFieldMessageAndExit
	bl	.L941	@ far jump
.L1243:
	.align	2, 0
.L1242:
	.word	gTexts_UR_DeclineChat
.L1044:
	ldrh	r0, [r7, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	bgt	.LCB8359
	bl	.L941	@far jump
.LCB8359:
	mov	r1, #0x0
	mov	r0, #0x15
	strb	r0, [r6, #0x14]
	strh	r1, [r7, #0x4]
	bl	.L941	@ far jump
.L1046:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	beq	.L1053	@cond_branch
	cmp	r4, #0x3
	ble	.L1056	@cond_branch
	cmp	r4, #0x4
	bne	.L1047	@cond_branch
	mov	r0, #0x1
	bl	HandleCancelTrade
	strb	r4, [r6, #0x14]
	b	.L1047
.L1056:
	cmp	r4, #0x1
	blt	.L1047	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	bl	IsUnionRoomListenTaskActive
	cmp	r0, #0x1
	bne	.L1051	@cond_branch
	ldr	r0, .L1244
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	UnionRoom_ScheduleFieldMessageAndExit
	b	.L1047
.L1245:
	.align	2, 0
.L1244:
	.word	gTexts_UR_ChatDeclined
.L1051:
	ldr	r0, .L1246
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	mov	r0, #0x1e
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	b	.L1047
.L1247:
	.align	2, 0
.L1246:
	.word	gTexts_UR_ChatDeclined
.L1053:
	mov	r0, #0x16
	strb	r0, [r6, #0x14]
.L1047:
	ldrh	r0, [r7, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x6]
	bl	.L941	@ far jump
.L1057:
	bl	RfuHasErrored
	cmp	r0, #0
	beq	.L1058	@cond_branch
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	bl	IsUnionRoomListenTaskActive
	cmp	r0, #0x1
	bne	.L1059	@cond_branch
	ldr	r0, .L1248
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	UnionRoom_ScheduleFieldMessageAndExit
	b	.L1058
.L1249:
	.align	2, 0
.L1248:
	.word	gTexts_UR_ChatDeclined
.L1059:
	ldr	r0, .L1250
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	mov	r0, #0x1e
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
.L1058:
	ldr	r0, .L1250+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8491
	bl	.L941	@far jump
.LCB8491:
	mov	r0, #0x10
	bl	.L1174	@ far jump
.L1251:
	.align	2, 0
.L1250:
	.word	gTexts_UR_ChatDeclined
	.word	gReceivedRemoteLinkPlayers
.L1062:
	mov	r0, #0x42
	bl	PlaySE
	bl	sub_80F8FA0
	mov	r0, #0x0
	mov	r1, #0xc
	strb	r1, [r6, #0x14]
	add	r1, r6, #0
	add	r1, r1, #0x86
	strh	r0, [r1]
	bl	.L941	@ far jump
.L1063:
	bl	RfuHasErrored
	cmp	r0, #0
	beq	.L1064	@cond_branch
	mov	r0, #0x0
	bl	HandleCancelTrade
	mov	r0, #0x2
	bl	.L1174	@ far jump
.L1064:
	ldr	r0, .L1252
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8531
	bl	.L941	@far jump
.LCB8531:
	ldr	r0, .L1252+0x4
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	ldr	r0, .L1252+0x8
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x27
	bl	.L1174	@ far jump
.L1253:
	.align	2, 0
.L1252:
	.word	gReceivedRemoteLinkPlayers
	.word	gBlockSendBuffer
	.word	Task_ExchangeCards
.L1067:
	add	r0, r6, #0
	bl	ReceiveUnionRoomActivityPacket
	ldr	r0, .L1254
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8562
	bl	.L941	@far jump
.LCB8562:
	mov	r0, #0x21
	strb	r0, [r6, #0x14]
	ldr	r0, .L1254+0x4
	ldr	r4, .L1254+0x8
	add	r1, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	sub	r0, r0, #0x24
	ldrh	r0, [r0, #0x20]
	add	r1, r4, #0
	bl	PlayerHasMetTrainerBefore
	add	r5, r0, #0
	ldr	r0, .L1254+0xc
	ldr	r2, .L1254+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	b	.L941
.L1255:
	.align	2, 0
.L1254:
	.word	Task_ExchangeCards
	.word	gStringVar1
	.word	gLinkPlayers+0x24
	.word	gStringVar4
	.word	gTexts_UR_PlayerContactedYou
.L1069:
	add	r0, r6, #0
	bl	ReceiveUnionRoomActivityPacket
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1256
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8614
	b	.L941	@long jump
.LCB8614:
	mov	r0, #0x22
	b	.L1174
.L1257:
	.align	2, 0
.L1256:
	.word	gStringVar4
.L1071:
	add	r0, r6, #0
	bl	ReceiveUnionRoomActivityPacket
	add	r0, r6, #0
	bl	UnionRoom_HandleContactFromOtherPlayer
	cmp	r0, #0
	bne	.LCB8631
	b	.L941	@long jump
.LCB8631:
	ldr	r0, .L1258
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB8642
	b	.L941	@long jump
.LCB8642:
	mov	r0, #0x1
	bl	sub_80FBD6C
	ldr	r0, .L1258+0x4
	ldr	r1, .L1258+0x8
	bl	StringCopy
	mov	r0, #0x24
	b	.L1174
.L1259:
	.align	2, 0
.L1258:
	.word	gMain
	.word	gStringVar4
	.word	gText_UR_ChatEnded
.L1073:
	ldr	r1, .L1260
	mov	r0, #0x9
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	b	.L941
.L1261:
	.align	2, 0
.L1260:
	.word	gStringVar4
.L1074:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1076	@cond_branch
	cmp	r1, #0
	bgt	.L1089	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1086	@cond_branch
	b	.L941
.L1089:
	cmp	r1, #0x1
	beq	.L1086	@cond_branch
	b	.L941
.L1076:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x51
	strh	r1, [r0]
	ldr	r1, .L1262
	ldrb	r1, [r1]
	add	r5, r0, #0
	cmp	r1, #0x45
	bne	.L1077	@cond_branch
	mov	r4, #0x40
	orr	r4, r4, r1
	mov	r0, #0x1
	bl	GetSinglePartnerSpriteGenderParam
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x0
	bl	UpdateGameDataWithActivitySpriteGendersFlag
	b	.L1078
.L1263:
	.align	2, 0
.L1262:
	.word	sPlayerCurrActivity
.L1077:
	mov	r0, #0x40
	add	r4, r1, #0
	orr	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetSinglePartnerSpriteGenderParam
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x1
	bl	UpdateGameDataWithActivitySpriteGendersFlag
.L1078:
	ldr	r1, [r6, #0x8]
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	strh	r0, [r7, #0x6]
	ldr	r0, .L1264
	ldrb	r0, [r0]
	cmp	r0, #0x41
	bne	.L1079	@cond_branch
	bl	HasAtLeastTwoMonsOfLevel30OrLower
	cmp	r0, #0
	bne	.L1080	@cond_branch
	mov	r0, #0x52
	strh	r0, [r5]
	add	r0, r5, #0
	bl	Rfu_SendPacket
	mov	r0, #0xa
	strb	r0, [r6, #0x14]
	ldr	r0, .L1264+0x4
	ldr	r1, .L1264+0x8
	bl	StringCopy
	b	.L941
.L1265:
	.align	2, 0
.L1264:
	.word	sPlayerCurrActivity
	.word	gStringVar4
	.word	gText_UR_NeedTwoMonsOfLevel30OrLower2
.L1080:
	add	r0, r5, #0
	bl	Rfu_SendPacket
	mov	r0, #0xd
	b	.L1174
.L1079:
	cmp	r0, #0x48
	bne	.L1083	@cond_branch
	add	r0, r5, #0
	bl	Rfu_SendPacket
	ldr	r0, .L1266
	add	r1, r6, #0
	mov	r2, #0x1
	bl	ViewURoomPartnerTrainerCard
	mov	r0, #0x28
	b	.L1174
.L1267:
	.align	2, 0
.L1266:
	.word	gStringVar4
.L1083:
	add	r0, r5, #0
	bl	Rfu_SendPacket
	mov	r0, #0xd
	b	.L1174
.L1086:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x52
	strh	r1, [r0]
	bl	Rfu_SendPacket
	mov	r0, #0xa
	strb	r0, [r6, #0x14]
	ldr	r0, .L1268
	ldr	r1, .L1268+0x4
	ldrb	r1, [r1]
	bl	GetYouDeclinedTheOfferMessage
	b	.L941
.L1269:
	.align	2, 0
.L1268:
	.word	gStringVar4
	.word	sPlayerCurrActivity
.L1090:
	bl	SetCloseLinkCallback
	mov	r0, #0x24
	b	.L1174
.L1091:
	ldr	r0, .L1270
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.LCB8862
	b	.L941	@long jump
.LCB8862:
	ldr	r1, .L1270+0x4
	mov	r0, #0x40
	strb	r0, [r1]
	ldr	r1, .L1270+0x8
	mov	r0, #0x25
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x0
	mov	r2, #0xc
	bl	memset
	add	r0, r6, #0
	add	r0, r0, #0x86
	strh	r4, [r0]
	sub	r0, r0, #0x2
	strh	r4, [r0]
	b	.L941
.L1271:
	.align	2, 0
.L1270:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
	.word	gStringVar4
.L1093:
	mov	r0, #0x2
	strb	r0, [r6, #0x14]
	mov	r0, #0x0
	bl	HandleCancelTrade
	b	.L941
.L1094:
	ldr	r4, .L1272
	ldr	r0, .L1272+0x4
	ldrb	r0, [r0]
	mov	r1, #0x40
	orr	r1, r1, r0
	add	r0, r4, #0
	bl	GetURoomActivityStartMsg
	mov	r0, #0xe
	add	r1, r4, #0
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	b	.L941
.L1273:
	.align	2, 0
.L1272:
	.word	gStringVar4
	.word	sPlayerCurrActivity
.L1095:
	bl	SetLinkStandbyCallback
	mov	r0, #0xf
	b	.L1174
.L1096:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8934
	b	.L941	@long jump
.LCB8934:
	mov	r0, #0x10
	b	.L1174
.L1098:
	ldr	r0, [r6, #0x8]
	bl	Free
	ldr	r0, [r6]
	bl	Free
	ldr	r0, [r6, #0xc]
	bl	Free
	ldr	r0, [r6, #0x4]
	bl	Free
	add	r0, r6, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r6, #0
	add	r0, r0, #0x21
	bl	DestroyGroupMemberObjects
	mov	r0, #0x11
	b	.L1174
.L1099:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x12
	b	.L1174
.L1100:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8982
	b	.L941	@long jump
.LCB8982:
	bl	DeleteUnionObjWorkAndStopTask
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L1274
	ldr	r0, [r0]
	bl	Free
	bl	CreateTask_StartActivity
	b	.L941
.L1275:
	.align	2, 0
.L1274:
	.word	sUnionRoomMain
.L1102:
	bl	GetHostRFUtgtGname
	ldrh	r1, [r0, #0x8]
	ldr	r4, .L1276
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1103	@cond_branch
	mov	r0, #0x2b
	b	.L1174
.L1277:
	.align	2, 0
.L1276:
	.word	0x3ff
.L1103:
	bl	GetHostRFUtgtGname
	ldrh	r1, [r0, #0x8]
	add	r0, r4, #0
	and	r0, r0, r1
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bne	.L1105	@cond_branch
	ldr	r0, .L1278
	ldr	r1, .L1278+0x4
	bl	StringCopy
	b	.L1106
.L1279:
	.align	2, 0
.L1278:
	.word	gStringVar4
	.word	gText_UR_CancelRegistrationOfEgg
.L1105:
	ldr	r4, .L1280
	bl	GetHostRFUtgtGname
	ldrh	r0, [r0, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1280+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r4, .L1280+0x8
	bl	GetHostRFUtgtGname
	ldrb	r1, [r0, #0xb]
	lsr	r1, r1, #0x1
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L1280+0xc
	ldr	r1, .L1280+0x10
	bl	StringExpandPlaceholders
.L1106:
	ldr	r1, .L1280+0xc
	mov	r0, #0x2c
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	b	.L941
.L1281:
	.align	2, 0
.L1280:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_UR_CancelRegistrationOfMon
.L1107:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1282
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9116
	b	.L941	@long jump
.LCB9116:
	mov	r0, #0x2f
	b	.L1174
.L1283:
	.align	2, 0
.L1282:
	.word	gText_UR_RegisterMonAtTradingBoard
.L1109:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x1e
	ldr	r3, .L1284
	ldr	r4, .L1284+0x4
	str	r4, [sp]
	bl	ListMenuHandler_AllItemsAvailable
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9145
	b	.L941	@long jump
.LCB9145:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1112	@cond_branch
	cmp	r5, #0x3
	bne	.L1111	@cond_branch
.L1112:
	mov	r0, #0x4
	strb	r0, [r6, #0x14]
	mov	r0, #0x1
	bl	HandleCancelTrade
	b	.L1113
.L1285:
	.align	2, 0
.L1284:
	.word	sWindowTemplate_TradeBoardRegisterInfoExit
	.word	sListMenuTemplate_TradeBoardRegisterInfoExit
.L1111:
	cmp	r5, #0x1
	beq	.L1115	@cond_branch
	cmp	r5, #0x2
	beq	.L1116	@cond_branch
	b	.L1113
.L1115:
	ldr	r1, .L1286
	mov	r0, #0x35
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	b	.L1113
.L1287:
	.align	2, 0
.L1286:
	.word	gText_UR_WhichMonWillYouOffer
.L1116:
	ldr	r1, .L1288
	mov	r0, #0x2f
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
.L1113:
	bl	DestroyHelpMessageWindow_
	b	.L941
.L1289:
	.align	2, 0
.L1288:
	.word	gText_UR_TradingBoardInfo
.L1119:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x36
	b	.L1174
.L1120:
	ldr	r0, .L1290
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB9227
	b	.L941	@long jump
.LCB9227:
	ldr	r1, .L1290+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L1290+0x8
	ldr	r0, .L1290+0xc
	str	r0, [r1]
	ldr	r1, .L1290+0x10
	mov	r0, #0x8
	bl	ChooseMonForTradingBoard
	b	.L941
.L1291:
	.align	2, 0
.L1290:
	.word	gPaletteFade
	.word	sUnionRoomTrade
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptUnionRoom
	.word	CB2_ReturnToField
.L1122:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x1e
	ldr	r3, .L1292
	ldr	r4, .L1292+0x4
	str	r4, [sp]
	bl	ListMenuHandler_AllItemsAvailable
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9270
	b	.L941	@long jump
.LCB9270:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1126	@cond_branch
	cmp	r5, #0x12
	bne	.L1127	@cond_branch
.L1126:
	ldr	r0, .L1292+0x8
	bl	ResetUnionRoomTrade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	RfuUpdatePlayerGnameStateAndSend
	ldr	r0, .L1292+0xc
	bl	UnionRoom_ScheduleFieldMessageAndExit
	b	.L941
.L1293:
	.align	2, 0
.L1292:
	.word	sWindowTemplate_TypeNames
	.word	sListMenuTemplate_TypeNames
	.word	sUnionRoomTrade
	.word	gText_UR_RegistrationCanceled
.L1127:
	ldr	r0, .L1294
	strh	r5, [r0, #0x2]
	mov	r0, #0x37
	b	.L1174
.L1295:
	.align	2, 0
.L1294:
	.word	sUnionRoomTrade
.L1129:
	ldr	r2, .L1296
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	RfuUpdatePlayerGnameStateAndSend
	ldr	r0, .L1296+0x4
	bl	UnionRoom_ScheduleFieldMessageAndExit
	b	.L941
.L1297:
	.align	2, 0
.L1296:
	.word	sUnionRoomTrade
	.word	gText_UR_RegistraionCompleted
.L1130:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1132	@cond_branch
	cmp	r1, #0
	bgt	.L1137	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1134	@cond_branch
	b	.L941
.L1137:
	cmp	r1, #0x1
	beq	.L1134	@cond_branch
	b	.L941
.L1132:
	mov	r0, #0x38
	b	.L1174
.L1134:
	mov	r0, #0x1
	bl	HandleCancelTrade
	mov	r0, #0x4
	b	.L1174
.L1138:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1298
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9382
	b	.L941	@long jump
.LCB9382:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	RfuUpdatePlayerGnameStateAndSend
	ldr	r0, .L1298+0x4
	bl	ResetUnionRoomTrade
	mov	r0, #0x1
	bl	HandleCancelTrade
	mov	r0, #0x4
	b	.L1174
.L1299:
	.align	2, 0
.L1298:
	.word	gText_UR_RegistrationCanceled2
	.word	sUnionRoomTrade
.L1140:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1300
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9414
	b	.L941	@long jump
.LCB9414:
	mov	r0, #0x2e
	b	.L1174
.L1301:
	.align	2, 0
.L1300:
	.word	gText_UR_XCheckedTradingBoard
.L1142:
	bl	UR_BlankBg0
	mov	r0, #0x30
	b	.L1174
.L1143:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x4a
	add	r3, r6, #0
	add	r3, r3, #0x1e
	ldr	r4, .L1302
	str	r4, [sp]
	ldr	r4, .L1302+0x4
	str	r4, [sp, #0x4]
	ldr	r4, [r6]
	str	r4, [sp, #0x8]
	bl	TradeBoardMenuHandler
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9453
	b	.L941	@long jump
.LCB9453:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1147	@cond_branch
	cmp	r5, #0x8
	bne	.L1148	@cond_branch
.L1147:
	mov	r0, #0x1
	bl	HandleCancelTrade
	bl	DestroyHelpMessageWindow_
	mov	r0, #0x4
	b	.L1174
.L1303:
	.align	2, 0
.L1302:
	.word	gUnknown_8456F24
	.word	sTradeBoardListMenuTemplate
.L1148:
	ldr	r1, [r6]
	lsl	r3, r5, #0x5
	mov	r8, r3
	add	r1, r1, r8
	ldrb	r0, [r1, #0x9]
	lsr	r0, r0, #0x2
	ldrh	r1, [r1, #0x8]
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x16
	bl	IsRequestedTypeAndSpeciesInPlayerParty
	cmp	r0, #0x1
	beq	.L1151	@cond_branch
	cmp	r0, #0x1
	bgt	.L1155	@cond_branch
	cmp	r0, #0
	beq	.L1150	@cond_branch
	b	.L941
.L1155:
	cmp	r0, #0x2
	beq	.L1152	@cond_branch
	b	.L941
.L1150:
	ldr	r4, .L1304
	ldr	r1, [r6]
	add	r1, r1, r8
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r8
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r1, .L1304+0x4
	mov	r0, #0x31
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	strh	r5, [r7, #0x2]
	b	.L941
.L1305:
	.align	2, 0
.L1304:
	.word	gStringVar1
	.word	gText_UR_AskTrainerToMakeTrade
.L1151:
	ldr	r4, .L1306
	ldr	r1, [r6]
	add	r1, r1, r8
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r8
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L1306+0x4
	ldr	r1, [r6]
	add	r1, r1, r8
	ldrb	r2, [r1, #0x9]
	lsr	r2, r2, #0x2
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	ldr	r2, .L1306+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1306+0xc
	b	.L1177
.L1307:
	.align	2, 0
.L1306:
	.word	gStringVar1
	.word	gStringVar2
	.word	gTypeNames
	.word	gText_UR_DontHaveTypeTrainerWants
.L1152:
	ldr	r4, .L1308
	ldr	r1, [r6]
	add	r1, r1, r8
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r8
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L1308+0x4
	ldr	r1, [r6]
	add	r1, r1, r8
	ldrb	r2, [r1, #0x9]
	lsr	r2, r2, #0x2
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	ldr	r2, .L1308+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1308+0xc
.L1177:
	mov	r0, #0x2e
	bl	UnionRoom_ScheduleFieldMessageWithFollowupState
	b	.L941
.L1309:
	.align	2, 0
.L1308:
	.word	gStringVar1
	.word	gStringVar2
	.word	gTypeNames
	.word	gText_UR_DontHaveEggTrainerWants
.L1157:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1159	@cond_branch
	cmp	r1, #0
	bgt	.L1164	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1161	@cond_branch
	b	.L941
.L1164:
	cmp	r1, #0x1
	beq	.L1161	@cond_branch
	b	.L941
.L1159:
	mov	r0, #0x32
	b	.L1174
.L1161:
	mov	r0, #0x1
	bl	HandleCancelTrade
	mov	r0, #0x4
	b	.L1174
.L1165:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1310
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9698
	b	.L941	@long jump
.LCB9698:
	ldr	r4, .L1310+0x4
	mov	r0, #0x2
	strh	r0, [r4]
	ldr	r2, .L1310+0x8
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	lsl	r0, r0, #0x5
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r2, .L1310+0xc
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0x9]
	lsr	r0, r0, #0x2
	strb	r0, [r2]
	ldr	r2, .L1310+0x10
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	strh	r0, [r2]
	ldr	r1, .L1310+0x14
	ldr	r0, .L1310+0x18
	str	r0, [r1]
	ldr	r1, .L1310+0x1c
	mov	r0, #0x9
	bl	ChooseMonForTradingBoard
	add	r0, r6, #0
	bl	BackUpURoomField0ToDecompressionBuffer
	ldrh	r0, [r7, #0x2]
	strb	r0, [r4, #0x8]
	b	.L941
.L1311:
	.align	2, 0
.L1310:
	.word	gText_UR_WhichMonWillYouOffer
	.word	sUnionRoomTrade
	.word	gPartnerTgtGnameSub
	.word	gUnionRoomRequestedMonType
	.word	gUnionRoomOfferedSpecies
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptUnionRoom
	.word	CB2_ReturnToField
.L1167:
	ldr	r1, .L1312
	mov	r0, #0x44
	strb	r0, [r1]
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	mov	r2, #0x44
	bl	sub_80FC114
	ldr	r4, .L1312+0x4
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L1312+0x8
	ldr	r0, [r0, #0x8]
	bl	UR_PrintFieldMessage
	mov	r0, #0x19
	b	.L1174
.L1313:
	.align	2, 0
.L1312:
	.word	sPlayerCurrActivity
	.word	gStringVar1
	.word	gTexts_UR_CommunicatingWait
.L1168:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1314
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L941	@cond_branch
	mov	r0, #0x1
	bl	HandleCancelTrade
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	mov	r2, #0x2
	ldrsh	r1, [r7, r2]
	ldr	r2, [r6]
	bl	UpdateUnionGroupMemberFacing
	mov	r0, #0x4
	b	.L1174
.L1315:
	.align	2, 0
.L1314:
	.word	gStringVar4
.L1170:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1316
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L941	@cond_branch
	ldrb	r0, [r6, #0x15]
.L1174:
	strb	r0, [r6, #0x14]
.L941:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1317:
	.align	2, 0
.L1316:
	.word	gStringVar4
.Lfe51:
	.size	 Task_RunUnionRoom,.Lfe51-Task_RunUnionRoom
	.align	2, 0
	.globl	var_800D_set_xB
	.type	 var_800D_set_xB,function
	.thumb_func
var_800D_set_xB:
	push	{lr}
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L1319	@cond_branch
	ldr	r1, .L1320
	mov	r0, #0xb
	strh	r0, [r1]
.L1319:
	pop	{r0}
	bx	r0
.L1321:
	.align	2, 0
.L1320:
	.word	gSpecialVar_Result
.Lfe52:
	.size	 var_800D_set_xB,.Lfe52-var_800D_set_xB
	.align	2, 0
	.type	 ReceiveUnionRoomActivityPacket,function
	.thumb_func
ReceiveUnionRoomActivityPacket:
	push	{r4, r5, lr}
	add	r2, r0, #0
	ldr	r3, .L1325
	ldrh	r5, [r3, #0x12]
	add	r4, r5, #0
	cmp	r4, #0
	beq	.L1323	@cond_branch
	ldrh	r0, [r3, #0x10]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	mov	r0, #0xbc
	lsl	r0, r0, #0x6
	cmp	r1, r0
	bne	.L1323	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x86
	strh	r5, [r0]
	cmp	r4, #0x44
	bne	.L1323	@cond_branch
	ldrh	r1, [r3, #0x14]
	add	r0, r0, #0x2
	strh	r1, [r0]
	ldrh	r1, [r3, #0x16]
	add	r0, r0, #0x2
	strh	r1, [r0]
.L1323:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1326:
	.align	2, 0
.L1325:
	.word	gRecvCmds
.Lfe53:
	.size	 ReceiveUnionRoomActivityPacket,.Lfe53-ReceiveUnionRoomActivityPacket
	.align	2, 0
	.type	 UnionRoom_HandleContactFromOtherPlayer,function
	.thumb_func
UnionRoom_HandleContactFromOtherPlayer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r4, #0
	add	r5, r5, #0x86
	ldrh	r0, [r5]
	cmp	r0, #0
	beq	.L1328	@cond_branch
	ldr	r0, .L1335
	ldr	r1, .L1335+0x4
	add	r1, r1, #0x2f
	ldrb	r1, [r1]
	add	r2, r5, #0
	add	r3, r4, #0
	bl	GetChatLeaderActionRequestMessage
	cmp	r0, #0
	beq	.L1328	@cond_branch
	cmp	r0, #0x1
	bne	.L1331	@cond_branch
	mov	r0, #0x23
	strb	r0, [r4, #0x14]
	ldr	r1, .L1335+0x8
	ldrh	r0, [r5]
	strb	r0, [r1]
	mov	r0, #0x0
	b	.L1334
.L1336:
	.align	2, 0
.L1335:
	.word	gStringVar4
	.word	gLinkPlayers
	.word	sPlayerCurrActivity
.L1331:
	cmp	r0, #0x2
	bne	.L1328	@cond_branch
	mov	r0, #0x24
	strb	r0, [r4, #0x14]
	bl	SetCloseLinkCallback
	mov	r0, #0x0
	b	.L1334
.L1328:
	mov	r0, #0x1
.L1334:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 UnionRoom_HandleContactFromOtherPlayer,.Lfe54-UnionRoom_HandleContactFromOtherPlayer
	.align	2, 0
	.globl	InitUnionRoom
	.type	 InitUnionRoom,function
	.thumb_func
InitUnionRoom:
	push	{r4, r5, r6, lr}
	ldr	r5, .L1339
	mov	r0, #0x1
	neg	r0, r0
	add	r6, r0, #0
	mov	r0, #0xff
	strb	r0, [r5]
	ldr	r0, .L1339+0x4
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L1337	@cond_branch
	ldr	r0, .L1339+0x8
	mov	r1, #0x0
	bl	CreateTask
	ldr	r4, .L1339+0xc
	mov	r0, #0x96
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L1339+0x10
	str	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r0, #0x14]
	strb	r1, [r0, #0x16]
	strh	r1, [r0, #0x10]
	strh	r1, [r0, #0x12]
	ldrb	r0, [r5]
	orr	r0, r0, r6
	strb	r0, [r5]
.L1337:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1340:
	.align	2, 0
.L1339:
	.word	sUnionRoomPlayerName
	.word	gQuestLogState
	.word	Task_InitUnionRoom
	.word	sUnionRoomMain
	.word	sURoom
.Lfe55:
	.size	 InitUnionRoom,.Lfe55-InitUnionRoom
	.align	2, 0
	.type	 Task_InitUnionRoom,function
	.thumb_func
Task_InitUnionRoom:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1365
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x14]
	cmp	r0, #0x4
	bls	.LCB10081
	b	.L1342	@long jump
.LCB10081:
	lsl	r0, r0, #0x2
	ldr	r1, .L1365+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1366:
	.align	2, 0
.L1365:
	.word	sUnionRoomMain
	.word	.L1362
	.align	2, 0
	.align	2, 0
.L1362:
	.word	.L1343
	.word	.L1344
	.word	.L1345
	.word	.L1346
	.word	.L1361
.L1343:
	mov	r0, #0x1
	strb	r0, [r5, #0x14]
	b	.L1342
.L1344:
	mov	r0, #0xc
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRFUtgtGname
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_EnterUnionRoom
	mov	r0, #0x1
	bl	sub_80FB128
	mov	r0, #0x2
	strb	r0, [r5, #0x14]
	b	.L1342
.L1345:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0xc]
	mov	r1, #0x4
	bl	BlankUnkStruct_x1CArray
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	AllocZeroed
	str	r0, [r5]
	mov	r1, #0x8
	bl	BlankUnkStruct_x20Array
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	mov	r1, #0x1
	bl	BlankUnkStruct_x20Array
	ldr	r0, [r5, #0xc]
	ldr	r1, [r5, #0x4]
	mov	r2, #0xa
	bl	CreateTask_SearchForChildOrParent
	add	r1, r5, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	mov	r0, #0x3
	strb	r0, [r5, #0x14]
	b	.L1342
.L1346:
	bl	HandlePlayerListUpdate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	blt	.L1342	@cond_branch
	cmp	r0, #0x2
	bgt	.L1342	@cond_branch
	ldr	r0, .L1367
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L1342	@cond_branch
	mov	r6, #0x0
.L1354:
	ldr	r0, [r5]
	lsl	r4, r6, #0x5
	add	r1, r0, r4
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L1353	@cond_branch
	add	r1, r1, #0x10
	mov	r0, sp
	bl	StringCopy
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	mov	r0, sp
	bl	ConvertInternationalString
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	PlayerHasMetTrainerBefore
	cmp	r0, #0
	bne	.L1364	@cond_branch
.L1353:
	add	r6, r6, #0x1
	cmp	r6, #0x7
	ble	.L1354	@cond_branch
	b	.L1342
.L1368:
	.align	2, 0
.L1367:
	.word	sUnionRoomPlayerName
.L1364:
	ldr	r0, .L1369
	mov	r1, sp
	bl	StringCopy
	b	.L1342
.L1370:
	.align	2, 0
.L1369:
	.word	sUnionRoomPlayerName
.L1361:
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0xc]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	add	r0, r5, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	bl	DestroyTask
	ldr	r0, .L1371
	ldr	r0, [r0]
	bl	Free
	bl	LinkRfu_Shutdown
	add	r0, r4, #0
	bl	DestroyTask
.L1342:
	add	sp, sp, #0x20
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1372:
	.align	2, 0
.L1371:
	.word	sUnionRoomMain
.Lfe56:
	.size	 Task_InitUnionRoom,.Lfe56-Task_InitUnionRoom
	.align	2, 0
	.globl	BufferUnionRoomPlayerName
	.type	 BufferUnionRoomPlayerName,function
	.thumb_func
BufferUnionRoomPlayerName:
	push	{r4, lr}
	ldr	r4, .L1377
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L1374	@cond_branch
	mov	r0, #0x0
	b	.L1376
.L1378:
	.align	2, 0
.L1377:
	.word	sUnionRoomPlayerName
.L1374:
	ldr	r0, .L1379
	add	r1, r4, #0
	bl	StringCopy
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x1
.L1376:
	pop	{r4}
	pop	{r1}
	bx	r1
.L1380:
	.align	2, 0
.L1379:
	.word	gStringVar1
.Lfe57:
	.size	 BufferUnionRoomPlayerName,.Lfe57-BufferUnionRoomPlayerName
	.align	2, 0
	.type	 HandlePlayerListUpdate,function
	.thumb_func
HandlePlayerListUpdate:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r0, .L1415
	ldr	r4, [r0]
	mov	r7, #0x0
	mov	r6, #0x0
	mov	r5, #0x0
.L1385:
	ldr	r0, [r4, #0xc]
	add	r0, r0, r5
	ldr	r1, .L1415+0x4
	bl	AreGnameUnameDifferent
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x1
	bne	.L1384	@cond_branch
	ldr	r1, [r4, #0xc]
	ldr	r0, [r4, #0x8]
	add	r1, r1, r5
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldr	r1, [r4, #0x8]
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r4, #0x8]
	ldrb	r1, [r2, #0x1a]
	mov	r5, #0x4
	neg	r5, r5
	add	r0, r5, #0
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r2, #0x1a]
	ldr	r0, [r4, #0x8]
	strb	r3, [r0, #0x1b]
	mov	r0, #0x4
	b	.L1413
.L1416:
	.align	2, 0
.L1415:
	.word	sUnionRoomMain
	.word	sUnionGnameUnamePair_Dummy
.L1384:
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1385	@cond_branch
	mov	r6, #0x0
	mov	r9, r6
.L1391:
	ldr	r0, [r4]
	mov	r1, r9
	lsl	r5, r1, #0x5
	add	r2, r0, r5
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	mov	r8, r5
	cmp	r0, #0
	beq	.L1390	@cond_branch
	ldr	r1, [r4, #0x4]
	add	r0, r2, #0
	bl	Findx20Inx1CArray
	add	r6, r0, #0
	cmp	r6, #0xff
	beq	.L1393	@cond_branch
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrb	r1, [r2, #0x1a]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L1394	@cond_branch
	lsl	r0, r6, #0x3
	sub	r0, r0, r6
	lsl	r6, r0, #0x2
	ldr	r1, [r4, #0x4]
	add	r1, r1, r6
	add	r0, r2, #0
	bl	AreUnionRoomPlayerGnamesDifferent
	cmp	r0, #0
	beq	.L1395	@cond_branch
	ldr	r1, [r4]
	ldr	r0, [r4, #0x4]
	add	r1, r1, r5
	add	r0, r0, r6
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x40
	strb	r1, [r0, #0x1b]
	mov	r7, #0x1
	b	.L1399
.L1395:
	ldr	r0, [r4]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L1399	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1b]
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0
	bne	.L1399	@cond_branch
	b	.L1414
.L1394:
	mov	r3, #0x4
	neg	r3, r3
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0, #0x1b]
.L1414:
	mov	r7, #0x2
.L1399:
	ldr	r0, [r4]
	add	r0, r0, r8
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	b	.L1390
.L1393:
	ldr	r0, [r4]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1a]
	lsl	r2, r0, #0x1e
	lsr	r0, r2, #0x1e
	cmp	r0, #0x2
	beq	.L1401	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L1417
	cmp	r1, r0
	bls	.L1390	@cond_branch
	ldrb	r0, [r2, #0x1a]
	mov	r5, #0x4
	neg	r5, r5
	add	r1, r5, #0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	mov	r7, #0x2
	b	.L1390
.L1418:
	.align	2, 0
.L1417:
	.word	0x257
.L1401:
	lsr	r0, r2, #0x1e
	cmp	r0, #0x2
	bne	.L1390	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L1419
	cmp	r1, r0
	bls	.L1390	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x1
	bl	BlankUnkStruct_x20Array
.L1390:
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	cmp	r0, #0x7
	bhi	.LCB10600
	b	.L1391	@long jump
.LCB10600:
	mov	r5, #0x0
	mov	r6, #0x3
.L1410:
	ldr	r0, [r4]
	ldr	r1, [r4, #0x4]
	add	r1, r1, r5
	mov	r2, #0x8
	bl	Appendx1Ctox20
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L1409	@cond_branch
	mov	r7, #0x1
.L1409:
	add	r5, r5, #0x1c
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L1410	@cond_branch
	add	r0, r7, #0
.L1413:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1420:
	.align	2, 0
.L1419:
	.word	0x383
.Lfe58:
	.size	 HandlePlayerListUpdate,.Lfe58-HandlePlayerListUpdate
	.align	2, 0
	.type	 Task_SearchForChildOrParent,function
	.thumb_func
Task_SearchForChildOrParent:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	ldr	r1, .L1437
	add	r6, r0, r1
	mov	r7, #0x0
	mov	r0, sp
	add	r0, r0, #0x10
	str	r0, [sp, #0x18]
.L1425:
	lsl	r2, r7, #0x18
	lsr	r2, r2, #0x18
	mov	r0, sp
	ldr	r1, [sp, #0x18]
	bl	LinkRfu_GetNameIfCompatible
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, sp
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r2, sl
	lsl	r1, r2, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	ldr	r3, .L1437+0x4
	add	r1, r1, r3
	mov	r5, #0x10
	ldrsh	r1, [r1, r5]
	bl	IsPartnerActivityAcceptable
	cmp	r0, #0
	bne	.L1426	@cond_branch
	mov	r1, sp
	ldr	r0, .L1437+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1426:
	mov	r0, sp
	ldrb	r1, [r0]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1427	@cond_branch
	mov	r1, sp
	ldr	r0, .L1437+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1427:
	cmp	r4, #0
	bne	.L1428	@cond_branch
	lsl	r0, r7, #0x3
	mov	r8, r0
	add	r1, r7, #0x1
	mov	r9, r1
	cmp	r7, #0
	ble	.L1430	@cond_branch
	mov	r2, #0x0
	str	r2, [sp, #0x1c]
	add	r4, r7, #0
.L1432:
	ldr	r0, [r6, #0x4]
	ldr	r3, [sp, #0x1c]
	add	r0, r0, r3
	mov	r1, sp
	bl	AreGnameUnameDifferent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1431	@cond_branch
	mov	r1, sp
	ldr	r0, .L1437+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1431:
	ldr	r5, [sp, #0x1c]
	add	r5, r5, #0x1c
	str	r5, [sp, #0x1c]
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L1432	@cond_branch
.L1430:
	ldr	r1, [r6, #0x4]
	mov	r0, r8
	sub	r4, r0, r7
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	mov	r0, sp
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r6, #0x4]
	add	r0, r0, r4
	ldr	r1, .L1437+0x8
	bl	AreGnameUnameDifferent
	ldr	r3, [r6, #0x4]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	b	.L1424
.L1438:
	.align	2, 0
.L1437:
	.word	gTasks+0x8
	.word	gTasks
	.word	sUnionGnameUnamePair_Dummy
.L1428:
	ldr	r1, [r6]
	lsl	r4, r7, #0x3
	sub	r4, r4, r7
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	mov	r0, sp
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1439
	bl	AreGnameUnameDifferent
	ldr	r3, [r6]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	add	r7, r7, #0x1
	mov	r9, r7
.L1424:
	mov	r7, r9
	cmp	r7, #0x3
	bgt	.LCB10849
	b	.L1425	@long jump
.LCB10849:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1440:
	.align	2, 0
.L1439:
	.word	sUnionGnameUnamePair_Dummy
.Lfe59:
	.size	 Task_SearchForChildOrParent,.Lfe59-Task_SearchForChildOrParent
	.align	2, 0
	.type	 CreateTask_SearchForChildOrParent,function
	.thumb_func
CreateTask_SearchForChildOrParent:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r0, .L1442
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L1442+0x4
	add	r3, r1, r2
	str	r4, [r3]
	str	r5, [r3, #0x4]
	add	r2, r2, r1
	strh	r6, [r2, #0x8]
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1443:
	.align	2, 0
.L1442:
	.word	Task_SearchForChildOrParent
	.word	gTasks+0x8
.Lfe60:
	.size	 CreateTask_SearchForChildOrParent,.Lfe60-CreateTask_SearchForChildOrParent
	.align	2, 0
	.type	 Task_ListenForPartnersWithCompatibleSerialNos,function
	.thumb_func
Task_ListenForPartnersWithCompatibleSerialNos:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	ldr	r1, .L1457
	add	r6, r0, r1
	mov	r3, #0x0
.L1448:
	lsl	r4, r3, #0x3
	sub	r0, r4, r3
	lsl	r5, r0, #0x2
	ldr	r0, [r6]
	add	r0, r0, r5
	add	r1, r0, #0
	add	r1, r1, #0x10
	lsl	r2, r3, #0x18
	lsr	r2, r2, #0x18
	str	r3, [sp]
	bl	LinkRfu_GetNameIfCompatible
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r2, sl
	lsl	r1, r2, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	ldr	r7, .L1457+0x4
	add	r1, r1, r7
	mov	r2, #0xc
	ldrsh	r1, [r1, r2]
	bl	IsPartnerActivityAcceptable
	mov	r8, r4
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1449	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, r5
	ldr	r0, .L1457+0x8
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
.L1449:
	add	r4, r3, #0x1
	mov	r9, r4
	cmp	r3, #0
	ble	.L1451	@cond_branch
	str	r5, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	add	r4, r3, #0
.L1453:
	ldr	r1, [r6]
	ldr	r7, [sp, #0x8]
	add	r0, r1, r7
	ldr	r2, [sp, #0x4]
	add	r1, r1, r2
	str	r3, [sp]
	bl	AreGnameUnameDifferent
	lsl	r0, r0, #0x18
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1452	@cond_branch
	ldr	r1, [r6]
	ldr	r5, [sp, #0x4]
	add	r1, r1, r5
	ldr	r0, .L1457+0x8
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
.L1452:
	ldr	r7, [sp, #0x8]
	add	r7, r7, #0x1c
	str	r7, [sp, #0x8]
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L1453	@cond_branch
.L1451:
	mov	r0, r8
	sub	r4, r0, r3
	lsl	r4, r4, #0x2
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1457+0x8
	bl	AreGnameUnameDifferent
	ldr	r3, [r6]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	mov	r3, r9
	cmp	r3, #0x3
	ble	.L1448	@cond_branch
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1458:
	.align	2, 0
.L1457:
	.word	gTasks+0x8
	.word	gTasks
	.word	sUnionGnameUnamePair_Dummy
.Lfe61:
	.size	 Task_ListenForPartnersWithCompatibleSerialNos,.Lfe61-Task_ListenForPartnersWithCompatibleSerialNos
	.align	2, 0
	.type	 GetGnameWonderFlagByLinkGroup,function
	.thumb_func
GetGnameWonderFlagByLinkGroup:
	push	{lr}
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7
	bne	.L1460	@cond_branch
	ldrb	r1, [r0]
	mov	r0, #0x20
	b	.L1469
.L1460:
	cmp	r1, #0x8
	bne	.L1464	@cond_branch
	ldrb	r1, [r0]
	mov	r0, #0x10
.L1469:
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1464	@cond_branch
	mov	r0, #0x1
	b	.L1468
.L1464:
	mov	r0, #0x0
.L1468:
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 GetGnameWonderFlagByLinkGroup,.Lfe62-GetGnameWonderFlagByLinkGroup
	.align	2, 0
	.type	 Task_ListenForPartnersWithSerial7F7D,function
	.thumb_func
Task_ListenForPartnersWithSerial7F7D:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L1477
	add	r4, r1, r0
	mov	r6, #0x0
	sub	r0, r0, #0x8
	mov	r5, #0x0
	add	r1, r1, r0
	mov	r8, r1
.L1474:
	ldr	r0, [r4]
	add	r0, r0, r5
	add	r1, r0, #0
	add	r1, r1, #0x10
	lsl	r2, r6, #0x18
	lsr	r2, r2, #0x18
	bl	LinkRfu_GetNameIfSerial7F7D
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1475	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r2, r8
	mov	r3, #0xc
	ldrsh	r1, [r2, r3]
	bl	GetGnameWonderFlagByLinkGroup
.L1475:
	ldr	r0, [r4]
	add	r0, r0, r5
	ldr	r1, .L1477+0x4
	bl	AreGnameUnameDifferent
	ldr	r3, [r4]
	add	r3, r3, r5
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r7, #0x2
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1474	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1478:
	.align	2, 0
.L1477:
	.word	gTasks+0x8
	.word	sUnionGnameUnamePair_Dummy
.Lfe63:
	.size	 Task_ListenForPartnersWithSerial7F7D,.Lfe63-Task_ListenForPartnersWithSerial7F7D
	.align	2, 0
	.type	 CreateTask_ListenForPartnersWithCompatibleSerialNos,function
	.thumb_func
CreateTask_ListenForPartnersWithCompatibleSerialNos:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L1480
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	ldr	r1, .L1480+0x4
	add	r3, r2, r1
	str	r4, [r3]
	add	r1, r1, r2
	strh	r5, [r1, #0x4]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1481:
	.align	2, 0
.L1480:
	.word	Task_ListenForPartnersWithCompatibleSerialNos
	.word	gTasks+0x8
.Lfe64:
	.size	 CreateTask_ListenForPartnersWithCompatibleSerialNos,.Lfe64-CreateTask_ListenForPartnersWithCompatibleSerialNos
	.align	2, 0
	.type	 CreateTask_ListenForPartnersWithSerial7F7D,function
	.thumb_func
CreateTask_ListenForPartnersWithSerial7F7D:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L1483
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	ldr	r1, .L1483+0x4
	add	r3, r2, r1
	str	r4, [r3]
	add	r1, r1, r2
	strh	r5, [r1, #0x4]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1484:
	.align	2, 0
.L1483:
	.word	Task_ListenForPartnersWithSerial7F7D
	.word	gTasks+0x8
.Lfe65:
	.size	 CreateTask_ListenForPartnersWithSerial7F7D,.Lfe65-CreateTask_ListenForPartnersWithSerial7F7D
	.align	2, 0
	.type	 UR_PrintFieldMessage,function
	.thumb_func
UR_PrintFieldMessage:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LoadStdWindowFrameGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r0, .L1486
	add	r1, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x1
	bl	AddTextPrinterWithCustomSpeedForMessage
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L1487:
	.align	2, 0
.L1486:
	.word	gStringVar4
.Lfe66:
	.size	 UR_PrintFieldMessage,.Lfe66-UR_PrintFieldMessage
	.align	2, 0
	.type	 UR_RunTextPrinters_CheckPrinter0Active,function
	.thumb_func
UR_RunTextPrinters_CheckPrinter0Active:
	push	{lr}
	bl	RunTextPrinters_CheckPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1489	@cond_branch
	mov	r0, #0x0
	b	.L1491
.L1489:
	mov	r0, #0x1
.L1491:
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 UR_RunTextPrinters_CheckPrinter0Active,.Lfe67-UR_RunTextPrinters_CheckPrinter0Active
	.align	2, 0
	.type	 PrintOnTextbox,function
	.thumb_func
PrintOnTextbox:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1494	@cond_branch
	cmp	r0, #0x1
	beq	.L1495	@cond_branch
	b	.L1493
.L1494:
	bl	LoadStdWindowFrameGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r0, .L1500
	add	r1, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1493
.L1501:
	.align	2, 0
.L1500:
	.word	gStringVar4
.L1495:
	bl	RunTextPrinters_CheckPrinter0Active
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1493	@cond_branch
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L1499
.L1493:
	mov	r0, #0x0
.L1499:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 PrintOnTextbox,.Lfe68-PrintOnTextbox
	.align	2, 0
	.type	 UnionRoomHandleYesNo,function
	.thumb_func
UnionRoomHandleYesNo:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1504	@cond_branch
	cmp	r0, #0x1
	beq	.L1506	@cond_branch
	b	.L1503
.L1504:
	cmp	r5, #0
	beq	.L1505	@cond_branch
	mov	r0, #0x3
	neg	r0, r0
	b	.L1511
.L1505:
	bl	DisplayYesNoMenuDefaultYes
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1503
.L1506:
	cmp	r5, #0
	beq	.L1507	@cond_branch
	bl	DestroyYesNoMenu
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x3
	neg	r0, r0
	b	.L1511
.L1507:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L1503	@cond_branch
	strb	r5, [r4]
	add	r0, r1, #0
	b	.L1511
.L1503:
	mov	r0, #0x2
	neg	r0, r0
.L1511:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 UnionRoomHandleYesNo,.Lfe69-UnionRoomHandleYesNo
	.align	2, 0
	.type	 CreateTradeBoardWindow,function
	.thumb_func
CreateTradeBoardWindow:
	push	{r4, lr}
	add	sp, sp, #-0x8
	bl	AddWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r4, #0
	mov	r1, #0xff
	bl	FillWindowPixelBuffer
	ldr	r2, .L1513
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r3, #0x8
	bl	UR_AddTextPrinterParameterized
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	r0, r4, #0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L1514:
	.align	2, 0
.L1513:
	.word	gText_UR_NameWantedOfferLv
.Lfe70:
	.size	 CreateTradeBoardWindow,.Lfe70-CreateTradeBoardWindow
	.align	2, 0
	.type	 DeleteTradeBoardWindow,function
	.thumb_func
DeleteTradeBoardWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	add	r0, r4, #0
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 DeleteTradeBoardWindow,.Lfe71-DeleteTradeBoardWindow
	.align	2, 0
	.type	 ListMenuHandler_AllItemsAvailable,function
	.thumb_func
ListMenuHandler_AllItemsAvailable:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	add	r0, r3, #0
	ldrb	r4, [r7]
	cmp	r4, #0
	beq	.L1518	@cond_branch
	cmp	r4, #0x1
	beq	.L1519	@cond_branch
	b	.L1517
.L1518:
	bl	AddWindow
	strb	r0, [r5]
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L1526
	add	r2, r0, #0
	ldr	r1, [sp, #0x1c]
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	mov	r1, r9
	strb	r0, [r1]
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	b	.L1517
.L1527:
	.align	2, 0
.L1526:
	.word	gMultiuseListMenuTemplate
.L1519:
	mov	r3, r9
	ldrb	r0, [r3]
	bl	ListMenu_ProcessInput
	mov	r8, r0
	ldr	r0, .L1528
	ldrh	r1, [r0, #0x2e]
	and	r4, r4, r1
	cmp	r4, #0
	beq	.L1520	@cond_branch
	mov	r4, r9
	ldrb	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5]
	bl	RemoveWindow
	mov	r0, #0x0
	strb	r0, [r7]
	mov	r0, r8
	b	.L1525
.L1529:
	.align	2, 0
.L1528:
	.word	gMain
.L1520:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1517	@cond_branch
	mov	r6, r9
	ldrb	r0, [r6]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5]
	bl	RemoveWindow
	strb	r4, [r7]
	mov	r0, #0x2
	neg	r0, r0
	b	.L1525
.L1517:
	mov	r0, #0x1
	neg	r0, r0
.L1525:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 ListMenuHandler_AllItemsAvailable,.Lfe72-ListMenuHandler_AllItemsAvailable
	.align	2, 0
	.type	 TradeBoardMenuHandler,function
	.thumb_func
TradeBoardMenuHandler:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r9, r0
	add	r4, r1, #0
	add	r5, r2, #0
	add	r7, r3, #0
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1532	@cond_branch
	cmp	r0, #0x1
	beq	.L1533	@cond_branch
	b	.L1531
.L1532:
	ldr	r0, .L1543
	bl	CreateTradeBoardWindow
	strb	r0, [r7]
	ldr	r0, [sp, #0x1c]
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L1543+0x4
	add	r2, r0, #0
	ldr	r1, [sp, #0x20]
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldrb	r1, [r4]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	ListMenuInit
	strb	r0, [r5]
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	mov	r1, r9
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1531
.L1544:
	.align	2, 0
.L1543:
	.word	sTradeBoardWindowTemplate
	.word	gMultiuseListMenuTemplate
.L1533:
	ldrb	r0, [r5]
	bl	ListMenu_ProcessInput
	add	r1, r0, #0
	ldr	r0, .L1545
	ldrh	r2, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L1531	@cond_branch
	cmp	r1, #0x8
	beq	.L1536	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	cmp	r0, #0
	beq	.L1535	@cond_branch
.L1536:
	ldrb	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4]
	bl	RemoveWindow
	ldrb	r0, [r7]
	bl	DeleteTradeBoardWindow
	mov	r0, #0x0
	mov	r3, r9
	strb	r0, [r3]
	mov	r0, #0x2
	neg	r0, r0
	b	.L1542
.L1546:
	.align	2, 0
.L1545:
	.word	gMain
.L1535:
	ldr	r0, [sp, #0x24]
	bl	GetIndexOfNthTradeBoardOffer
	add	r6, r0, #0
	cmp	r6, #0
	blt	.L1538	@cond_branch
	ldrb	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4]
	bl	RemoveWindow
	ldrb	r0, [r7]
	bl	DeleteTradeBoardWindow
	mov	r0, r8
	mov	r7, r9
	strb	r0, [r7]
	add	r0, r6, #0
	b	.L1542
.L1538:
	mov	r0, #0x7
	bl	PlaySE
.L1531:
	mov	r0, #0x1
	neg	r0, r0
.L1542:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 TradeBoardMenuHandler,.Lfe73-TradeBoardMenuHandler
	.align	2, 0
	.type	 UR_BlankBg0,function
	.thumb_func
UR_BlankBg0:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 UR_BlankBg0,.Lfe74-UR_BlankBg0
	.align	2, 0
	.type	 JoinGroup_BlankBg0AndEnableScriptContexts,function
	.thumb_func
JoinGroup_BlankBg0AndEnableScriptContexts:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	bl	ScriptContext_Enable
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 JoinGroup_BlankBg0AndEnableScriptContexts,.Lfe75-JoinGroup_BlankBg0AndEnableScriptContexts
	.align	2, 0
	.type	 UR_AddTextPrinterParameterized,function
	.thumb_func
UR_AddTextPrinterParameterized:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	ldr	r5, [sp, #0x1c]
	ldr	r4, [sp, #0x20]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r2, [sp]
	mov	r2, sp
	strb	r0, [r2, #0x4]
	mov	r0, sp
	strb	r1, [r0, #0x5]
	strb	r3, [r0, #0x6]
	strb	r5, [r0, #0x7]
	strb	r3, [r0, #0x8]
	strb	r5, [r0, #0x9]
	ldrb	r1, [r2, #0xc]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldr	r2, .L1562
	ldrb	r1, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	cmp	r4, #0x6
	bls	.LCB11939
	b	.L1550	@long jump
.LCB11939:
	lsl	r0, r4, #0x2
	ldr	r1, .L1562+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1563:
	.align	2, 0
.L1562:
	.word	gTextFlags
	.word	.L1558
	.align	2, 0
	.align	2, 0
.L1558:
	.word	.L1551
	.word	.L1552
	.word	.L1553
	.word	.L1554
	.word	.L1555
	.word	.L1556
	.word	.L1557
.L1551:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1560
.L1552:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x50
	b	.L1560
.L1553:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x60
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x70
	b	.L1560
.L1554:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1560
.L1555:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1560
.L1556:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r4, #0xf
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x70
	b	.L1561
.L1557:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r4, #0xf
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0xe0
.L1561:
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	mov	r1, sp
	ldrb	r0, [r1, #0xd]
	orr	r0, r0, r4
	strb	r0, [r1, #0xd]
	and	r0, r0, r3
	mov	r1, #0x90
.L1560:
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
.L1550:
	mov	r0, sp
	mov	r1, #0xff
	mov	r2, #0x0
	bl	AddTextPrinter
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 UR_AddTextPrinterParameterized,.Lfe76-UR_AddTextPrinterParameterized
	.align	2, 0
	.type	 BlankUnkStruct_x20Array,function
	.thumb_func
BlankUnkStruct_x20Array:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0
	beq	.L1566	@cond_branch
	ldr	r2, .L1570
	mov	r8, r2
	mov	r5, #0x0
	mov	r9, r5
	mov	r6, #0x4
	neg	r6, r6
	mov	ip, r6
	add	r2, r0, #0
	add	r2, r2, #0x18
	add	r4, r0, #0
	mov	r7, #0xff
	mov	sl, r7
	add	r3, r1, #0
.L1568:
	add	r1, r4, #0
	mov	r0, r8
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	mov	r0, sl
	strh	r0, [r2]
	ldrb	r1, [r2, #0x2]
	mov	r0, ip
	and	r0, r0, r1
	mov	r1, #0x5
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r2, #0x2]
	mov	r5, r9
	strb	r5, [r2, #0x3]
	add	r2, r2, #0x20
	add	r4, r4, #0x20
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L1568	@cond_branch
.L1566:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1571:
	.align	2, 0
.L1570:
	.word	sUnionGnameUnamePair_Dummy
.Lfe77:
	.size	 BlankUnkStruct_x20Array,.Lfe77-BlankUnkStruct_x20Array
	.align	2, 0
	.type	 BlankUnkStruct_x1CArray,function
	.thumb_func
BlankUnkStruct_x1CArray:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r1, .L1578
	mov	ip, r1
	mov	r5, #0x2
	neg	r5, r5
	mov	r8, r5
	add	r2, r0, #0
	add	r2, r2, #0x18
	add	r3, r0, #0
	mov	r4, #0x3
.L1576:
	add	r1, r3, #0
	mov	r0, ip
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldrb	r1, [r2]
	mov	r0, r8
	and	r0, r0, r1
	strb	r0, [r2]
	add	r2, r2, #0x1c
	add	r3, r3, #0x1c
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L1576	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1579:
	.align	2, 0
.L1578:
	.word	sUnionGnameUnamePair_Dummy
.Lfe78:
	.size	 BlankUnkStruct_x1CArray,.Lfe78-BlankUnkStruct_x1CArray
	.align	2, 0
	.type	 AreGnameUnameDifferent,function
	.thumb_func
AreGnameUnameDifferent:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r2, #0x0
	add	r4, r5, #0x2
	add	r3, r6, #0x2
.L1584:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1594	@cond_branch
	add	r2, r2, #0x1
	cmp	r2, #0x1
	ble	.L1584	@cond_branch
	mov	r2, #0x0
	add	r4, r5, #0
	add	r4, r4, #0x10
	add	r3, r6, #0
	add	r3, r3, #0x10
.L1590:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L1589	@cond_branch
.L1594:
	mov	r0, #0x1
	b	.L1593
.L1589:
	add	r2, r2, #0x1
	cmp	r2, #0x7
	ble	.L1590	@cond_branch
	mov	r0, #0x0
.L1593:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 AreGnameUnameDifferent,.Lfe79-AreGnameUnameDifferent
	.align	2, 0
	.type	 AreUnionRoomPlayerGnamesDifferent,function
	.thumb_func
AreUnionRoomPlayerGnamesDifferent:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldrb	r3, [r5, #0xa]
	mov	r0, #0x7f
	ldrb	r2, [r6, #0xa]
	add	r1, r0, #0
	and	r1, r1, r3
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L1605	@cond_branch
	mov	r0, #0x80
	add	r1, r0, #0
	and	r1, r1, r3
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L1605	@cond_branch
	mov	r2, #0x0
	add	r4, r5, #0x4
	add	r3, r6, #0x4
.L1601:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1607	@cond_branch
	add	r2, r2, #0x1
	cmp	r2, #0x3
	ble	.L1601	@cond_branch
	ldrh	r2, [r5, #0x8]
	ldr	r0, .L1608
	ldrh	r3, [r6, #0x8]
	add	r1, r0, #0
	and	r1, r1, r2
	and	r0, r0, r3
	cmp	r1, r0
	bne	.L1605	@cond_branch
	ldrb	r2, [r5, #0x9]
	mov	r0, #0xfc
	ldrb	r3, [r6, #0x9]
	add	r1, r0, #0
	and	r1, r1, r2
	and	r0, r0, r3
	cmp	r1, r0
	bne	.L1605	@cond_branch
	mov	r0, #0x0
	b	.L1606
.L1609:
	.align	2, 0
.L1608:
	.word	0x3ff
.L1607:
.L1605:
	mov	r0, #0x1
.L1606:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 AreUnionRoomPlayerGnamesDifferent,.Lfe80-AreUnionRoomPlayerGnamesDifferent
	.align	2, 0
	.type	 Findx20Inx1CArray,function
	.thumb_func
Findx20Inx1CArray:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	mov	r7, #0xff
	mov	r6, #0x0
	add	r4, r1, #0
	add	r4, r4, #0x18
	add	r5, r1, #0
.L1614:
	ldrb	r1, [r4]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1613	@cond_branch
	mov	r0, r8
	add	r1, r5, #0
	bl	AreGnameUnameDifferent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1613	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r7, r0, #0x18
	ldrb	r0, [r4]
	mov	r2, #0x2
	neg	r2, r2
	add	r1, r2, #0
	and	r0, r0, r1
	strb	r0, [r4]
.L1613:
	add	r4, r4, #0x1c
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1614	@cond_branch
	add	r0, r7, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 Findx20Inx1CArray,.Lfe81-Findx20Inx1CArray
	.align	2, 0
	.type	 Appendx1Ctox20,function
	.thumb_func
Appendx1Ctox20:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r3, r0, #0
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r1, [r1, #0x18]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1618	@cond_branch
	mov	r5, #0x0
	cmp	r5, r6
	bge	.L1618	@cond_branch
	mov	r0, #0x4
	neg	r0, r0
	mov	r9, r0
	mov	r1, #0x2
	neg	r1, r1
	mov	ip, r1
	add	r2, r3, #0
	add	r2, r2, #0x18
	add	r1, r3, #0
.L1622:
	ldrb	r0, [r2, #0x2]
	mov	r3, #0x3
	and	r3, r3, r0
	cmp	r3, #0
	bne	.L1621	@cond_branch
	mov	r0, r8
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	strh	r3, [r2]
	ldrb	r1, [r2, #0x2]
	mov	r0, r9
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x2]
	mov	r0, #0x40
	strb	r0, [r2, #0x3]
	mov	r0, r8
	ldrb	r1, [r0, #0x18]
	mov	r0, ip
	and	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1, #0x18]
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	b	.L1625
.L1621:
	add	r2, r2, #0x20
	add	r1, r1, #0x20
	add	r5, r5, #0x1
	cmp	r5, r6
	blt	.L1622	@cond_branch
.L1618:
	mov	r0, #0xff
.L1625:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe82:
	.size	 Appendx1Ctox20,.Lfe82-Appendx1Ctox20
	.align	2, 0
	.type	 PrintUnionRoomGroupOnWindow,function
	.thumb_func
PrintUnionRoomGroupOnWindow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x30
	add	r4, r1, #0
	add	r5, r3, #0
	ldr	r3, [sp, #0x50]
	ldr	r1, [sp, #0x54]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L1628
	mov	r8, r0
	add	r1, r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1628+0x4
	mov	r0, r8
	bl	StringAppend
	str	r6, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, #0x0
	mov	r2, r8
	add	r3, r4, #0
	bl	UR_AddTextPrinterParameterized
	add	r4, r4, #0x12
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r9, r4
	ldrb	r0, [r5, #0xa]
	lsl	r0, r0, #0x19
	lsr	r2, r0, #0x19
	ldrb	r1, [r5, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1627	@cond_branch
	mov	r0, #0x40
	and	r2, r2, r0
	cmp	r2, #0
	bne	.L1627	@cond_branch
	add	r4, sp, #0x10
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	str	r6, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, #0x2
	add	r2, r4, #0
	mov	r3, r9
	bl	UR_AddTextPrinterParameterized
	ldrb	r1, [r5, #0x2]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1628+0x8
	mov	r0, r8
	bl	StringCopy
	mov	r0, r8
	add	r1, sp, #0x8
	bl	StringAppend
	mov	r3, r9
	add	r3, r3, #0x4d
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r6, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, #0x0
	mov	r2, r8
	bl	UR_AddTextPrinterParameterized
.L1627:
	add	sp, sp, #0x30
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1629:
	.align	2, 0
.L1628:
	.word	gStringVar4
	.word	gText_UR_Colon
	.word	gText_UR_ID
.Lfe83:
	.size	 PrintUnionRoomGroupOnWindow,.Lfe83-PrintUnionRoomGroupOnWindow
	.align	2, 0
	.type	 PrintGroupMemberCandidateOnWindowWithColor,function
	.thumb_func
PrintGroupMemberCandidateOnWindowWithColor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x30
	add	r5, r3, #0
	ldr	r3, [sp, #0x4c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	ldrb	r1, [r5, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1631	@cond_branch
	add	r4, sp, #0x10
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	mov	r0, r8
	str	r0, [sp]
	str	r7, [sp, #0x4]
	mov	r0, r9
	mov	r1, #0x2
	add	r2, r4, #0
	add	r3, r6, #0
	bl	UR_AddTextPrinterParameterized
	ldrb	r1, [r5, #0x2]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L1632
	ldr	r1, .L1632+0x4
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, sp, #0x8
	bl	StringAppend
	add	r3, r6, #0
	add	r3, r3, #0x47
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, r8
	str	r0, [sp]
	str	r7, [sp, #0x4]
	mov	r0, r9
	mov	r1, #0x0
	add	r2, r4, #0
	bl	UR_AddTextPrinterParameterized
.L1631:
	add	sp, sp, #0x30
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1633:
	.align	2, 0
.L1632:
	.word	gStringVar4
	.word	gText_UR_ID
.Lfe84:
	.size	 PrintGroupMemberCandidateOnWindowWithColor,.Lfe84-PrintGroupMemberCandidateOnWindowWithColor
	.align	2, 0
	.type	 PlayerIsTalkingToUnionRoomAide,function
	.thumb_func
PlayerIsTalkingToUnionRoomAide:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x9
	bne	.L1637	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x8
	bne	.L1637	@cond_branch
	ldr	r0, .L1640
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x2
	beq	.L1638	@cond_branch
	cmp	r0, #0
	bne	.L1637	@cond_branch
.L1638:
	mov	r0, #0x1
	b	.L1639
.L1641:
	.align	2, 0
.L1640:
	.word	gPlayerAvatar
.L1637:
	mov	r0, #0x0
.L1639:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe85:
	.size	 PlayerIsTalkingToUnionRoomAide,.Lfe85-PlayerIsTalkingToUnionRoomAide
	.align	2, 0
	.type	 GetResponseIdx_InviteToURoomActivity,function
	.thumb_func
GetResponseIdx_InviteToURoomActivity:
	push	{lr}
	cmp	r0, #0x4
	beq	.L1645	@cond_branch
	cmp	r0, #0x4
	ble	.L1648	@cond_branch
	cmp	r0, #0x5
	beq	.L1644	@cond_branch
	cmp	r0, #0x8
	beq	.L1646	@cond_branch
	b	.L1648
.L1644:
	mov	r0, #0x1
	b	.L1651
.L1645:
	mov	r0, #0x2
	b	.L1651
.L1646:
	mov	r0, #0x3
	b	.L1651
.L1648:
	mov	r0, #0x0
.L1651:
	pop	{r1}
	bx	r1
.Lfe86:
	.size	 GetResponseIdx_InviteToURoomActivity,.Lfe86-GetResponseIdx_InviteToURoomActivity
	.align	2, 0
	.type	 ConvPartnerUnameAndGetWhetherMetAlready,function
	.thumb_func
ConvPartnerUnameAndGetWhetherMetAlready:
	push	{r4, lr}
	add	sp, sp, #-0x20
	add	r4, r0, #0
	add	r1, r4, #0
	add	r1, r1, #0x10
	mov	r0, sp
	bl	StringCopy
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	mov	r0, sp
	bl	ConvertInternationalString
	add	r4, r4, #0x2
	add	r0, r4, #0
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	PlayerHasMetTrainerBefore
	add	sp, sp, #0x20
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 ConvPartnerUnameAndGetWhetherMetAlready,.Lfe87-ConvPartnerUnameAndGetWhetherMetAlready
	.align	2, 0
	.type	 UnionRoomGetPlayerInteractionResponse,function
	.thumb_func
UnionRoomGetPlayerInteractionResponse:
	push	{r4, r5, r6, r7, lr}
	add	r7, r3, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x13
	add	r5, r0, r2
	ldrb	r1, [r5, #0xa]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1654	@cond_branch
	cmp	r6, #0
	bne	.L1654	@cond_branch
	ldr	r4, .L1670
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	add	r0, r5, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	PlayerHasMetTrainerBefore
	add	r2, r0, #0
	ldrb	r1, [r5, #0xa]
	mov	r0, #0x7f
	and	r0, r0, r1
	cmp	r0, #0x45
	bne	.L1655	@cond_branch
	ldr	r0, .L1670+0x4
	ldr	r3, .L1670+0x8
	lsl	r1, r7, #0x2
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	mov	r0, #0x2
	b	.L1667
.L1671:
	.align	2, 0
.L1670:
	.word	gStringVar1
	.word	gStringVar4
	.word	gTexts_UR_JoinChat
.L1655:
	ldr	r0, .L1672
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	UR_PrintFieldMessage
	mov	r0, #0x1
	b	.L1667
.L1673:
	.align	2, 0
.L1672:
	.word	gTexts_UR_CommunicatingWait
.L1654:
	ldr	r4, .L1674
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	cmp	r6, #0
	beq	.L1658	@cond_branch
	add	r0, r5, r6
	ldrb	r0, [r0, #0x3]
	lsr	r7, r0, #0x3
	mov	r0, #0x1
	and	r7, r7, r0
.L1658:
	ldrb	r0, [r5, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r1, #0x3f
	and	r1, r1, r0
	cmp	r1, #0x4
	beq	.L1661	@cond_branch
	cmp	r1, #0x4
	bgt	.L1666	@cond_branch
	cmp	r1, #0x1
	beq	.L1660	@cond_branch
	b	.L1664
.L1675:
	.align	2, 0
.L1674:
	.word	gStringVar1
.L1666:
	cmp	r1, #0x5
	beq	.L1662	@cond_branch
	cmp	r1, #0x8
	beq	.L1663	@cond_branch
	b	.L1664
.L1660:
	ldr	r5, .L1676
	ldr	r4, .L1676+0x4
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xc0
	lsl	r1, r1, #0xa
	and	r1, r1, r0
	lsr	r1, r1, #0xe
	lsl	r0, r7, #0x4
	add	r1, r1, r0
	add	r1, r1, r4
	ldr	r1, [r1]
	b	.L1668
.L1677:
	.align	2, 0
.L1676:
	.word	gStringVar4
	.word	gTexts_UR_BattleReaction
.L1661:
	ldr	r5, .L1678
	ldr	r4, .L1678+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	lsl	r1, r7, #0x4
	b	.L1669
.L1679:
	.align	2, 0
.L1678:
	.word	gStringVar4
	.word	gTexts_UR_TradeReaction
.L1662:
	ldr	r5, .L1680
	ldr	r4, .L1680+0x4
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xc0
	lsl	r1, r1, #0xa
	and	r1, r1, r0
	lsr	r1, r1, #0xe
	lsl	r0, r7, #0x4
	add	r1, r1, r0
	add	r1, r1, r4
	ldr	r1, [r1]
	b	.L1668
.L1681:
	.align	2, 0
.L1680:
	.word	gStringVar4
	.word	gTexts_UR_ChatReaction
.L1663:
	ldr	r5, .L1682
	ldr	r4, .L1682+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	lsl	r1, r7, #0x3
.L1669:
	add	r0, r0, r1
	add	r0, r0, r4
	ldr	r1, [r0]
.L1668:
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	b	.L1659
.L1683:
	.align	2, 0
.L1682:
	.word	gStringVar4
	.word	gTexts_UR_TrainerCardReaction
.L1664:
	ldr	r0, .L1684
	ldr	r1, .L1684+0x4
	bl	StringExpandPlaceholders
.L1659:
	mov	r0, #0x0
.L1667:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1685:
	.align	2, 0
.L1684:
	.word	gStringVar4
	.word	gText_UR_TrainerAppearsBusy
.Lfe88:
	.size	 UnionRoomGetPlayerInteractionResponse,.Lfe88-UnionRoomGetPlayerInteractionResponse
	.align	2, 0
	.type	 nullsub_92,function
	.thumb_func
nullsub_92:
	bx	lr
.Lfe89:
	.size	 nullsub_92,.Lfe89-nullsub_92
	.align	2, 0
	.type	 TradeBoardPrintItemInfo,function
	.thumb_func
TradeBoardPrintItemInfo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	ldr	r4, [sp, #0x28]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldrh	r0, [r2, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	mov	r8, r0
	ldrb	r0, [r2, #0x9]
	lsr	r7, r0, #0x2
	ldrb	r0, [r2, #0xb]
	lsr	r0, r0, #0x1
	mov	r9, r0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	add	r2, r3, #0
	mov	r3, #0x8
	bl	UR_AddTextPrinterParameterized
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r8, r0
	bne	.L1688	@cond_branch
	ldr	r2, .L1690
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x44
	bl	UR_AddTextPrinterParameterized
	b	.L1689
.L1691:
	.align	2, 0
.L1690:
	.word	gText_UR_EggTrade
.L1688:
	add	r1, r7, #0x1
	add	r0, r6, #0
	mov	r2, #0x44
	add	r3, r5, #0
	bl	BlitMoveInfoIcon
	mov	r0, #0xb
	mov	r2, r8
	mul	r2, r2, r0
	ldr	r0, .L1692
	add	r2, r2, r0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x76
	bl	UR_AddTextPrinterParameterized
	add	r0, sp, #0x8
	mov	r1, r9
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, sp, #0x8
	mov	r2, #0x0
	bl	GetStringWidth
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r3, #0xda
	sub	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	add	r2, sp, #0x8
	bl	UR_AddTextPrinterParameterized
.L1689:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1693:
	.align	2, 0
.L1692:
	.word	gSpeciesNames
.Lfe90:
	.size	 TradeBoardPrintItemInfo,.Lfe90-TradeBoardPrintItemInfo
	.align	2, 0
	.type	 TradeBoardListMenuItemPrintFunc,function
	.thumb_func
TradeBoardListMenuItemPrintFunc:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	ldr	r0, .L1706
	ldr	r6, [r0]
	mov	r0, #0x3
	neg	r0, r0
	cmp	r4, r0
	bne	.L1695	@cond_branch
	ldr	r0, .L1706+0x4
	ldrb	r0, [r0, #0x14]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r8, r0
	bne	.L1695	@cond_branch
	bl	GetHostRFUtgtGname
	add	r2, r0, #0
	ldrh	r1, [r2, #0x8]
	ldr	r0, .L1706+0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1697	@cond_branch
	ldr	r0, .L1706+0xc
	ldr	r3, [r0]
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, r9
	mov	r1, r8
	bl	TradeBoardPrintItemInfo
	b	.L1697
.L1707:
	.align	2, 0
.L1706:
	.word	sUnionRoomMain
	.word	sTradeBoardListMenuTemplate
	.word	0x3ff
	.word	gSaveBlock2Ptr
.L1705:
	mov	r0, ip
	add	r1, r0, r4
	add	r1, r1, #0x10
	add	r0, sp, #0x4
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, sp, #0x4
	bl	ConvertInternationalString
	ldr	r2, [r6]
	add	r2, r2, r4
	mov	r0, #0x6
	str	r0, [sp]
	mov	r0, r9
	mov	r1, r8
	add	r3, sp, #0x4
	bl	TradeBoardPrintItemInfo
	b	.L1697
.L1695:
	mov	r5, #0x0
	mov	r1, #0x0
	ldr	r0, [r6]
	mov	ip, r0
	mov	r2, ip
	add	r2, r2, #0x8
	mov	r3, #0x0
	add	r7, r4, #0x1
.L1701:
	ldrb	r0, [r2, #0x12]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	add	r4, r3, #0
	cmp	r0, #0x1
	bne	.L1702	@cond_branch
	ldrh	r0, [r2]
	lsl	r0, r0, #0x16
	cmp	r0, #0
	beq	.L1702	@cond_branch
	add	r5, r5, #0x1
.L1702:
	cmp	r5, r7
	beq	.L1705	@cond_branch
	add	r2, r2, #0x20
	add	r3, r3, #0x20
	add	r1, r1, #0x1
	cmp	r1, #0x7
	ble	.L1701	@cond_branch
.L1697:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 TradeBoardListMenuItemPrintFunc,.Lfe91-TradeBoardListMenuItemPrintFunc
	.align	2, 0
	.type	 GetIndexOfNthTradeBoardOffer,function
	.thumb_func
GetIndexOfNthTradeBoardOffer:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	mov	r3, #0x0
	mov	r7, #0x3
	ldr	r6, .L1717
	add	r2, r0, #0
	add	r2, r2, #0x8
	add	r5, r1, #0x1
.L1712:
	ldrb	r1, [r2, #0x12]
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1713	@cond_branch
	ldrh	r1, [r2]
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1713	@cond_branch
	add	r4, r4, #0x1
.L1713:
	cmp	r4, r5
	bne	.L1711	@cond_branch
	add	r0, r3, #0
	b	.L1716
.L1718:
	.align	2, 0
.L1717:
	.word	0x3ff
.L1711:
	add	r2, r2, #0x20
	add	r3, r3, #0x1
	cmp	r3, #0x7
	ble	.L1712	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1716:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe92:
	.size	 GetIndexOfNthTradeBoardOffer,.Lfe92-GetIndexOfNthTradeBoardOffer
	.align	2, 0
	.type	 GetUnionRoomPlayerGender,function
	.thumb_func
GetUnionRoomPlayerGender:
	lsl	r0, r0, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	bx	lr
.Lfe93:
	.size	 GetUnionRoomPlayerGender,.Lfe93-GetUnionRoomPlayerGender
	.align	2, 0
	.type	 IsRequestedTypeAndSpeciesInPlayerParty,function
	.thumb_func
IsRequestedTypeAndSpeciesInPlayerParty:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1721	@cond_branch
	mov	r4, #0x0
	b	.L1738
.L1725:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1739
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1734	@cond_branch
	add	r4, r4, #0x1
.L1738:
	ldr	r0, .L1739+0x4
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1725	@cond_branch
	mov	r0, #0x2
	b	.L1736
.L1740:
	.align	2, 0
.L1739:
	.word	gPlayerParty
	.word	gPlayerPartyCount
.L1721:
	mov	r4, #0x0
	ldr	r0, .L1741
	ldrb	r0, [r0]
	cmp	r4, r0
	bge	.L1730	@cond_branch
	ldr	r6, .L1741+0x4
.L1732:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1741+0x8
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r6
	ldrb	r0, [r1, #0x6]
	cmp	r0, r5
	beq	.L1734	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, r5
	bne	.L1731	@cond_branch
.L1734:
	mov	r0, #0x0
	b	.L1736
.L1742:
	.align	2, 0
.L1741:
	.word	gPlayerPartyCount
	.word	gBaseStats
	.word	gPlayerParty
.L1731:
	add	r4, r4, #0x1
	ldr	r0, .L1743
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1732	@cond_branch
.L1730:
	mov	r0, #0x1
.L1736:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1744:
	.align	2, 0
.L1743:
	.word	gPlayerPartyCount
.Lfe94:
	.size	 IsRequestedTypeAndSpeciesInPlayerParty,.Lfe94-IsRequestedTypeAndSpeciesInPlayerParty
	.align	2, 0
	.type	 GetURoomActivityRejectMsg,function
	.thumb_func
GetURoomActivityRejectMsg:
	push	{lr}
	add	r3, r0, #0
	cmp	r1, #0x44
	beq	.L1749	@cond_branch
	cmp	r1, #0x44
	bgt	.L1753	@cond_branch
	cmp	r1, #0x41
	beq	.L1747	@cond_branch
	b	.L1746
.L1753:
	cmp	r1, #0x45
	beq	.L1748	@cond_branch
	cmp	r1, #0x48
	beq	.L1750	@cond_branch
	b	.L1746
.L1747:
	ldr	r0, .L1755
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L1754
.L1756:
	.align	2, 0
.L1755:
	.word	gTexts_UR_BattleDeclined
.L1748:
	ldr	r0, .L1757
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L1754
.L1758:
	.align	2, 0
.L1757:
	.word	gTexts_UR_ChatDeclined
.L1749:
	ldr	r1, .L1759
.L1754:
	add	r0, r3, #0
	bl	StringExpandPlaceholders
	b	.L1746
.L1760:
	.align	2, 0
.L1759:
	.word	gText_UR_TradeOfferRejected
.L1750:
	ldr	r0, .L1761
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r3, #0
	bl	StringExpandPlaceholders
.L1746:
	pop	{r0}
	bx	r0
.L1762:
	.align	2, 0
.L1761:
	.word	gTexts_UR_ShowTrainerCardDeclined
.Lfe95:
	.size	 GetURoomActivityRejectMsg,.Lfe95-GetURoomActivityRejectMsg
	.align	2, 0
	.type	 GetURoomActivityStartMsg,function
	.thumb_func
GetURoomActivityStartMsg:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r6, r4, #0
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L1772
	mov	r0, #0x1
	add	r1, r3, #0
	eor	r1, r1, r0
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x13]
	cmp	r4, #0x44
	beq	.L1766	@cond_branch
	cmp	r4, #0x44
	bgt	.L1770	@cond_branch
	cmp	r4, #0x41
	beq	.L1765	@cond_branch
	b	.L1764
.L1773:
	.align	2, 0
.L1772:
	.word	gLinkPlayers
.L1770:
	cmp	r6, #0x45
	beq	.L1767	@cond_branch
	b	.L1764
.L1765:
	ldr	r2, .L1774
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L1771
.L1775:
	.align	2, 0
.L1774:
	.word	gTexts_UR_StartActivity
.L1766:
	ldr	r2, .L1776
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r2, r2, #0x8
.L1771:
	add	r1, r1, r2
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	StringCopy
	b	.L1764
.L1777:
	.align	2, 0
.L1776:
	.word	gTexts_UR_StartActivity
.L1767:
	ldr	r2, .L1778
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	StringCopy
.L1764:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1779:
	.align	2, 0
.L1778:
	.word	gTexts_UR_StartActivity
.Lfe96:
	.size	 GetURoomActivityStartMsg,.Lfe96-GetURoomActivityStartMsg
	.align	2, 0
	.type	 GetChatLeaderActionRequestMessage,function
	.thumb_func
GetChatLeaderActionRequestMessage:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	add	r5, r2, #0
	add	r6, r3, #0
	mov	r2, #0x0
	mov	r8, r2
	ldrh	r0, [r5]
	sub	r0, r0, #0x40
	cmp	r0, #0x8
	bls	.LCB13971
	b	.L1781	@long jump
.LCB13971:
	lsl	r0, r0, #0x2
	ldr	r1, .L1804
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1805:
	.align	2, 0
.L1804:
	.word	.L1800
	.align	2, 0
	.align	2, 0
.L1800:
	.word	.L1799
	.word	.L1782
	.word	.L1781
	.word	.L1781
	.word	.L1784
	.word	.L1783
	.word	.L1781
	.word	.L1781
	.word	.L1798
.L1782:
	ldr	r1, .L1806
	b	.L1802
.L1807:
	.align	2, 0
.L1806:
	.word	gText_UR_BattleChallenge
.L1783:
	ldr	r1, .L1808
	b	.L1802
.L1809:
	.align	2, 0
.L1808:
	.word	gText_UR_ChatInvitation
.L1784:
	add	r0, r6, #0
	add	r0, r0, #0x58
	ldr	r4, .L1810
	ldrh	r1, [r4, #0xc]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	add	r0, r0, #0x63
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1810+0x4
	add	r1, r1, r2
	bl	StringCopy
	mov	r4, #0x0
	b	.L1785
.L1811:
	.align	2, 0
.L1810:
	.word	sUnionRoomTrade
	.word	gSpeciesNames
.L1787:
	add	r4, r4, #0x1
.L1785:
	cmp	r4, #0x3
	bgt	.L1786	@cond_branch
	ldr	r0, .L1812
	ldr	r0, [r0]
	lsl	r1, r4, #0x5
	add	r0, r0, r1
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bne	.L1787	@cond_branch
	ldrh	r1, [r5, #0x4]
	add	r0, r6, #0
	add	r0, r0, #0x6e
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldrh	r1, [r5, #0x2]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1812+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	add	r0, r0, #0x79
	bl	StringCopy
	ldrh	r5, [r5, #0x2]
	mov	r8, r5
.L1786:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r8, r0
	bne	.L1791	@cond_branch
	ldr	r1, .L1812+0x8
	add	r0, r7, #0
	bl	StringCopy
	b	.L1803
.L1813:
	.align	2, 0
.L1812:
	.word	gRfuLinkStatus
	.word	gSpeciesNames
	.word	gText_UR_OfferToTradeEgg
.L1791:
	mov	r4, #0x0
	add	r5, r6, #0
	add	r5, r5, #0x58
.L1796:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	add	r5, r5, #0xb
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L1796	@cond_branch
	ldr	r1, .L1814
	add	r0, r7, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L1803
.L1815:
	.align	2, 0
.L1814:
	.word	gText_UR_OfferToTradeMon
.L1798:
	ldr	r1, .L1816
.L1802:
	add	r0, r7, #0
	bl	StringExpandPlaceholders
.L1803:
	mov	r2, #0x1
	b	.L1781
.L1817:
	.align	2, 0
.L1816:
	.word	gText_UR_ShowTrainerCard
.L1799:
	ldr	r1, .L1818
	add	r0, r7, #0
	bl	StringExpandPlaceholders
	mov	r2, #0x2
.L1781:
	add	r0, r2, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1819:
	.align	2, 0
.L1818:
	.word	gText_UR_ChatDropped
.Lfe97:
	.size	 GetChatLeaderActionRequestMessage,.Lfe97-GetChatLeaderActionRequestMessage
	.align	2, 0
	.type	 PollPartnerYesNoResponse,function
	.thumb_func
PollPartnerYesNoResponse:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1827
	ldrh	r1, [r0, #0x2]
	cmp	r1, #0
	beq	.L1821	@cond_branch
	cmp	r1, #0x51
	beq	.L1826	@cond_branch
	cmp	r1, #0x52
	bne	.L1821	@cond_branch
.L1826:
	add	r0, r2, #0
	add	r0, r0, #0x84
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L1825
.L1828:
	.align	2, 0
.L1827:
	.word	gRecvCmds
.L1821:
	mov	r0, #0x0
.L1825:
	pop	{r1}
	bx	r1
.Lfe98:
	.size	 PollPartnerYesNoResponse,.Lfe98-PollPartnerYesNoResponse
	.align	2, 0
	.globl	InUnionRoom
	.type	 InUnionRoom,function
	.thumb_func
InUnionRoom:
	push	{lr}
	mov	r2, #0x0
	ldr	r0, .L1831
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L1830	@cond_branch
	mov	r2, #0x1
.L1830:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L1832:
	.align	2, 0
.L1831:
	.word	gSaveBlock1Ptr
.Lfe99:
	.size	 InUnionRoom,.Lfe99-InUnionRoom
	.align	2, 0
	.type	 HasAtLeastTwoMonsOfLevel30OrLower,function
	.thumb_func
HasAtLeastTwoMonsOfLevel30OrLower:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r0, .L1843
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L1835	@cond_branch
.L1837:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L1843+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	cmp	r0, #0x1e
	bhi	.L1836	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	cmp	r0, r1
	beq	.L1836	@cond_branch
	add	r6, r6, #0x1
.L1836:
	add	r5, r5, #0x1
	ldr	r0, .L1843
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1837	@cond_branch
.L1835:
	cmp	r6, #0x1
	bgt	.L1840	@cond_branch
	mov	r0, #0x0
	b	.L1842
.L1844:
	.align	2, 0
.L1843:
	.word	gPlayerPartyCount
	.word	gPlayerParty
.L1840:
	mov	r0, #0x1
.L1842:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe100:
	.size	 HasAtLeastTwoMonsOfLevel30OrLower,.Lfe100-HasAtLeastTwoMonsOfLevel30OrLower
	.align	2, 0
	.type	 ResetUnionRoomTrade,function
	.thumb_func
ResetUnionRoomTrade:
	mov	r1, #0x0
	strh	r1, [r0]
	strh	r1, [r0, #0x2]
	str	r1, [r0, #0x4]
	strh	r1, [r0, #0xa]
	strh	r1, [r0, #0xc]
	strh	r1, [r0, #0xe]
	strh	r1, [r0, #0x10]
	str	r1, [r0, #0x14]
	bx	lr
.Lfe101:
	.size	 ResetUnionRoomTrade,.Lfe101-ResetUnionRoomTrade
	.align	2, 0
	.globl	Script_ResetUnionRoomTrade
	.type	 Script_ResetUnionRoomTrade,function
	.thumb_func
Script_ResetUnionRoomTrade:
	push	{lr}
	ldr	r0, .L1847
	bl	ResetUnionRoomTrade
	pop	{r0}
	bx	r0
.L1848:
	.align	2, 0
.L1847:
	.word	sUnionRoomTrade
.Lfe102:
	.size	 Script_ResetUnionRoomTrade,.Lfe102-Script_ResetUnionRoomTrade
	.align	2, 0
	.type	 RegisterTradeMonAndGetIsEgg,function
	.thumb_func
RegisterTradeMonAndGetIsEgg:
	push	{r4, r5, lr}
	add	r5, r1, #0
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L1853
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	strh	r0, [r5, #0xa]
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strh	r0, [r5, #0xc]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x4]
	ldrh	r1, [r5, #0xa]
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1850	@cond_branch
	mov	r0, #0x0
	b	.L1852
.L1854:
	.align	2, 0
.L1853:
	.word	gPlayerParty
.L1850:
	mov	r0, #0x1
.L1852:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe103:
	.size	 RegisterTradeMonAndGetIsEgg,.Lfe103-RegisterTradeMonAndGetIsEgg
	.align	2, 0
	.type	 RegisterTradeMon,function
	.thumb_func
RegisterTradeMon:
	push	{r4, r5, lr}
	add	r5, r1, #0
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L1856
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	strh	r0, [r5, #0xe]
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strh	r0, [r5, #0x10]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x14]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1857:
	.align	2, 0
.L1856:
	.word	gPlayerParty
.Lfe104:
	.size	 RegisterTradeMon,.Lfe104-RegisterTradeMon
	.align	2, 0
	.type	 GetPartyPositionOfRegisteredMon,function
	.thumb_func
GetPartyPositionOfRegisteredMon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r1, r1, #0x18
	mov	r2, #0x0
	mov	r8, r2
	cmp	r1, #0
	bne	.L1859	@cond_branch
	ldrh	r7, [r0, #0xa]
	ldr	r6, [r0, #0x4]
	b	.L1860
.L1868:
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	b	.L1862
.L1859:
	ldrh	r7, [r0, #0xe]
	ldr	r6, [r0, #0x14]
.L1860:
	mov	r5, #0x0
	b	.L1869
.L1864:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L1870
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	cmp	r0, r6
	bne	.L1863	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r7
	beq	.L1868	@cond_branch
.L1863:
	add	r5, r5, #0x1
.L1869:
	ldr	r0, .L1870+0x4
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1864	@cond_branch
.L1862:
	mov	r0, r8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1871:
	.align	2, 0
.L1870:
	.word	gPlayerParty
	.word	gPlayerPartyCount
.Lfe105:
	.size	 GetPartyPositionOfRegisteredMon,.Lfe105-GetPartyPositionOfRegisteredMon
	.align	2, 0
	.type	 HandleCancelTrade,function
	.thumb_func
HandleCancelTrade:
	push	{r4, lr}
	add	r4, r0, #0
	bl	UR_BlankBg0
	bl	UnlockPlayerFieldControls
	bl	UnionRoom_UnlockPlayerAndChatPartner
	ldr	r1, .L1874
	mov	r0, #0x0
	strb	r0, [r1]
	cmp	r4, #0
	beq	.L1873	@cond_branch
	ldr	r2, .L1874+0x4
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	RfuUpdatePlayerGnameStateAndSend
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	UpdateGameDataWithActivitySpriteGendersFlag
.L1873:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1875:
	.align	2, 0
.L1874:
	.word	sPlayerCurrActivity
	.word	sUnionRoomTrade
.Lfe106:
	.size	 HandleCancelTrade,.Lfe106-HandleCancelTrade
	.align	2, 0
	.type	 UR_EnableScriptContext2AndFreezeObjectEvents,function
	.thumb_func
UR_EnableScriptContext2AndFreezeObjectEvents:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjects_WaitForPlayer
	pop	{r0}
	bx	r0
.Lfe107:
	.size	 UR_EnableScriptContext2AndFreezeObjectEvents,.Lfe107-UR_EnableScriptContext2AndFreezeObjectEvents
	.align	2, 0
	.type	 GetSinglePartnerSpriteGenderParam,function
	.thumb_func
GetSinglePartnerSpriteGenderParam:
	push	{r4, lr}
	mov	r4, #0x80
	ldr	r3, .L1878
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r0, r1, r3
	ldrb	r2, [r0, #0x13]
	lsl	r2, r2, #0x3
	orr	r2, r2, r4
	add	r3, r3, #0x4
	add	r1, r1, r3
	ldr	r0, [r1]
	mov	r1, #0x7
	and	r0, r0, r1
	orr	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L1879:
	.align	2, 0
.L1878:
	.word	gLinkPlayers
.Lfe108:
	.size	 GetSinglePartnerSpriteGenderParam,.Lfe108-GetSinglePartnerSpriteGenderParam
	.align	2, 0
	.type	 GetActivePartnerSpriteGenderParam,function
	.thumb_func
GetActivePartnerSpriteGenderParam:
	push	{r4, lr}
	mov	r3, #0x80
	mov	r2, #0x0
	ldr	r4, [r0, #0xc]
.L1884:
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	ldrb	r0, [r1, #0x18]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L1883	@cond_branch
	ldrb	r0, [r1, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	lsl	r0, r0, #0x3
	orr	r3, r3, r0
	ldrb	r1, [r1, #0x2]
	mov	r0, #0x7
	and	r0, r0, r1
	orr	r3, r3, r0
	lsl	r0, r3, #0x18
	lsr	r3, r0, #0x18
	b	.L1882
.L1883:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L1884	@cond_branch
.L1882:
	add	r0, r3, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe109:
	.size	 GetActivePartnerSpriteGenderParam,.Lfe109-GetActivePartnerSpriteGenderParam
	.align	2, 0
	.type	 ViewURoomPartnerTrainerCard,function
	.thumb_func
ViewURoomPartnerTrainerCard:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	ldr	r0, .L1898
	add	r1, r1, r0
	mov	r8, r1
	bl	DynamicPlaceholderTextUtil_Reset
	mov	r6, r9
	add	r6, r6, #0xac
	bl	GetUnionRoomTrainerClass
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L1898+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringCopy
	mov	r0, #0x0
	add	r1, r6, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r1, r8
	add	r1, r1, #0x30
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r4, #0xb0
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1898+0x8
	mov	r2, r8
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r5, r9
	add	r5, r5, #0xca
	mov	r0, r8
	ldrh	r1, [r0, #0xc]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x3
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, #0xd9
	add	r2, r2, r9
	mov	sl, r2
	mov	r0, r8
	ldrh	r1, [r0, #0x10]
	mov	r0, sl
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r4, r9
	add	r4, r4, #0xe8
	mov	r2, r8
	ldrh	r1, [r2, #0x12]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	mov	r1, sl
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0x5
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r4, #0xc8
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1898+0xc
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	ldr	r0, .L1898+0x10
	add	r1, r4, #0
	bl	StringCopy
	mov	r0, r8
	ldrh	r1, [r0, #0x14]
	ldr	r4, .L1898+0x14
	cmp	r1, r4
	ble	.L1888	@cond_branch
	add	r1, r4, #0
.L1888:
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x0
	add	r1, r6, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, r8
	ldrh	r1, [r2, #0x16]
	cmp	r1, r4
	ble	.L1889	@cond_branch
	add	r1, r4, #0
.L1889:
	mov	r4, r9
	add	r4, r4, #0xbb
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, r8
	ldrh	r1, [r0, #0x20]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x3
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r7, #0x0
	mov	r6, #0x80
	lsl	r6, r6, #0x13
	mov	r5, r8
	add	r5, r5, #0x28
	mov	r4, sl
.L1893:
	ldrh	r1, [r5]
	add	r0, r4, #0
	bl	CopyEasyChatWord
	lsr	r0, r6, #0x18
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r6, r6, r2
	add	r5, r5, #0x2
	add	r4, r4, #0xf
	add	r7, r7, #0x1
	cmp	r7, #0x3
	ble	.L1893	@cond_branch
	mov	r4, #0xc8
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1898+0x18
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	ldr	r5, .L1898+0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	ldr	r0, [sp]
	cmp	r0, #0x1
	bne	.L1895	@cond_branch
	ldr	r1, .L1898+0x1c
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	b	.L1896
.L1899:
	.align	2, 0
.L1898:
	.word	gTrainerCards
	.word	gTrainerClassNames
	.word	gTexts_UR_CardColor
	.word	gText_UR_TrainerCardInfoPage1
	.word	gStringVar4
	.word	0x270f
	.word	gText_UR_TrainerCardInfoPage2
	.word	gText_UR_FinishedCheckingPlayersTrainerCard
.L1895:
	ldr	r2, [sp]
	cmp	r2, #0
	bne	.L1896	@cond_branch
	ldr	r0, .L1900
	mov	r2, r8
	ldrb	r1, [r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
.L1896:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1901:
	.align	2, 0
.L1900:
	.word	gTexts_UR_GladToMeetYou
.Lfe110:
	.size	 ViewURoomPartnerTrainerCard,.Lfe110-ViewURoomPartnerTrainerCard

	.lcomm	sLeader,4

	.lcomm	sGroup,4

	.lcomm	sURoom,4
.text
	.align	2, 0 @ Don't pad with nop

