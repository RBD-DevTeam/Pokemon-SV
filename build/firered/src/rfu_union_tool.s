@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 UnionObjWork,object
	.size	 UnionObjWork,4
UnionObjWork:
	.word	0x0
	.align	2, 0
	.type	 sUnionObjRefreshTimer,object
	.size	 sUnionObjRefreshTimer,4
sUnionObjRefreshTimer:
	.word	0x0
	.section .rodata
	.type	 sUnionObjectEventGfxIds,object
sUnionObjectEventGfxIds:
	.byte	0x29
	.byte	0x36
	.byte	0x27
	.byte	0x12
	.byte	0x13
	.byte	0x14
	.byte	0x19
	.byte	0x1a
	.space	2
	.byte	0x2a
	.byte	0x3a
	.byte	0x28
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x1c
	.byte	0x1d
	.space	2
	.size	 sUnionObjectEventGfxIds,20
	.align	1, 0
	.type	 sUnionPartnerCoords,object
sUnionPartnerCoords:
	.short	0x4
	.short	0x6
	.short	0xd
	.short	0x8
	.short	0xa
	.short	0x6
	.short	0x1
	.short	0x8
	.short	0xd
	.short	0x4
	.short	0x7
	.short	0x4
	.short	0x1
	.short	0x4
	.short	0x7
	.short	0x8
	.size	 sUnionPartnerCoords,32
	.type	 sFacingDirectionOffsets,object
sFacingDirectionOffsets:
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.size	 sFacingDirectionOffsets,10
	.type	 sOppositeFacingDirection,object
sOppositeFacingDirection:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x4
	.byte	0x3
	.size	 sOppositeFacingDirection,5
	.type	 sUnionGroupMemberFacings,object
sUnionGroupMemberFacings:
	.byte	0x1
	.byte	0x3
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.size	 sUnionGroupMemberFacings,5
	.type	 sUnionRoomLocalIds,object
sUnionRoomLocalIds:
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x2
	.byte	0x6
	.byte	0x5
	.byte	0x4
	.byte	0x3
	.size	 sUnionRoomLocalIds,8
	.align	1, 0
	.type	 sHidePlayerFlags,object
sHidePlayerFlags:
	.short	0x63
	.short	0x64
	.short	0x65
	.short	0x66
	.short	0x67
	.short	0x68
	.short	0x69
	.short	0x6a
	.size	 sHidePlayerFlags,16
.text
	.align	2, 0
	.type	 is_walking_or_running,function
	.thumb_func
is_walking_or_running:
	push	{lr}
	ldr	r0, .L7
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x2
	beq	.L4	@cond_branch
	cmp	r0, #0
	bne	.L3	@cond_branch
.L4:
	mov	r0, #0x1
	b	.L6
.L8:
	.align	2, 0
.L7:
	.word	gPlayerAvatar
.L3:
	mov	r0, #0x0
.L6:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 is_walking_or_running,.Lfe1-is_walking_or_running
	.align	2, 0
	.type	 GetUnionRoomPlayerGraphicsId,function
	.thumb_func
GetUnionRoomPlayerGraphicsId:
	ldr	r3, .L10
	mov	r2, #0x7
	and	r2, r2, r1
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r2, r2, r1
	add	r2, r2, r3
	ldrb	r0, [r2]
	bx	lr
.L11:
	.align	2, 0
.L10:
	.word	sUnionObjectEventGfxIds
.Lfe2:
	.size	 GetUnionRoomPlayerGraphicsId,.Lfe2-GetUnionRoomPlayerGraphicsId
	.align	2, 0
	.type	 GetUnionRoomPlayerFacingCoords,function
	.thumb_func
GetUnionRoomPlayerFacingCoords:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r4, .L13
	mov	r8, r4
	lsl	r0, r0, #0x2
	add	r4, r0, r4
	mov	r6, #0x0
	ldrsh	r5, [r4, r6]
	ldr	r6, .L13+0x4
	lsl	r1, r1, #0x1
	add	r4, r1, r6
	ldrb	r4, [r4, #0]
	lsl	r4, r4, #24
	asr	r4, r4, #24
	add	r5, r5, r4
	add	r5, r5, #0x7
	str	r5, [r2]
	mov	r2, #0x2
	add	r8, r8, r2
	add	r0, r0, r8
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	add	r6, r6, #0x1
	add	r1, r1, r6
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	add	r0, r0, r1
	add	r0, r0, #0x7
	str	r0, [r3]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	sUnionPartnerCoords
	.word	sFacingDirectionOffsets
.Lfe3:
	.size	 GetUnionRoomPlayerFacingCoords,.Lfe3-GetUnionRoomPlayerFacingCoords
	.align	2, 0
	.type	 IsUnionRoomPlayerFacingTileAt,function
	.thumb_func
IsUnionRoomPlayerFacingTileAt:
	push	{r4, r5, r6, r7, lr}
	mov	ip, r3
	ldr	r7, .L21
	lsl	r5, r0, #0x2
	add	r0, r5, r7
	mov	r4, #0x0
	ldrsh	r3, [r0, r4]
	ldr	r6, .L21+0x4
	lsl	r4, r1, #0x1
	add	r0, r4, r6
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r3, r3, r0
	add	r3, r3, #0x7
	cmp	r3, r2
	bne	.L18	@cond_branch
	add	r0, r7, #0x2
	add	r0, r5, r0
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	add	r0, r6, #0x1
	add	r0, r4, r0
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r1, r1, r0
	add	r1, r1, #0x7
	cmp	r1, ip
	bne	.L18	@cond_branch
	mov	r0, #0x1
	b	.L20
.L22:
	.align	2, 0
.L21:
	.word	sUnionPartnerCoords
	.word	sFacingDirectionOffsets
.L18:
	mov	r0, #0x0
.L20:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 IsUnionRoomPlayerFacingTileAt,.Lfe4-IsUnionRoomPlayerFacingTileAt
	.align	2, 0
	.type	 IsUnionRoomPlayerHidden,function
	.thumb_func
IsUnionRoomPlayerHidden:
	push	{lr}
	add	r0, r0, #0x63
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 IsUnionRoomPlayerHidden,.Lfe5-IsUnionRoomPlayerHidden
	.align	2, 0
	.type	 HideUnionRoomPlayer,function
	.thumb_func
HideUnionRoomPlayer:
	push	{lr}
	add	r0, r0, #0x63
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 HideUnionRoomPlayer,.Lfe6-HideUnionRoomPlayer
	.align	2, 0
	.type	 ShowUnionRoomPlayer,function
	.thumb_func
ShowUnionRoomPlayer:
	push	{lr}
	add	r0, r0, #0x63
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 ShowUnionRoomPlayer,.Lfe7-ShowUnionRoomPlayer
	.align	2, 0
	.type	 SetUnionRoomPlayerGfx,function
	.thumb_func
SetUnionRoomPlayerGfx:
	push	{lr}
	ldr	r2, .L27
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	VarSet
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	0x4010
.Lfe8:
	.size	 SetUnionRoomPlayerGfx,.Lfe8-SetUnionRoomPlayerGfx
	.align	2, 0
	.type	 CreateUnionRoomPlayerObjectEvent,function
	.thumb_func
CreateUnionRoomPlayerObjectEvent:
	push	{lr}
	ldr	r1, .L30
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L30+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	bl	TrySpawnObjectEvent
	pop	{r0}
	bx	r0
.L31:
	.align	2, 0
.L30:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
.Lfe9:
	.size	 CreateUnionRoomPlayerObjectEvent,.Lfe9-CreateUnionRoomPlayerObjectEvent
	.align	2, 0
	.type	 RemoveUnionRoomPlayerObjectEvent,function
	.thumb_func
RemoveUnionRoomPlayerObjectEvent:
	push	{lr}
	ldr	r1, .L33
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L33+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	bl	RemoveObjectEventByLocalIdAndMap
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
.Lfe10:
	.size	 RemoveUnionRoomPlayerObjectEvent,.Lfe10-RemoveUnionRoomPlayerObjectEvent
	.section .rodata
	.align	2, 0
.LC18:
	.ascii	"C:/WORK/POKeFRLG/src/pm_lgfr_ose/source/rfu_union_tool.c"
	.ascii	"\000"
	.align	2, 0
.LC20:
	.ascii	"0\000"
.text
	.align	2, 0
	.type	 SetUnionRoomPlayerEnterExitMovement,function
	.thumb_func
SetUnionRoomPlayerEnterExitMovement:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r1, #0
	ldr	r1, .L41
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L41+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L40	@cond_branch
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L41+0x8
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L40	@cond_branch
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L38	@cond_branch
	mov	r0, #0x1
	b	.L39
.L42:
	.align	2, 0
.L41:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
	.word	gObjectEvents
.L38:
	ldr	r0, .L43
	ldr	r1, .L43+0x4
	ldr	r2, .L43+0x8
	mov	r3, #0x1
	bl	AGBAssert
.L40:
	mov	r0, #0x0
.L39:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L44:
	.align	2, 0
.L43:
	.word	.LC18
	.word	0x183
	.word	.LC20
.Lfe11:
	.size	 SetUnionRoomPlayerEnterExitMovement,.Lfe11-SetUnionRoomPlayerEnterExitMovement
	.align	2, 0
	.type	 TryReleaseUnionRoomPlayerObjectEvent,function
	.thumb_func
TryReleaseUnionRoomPlayerObjectEvent:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L51
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L51+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L49	@cond_branch
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L51+0x8
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L47	@cond_branch
	mov	r0, #0x0
	b	.L50
.L52:
	.align	2, 0
.L51:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
	.word	gObjectEvents
.L47:
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L48	@cond_branch
	add	r0, r4, #0
	bl	UnfreezeObjectEvent
	b	.L49
.L48:
	add	r0, r4, #0
	bl	FreezeObjectEvent
.L49:
	mov	r0, #0x1
.L50:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 TryReleaseUnionRoomPlayerObjectEvent,.Lfe12-TryReleaseUnionRoomPlayerObjectEvent
	.section .rodata
	.align	2, 0
.LC28:
	.ascii	"UnionObjWork != NULL\000"
.text
	.align	2, 0
	.globl	ZeroUnionObjWork
	.type	 ZeroUnionObjWork,function
	.thumb_func
ZeroUnionObjWork:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L61
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L61+0x4
	str	r4, [r0]
	cmp	r4, #0
	bne	.L55	@cond_branch
	ldr	r0, .L61+0x8
	mov	r1, #0xdd
	lsl	r1, r1, #0x1
	ldr	r2, .L61+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L55:
	mov	r1, #0x0
	add	r0, r4, #0
	mov	r2, #0x7
.L59:
	strb	r1, [r0]
	strb	r1, [r0, #0x1]
	strb	r1, [r0, #0x2]
	strb	r1, [r0, #0x3]
	add	r0, r0, #0x4
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L59	@cond_branch
	bl	StartUnionObjAnimTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L62:
	.align	2, 0
.L61:
	.word	sUnionObjRefreshTimer
	.word	UnionObjWork
	.word	.LC18
	.word	.LC28
.Lfe13:
	.size	 ZeroUnionObjWork,.Lfe13-ZeroUnionObjWork
	.section .rodata
	.type	 sMovement_UnionPlayerExit,object
	.size	 sMovement_UnionPlayerExit,2
sMovement_UnionPlayerExit:
	.byte	0xa4
	.byte	0xfe
.text
	.align	2, 0
	.type	 AnimateUnionRoomPlayerDespawn,function
	.thumb_func
AnimateUnionRoomPlayerDespawn:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp	r0, #0
	beq	.L65	@cond_branch
	cmp	r0, #0x1
	beq	.L67	@cond_branch
	b	.L64
.L65:
	ldr	r1, .L72
	add	r0, r4, #0
	bl	SetUnionRoomPlayerEnterExitMovement
	cmp	r0, #0x1
	bne	.L64	@cond_branch
	add	r0, r4, #0
	bl	HideUnionRoomPlayer
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L64
.L73:
	.align	2, 0
.L72:
	.word	sMovement_UnionPlayerExit
.L67:
	add	r0, r4, #0
	bl	TryReleaseUnionRoomPlayerObjectEvent
	cmp	r0, #0
	beq	.L64	@cond_branch
	add	r0, r4, #0
	bl	RemoveUnionRoomPlayerObjectEvent
	add	r0, r4, #0
	bl	HideUnionRoomPlayer
	mov	r0, #0x0
	strb	r0, [r5]
	mov	r0, #0x1
	b	.L71
.L64:
	mov	r0, #0x0
.L71:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 AnimateUnionRoomPlayerDespawn,.Lfe14-AnimateUnionRoomPlayerDespawn
	.section .rodata
	.type	 sMovement_UnionPlayerEnter,object
	.size	 sMovement_UnionPlayerEnter,2
sMovement_UnionPlayerEnter:
	.byte	0xa5
	.byte	0xfe
.text
	.align	2, 0
	.type	 AnimateUnionRoomPlayerSpawn,function
	.thumb_func
AnimateUnionRoomPlayerSpawn:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	add	r5, r1, #0
	add	r7, r2, #0
	mov	r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp	r0, #0x2
	beq	.L82	@cond_branch
	cmp	r0, #0x2
	bgt	.L86	@cond_branch
	cmp	r0, #0
	beq	.L76	@cond_branch
	b	.L75
.L86:
	cmp	r0, #0x3
	beq	.L80	@cond_branch
	b	.L75
.L76:
	bl	is_walking_or_running
	cmp	r0, #0
	beq	.L75	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, #0x0
	ldrsh	r3, [r4, r0]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerFacingTileAt
	cmp	r0, #0x1
	beq	.L75	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	bl	player_get_pos_including_state_based_drift
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, #0x0
	ldrsh	r3, [r4, r0]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerFacingTileAt
	cmp	r0, #0x1
	beq	.L75	@cond_branch
	ldrb	r1, [r7, #0x1]
	add	r0, r5, #0
	bl	SetUnionRoomPlayerGfx
	add	r0, r5, #0
	bl	CreateUnionRoomPlayerObjectEvent
	add	r0, r5, #0
	bl	ShowUnionRoomPlayer
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
.L80:
	ldr	r1, .L88
	add	r0, r5, #0
	bl	SetUnionRoomPlayerEnterExitMovement
	cmp	r0, #0x1
	bne	.L75	@cond_branch
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L75
.L89:
	.align	2, 0
.L88:
	.word	sMovement_UnionPlayerEnter
.L82:
	add	r0, r5, #0
	bl	TryReleaseUnionRoomPlayerObjectEvent
	cmp	r0, #0
	beq	.L75	@cond_branch
	mov	r0, #0x0
	strb	r0, [r6]
	mov	r0, #0x1
	b	.L87
.L75:
	mov	r0, #0x0
.L87:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 AnimateUnionRoomPlayerSpawn,.Lfe15-AnimateUnionRoomPlayerSpawn
	.align	2, 0
	.type	 SpawnGroupLeader,function
	.thumb_func
SpawnGroupLeader:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, .L96
	lsl	r0, r0, #0x2
	ldr	r1, [r1]
	add	r4, r1, r0
	cmp	r1, #0
	bne	.L92	@cond_branch
	ldr	r0, .L96+0x4
	ldr	r1, .L96+0x8
	ldr	r2, .L96+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L92:
	mov	r0, #0x1
	strb	r0, [r4, #0x3]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetUnionRoomPlayerGraphicsId
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L93	@cond_branch
	mov	r0, #0x0
	b	.L95
.L97:
	.align	2, 0
.L96:
	.word	UnionObjWork
	.word	.LC18
	.word	0x231
	.word	.LC28
.L93:
	mov	r0, #0x1
.L95:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 SpawnGroupLeader,.Lfe16-SpawnGroupLeader
	.align	2, 0
	.type	 DespawnGroupLeader,function
	.thumb_func
DespawnGroupLeader:
	push	{r4, lr}
	ldr	r1, .L104
	lsl	r0, r0, #0x2
	ldr	r1, [r1]
	add	r4, r1, r0
	cmp	r1, #0
	bne	.L100	@cond_branch
	ldr	r0, .L104+0x4
	ldr	r1, .L104+0x8
	ldr	r2, .L104+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L100:
	mov	r0, #0x2
	strb	r0, [r4, #0x3]
	ldrb	r0, [r4]
	cmp	r0, #0x1
	beq	.L101	@cond_branch
	mov	r0, #0x0
	b	.L103
.L105:
	.align	2, 0
.L104:
	.word	UnionObjWork
	.word	.LC18
	.word	0x241
	.word	.LC28
.L101:
	mov	r0, #0x1
.L103:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 DespawnGroupLeader,.Lfe17-DespawnGroupLeader
	.align	2, 0
	.type	 AnimateUnionObj,function
	.thumb_func
AnimateUnionObj:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldrb	r1, [r4]
	cmp	r1, #0x1
	beq	.L115	@cond_branch
	cmp	r1, #0x1
	bgt	.L122	@cond_branch
	cmp	r1, #0
	beq	.L108	@cond_branch
	b	.L107
.L122:
	cmp	r1, #0x2
	beq	.L111	@cond_branch
	cmp	r1, #0x3
	beq	.L118	@cond_branch
	b	.L107
.L108:
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x1
	bne	.L107	@cond_branch
	mov	r0, #0x2
	strb	r0, [r4]
	strb	r1, [r4, #0x2]
.L111:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	RfuUnionGroupMemberIsInvisible
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L112	@cond_branch
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	bne	.L112	@cond_branch
	strb	r1, [r4]
	strb	r1, [r4, #0x2]
	add	r0, r5, #0
	bl	RemoveUnionRoomPlayerObjectEvent
	add	r0, r5, #0
	bl	HideUnionRoomPlayer
	b	.L107
.L112:
	add	r0, r4, #0x2
	add	r1, r5, #0
	add	r2, r4, #0
	bl	AnimateUnionRoomPlayerSpawn
	cmp	r0, #0x1
	bne	.L107	@cond_branch
	b	.L123
.L115:
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	bne	.L107	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x3
	strb	r0, [r4]
	strb	r1, [r4, #0x2]
.L118:
	add	r0, r4, #0x2
	add	r1, r5, #0
	add	r2, r4, #0
	bl	AnimateUnionRoomPlayerDespawn
	cmp	r0, #0x1
	bne	.L107	@cond_branch
	mov	r0, #0x0
.L123:
	strb	r0, [r4]
.L107:
	mov	r0, #0x0
	strb	r0, [r4, #0x3]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 AnimateUnionObj,.Lfe18-AnimateUnionObj
	.align	2, 0
	.type	 Task_AnimateUnionObjs,function
	.thumb_func
Task_AnimateUnionObjs:
	push	{r4, r5, lr}
	ldr	r5, .L132
	ldr	r0, [r5]
	cmp	r0, #0
	bne	.L126	@cond_branch
	ldr	r0, .L132+0x4
	ldr	r1, .L132+0x8
	ldr	r2, .L132+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L126:
	mov	r4, #0x0
.L130:
	lsl	r0, r4, #0x2
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r0, r4, #0
	bl	AnimateUnionObj
	add	r4, r4, #0x1
	cmp	r4, #0x7
	ble	.L130	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	UnionObjWork
	.word	.LC18
	.word	0x283
	.word	.LC28
.Lfe19:
	.size	 Task_AnimateUnionObjs,.Lfe19-Task_AnimateUnionObjs
	.align	2, 0
	.type	 StartUnionObjAnimTask,function
	.thumb_func
StartUnionObjAnimTask:
	push	{r4, lr}
	ldr	r4, .L138
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L135	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L137
.L139:
	.align	2, 0
.L138:
	.word	Task_AnimateUnionObjs
.L135:
	ldr	r0, .L140
	ldr	r1, .L140+0x4
	ldr	r2, .L140+0x8
	mov	r3, #0x1
	bl	AGBAssert
	mov	r0, #0x10
.L137:
	pop	{r4}
	pop	{r1}
	bx	r1
.L141:
	.align	2, 0
.L140:
	.word	.LC18
	.word	0x28f
	.word	.LC20
.Lfe20:
	.size	 StartUnionObjAnimTask,.Lfe20-StartUnionObjAnimTask
	.align	2, 0
	.type	 DestroyAnimateUnionObjsTask,function
	.thumb_func
DestroyAnimateUnionObjsTask:
	push	{lr}
	ldr	r0, .L144
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bhi	.L143	@cond_branch
	bl	DestroyTask
.L143:
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	Task_AnimateUnionObjs
.Lfe21:
	.size	 DestroyAnimateUnionObjsTask,.Lfe21-DestroyAnimateUnionObjsTask
	.align	2, 0
	.globl	DeleteUnionObjWorkAndStopTask
	.type	 DeleteUnionObjWorkAndStopTask,function
	.thumb_func
DeleteUnionObjWorkAndStopTask:
	push	{r4, lr}
	mov	r4, #0x0
.L150:
	add	r0, r4, #0
	bl	IsUnionRoomPlayerHidden
	cmp	r0, #0
	bne	.L149	@cond_branch
	add	r0, r4, #0
	bl	RemoveUnionRoomPlayerObjectEvent
	add	r0, r4, #0
	bl	HideUnionRoomPlayer
.L149:
	add	r4, r4, #0x1
	cmp	r4, #0x7
	ble	.L150	@cond_branch
	ldr	r1, .L153
	mov	r0, #0x0
	str	r0, [r1]
	bl	DestroyAnimateUnionObjsTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L154:
	.align	2, 0
.L153:
	.word	UnionObjWork
.Lfe22:
	.size	 DeleteUnionObjWorkAndStopTask,.Lfe22-DeleteUnionObjWorkAndStopTask
	.align	2, 0
	.globl	CreateGroupMemberObjectsInvisible
	.type	 CreateGroupMemberObjectsInvisible,function
	.thumb_func
CreateGroupMemberObjectsInvisible:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	str	r0, [sp, #0x8]
	mov	r9, r1
	mov	r7, #0x0
	mov	r0, r9
	lsl	r0, r0, #0x2
	mov	r8, r0
	ldr	r0, .L161
	mov	r2, r8
	add	r1, r2, r0
	ldrh	r1, [r1]
	mov	r2, sp
	strh	r1, [r2, #0xc]
	add	r0, r0, #0x2
	add	r0, r0, r8
	ldrh	r0, [r0]
	mov	sl, r0
	ldr	r6, .L161+0x4
.L159:
	mov	r5, r8
	add	r5, r5, r9
	add	r5, r5, r7
	add	r4, r5, #0
	sub	r4, r4, #0x38
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r2, #0x0
	ldrsb	r2, [r6, r2]
	mov	r0, sp
	ldrh	r0, [r0, #0xc]
	add	r2, r0, r2
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x1
	ldrsb	r3, [r6, r3]
	add	r3, r3, sl
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x19
	add	r1, r4, #0
	bl	CreateVirtualObject
	ldr	r1, [sp, #0x8]
	add	r5, r1, r5
	strb	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	SetVirtualObjectInvisibility
	add	r6, r6, #0x2
	add	r7, r7, #0x1
	cmp	r7, #0x4
	ble	.L159	@cond_branch
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L162:
	.align	2, 0
.L161:
	.word	sUnionPartnerCoords
	.word	sFacingDirectionOffsets
.Lfe23:
	.size	 CreateGroupMemberObjectsInvisible,.Lfe23-CreateGroupMemberObjectsInvisible
	.align	2, 0
	.globl	DestroyGroupMemberObjects
	.type	 DestroyGroupMemberObjects,function
	.thumb_func
DestroyGroupMemberObjects:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r4, #0x0
	ldr	r6, .L169
.L167:
	add	r0, r5, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	DestroySprite
	add	r4, r4, #0x1
	cmp	r4, #0x27
	ble	.L167	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gSprites
.Lfe24:
	.size	 DestroyGroupMemberObjects,.Lfe24-DestroyGroupMemberObjects
	.align	2, 0
	.globl	MakeGroupAssemblyAreasPassable
	.type	 MakeGroupAssemblyAreasPassable,function
	.thumb_func
MakeGroupAssemblyAreasPassable:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	mov	r5, #0x0
	add	r7, sp, #0x4
.L175:
	mov	r4, #0x0
	add	r6, r5, #0x1
.L179:
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, sp
	add	r3, r7, #0
	bl	GetUnionRoomPlayerFacingCoords
	ldr	r0, [sp]
	ldr	r1, [sp, #0x4]
	mov	r2, #0x0
	bl	MapGridSetMetatileImpassabilityAt
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L179	@cond_branch
	add	r5, r6, #0
	cmp	r5, #0x7
	ble	.L175	@cond_branch
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 MakeGroupAssemblyAreasPassable,.Lfe25-MakeGroupAssemblyAreasPassable
	.align	2, 0
	.type	 UnionPartnerObjectGetFacing,function
	.thumb_func
UnionPartnerObjectGetFacing:
	push	{lr}
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L183	@cond_branch
	ldr	r0, .L188
	add	r0, r1, r0
	ldrb	r0, [r0]
	b	.L187
.L189:
	.align	2, 0
.L188:
	.word	sUnionGroupMemberFacings
.L183:
	ldrb	r1, [r2, #0xa]
	mov	r0, #0x7f
	and	r0, r0, r1
	cmp	r0, #0x45
	beq	.L185	@cond_branch
	mov	r0, #0x4
	b	.L187
.L185:
	mov	r0, #0x1
.L187:
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 UnionPartnerObjectGetFacing,.Lfe26-UnionPartnerObjectGetFacing
	.align	2, 0
	.type	 RfuUnionGroupMemberIsInvisible,function
	.thumb_func
RfuUnionGroupMemberIsInvisible:
	push	{lr}
	add	r2, r0, #0
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	add	r0, r0, r1
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsVirtualObjectInvisible
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 RfuUnionGroupMemberIsInvisible,.Lfe27-RfuUnionGroupMemberIsInvisible
	.align	2, 0
	.type	 SpawnGroupMember,function
	.thumb_func
SpawnGroupMember:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r9, r3
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	add	r7, r0, r6
	add	r0, r5, #0
	bl	RfuUnionGroupMemberIsInvisible
	cmp	r0, #0x1
	bne	.L192	@cond_branch
	add	r4, r7, #0
	sub	r4, r4, #0x38
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	SetVirtualObjectInvisibility
	add	r0, r4, #0
	mov	r1, #0x1
	bl	SetVirtualObjectSpriteAnim
.L192:
	add	r0, r7, #0
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	bl	SetVirtualObjectGraphics
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, r9
	bl	UnionPartnerObjectGetFacing
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r6, #0
	add	r1, r5, #0
	bl	UnionPartnerObjectSetFacing
	add	r3, sp, #0x4
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, sp
	bl	GetUnionRoomPlayerFacingCoords
	ldr	r0, [sp]
	ldr	r1, [sp, #0x4]
	mov	r2, #0x1
	bl	MapGridSetMetatileImpassabilityAt
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 SpawnGroupMember,.Lfe28-SpawnGroupMember
	.align	2, 0
	.type	 DespawnGroupMember,function
	.thumb_func
DespawnGroupMember:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	add	r0, r0, r5
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	SetVirtualObjectSpriteAnim
	add	r3, sp, #0x4
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, sp
	bl	GetUnionRoomPlayerFacingCoords
	ldr	r0, [sp]
	ldr	r1, [sp, #0x4]
	mov	r2, #0x0
	bl	MapGridSetMetatileImpassabilityAt
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 DespawnGroupMember,.Lfe29-DespawnGroupMember
	.align	2, 0
	.type	 AssembleGroup,function
	.thumb_func
AssembleGroup:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	mov	r8, r1
	mov	r6, sp
	add	r6, r6, #0x2
	mov	r0, sp
	add	r1, r6, #0
	bl	PlayerGetDestCoords
	add	r4, sp, #0x4
	mov	r5, sp
	add	r5, r5, #0x6
	add	r0, r4, #0
	add	r1, r5, #0
	bl	player_get_pos_including_state_based_drift
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsVirtualObjectInvisible
	mov	sl, r6
	mov	r9, r4
	add	r6, r5, #0
	cmp	r0, #0x1
	bne	.L195	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, sl
	mov	r1, #0x0
	ldrsh	r3, [r0, r1]
	add	r0, r7, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerFacingTileAt
	cmp	r0, #0x1
	beq	.L194	@cond_branch
	mov	r0, #0x0
	ldrsh	r2, [r4, r0]
	mov	r1, #0x0
	ldrsh	r3, [r6, r1]
	add	r0, r7, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerFacingTileAt
	cmp	r0, #0x1
	beq	.L194	@cond_branch
	mov	r2, r8
	ldrb	r0, [r2, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	ldrb	r1, [r2, #0x2]
	bl	GetUnionRoomPlayerGraphicsId
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r7, #0
	mov	r1, #0x0
	mov	r3, r8
	bl	SpawnGroupMember
.L195:
	mov	r5, #0x1
	mov	r4, r8
	add	r4, r4, #0x4
.L201:
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L202	@cond_branch
	add	r0, r7, #0
	add	r1, r5, #0
	bl	DespawnGroupMember
	b	.L200
.L202:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, sl
	mov	r1, #0x0
	ldrsh	r3, [r0, r1]
	add	r0, r7, #0
	add	r1, r5, #0
	bl	IsUnionRoomPlayerFacingTileAt
	cmp	r0, #0
	bne	.L200	@cond_branch
	mov	r0, r9
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, #0x0
	ldrsh	r3, [r6, r0]
	add	r0, r7, #0
	add	r1, r5, #0
	bl	IsUnionRoomPlayerFacingTileAt
	cmp	r0, #0
	bne	.L200	@cond_branch
	ldrb	r2, [r4]
	lsr	r0, r2, #0x3
	mov	r1, #0x1
	and	r0, r0, r1
	mov	r1, #0x7
	and	r1, r1, r2
	bl	GetUnionRoomPlayerGraphicsId
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r7, #0
	add	r1, r5, #0
	mov	r3, r8
	bl	SpawnGroupMember
.L200:
	add	r4, r4, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L201	@cond_branch
.L194:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 AssembleGroup,.Lfe30-AssembleGroup
	.align	2, 0
	.type	 SpawnGroupLeaderAndMembers,function
	.thumb_func
SpawnGroupLeaderAndMembers:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldrb	r0, [r4, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	sub	r0, r0, #0x40
	cmp	r0, #0x14
	bhi	.L222	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L224
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L225:
	.align	2, 0
.L224:
	.word	.L223
	.align	2, 0
	.align	2, 0
.L223:
	.word	.L209
	.word	.L221
	.word	.L222
	.word	.L222
	.word	.L221
	.word	.L221
	.word	.L222
	.word	.L222
	.word	.L221
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L222
	.word	.L221
	.word	.L221
	.word	.L221
	.word	.L209
.L209:
	ldrb	r1, [r4, #0xb]
	lsl	r1, r1, #0x1f
	lsr	r1, r1, #0x1f
	ldrb	r2, [r4, #0x2]
	add	r0, r5, #0
	bl	SpawnGroupLeader
	mov	r4, #0x0
.L213:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DespawnGroupMember
	add	r4, r4, #0x1
	cmp	r4, #0x4
	bls	.L213	@cond_branch
	b	.L207
.L221:
	add	r0, r5, #0
	bl	DespawnGroupLeader
	add	r0, r5, #0
	add	r1, r4, #0
	bl	AssembleGroup
	b	.L207
.L222:
	ldr	r0, .L226
	ldr	r1, .L226+0x4
	ldr	r2, .L226+0x8
	mov	r3, #0x1
	bl	AGBAssert
.L207:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	.LC18
	.word	0x3d3
	.word	.LC20
.Lfe31:
	.size	 SpawnGroupLeaderAndMembers,.Lfe31-SpawnGroupLeaderAndMembers
	.align	2, 0
	.type	 DespawnGroupLeaderAndMembers,function
	.thumb_func
DespawnGroupLeaderAndMembers:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	DespawnGroupLeader
	mov	r4, #0x0
.L232:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DespawnGroupMember
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L232	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 DespawnGroupLeaderAndMembers,.Lfe32-DespawnGroupLeaderAndMembers
	.align	2, 0
	.type	 UpdateUnionRoomPlayerSprites,function
	.thumb_func
UpdateUnionRoomPlayerSprites:
	push	{r4, r5, lr}
	ldr	r2, .L243
	mov	r1, #0x0
	str	r1, [r2]
	mov	r5, #0x0
	ldr	r4, [r0]
.L238:
	ldrb	r0, [r4, #0x1a]
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x1
	bne	.L239	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	SpawnGroupLeaderAndMembers
	b	.L237
.L244:
	.align	2, 0
.L243:
	.word	sUnionObjRefreshTimer
.L239:
	cmp	r1, #0x2
	bne	.L237	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DespawnGroupLeaderAndMembers
.L237:
	add	r4, r4, #0x20
	add	r5, r5, #0x1
	cmp	r5, #0x7
	ble	.L238	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 UpdateUnionRoomPlayerSprites,.Lfe33-UpdateUnionRoomPlayerSprites
	.align	2, 0
	.globl	ScheduleUnionRoomPlayerRefresh
	.type	 ScheduleUnionRoomPlayerRefresh,function
	.thumb_func
ScheduleUnionRoomPlayerRefresh:
	ldr	r1, .L246
	mov	r0, #0x96
	lsl	r0, r0, #0x1
	str	r0, [r1]
	bx	lr
.L247:
	.align	2, 0
.L246:
	.word	sUnionObjRefreshTimer
.Lfe34:
	.size	 ScheduleUnionRoomPlayerRefresh,.Lfe34-ScheduleUnionRoomPlayerRefresh
	.align	2, 0
	.globl	HandleUnionRoomPlayerRefresh
	.type	 HandleUnionRoomPlayerRefresh,function
	.thumb_func
HandleUnionRoomPlayerRefresh:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L250
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	mov	r0, #0x96
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bls	.L249	@cond_branch
	add	r0, r2, #0
	bl	UpdateUnionRoomPlayerSprites
.L249:
	pop	{r0}
	bx	r0
.L251:
	.align	2, 0
.L250:
	.word	sUnionObjRefreshTimer
.Lfe35:
	.size	 HandleUnionRoomPlayerRefresh,.Lfe35-HandleUnionRoomPlayerRefresh
	.align	2, 0
	.globl	RfuUnionTool_GetGroupAndMemberInFrontOfPlayer
	.type	 RfuUnionTool_GetGroupAndMemberInFrontOfPlayer,function
	.thumb_func
RfuUnionTool_GetGroupAndMemberInFrontOfPlayer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x18
	add	r5, r0, #0
	str	r1, [sp, #0x4]
	str	r2, [sp, #0x8]
	bl	is_walking_or_running
	cmp	r0, #0
	bne	.L253	@cond_branch
	b	.L271
.L270:
	ldr	r4, .L272
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r2, [r0]
	add	r0, r6, #0
	ldr	r1, [sp, #0xc]
	bl	UnionPartnerObjectSetFacing
	ldr	r0, [sp, #0x4]
	strh	r6, [r0]
	mov	r1, sp
	ldrh	r2, [r1, #0xc]
	ldr	r1, [sp, #0x8]
	strh	r2, [r1]
	mov	r0, #0x1
	b	.L269
.L273:
	.align	2, 0
.L272:
	.word	sOppositeFacingDirection
.L253:
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, #0x0
	str	r0, [sp, #0xc]
	ldr	r0, .L274
	add	r7, r5, #0
	mov	r1, #0x0
	mov	sl, r1
	add	r2, r0, #0x2
	str	r2, [sp, #0x10]
	str	r0, [sp, #0x14]
.L257:
	mov	r6, #0x0
	ldr	r4, [sp, #0x14]
	mov	r0, #0x0
	ldrsh	r4, [r4, r0]
	mov	r9, r4
	ldr	r1, [sp, #0x10]
	mov	r8, r1
	ldr	r5, .L274+0x4
.L261:
	mov	r2, sl
	add	r3, r2, r6
	mov	r0, sp
	mov	r4, #0x0
	ldrsh	r1, [r0, r4]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	add	r0, r0, r9
	add	r0, r0, #0x7
	cmp	r1, r0
	bne	.L260	@cond_branch
	mov	r1, sp
	mov	r2, #0x2
	ldrsh	r0, [r1, r2]
	mov	r4, r8
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r2, #0x1
	ldrsb	r2, [r5, r2]
	add	r1, r1, r2
	add	r1, r1, #0x7
	cmp	r0, r1
	bne	.L260	@cond_branch
	add	r0, r3, #0
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	IsVirtualObjectInvisible
	cmp	r0, #0
	bne	.L260	@cond_branch
	add	r0, r4, #0
	bl	IsVirtualObjectAnimating
	cmp	r0, #0
	bne	.L260	@cond_branch
	ldrb	r1, [r7, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L270	@cond_branch
.L260:
	add	r5, r5, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L261	@cond_branch
	add	r7, r7, #0x20
	mov	r4, #0x5
	add	sl, sl, r4
	ldr	r0, [sp, #0x10]
	add	r0, r0, #0x4
	str	r0, [sp, #0x10]
	ldr	r1, [sp, #0x14]
	add	r1, r1, #0x4
	str	r1, [sp, #0x14]
	ldr	r2, [sp, #0xc]
	add	r2, r2, #0x1
	str	r2, [sp, #0xc]
	cmp	r2, #0x7
	ble	.L257	@cond_branch
.L271:
	mov	r0, #0x0
.L269:
	add	sp, sp, #0x18
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L275:
	.align	2, 0
.L274:
	.word	sUnionPartnerCoords
	.word	sFacingDirectionOffsets
.Lfe36:
	.size	 RfuUnionTool_GetGroupAndMemberInFrontOfPlayer,.Lfe36-RfuUnionTool_GetGroupAndMemberInFrontOfPlayer
	.align	2, 0
	.type	 UnionPartnerObjectSetFacing,function
	.thumb_func
UnionPartnerObjectSetFacing:
	push	{r4, lr}
	add	r4, r0, #0
	add	r3, r1, #0
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	sub	r0, r0, #0x38
	add	r0, r0, r4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	TurnVirtualObject
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 UnionPartnerObjectSetFacing,.Lfe37-UnionPartnerObjectSetFacing
	.align	2, 0
	.globl	UpdateUnionGroupMemberFacing
	.type	 UpdateUnionGroupMemberFacing,function
	.thumb_func
UpdateUnionGroupMemberFacing:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	lsl	r3, r4, #0x5
	add	r3, r3, r2
	add	r2, r3, #0
	bl	UnionPartnerObjectGetFacing
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	UnionPartnerObjectSetFacing
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 UpdateUnionGroupMemberFacing,.Lfe38-UpdateUnionGroupMemberFacing
.text
	.align	2, 0 @ Don't pad with nop

