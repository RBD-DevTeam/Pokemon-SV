@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sBerryPowderVendorWindowId,object
	.size	 sBerryPowderVendorWindowId,1
sBerryPowderVendorWindowId:
	.byte	0x0
.text
	.align	2, 0
	.globl	DecryptBerryPowder
	.type	 DecryptBerryPowder,function
	.thumb_func
DecryptBerryPowder:
	ldr	r1, .L3
	ldr	r1, [r1]
	mov	r2, #0xf2
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r0, [r0]
	ldr	r1, [r1]
	eor	r0, r0, r1
	bx	lr
.L4:
	.align	2, 0
.L3:
	.word	gSaveBlock2Ptr
.Lfe1:
	.size	 DecryptBerryPowder,.Lfe1-DecryptBerryPowder
	.align	2, 0
	.globl	SetBerryPowder
	.type	 SetBerryPowder,function
	.thumb_func
SetBerryPowder:
	ldr	r2, .L6
	ldr	r2, [r2]
	mov	r3, #0xf2
	lsl	r3, r3, #0x4
	add	r2, r2, r3
	ldr	r2, [r2]
	eor	r2, r2, r1
	str	r2, [r0]
	bx	lr
.L7:
	.align	2, 0
.L6:
	.word	gSaveBlock2Ptr
.Lfe2:
	.size	 SetBerryPowder,.Lfe2-SetBerryPowder
	.align	2, 0
	.globl	ApplyNewEncryptionKeyToBerryPowder
	.type	 ApplyNewEncryptionKeyToBerryPowder,function
	.thumb_func
ApplyNewEncryptionKeyToBerryPowder:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L9
	ldr	r0, [r0]
	ldr	r2, .L9+0x4
	add	r0, r0, r2
	bl	ApplyNewEncryptionKeyToWord
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gSaveBlock2Ptr
	.word	0xaf8
.Lfe3:
	.size	 ApplyNewEncryptionKeyToBerryPowder,.Lfe3-ApplyNewEncryptionKeyToBerryPowder
	.align	2, 0
	.type	 HasEnoughBerryPowder,function
	.thumb_func
HasEnoughBerryPowder:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L15
	ldr	r0, [r0]
	ldr	r1, .L15+0x4
	add	r0, r0, r1
	bl	DecryptBerryPowder
	cmp	r0, r4
	bcc	.L12	@cond_branch
	mov	r0, #0x1
	b	.L14
.L16:
	.align	2, 0
.L15:
	.word	gSaveBlock2Ptr
	.word	0xaf8
.L12:
	mov	r0, #0x0
.L14:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 HasEnoughBerryPowder,.Lfe4-HasEnoughBerryPowder
	.align	2, 0
	.globl	Script_HasEnoughBerryPowder
	.type	 Script_HasEnoughBerryPowder,function
	.thumb_func
Script_HasEnoughBerryPowder:
	push	{lr}
	ldr	r0, .L21
	ldr	r0, [r0]
	ldr	r1, .L21+0x4
	add	r0, r0, r1
	bl	DecryptBerryPowder
	ldr	r1, .L21+0x8
	ldrh	r1, [r1]
	cmp	r0, r1
	bcc	.L18	@cond_branch
	mov	r0, #0x1
	b	.L20
.L22:
	.align	2, 0
.L21:
	.word	gSaveBlock2Ptr
	.word	0xaf8
	.word	gSpecialVar_0x8004
.L18:
	mov	r0, #0x0
.L20:
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 Script_HasEnoughBerryPowder,.Lfe5-Script_HasEnoughBerryPowder
	.align	2, 0
	.globl	GiveBerryPowder
	.type	 GiveBerryPowder,function
	.thumb_func
GiveBerryPowder:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r0, .L27
	ldr	r0, [r0]
	ldr	r1, .L27+0x4
	add	r5, r0, r1
	add	r0, r5, #0
	bl	DecryptBerryPowder
	add	r1, r0, r4
	ldr	r2, .L27+0x8
	cmp	r1, r2
	bhi	.L24	@cond_branch
	add	r0, r5, #0
	bl	SetBerryPowder
	mov	r0, #0x1
	b	.L26
.L28:
	.align	2, 0
.L27:
	.word	gSaveBlock2Ptr
	.word	0xaf8
	.word	0x1869f
.L24:
	add	r0, r5, #0
	add	r1, r2, #0
	bl	SetBerryPowder
	mov	r0, #0x0
.L26:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 GiveBerryPowder,.Lfe6-GiveBerryPowder
	.align	2, 0
	.type	 TakeBerryPowder,function
	.thumb_func
TakeBerryPowder:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L33
	ldr	r0, [r0]
	ldr	r1, .L33+0x4
	add	r4, r0, r1
	add	r0, r5, #0
	bl	HasEnoughBerryPowder
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L30	@cond_branch
	add	r0, r4, #0
	bl	DecryptBerryPowder
	add	r1, r0, #0
	sub	r1, r1, r5
	add	r0, r4, #0
	bl	SetBerryPowder
	mov	r0, #0x1
	b	.L32
.L34:
	.align	2, 0
.L33:
	.word	gSaveBlock2Ptr
	.word	0xaf8
.L30:
	mov	r0, #0x0
.L32:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 TakeBerryPowder,.Lfe7-TakeBerryPowder
	.align	2, 0
	.globl	Script_TakeBerryPowder
	.type	 Script_TakeBerryPowder,function
	.thumb_func
Script_TakeBerryPowder:
	push	{r4, r5, lr}
	ldr	r0, .L39
	ldr	r0, [r0]
	ldr	r1, .L39+0x4
	add	r4, r0, r1
	ldr	r5, .L39+0x8
	ldrh	r0, [r5]
	bl	HasEnoughBerryPowder
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L36	@cond_branch
	add	r0, r4, #0
	bl	DecryptBerryPowder
	add	r1, r0, #0
	ldrh	r0, [r5]
	sub	r1, r1, r0
	add	r0, r4, #0
	bl	SetBerryPowder
	mov	r0, #0x1
	b	.L38
.L40:
	.align	2, 0
.L39:
	.word	gSaveBlock2Ptr
	.word	0xaf8
	.word	gSpecialVar_0x8004
.L36:
	mov	r0, #0x0
.L38:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 Script_TakeBerryPowder,.Lfe8-Script_TakeBerryPowder
	.align	2, 0
	.globl	GetBerryPowder
	.type	 GetBerryPowder,function
	.thumb_func
GetBerryPowder:
	push	{lr}
	ldr	r0, .L42
	ldr	r0, [r0]
	ldr	r1, .L42+0x4
	add	r0, r0, r1
	bl	DecryptBerryPowder
	pop	{r1}
	bx	r1
.L43:
	.align	2, 0
.L42:
	.word	gSaveBlock2Ptr
	.word	0xaf8
.Lfe9:
	.size	 GetBerryPowder,.Lfe9-GetBerryPowder
	.align	2, 0
	.type	 PrintBerryPowderAmount,function
	.thumb_func
PrintBerryPowderAmount:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	mov	r8, r2
	add	r4, r3, #0
	ldr	r5, [sp, #0x24]
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, r8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L45
	mov	r9, r0
	mov	r2, #0x1
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r2, r9
	mov	r3, r8
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gStringVar1
.Lfe10:
	.size	 PrintBerryPowderAmount,.Lfe10-PrintBerryPowderAmount
	.align	2, 0
	.type	 DrawPlayerPowderAmount,function
	.thumb_func
DrawPlayerPowderAmount:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	add	r4, r1, #0
	add	r5, r2, #0
	mov	r8, r3
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	add	r2, r4, #0
	add	r3, r5, #0
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r2, .L48
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	str	r4, [sp]
	add	r0, r6, #0
	mov	r1, r8
	mov	r2, #0x27
	mov	r3, #0xc
	bl	PrintBerryPowderAmount
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gOtherText_Powder
.Lfe11:
	.size	 DrawPlayerPowderAmount,.Lfe11-DrawPlayerPowderAmount
	.align	2, 0
	.globl	PrintPlayerBerryPowderAmount
	.type	 PrintPlayerBerryPowderAmount,function
	.thumb_func
PrintPlayerBerryPowderAmount:
	push	{lr}
	add	sp, sp, #-0x4
	bl	GetBerryPowder
	add	r1, r0, #0
	ldr	r0, .L51
	ldrb	r0, [r0]
	mov	r2, #0x0
	str	r2, [sp]
	mov	r2, #0x27
	mov	r3, #0xc
	bl	PrintBerryPowderAmount
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	sBerryPowderVendorWindowId
.Lfe12:
	.size	 PrintPlayerBerryPowderAmount,.Lfe12-PrintPlayerBerryPowderAmount
	.align	2, 0
	.globl	DisplayBerryPowderVendorMenu
	.type	 DisplayBerryPowderVendorMenu,function
	.thumb_func
DisplayBerryPowderVendorMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0x20
	ldr	r0, .L55
	bl	QuestLog_SchedulePlaybackCB
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L54	@cond_branch
	mov	r0, #0x8
	str	r0, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	mov	r0, #0x20
	str	r0, [sp, #0xc]
	add	r0, sp, #0x10
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0x1
	bl	SetWindowTemplateFields
	ldr	r0, [sp, #0x10]		@ created by thumb_load_double_from_address
	ldr	r1, [sp, #0x14]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x18]
	str	r1, [sp, #0x1c]
	ldr	r4, .L55+0x4
	add	r0, sp, #0x18
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	ldr	r5, .L55+0x8
	add	r1, r5, #0
	mov	r2, #0xd0
	bl	LoadStdWindowGfx
	ldrb	r4, [r4]
	bl	GetBerryPowder
	add	r3, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0xd
	bl	DrawPlayerPowderAmount
.L54:
	add	sp, sp, #0x20
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	QLPlaybackCB_DestroyScriptMenuMonPicSprites
	.word	sBerryPowderVendorWindowId
	.word	0x21d
.Lfe13:
	.size	 DisplayBerryPowderVendorMenu,.Lfe13-DisplayBerryPowderVendorMenu
	.align	2, 0
	.globl	RemoveBerryPowderVendorMenu
	.type	 RemoveBerryPowderVendorMenu,function
	.thumb_func
RemoveBerryPowderVendorMenu:
	push	{r4, lr}
	ldr	r4, .L58
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	sBerryPowderVendorWindowId
.Lfe14:
	.size	 RemoveBerryPowderVendorMenu,.Lfe14-RemoveBerryPowderVendorMenu
.text
	.align	2, 0 @ Don't pad with nop

