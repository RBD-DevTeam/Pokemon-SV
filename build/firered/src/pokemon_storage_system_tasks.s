@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gStorage
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gStorage,object
	.size	 gStorage,4
gStorage:
	.word	0x0
	.type	 sInPartyMenu,object
	.size	 sInPartyMenu,1
sInPartyMenu:
	.byte	0x0
	.type	 sCurrentBoxOption,object
	.size	 sCurrentBoxOption,1
sCurrentBoxOption:
	.byte	0x0
	.type	 sDepositBoxId,object
	.size	 sDepositBoxId,1
sDepositBoxId:
	.byte	0x0
	.type	 sWhichToReshow,object
	.size	 sWhichToReshow,1
sWhichToReshow:
	.byte	0x0
	.type	 sLastUsedBox,object
	.size	 sLastUsedBox,1
sLastUsedBox:
	.byte	0x0
	.align	1, 0
	.type	 sMovingItemId,object
	.size	 sMovingItemId,2
sMovingItemId:
	.short	0x0
	.section .rodata
	.align	2, 0
	.type	 sScrollingBg_Gfx,object
sScrollingBg_Gfx:
	.word	0x10010
	.word	0x60aaaa20
	.word	-0x555566ff
	.word	-0x55ff7777
	.word	-0x55776566
	.word	0x1289a98a
	.word	0x309889aa
	.word	0x1098890e
	.word	-0x66fd66e9
	.word	-0x77676556
	.word	-0x77eeff68
	.word	-0x77755700
	.word	-0x75655778
	.word	-0x6567ef78
	.word	-0x66efff56
	.word	0x28888999
	.word	0x1b09999
	.word	-0x77fc7f68
	.word	0x9f9988
	.word	0xa98823
	.word	0x125027
	.word	0x1003704c
	.word	-0x7656f59d
	.word	0x5530a888
	.word	-0x769ddf78
	.word	-0x665556f8
	.word	-0x7781ff68
	.word	-0x569f6777
	.word	-0x74ef9cf0
	.word	-0x55576568
	.word	0x30a97e88
	.word	0x6090000e
	.word	0x606b9001
	.word	-0x65f7ffa4
	.word	-0x556aff46
	.word	0x6fb07d10
	.word	0x8801a0
	.word	0x27
	.size	 sScrollingBg_Gfx,152
	.align	2, 0
	.type	 sScrollingBg_Tilemap,object
sScrollingBg_Tilemap:
	.word	0x80010
	.word	0x1300000
	.word	0x3300230
	.word	0x7f0e030
	.word	0x7f007f0
	.word	0x30043003
	.word	0x6300f05
	.word	0x7f00730
	.word	0x7f007f0
	.word	-0xf00f900
	.word	-0xff80fad
	.word	-0xff88ff9
	.word	-0xff80fad
	.word	-0xf88ff9
	.word	0x7f053f0
	.word	-0xff810
	.word	0x7f007f0
	.word	-0xff810
	.word	-0xff80f01
	.word	-0xf000ff9
	.word	-0xff80fa5
	.word	-0xf000ff9
	.word	0x7f0ff07
	.word	0x5bf0fff0
	.word	0x7f007f0
	.word	0x7f0fff0
	.word	-0xf00f810
	.word	-0xfac0f01
	.word	-0xff80ff9
	.word	-0xff80f01
	.word	-0xf80ff9
	.word	0x7f053f0
	.word	-0xff810
	.word	0x7f007f0
	.word	-0xff810
	.word	-0xff80f01
	.word	-0xf000ff9
	.word	-0xff80fa5
	.word	-0xf000ff9
	.word	0x7f0ff07
	.word	0x5bf0fff0
	.word	0x7f007f0
	.word	0x7f0fff0
	.word	-0xf00f810
	.word	-0xfac0f01
	.word	-0xff80ff9
	.word	-0xff80f01
	.word	-0xf80ff9
	.word	0x7f053f0
	.word	-0xff810
	.word	0x7f007f0
	.word	-0xff810
	.word	-0xff80f01
	.word	-0xf000ff9
	.word	-0xff80fa5
	.word	-0xf000ff9
	.word	0x7f0ff07
	.word	0x5bf0fff0
	.word	0x7f007f0
	.word	0x7f0fff0
	.word	-0xf00f810
	.word	-0xfac0f01
	.word	-0xff80ff9
	.word	-0xff80f01
	.word	-0xff80ff9
	.word	0x7f053f0
	.word	0x77007f0
	.size	 sScrollingBg_Tilemap,268
	.align	1, 0
	.type	 sMenu_Pal,object
sMenu_Pal:
	.short	0x1d60
	.short	0x5652
	.short	0x7fff
	.short	0x0
	.short	0x7b7b
	.short	0x76eb
	.short	0x5a94
	.short	0x398c
	.short	0x0
	.short	0x2d4a
	.short	0x33b7
	.short	0x2774
	.short	0x2794
	.short	0x3b96
	.short	0x1f32
	.short	0x5652
	.size	 sMenu_Pal,32
	.align	2, 0
	.type	 sMenu_Tilemap,object
sMenu_Tilemap:
	.word	0x50010
	.word	0x1050900
	.word	0x3010201
	.word	0x1040001
	.word	0x1060105
	.word	0x8070107
	.word	0x10901
	.word	0x1f001f0
	.word	0x10000140
	.word	0x12011101
	.word	0x11301
	.word	0x1150114
	.word	0x1170116
	.word	0x1901181c
	.word	0x1f025f0
	.word	0x10a0160
	.word	0xc010b11
	.word	0x10d0180
	.word	-0x3eda0ff2
	.word	0x16001f0
	.word	0x11b011a
	.word	0x1d01801c
	.word	-0xfe1fed9
	.word	-0x3ffe0fdb
	.word	0x1401d3f
	.word	-0xfc00f01
	.word	-0xfc00fff
	.word	-0xffe0fc1
	.word	-0xfc00fff
	.word	0x1f0ff3f
	.word	0x3ff03ff0
	.word	0x1f025f0
	.word	0x3ff13ff1
	.word	-0xf73fe10
	.word	0x20010f01
	.word	0x1703300
	.word	0x22700121
	.word	0x1f025f0
	.word	0x11f0160
	.word	0x32470130
	.word	0x1310180
	.word	-0xfda0fdd
	.word	0x17016001
	.word	-0x3fdafedc
	.word	0x25f02601
	.word	0x3ff001f0
	.word	-0xfc00f01
	.word	-0xffe0fff
	.word	-0xfc00fc1
	.word	-0xfc00fff
	.word	0x1f0ff3f
	.word	0x3ff001f0
	.word	0x1f03ff0
	.word	0x3ff03ff0
	.word	-0xf00fe10
	.word	-0xfc00fff
	.word	-0xffe0fc1
	.word	-0xfc00fc1
	.word	-0x74fe0fff
	.word	0x1330140
	.word	0x3501c034
	.word	0x1f025f0
	.word	0x16080
	.size	 sMenu_Tilemap,252
	.align	1, 0
	.type	 sPkmnData_Tilemap,object
sPkmnData_Tilemap:
	.short	0x101
	.short	0x102
	.short	0x103
	.short	0x104
	.short	0x105
	.short	0x106
	.short	0x107
	.short	0x108
	.short	0x111
	.short	0x112
	.short	0x113
	.short	0x114
	.short	0x115
	.short	0x116
	.short	0x117
	.short	0x118
	.short	0x2101
	.short	0x2102
	.short	0x2103
	.short	0x2104
	.short	0x2105
	.short	0x2106
	.short	0x2107
	.short	0x2108
	.short	0x2111
	.short	0x2112
	.short	0x2113
	.short	0x2114
	.short	0x2115
	.short	0x2116
	.short	0x2117
	.short	0x2118
	.size	 sPkmnData_Tilemap,64
	.align	1, 0
	.type	 sScrollingBg_Pal,object
sScrollingBg_Pal:
	.short	0x0
	.short	0x5652
	.short	0x7fff
	.short	0x0
	.short	0x7eef
	.short	0x7de0
	.short	0x421f
	.short	0xc75
	.short	0x73bf
	.short	0x6b9f
	.short	0x677f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sScrollingBg_Pal,32
	.align	1, 0
	.type	 sScrollingBgMoveItems_Pal,object
sScrollingBgMoveItems_Pal:
	.short	0x0
	.short	0x5652
	.short	0x7fff
	.short	0x0
	.short	0x7eef
	.short	0x7de0
	.short	0x421f
	.short	0xc75
	.short	0x7fdc
	.short	0x7bbb
	.short	0x7bba
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sScrollingBgMoveItems_Pal,32
	.align	1, 0
	.type	 sCloseBoxButton_Tilemap,object
sCloseBoxButton_Tilemap:
	.short	0x14c
	.short	0x14d
	.short	0x14e
	.short	0x14f
	.short	0x170
	.short	0x171
	.short	0x172
	.short	0x173
	.short	0x174
	.short	0x15c
	.short	0x15d
	.short	0x15e
	.short	0x15f
	.short	0x180
	.short	0x181
	.short	0x182
	.short	0x183
	.short	0x184
	.short	0x175
	.short	0x176
	.short	0x177
	.short	0x178
	.short	0x179
	.short	0x17a
	.short	0x17b
	.short	0x17c
	.short	0x17d
	.short	0x185
	.short	0x186
	.short	0x187
	.short	0x188
	.short	0x189
	.short	0x18a
	.short	0x18b
	.short	0x18c
	.short	0x18d
	.size	 sCloseBoxButton_Tilemap,72
	.align	1, 0
	.type	 sPartySlotFilled_Tilemap,object
sPartySlotFilled_Tilemap:
	.short	0x1140
	.short	0x1141
	.short	0x1141
	.short	0x1142
	.short	0x1150
	.short	0x1151
	.short	0x1151
	.short	0x1152
	.short	0x1160
	.short	0x1161
	.short	0x1161
	.short	0x1162
	.size	 sPartySlotFilled_Tilemap,24
	.align	1, 0
	.type	 sPartySlotEmpty_Tilemap,object
sPartySlotEmpty_Tilemap:
	.short	0x1143
	.short	0x1144
	.short	0x1144
	.short	0x1145
	.short	0x1153
	.short	0x1154
	.short	0x1154
	.short	0x1155
	.short	0x1163
	.short	0x1164
	.short	0x1164
	.short	0x1165
	.size	 sPartySlotEmpty_Tilemap,24
	.align	1, 0
	.type	 sPokeStorageMisc2Pal,object
sPokeStorageMisc2Pal:
	.short	0x0
	.short	0x5652
	.short	0x2d4a
	.short	0x7fff
	.short	0x7ff9
	.short	0x76eb
	.short	0x668b
	.short	0x520a
	.short	0x3daa
	.short	0x2d4a
	.short	0x0
	.short	0x7b7b
	.short	0x5a94
	.short	0x5652
	.short	0x3dce
	.short	0x2d4a
	.size	 sPokeStorageMisc2Pal,32
	.align	1, 0
	.type	 sWaveform_Gfx,object
sWaveform_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x5000
	.short	0x0
	.short	0x505
	.short	0x5000
	.short	0x50
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x5
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x500
	.short	0x5
	.short	0x5000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6000
	.short	0x0
	.short	0x4607
	.short	0x8000
	.short	0x6464
	.short	0x4800
	.short	0x647
	.short	0x8000
	.short	0x60
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7
	.short	0x0
	.short	0x64
	.short	0x0
	.short	0x647
	.short	0x8
	.short	0x7460
	.short	0x84
	.short	0x4600
	.short	0x8
	.short	0x7000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7800
	.short	0x6767
	.short	0x4700
	.short	0x4444
	.short	0x7800
	.short	0x6767
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6766
	.short	0x87
	.short	0x4444
	.short	0x74
	.short	0x6766
	.short	0x87
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8000
	.short	0x70
	.short	0x4800
	.short	0x647
	.short	0x8000
	.short	0x6474
	.short	0x0
	.short	0x4607
	.short	0x0
	.short	0x6000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7000
	.short	0x0
	.short	0x4700
	.short	0x8
	.short	0x7460
	.short	0x84
	.short	0x747
	.short	0x8
	.short	0x64
	.short	0x0
	.short	0x7
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x505
	.short	0x0
	.short	0x5000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x500
	.short	0x0
	.short	0x5050
	.short	0x0
	.short	0x5
	.short	0x5
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x70
	.short	0x0
	.short	0x747
	.short	0x8000
	.short	0x8484
	.short	0x0
	.short	0x4607
	.short	0x0
	.short	0x6000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x600
	.short	0x0
	.short	0x7460
	.short	0x0
	.short	0x4846
	.short	0x7
	.short	0x7064
	.short	0x84
	.short	0x6
	.short	0x7
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6000
	.short	0x0
	.short	0x4607
	.short	0x8000
	.short	0x8484
	.short	0x0
	.short	0x647
	.short	0x0
	.short	0x70
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6
	.short	0x6
	.short	0x6064
	.short	0x84
	.short	0x4846
	.short	0x7
	.short	0x7460
	.short	0x0
	.short	0x700
	.short	0x0
	.size	 sWaveform_Gfx,448
	.align	1, 0
	.type	 sUnused_Pal,object
sUnused_Pal:
	.short	0x0
	.short	0x7f28
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x5e20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x5652
	.short	0x0
	.short	0x4a7f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2977
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x5652
	.size	 sUnused_Pal,64
	.align	1, 0
	.type	 sItemInfoFrame_Pal,object
sItemInfoFrame_Pal:
	.short	0x0
	.short	0x7fff
	.short	0x318c
	.short	0x675a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sItemInfoFrame_Pal,32
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x1
	.byte	0x0
	.byte	0xb
	.byte	0x9
	.byte	0x7
	.byte	0x3
	.short	0xc0
	.byte	0x0
	.byte	0xb
	.byte	0x11
	.byte	0x12
	.byte	0x2
	.byte	0xd
	.short	0x14
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x19
	.byte	0x8
	.byte	0xf
	.short	0x14
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,32
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xd0
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe5
	.byte	0x11
	.byte	0x40
	.space	1
	.byte	0xba
	.byte	0x23
	.byte	0x0
	.space	1
	.byte	0xff
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sMiscSpritePalette,object
	.size	 sMiscSpritePalette,8
sMiscSpritePalette:
	.word	sPokeStorageMisc2Pal
	.short	0xdaca
	.space	2
	.align	2, 0
	.type	 sWaveformSpriteSheet,object
	.size	 sWaveformSpriteSheet,8
sWaveformSpriteSheet:
	.word	sWaveform_Gfx
	.short	0x1c0
	.short	0x5
	.align	2, 0
	.type	 sSpriteTemplate_DisplayMon,object
	.size	 sSpriteTemplate_DisplayMon,24
sSpriteTemplate_DisplayMon:
	.short	0x2
	.short	0xdac6
	.word	sOamData_DisplayMon
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sMessages,object
sMessages:
	.word	gText_ExitFromBox
	.byte	0x0
	.space	3
	.word	gText_WhatDoYouWantToDo
	.byte	0x0
	.space	3
	.word	gText_PleasePickATheme
	.byte	0x0
	.space	3
	.word	gText_PickTheWallpaper
	.byte	0x0
	.space	3
	.word	gText_PkmnIsSelected
	.byte	0x1
	.space	3
	.word	gText_JumpToWhichBox
	.byte	0x0
	.space	3
	.word	gText_DepositInWhichBox
	.byte	0x0
	.space	3
	.word	gText_PkmnWasDeposited
	.byte	0x1
	.space	3
	.word	gText_BoxIsFull2
	.byte	0x0
	.space	3
	.word	gText_ReleaseThisPokemon
	.byte	0x0
	.space	3
	.word	gText_PkmnWasReleased
	.byte	0x4
	.space	3
	.word	gText_ByeByePkmn
	.byte	0x6
	.space	3
	.word	gText_MarkYourPkmn
	.byte	0x0
	.space	3
	.word	gText_ThatsYourLastPkmn
	.byte	0x0
	.space	3
	.word	gText_YourPartysFull
	.byte	0x0
	.space	3
	.word	gText_YoureHoldingAPkmn
	.byte	0x0
	.space	3
	.word	gText_WhichOneWillYouTake
	.byte	0x0
	.space	3
	.word	gText_YouCantReleaseAnEgg
	.byte	0x0
	.space	3
	.word	gText_ContinueBoxOperations
	.byte	0x0
	.space	3
	.word	gText_PkmnCameBack
	.byte	0x1
	.space	3
	.word	gText_WasItWorriedAboutYou
	.byte	0x0
	.space	3
	.word	gText_FourEllipsesExclamation
	.byte	0x0
	.space	3
	.word	gText_PleaseRemoveTheMail
	.byte	0x0
	.space	3
	.word	gText_PkmnIsSelected
	.byte	0x7
	.space	3
	.word	gText_GiveToAPkmn
	.byte	0x0
	.space	3
	.word	gText_PlacedItemInBag
	.byte	0x7
	.space	3
	.word	gText_BagIsFull2
	.byte	0x0
	.space	3
	.word	gText_PutItemInBag
	.byte	0x0
	.space	3
	.word	gText_ItemIsNowHeld
	.byte	0x7
	.space	3
	.word	gText_ChangedToNewItem
	.byte	0x7
	.space	3
	.word	gText_MailCantBeStored
	.byte	0x0
	.space	3
	.size	 sMessages,248
	.align	2, 0
	.type	 sYesNoWindowTemplate,object
	.size	 sYesNoWindowTemplate,8
sYesNoWindowTemplate:
	.byte	0x0
	.byte	0x18
	.byte	0xb
	.byte	0x5
	.byte	0x4
	.byte	0xf
	.short	0x5c
	.align	2, 0
	.type	 sOamData_DisplayMon,object
	.size	 sOamData_DisplayMon,8
sOamData_DisplayMon:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sOamData_Waveform,object
	.size	 sOamData_Waveform,8
sOamData_Waveform:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sAnim_Waveform_LeftOff,object
sAnim_Waveform_LeftOff:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Waveform_LeftOff,8
	.align	2, 0
	.type	 sAnim_Waveform_LeftOn,object
sAnim_Waveform_LeftOn:
	.short	0x2
	.byte	0x8
	.space	1
	.short	0x4
	.byte	0x8
	.space	1
	.short	0x6
	.byte	0x8
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Waveform_LeftOn,16
	.align	2, 0
	.type	 sAnim_Waveform_RightOff,object
sAnim_Waveform_RightOff:
	.short	0x8
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Waveform_RightOff,8
	.align	2, 0
	.type	 sAnim_Waveform_RightOn,object
sAnim_Waveform_RightOn:
	.short	0xa
	.byte	0x8
	.space	1
	.short	0x4
	.byte	0x8
	.space	1
	.short	0xc
	.byte	0x8
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Waveform_RightOn,16
	.align	2, 0
	.type	 sAnims_Waveform,object
sAnims_Waveform:
	.word	sAnim_Waveform_LeftOff
	.word	sAnim_Waveform_LeftOn
	.word	sAnim_Waveform_RightOff
	.word	sAnim_Waveform_RightOn
	.size	 sAnims_Waveform,16
	.align	2, 0
	.type	 sSpriteTemplate_Waveform,object
	.size	 sSpriteTemplate_Waveform,24
sSpriteTemplate_Waveform:
	.short	0x5
	.short	0xdaca
	.word	sOamData_Waveform
	.word	sAnims_Waveform
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
.text
	.align	2, 0
	.type	 VBlankCB_PokeStorage,function
	.thumb_func
VBlankCB_PokeStorage:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	UnkUtil_Run
	bl	TransferPlttBuffer
	ldr	r0, .L3
	ldr	r0, [r0]
	mov	r1, #0xb3
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x18
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gStorage
.Lfe1:
	.size	 VBlankCB_PokeStorage,.Lfe1-VBlankCB_PokeStorage
	.align	2, 0
	.type	 CB2_PokeStorage,function
	.thumb_func
CB2_PokeStorage:
	push	{lr}
	bl	RunTasks
	bl	DoScheduledBgTilemapCopiesToVram
	bl	ScrollBackground
	bl	UpdateCloseBoxButtonFlash
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 CB2_PokeStorage,.Lfe2-CB2_PokeStorage
	.align	2, 0
	.globl	EnterPokeStorage
	.type	 EnterPokeStorage,function
	.thumb_func
EnterPokeStorage:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	ResetTasks
	ldr	r0, .L9
	strb	r5, [r0]
	ldr	r4, .L9+0x4
	ldr	r0, .L9+0x8
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	bne	.L7	@cond_branch
	ldr	r0, .L9+0xc
	bl	SetMainCallback2
	b	.L8
.L10:
	.align	2, 0
.L9:
	.word	sCurrentBoxOption
	.word	gStorage
	.word	0x62bc
	.word	CB2_ExitPokeStorage
.L7:
	mov	r2, #0x0
	strb	r5, [r0, #0x1]
	ldr	r0, [r4]
	strb	r2, [r0, #0x3]
	ldr	r0, .L11
	mov	r1, #0x0
	strh	r2, [r0]
	ldr	r0, [r4]
	strb	r1, [r0]
	ldr	r0, .L11+0x4
	mov	r1, #0x3
	bl	CreateTask
	ldr	r1, [r4]
	strb	r0, [r1, #0x4]
	mov	r0, #0x1c
	bl	SetHelpContext
	bl	StorageGetCurrentBox
	ldr	r1, .L11+0x8
	strb	r0, [r1]
	ldr	r0, .L11+0xc
	bl	SetMainCallback2
.L8:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	sMovingItemId
	.word	Task_InitPokeStorage
	.word	sLastUsedBox
	.word	CB2_PokeStorage
.Lfe3:
	.size	 EnterPokeStorage,.Lfe3-EnterPokeStorage
	.align	2, 0
	.globl	CB2_ReturnToPokeStorage
	.type	 CB2_ReturnToPokeStorage,function
	.thumb_func
CB2_ReturnToPokeStorage:
	push	{r4, lr}
	bl	ResetTasks
	ldr	r4, .L16
	ldr	r0, .L16+0x4
	bl	Alloc
	add	r1, r0, #0
	str	r1, [r4]
	cmp	r1, #0
	bne	.L14	@cond_branch
	ldr	r0, .L16+0x8
	bl	SetMainCallback2
	b	.L15
.L17:
	.align	2, 0
.L16:
	.word	gStorage
	.word	0x62bc
	.word	CB2_ExitPokeStorage
.L14:
	ldr	r0, .L18
	ldrb	r0, [r0]
	mov	r2, #0x0
	strb	r0, [r1, #0x1]
	ldr	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r1, #0x3]
	ldr	r0, [r4]
	strb	r2, [r0]
	ldr	r0, .L18+0x4
	mov	r1, #0x3
	bl	CreateTask
	ldr	r1, [r4]
	strb	r0, [r1, #0x4]
	mov	r0, #0x1c
	bl	SetHelpContext
	ldr	r0, .L18+0x8
	bl	SetMainCallback2
.L15:
	pop	{r4}
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	sCurrentBoxOption
	.word	Task_InitPokeStorage
	.word	CB2_PokeStorage
.Lfe4:
	.size	 CB2_ReturnToPokeStorage,.Lfe4-CB2_ReturnToPokeStorage
	.align	2, 0
	.type	 ResetAllBgCoords,function
	.thumb_func
ResetAllBgCoords:
	push	{lr}
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 ResetAllBgCoords,.Lfe5-ResetAllBgCoords
	.align	2, 0
	.type	 ResetForPokeStorage,function
	.thumb_func
ResetForPokeStorage:
	push	{r4, lr}
	add	sp, sp, #-0x4
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	FreeSpriteTileRanges
	bl	FreeAllSpritePalettes
	bl	ClearDma3Requests
	ldr	r1, .L22
	mov	r2, #0xa0
	lsl	r2, r2, #0x2
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r4, .L22+0x4
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x8
	add	r1, r1, #0x10
	mov	r2, #0x8
	bl	UnkUtil_Init
	ldr	r1, .L22+0x8
	mov	r0, #0x14
	strh	r0, [r1]
	bl	ClearScheduledBgCopiesToVram
	mov	r0, #0x3
	bl	TilemapUtil_Init
	ldr	r2, .L22+0xc
	mov	r0, #0x4
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x8
	bl	TilemapUtil_SetTilemap
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	TilemapUtil_SetPos
	ldr	r0, [r4]
	ldr	r1, .L22+0x10
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	gReservedSpriteTileCount
	.word	gStorage
	.word	gKeyRepeatStartDelay
	.word	sPkmnData_Tilemap
	.word	0x2c7
.Lfe6:
	.size	 ResetForPokeStorage,.Lfe6-ResetForPokeStorage
	.align	2, 0
	.type	 InitStartingPosData,function
	.thumb_func
InitStartingPosData:
	push	{lr}
	bl	ClearSavedCursorPos
	ldr	r2, .L26
	mov	r1, #0x0
	ldr	r0, .L26+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x1
	bne	.L25	@cond_branch
	mov	r1, #0x1
.L25:
	strb	r1, [r2]
	ldr	r1, .L26+0x8
	mov	r0, #0x0
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	sInPartyMenu
	.word	gStorage
	.word	sDepositBoxId
.Lfe7:
	.size	 InitStartingPosData,.Lfe7-InitStartingPosData
	.align	2, 0
	.type	 SetMonIconTransparency,function
	.thumb_func
SetMonIconTransparency:
	push	{lr}
	ldr	r0, .L30
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x3
	bne	.L29	@cond_branch
	mov	r1, #0xfc
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L30+0x4
	mov	r0, #0x52
	bl	SetGpuReg
.L29:
	mov	r1, #0xfa
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L31:
	.align	2, 0
.L30:
	.word	gStorage
	.word	0xb07
.Lfe8:
	.size	 SetMonIconTransparency,.Lfe8-SetMonIconTransparency
	.align	2, 0
	.type	 SetPokeStorageTask,function
	.thumb_func
SetPokeStorageTask:
	push	{r4, lr}
	ldr	r4, .L33
	ldr	r1, .L33+0x4
	ldr	r3, [r1]
	ldrb	r2, [r3, #0x4]
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	str	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r3]
	pop	{r4}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	gTasks
	.word	gStorage
.Lfe9:
	.size	 SetPokeStorageTask,.Lfe9-SetPokeStorageTask
	.align	2, 0
	.type	 Task_InitPokeStorage,function
	.thumb_func
Task_InitPokeStorage:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L70
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0xa
	bls	.LCB393
	b	.L35	@long jump
.LCB393:
	lsl	r0, r0, #0x2
	ldr	r1, .L70+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L71:
	.align	2, 0
.L70:
	.word	gStorage
	.word	.L68
	.align	2, 0
	.align	2, 0
.L68:
	.word	.L37
	.word	.L46
	.word	.L48
	.word	.L49
	.word	.L51
	.word	.L54
	.word	.L57
	.word	.L58
	.word	.L59
	.word	.L60
	.word	.L64
.L37:
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	bl	ResetForPokeStorage
	ldr	r0, .L72
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0
	beq	.L38	@cond_branch
	ldr	r0, .L72+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L40	@cond_branch
	cmp	r0, #0x1
	bgt	.L45	@cond_branch
	cmp	r0, #0
	beq	.L41	@cond_branch
	b	.L38
.L73:
	.align	2, 0
.L72:
	.word	gStorage
	.word	sWhichToReshow
.L45:
	cmp	r0, #0x2
	beq	.L42	@cond_branch
	b	.L38
.L40:
	bl	LoadSavedMovingMon
	b	.L38
.L41:
	bl	SetSelectionAfterSummaryScreen
	b	.L38
.L42:
	bl	GiveChosenBagItem
.L38:
	bl	LoadPokeStorageMenuGfx
	bl	LoadsMiscSpritePalette
	b	.L36
.L46:
	bl	InitPokeStorageWindows
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB473
	b	.L36	@long jump
.LCB473:
	b	.L69
.L48:
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	ClearWindowTilemap
	mov	r0, #0x0
	str	r0, [sp]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L74
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x1
	mov	r1, #0xb
	mov	r2, #0xe0
	bl	LoadUserWindowGfx
	b	.L36
.L75:
	.align	2, 0
.L74:
	.word	0x5000080
.L49:
	bl	ResetAllBgCoords
	ldr	r0, .L76
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0
	beq	.LCB514
	b	.L36	@long jump
.LCB514:
	bl	InitStartingPosData
	b	.L36
.L77:
	.align	2, 0
.L76:
	.word	gStorage
.L51:
	bl	InitMonIconFields
	ldr	r0, .L78
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0
	bne	.L52	@cond_branch
	bl	InitCursor
	b	.L36
.L79:
	.align	2, 0
.L78:
	.word	gStorage
.L52:
	bl	InitCursorOnReopen
	b	.L36
.L54:
	bl	MultiMove_Init
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L55	@cond_branch
.L69:
	ldr	r0, .L80
	bl	SetPokeStorageTask
	b	.L35
.L81:
	.align	2, 0
.L80:
	.word	Task_ChangeScreen
.L55:
	bl	SetScrollingBackground
	bl	InitPokeStorageBg0
	b	.L36
.L57:
	bl	InitPalettesAndSprites
	b	.L36
.L58:
	bl	InitSupplementalTilemaps
	b	.L36
.L59:
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CreateInitBoxTask
	b	.L36
.L60:
	bl	IsInitBoxActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L35	@cond_branch
	ldr	r0, .L82
	ldr	r2, [r0]
	ldrb	r0, [r2, #0x1]
	cmp	r0, #0x3
	beq	.L62	@cond_branch
	mov	r1, #0xda
	lsl	r1, r1, #0x4
	add	r0, r2, r1
	mov	r1, #0xd
	strh	r1, [r0]
	ldr	r1, .L82+0x4
	add	r2, r2, r1
	ldr	r1, .L82+0x8
	strh	r1, [r2]
	bl	InitMonMarkingsMenu
	bl	BufferMonMarkingsMenuTiles
	b	.L36
.L83:
	.align	2, 0
.L82:
	.word	gStorage
	.word	0xda2
	.word	0xdace
.L62:
	bl	CreateItemIconSprites
	bl	InitCursorItemIcon
	b	.L36
.L64:
	bl	SetMonIconTransparency
	ldr	r0, .L84
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0
	bne	.L65	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r0, .L84+0x4
	bl	SetPokeStorageTask
	b	.L66
.L85:
	.align	2, 0
.L84:
	.word	gStorage
	.word	Task_ShowPokeStorage
.L65:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r0, .L86
	bl	SetPokeStorageTask
.L66:
	ldr	r0, .L86+0x4
	bl	SetVBlankCallback
	b	.L35
.L87:
	.align	2, 0
.L86:
	.word	Task_ReshowPokeStorage
	.word	VBlankCB_PokeStorage
.L36:
	ldr	r0, .L88
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L35:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gStorage
.Lfe10:
	.size	 Task_InitPokeStorage,.Lfe10-Task_InitPokeStorage
	.align	2, 0
	.type	 Task_ShowPokeStorage,function
	.thumb_func
Task_ShowPokeStorage:
	push	{r4, lr}
	ldr	r4, .L97
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L92	@cond_branch
	cmp	r0, #0x1
	beq	.L93	@cond_branch
	b	.L91
.L98:
	.align	2, 0
.L97:
	.word	gStorage
.L92:
	mov	r0, #0x2
	bl	PlaySE
	mov	r0, #0x14
	mov	r1, #0x0
	mov	r2, #0x1
	bl	BeginPCScreenEffect_TurnOn
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L91
.L93:
	bl	IsPCScreenEffectRunning_TurnOn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L91	@cond_branch
	ldr	r0, .L99
	bl	SetPokeStorageTask
.L91:
	pop	{r4}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	Task_PokeStorageMain
.Lfe11:
	.size	 Task_ShowPokeStorage,.Lfe11-Task_ShowPokeStorage
	.align	2, 0
	.type	 Task_ReshowPokeStorage,function
	.thumb_func
Task_ReshowPokeStorage:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L108
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L103	@cond_branch
	cmp	r0, #0x1
	beq	.L104	@cond_branch
	b	.L102
.L109:
	.align	2, 0
.L108:
	.word	gStorage
.L103:
	mov	r1, #0x1
	neg	r1, r1
	str	r0, [sp]
	add	r0, r1, #0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L102
.L104:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L102	@cond_branch
	ldr	r0, .L110
	bl	SetPokeStorageTask
.L102:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L111:
	.align	2, 0
.L110:
	.word	Task_PokeStorageMain
.Lfe12:
	.size	 Task_ReshowPokeStorage,.Lfe12-Task_ReshowPokeStorage
	.align	2, 0
	.type	 Task_PokeStorageMain,function
	.thumb_func
Task_PokeStorageMain:
	push	{r4, r5, lr}
	ldr	r0, .L202
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0xb
	bls	.LCB837
	b	.L113	@long jump
.LCB837:
	lsl	r0, r0, #0x2
	ldr	r1, .L202+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L203:
	.align	2, 0
.L202:
	.word	gStorage
	.word	.L190
	.align	2, 0
	.align	2, 0
.L190:
	.word	.L114
	.word	.L163
	.word	.L168
	.word	.L173
	.word	.L175
	.word	.L176
	.word	.L177
	.word	.L179
	.word	.L181
	.word	.L183
	.word	.L186
	.word	.L188
.L114:
	bl	HandleInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x19
	bls	.LCB864
	b	.L113	@long jump
.LCB864:
	lsl	r0, r0, #0x2
	ldr	r1, .L204
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L205:
	.align	2, 0
.L204:
	.word	.L161
	.align	2, 0
	.align	2, 0
.L161:
	.word	.L116
	.word	.L113
	.word	.L113
	.word	.L126
	.word	.L117
	.word	.L120
	.word	.L128
	.word	.L129
	.word	.L130
	.word	.L134
	.word	.L138
	.word	.L149
	.word	.L143
	.word	.L146
	.word	.L150
	.word	.L151
	.word	.L152
	.word	.L153
	.word	.L127
	.word	.L154
	.word	.L156
	.word	.L155
	.word	.L157
	.word	.L160
	.word	.L158
	.word	.L159
.L116:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L206
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L113
.L207:
	.align	2, 0
.L206:
	.word	gStorage
.L117:
	ldr	r4, .L208
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L118	@cond_branch
	mov	r0, #0x10
	bl	PrintStorageMessage
	ldr	r1, [r4]
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L113
.L209:
	.align	2, 0
.L208:
	.word	gStorage
.L118:
	bl	ClearSavedCursorPos
	ldr	r0, .L210
	bl	SetPokeStorageTask
	b	.L113
.L211:
	.align	2, 0
.L210:
	.word	Task_ShowPartyPokemon
.L120:
	ldr	r4, .L212
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x2
	bne	.L121	@cond_branch
	bl	IsMonBeingMoved
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L193	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L212+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB960
	b	.L192	@long jump
.LCB960:
	b	.L193
.L213:
	.align	2, 0
.L212:
	.word	gStorage
	.word	0xce2
.L121:
	cmp	r0, #0x3
	beq	.LCB973
	b	.L113	@long jump
.LCB973:
.L193:
	ldr	r0, .L214
	bl	SetPokeStorageTask
	b	.L113
.L215:
	.align	2, 0
.L214:
	.word	Task_HidePartyPokemon
.L126:
	ldr	r0, .L216
	bl	SetPokeStorageTask
	b	.L113
.L217:
	.align	2, 0
.L216:
	.word	Task_OnCloseBoxPressed
.L127:
	ldr	r0, .L218
	bl	SetPokeStorageTask
	b	.L113
.L219:
	.align	2, 0
.L218:
	.word	Task_OnBPressed
.L128:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L220
	bl	SetPokeStorageTask
	b	.L113
.L221:
	.align	2, 0
.L220:
	.word	Task_HandleBoxOptions
.L129:
	ldr	r0, .L222
	bl	SetPokeStorageTask
	b	.L113
.L223:
	.align	2, 0
.L222:
	.word	Task_OnSelectedMon
.L130:
	mov	r0, #0x5
	bl	PlaySE
	bl	StorageGetCurrentBox
	ldr	r4, .L224
	ldr	r1, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, #0x1
	ldr	r2, .L224+0x4
	add	r1, r1, r2
	strh	r0, [r1]
	cmp	r0, #0xd
	ble	.L131	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1]
.L131:
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x3
	beq	.L136	@cond_branch
	add	r0, r1, r2
	b	.L194
.L225:
	.align	2, 0
.L224:
	.word	gStorage
	.word	0x2ca
.L134:
	mov	r0, #0x5
	bl	PlaySE
	bl	StorageGetCurrentBox
	ldr	r4, .L226
	ldr	r1, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	ldr	r2, .L226+0x4
	add	r1, r1, r2
	strh	r0, [r1]
	cmp	r0, #0
	bge	.L135	@cond_branch
	mov	r0, #0xd
	strh	r0, [r1]
.L135:
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x3
	beq	.L136	@cond_branch
	add	r0, r1, r2
	b	.L194
.L227:
	.align	2, 0
.L226:
	.word	gStorage
	.word	0x2ca
.L136:
	bl	TryHideItemAtCursor
	ldr	r1, [r4]
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L113
.L138:
	bl	CanMovePartyMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L195	@cond_branch
	ldr	r4, .L228
	ldr	r0, [r4]
	ldr	r1, .L228+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L140	@cond_branch
.L192:
	ldr	r1, [r4]
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L113
.L229:
	.align	2, 0
.L228:
	.word	gStorage
	.word	0xce2
.L140:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L230
	bl	SetPokeStorageTask
	b	.L113
.L231:
	.align	2, 0
.L230:
	.word	Task_DepositMenu
.L143:
	bl	CanMovePartyMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L195	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	b	.L196
.L146:
	bl	CanShiftMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L147	@cond_branch
.L195:
	ldr	r0, .L232
	ldr	r1, [r0]
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L113
.L233:
	.align	2, 0
.L232:
	.word	gStorage
.L147:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L234
	bl	SetPokeStorageTask
	b	.L113
.L235:
	.align	2, 0
.L234:
	.word	Task_ShiftMon
.L149:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L236
	bl	SetPokeStorageTask
	b	.L113
.L237:
	.align	2, 0
.L236:
	.word	Task_WithdrawMon
.L150:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L238
	bl	SetPokeStorageTask
	b	.L113
.L239:
	.align	2, 0
.L238:
	.word	Task_PlaceMon
.L151:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L240
	bl	SetPokeStorageTask
	b	.L113
.L241:
	.align	2, 0
.L240:
	.word	Task_TakeItemForMoving
.L152:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L242
	bl	SetPokeStorageTask
	b	.L113
.L243:
	.align	2, 0
.L242:
	.word	Task_GiveMovingItemToMon
.L153:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L244
	bl	SetPokeStorageTask
	b	.L113
.L245:
	.align	2, 0
.L244:
	.word	Task_SwitchSelectedItem
.L154:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	b	.L197
.L155:
	mov	r0, #0x1
	bl	MultiMove_SetFunction
	ldr	r0, .L246
	ldr	r1, [r0]
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L113
.L247:
	.align	2, 0
.L246:
	.word	gStorage
.L156:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	b	.L198
.L157:
	mov	r0, #0x3
	b	.L197
.L158:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x4
.L198:
	bl	MultiMove_SetFunction
	ldr	r0, .L248
	ldr	r1, [r0]
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L113
.L249:
	.align	2, 0
.L248:
	.word	gStorage
.L159:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x3
	bl	SetPokeStorageQuestLogEvent
	mov	r0, #0x5
.L197:
	bl	MultiMove_SetFunction
	ldr	r0, .L250
	ldr	r1, [r0]
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L113
.L251:
	.align	2, 0
.L250:
	.word	gStorage
.L160:
	mov	r0, #0x1a
	bl	PlaySE
	b	.L113
.L163:
	bl	UpdateCursorPos
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1377
	b	.L113	@long jump
.LCB1377:
	bl	IsCursorOnCloseBox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L165	@cond_branch
	bl	StartFlashingCloseBoxButton
	b	.L166
.L165:
	bl	StopFlashingCloseBoxButton
.L166:
	ldr	r4, .L252
	ldr	r0, [r4]
	ldr	r1, .L252+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L167	@cond_branch
	bl	StartDisplayMonMosaic
.L167:
	ldr	r1, [r4]
	b	.L199
.L253:
	.align	2, 0
.L252:
	.word	gStorage
	.word	0xce6
.L168:
	bl	ScrollToBox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1421
	b	.L113	@long jump
.LCB1421:
	ldr	r0, .L254
	ldr	r0, [r0]
	ldr	r1, .L254+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	SetCurrentBox
	ldr	r0, .L254+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L170	@cond_branch
	bl	IsMonBeingMoved
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L170	@cond_branch
	bl	DoTrySetDisplayMonData
	bl	StartDisplayMonMosaic
.L170:
	ldr	r4, .L254
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x3
	bne	.L199	@cond_branch
	bl	TryShowItemAtCursor
	ldr	r1, [r4]
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L113
.L255:
	.align	2, 0
.L254:
	.word	gStorage
	.word	0x2ca
	.word	sInPartyMenu
.L173:
	ldr	r0, .L256
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L113	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L256+0x4
	ldr	r1, [r0]
.L199:
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L113
.L257:
	.align	2, 0
.L256:
	.word	gMain
	.word	gStorage
.L175:
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0xd
	b	.L200
.L176:
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0x16
.L200:
	bl	PrintStorageMessage
	ldr	r0, .L258
	ldr	r1, [r0]
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L113
.L259:
	.align	2, 0
.L258:
	.word	gStorage
.L177:
	ldr	r0, .L260
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L113	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L260+0x4
	bl	SetPokeStorageTask
	b	.L113
.L261:
	.align	2, 0
.L260:
	.word	gMain
	.word	Task_PokeStorageMain
.L179:
	bl	MultiMove_RunFunction
	b	.L201
.L181:
	bl	MultiMove_RunFunction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L113	@cond_branch
.L196:
	ldr	r0, .L262
	bl	SetPokeStorageTask
	b	.L113
.L263:
	.align	2, 0
.L262:
	.word	Task_MoveMon
.L183:
	bl	MultiMove_RunFunction
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L113	@cond_branch
	ldr	r5, .L264
	ldr	r0, [r5]
	ldr	r1, .L264+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L185	@cond_branch
	bl	StartDisplayMonMosaic
.L185:
	ldr	r0, [r5]
	strb	r4, [r0]
	b	.L113
.L265:
	.align	2, 0
.L264:
	.word	gStorage
	.word	0xce6
.L186:
	bl	IsItemIconAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L113	@cond_branch
	ldr	r4, .L266
	ldr	r0, [r4]
	ldr	r1, .L266+0x4
	add	r0, r0, r1
.L194:
	ldrb	r0, [r0]
	bl	SetUpScrollToBox
	ldr	r1, [r4]
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L113
.L267:
	.align	2, 0
.L266:
	.word	gStorage
	.word	0x2ca
.L188:
	bl	IsItemIconAnimActive
.L201:
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L113	@cond_branch
	ldr	r0, .L268
	ldr	r0, [r0]
	strb	r1, [r0]
.L113:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L269:
	.align	2, 0
.L268:
	.word	gStorage
.Lfe13:
	.size	 Task_PokeStorageMain,.Lfe13-Task_PokeStorageMain
	.align	2, 0
	.type	 Task_ShowPartyPokemon,function
	.thumb_func
Task_ShowPartyPokemon:
	push	{r4, lr}
	ldr	r4, .L277
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L272	@cond_branch
	cmp	r0, #0x1
	beq	.L273	@cond_branch
	b	.L271
.L278:
	.align	2, 0
.L277:
	.word	gStorage
.L272:
	bl	SetUpDoShowPartyMenu
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L271
.L273:
	bl	DoShowPartyMenu
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L271	@cond_branch
	ldr	r0, .L279
	bl	SetPokeStorageTask
.L271:
	pop	{r4}
	pop	{r0}
	bx	r0
.L280:
	.align	2, 0
.L279:
	.word	Task_PokeStorageMain
.Lfe14:
	.size	 Task_ShowPartyPokemon,.Lfe14-Task_ShowPartyPokemon
	.align	2, 0
	.type	 Task_HidePartyPokemon,function
	.thumb_func
Task_HidePartyPokemon:
	push	{r4, lr}
	ldr	r4, .L293
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L284	@cond_branch
	cmp	r0, #0x1
	bgt	.L291	@cond_branch
	cmp	r0, #0
	beq	.L283	@cond_branch
	b	.L282
.L294:
	.align	2, 0
.L293:
	.word	gStorage
.L291:
	cmp	r0, #0x2
	beq	.L286	@cond_branch
	b	.L282
.L283:
	mov	r0, #0x5
	bl	PlaySE
	bl	SetUpHidePartyMenu
	b	.L292
.L284:
	bl	HidePartyMenu
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L282	@cond_branch
	bl	GetSavedCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	SetCursorBoxPosition
.L292:
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L282
.L286:
	bl	UpdateCursorPos
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L282	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L295
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L288	@cond_branch
	bl	StartDisplayMonMosaic
.L288:
	ldr	r0, .L295+0x4
	bl	SetPokeStorageTask
.L282:
	pop	{r4}
	pop	{r0}
	bx	r0
.L296:
	.align	2, 0
.L295:
	.word	0xce6
	.word	Task_PokeStorageMain
.Lfe15:
	.size	 Task_HidePartyPokemon,.Lfe15-Task_HidePartyPokemon
	.align	2, 0
	.type	 Task_OnSelectedMon,function
	.thumb_func
Task_OnSelectedMon:
	push	{r4, lr}
	ldr	r0, .L352
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x6
	bls	.LCB1815
	b	.L298	@long jump
.LCB1815:
	lsl	r0, r0, #0x2
	ldr	r1, .L352+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L353:
	.align	2, 0
.L352:
	.word	gStorage
	.word	.L347
	.align	2, 0
	.align	2, 0
.L347:
	.word	.L299
	.word	.L306
	.word	.L308
	.word	.L342
	.word	.L344
	.word	.L343
	.word	.L345
.L299:
	bl	IsDisplayMonMosaicActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1840
	b	.L298	@long jump
.LCB1840:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L354
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x3
	beq	.L301	@cond_branch
	mov	r0, #0x4
	bl	PrintStorageMessage
	b	.L302
.L355:
	.align	2, 0
.L354:
	.word	gStorage
.L301:
	bl	IsActiveItemMoving
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L304	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L356
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L303	@cond_branch
.L304:
	mov	r0, #0x17
	bl	PrintStorageMessage
	b	.L302
.L357:
	.align	2, 0
.L356:
	.word	0xce2
.L303:
	mov	r0, #0x18
	bl	PrintStorageMessage
.L302:
	bl	AddMenu
	ldr	r0, .L358
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L298
.L359:
	.align	2, 0
.L358:
	.word	gStorage
.L306:
	bl	IsMenuLoading
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1912
	b	.L298	@long jump
.LCB1912:
	ldr	r0, .L360
	ldr	r1, [r0]
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L298
.L361:
	.align	2, 0
.L360:
	.word	gStorage
.L308:
	bl	HandleMenuInput
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x12
	bls	.LCB1933
	b	.L298	@long jump
.LCB1933:
	lsl	r0, r0, #0x2
	ldr	r1, .L362
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L363:
	.align	2, 0
.L362:
	.word	.L340
	.align	2, 0
	.align	2, 0
.L340:
	.word	.L311
	.word	.L311
	.word	.L320
	.word	.L319
	.word	.L312
	.word	.L316
	.word	.L315
	.word	.L332
	.word	.L325
	.word	.L333
	.word	.L298
	.word	.L298
	.word	.L298
	.word	.L334
	.word	.L335
	.word	.L338
	.word	.L337
	.word	.L336
	.word	.L339
.L311:
	bl	ClearBottomWindow
	ldr	r0, .L364
	bl	SetPokeStorageTask
	b	.L298
.L365:
	.align	2, 0
.L364:
	.word	Task_PokeStorageMain
.L312:
	bl	CanMovePartyMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L349	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r0, .L366
	bl	SetPokeStorageTask
	b	.L298
.L367:
	.align	2, 0
.L366:
	.word	Task_MoveMon
.L315:
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r0, .L368
	bl	SetPokeStorageTask
	b	.L298
.L369:
	.align	2, 0
.L368:
	.word	Task_PlaceMon
.L316:
	bl	CanShiftMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L349	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r0, .L370
	bl	SetPokeStorageTask
	b	.L298
.L371:
	.align	2, 0
.L370:
	.word	Task_ShiftMon
.L319:
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r0, .L372
	bl	SetPokeStorageTask
	b	.L298
.L373:
	.align	2, 0
.L372:
	.word	Task_WithdrawMon
.L320:
	bl	CanMovePartyMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L349	@cond_branch
	ldr	r4, .L374
	ldr	r0, [r4]
	ldr	r2, .L374+0x4
	add	r0, r0, r2
	ldrh	r0, [r0]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L350	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r0, .L374+0x8
	bl	SetPokeStorageTask
	b	.L298
.L375:
	.align	2, 0
.L374:
	.word	gStorage
	.word	0xce2
	.word	Task_DepositMenu
.L325:
	bl	CanMovePartyMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L326	@cond_branch
.L349:
	ldr	r0, .L376
	ldr	r1, [r0]
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L298
.L377:
	.align	2, 0
.L376:
	.word	gStorage
.L326:
	ldr	r4, .L378
	ldr	r1, [r4]
	ldr	r2, .L378+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L328	@cond_branch
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L298
.L379:
	.align	2, 0
.L378:
	.word	gStorage
	.word	0xce9
.L328:
	ldr	r2, .L380
	add	r0, r1, r2
	ldrh	r0, [r0]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L330	@cond_branch
.L350:
	ldr	r1, [r4]
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L298
.L381:
	.align	2, 0
.L380:
	.word	0xce2
.L330:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L382
	bl	SetPokeStorageTask
	b	.L298
.L383:
	.align	2, 0
.L382:
	.word	Task_ReleaseMon
.L332:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L384
	bl	SetPokeStorageTask
	b	.L298
.L385:
	.align	2, 0
.L384:
	.word	Task_ShowMonSummary
.L333:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L386
	bl	SetPokeStorageTask
	b	.L298
.L387:
	.align	2, 0
.L386:
	.word	Task_ShowMarkMenu
.L334:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L388
	bl	SetPokeStorageTask
	b	.L298
.L389:
	.align	2, 0
.L388:
	.word	Task_TakeItemForMoving
.L335:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L390
	bl	SetPokeStorageTask
	b	.L298
.L391:
	.align	2, 0
.L390:
	.word	Task_GiveMovingItemToMon
.L336:
	ldr	r0, .L392
	bl	SetPokeStorageTask
	b	.L298
.L393:
	.align	2, 0
.L392:
	.word	Task_ItemToBag
.L337:
	ldr	r0, .L394
	bl	SetPokeStorageTask
	b	.L298
.L395:
	.align	2, 0
.L394:
	.word	Task_SwitchSelectedItem
.L338:
	ldr	r0, .L396
	bl	SetPokeStorageTask
	b	.L298
.L397:
	.align	2, 0
.L396:
	.word	Task_GiveItemFromBag
.L339:
	ldr	r0, .L398
	bl	SetPokeStorageTask
	b	.L298
.L399:
	.align	2, 0
.L398:
	.word	Task_ShowItemInfo
.L342:
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0xd
	b	.L351
.L343:
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0x11
	b	.L351
.L344:
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0x16
.L351:
	bl	PrintStorageMessage
	ldr	r0, .L400
	ldr	r1, [r0]
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L298
.L401:
	.align	2, 0
.L400:
	.word	gStorage
.L345:
	ldr	r0, .L402
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L298	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L402+0x4
	bl	SetPokeStorageTask
.L298:
	pop	{r4}
	pop	{r0}
	bx	r0
.L403:
	.align	2, 0
.L402:
	.word	gMain
	.word	Task_PokeStorageMain
.Lfe16:
	.size	 Task_OnSelectedMon,.Lfe16-Task_OnSelectedMon
	.align	2, 0
	.type	 Task_MoveMon,function
	.thumb_func
Task_MoveMon:
	push	{r4, lr}
	ldr	r4, .L413
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L406	@cond_branch
	cmp	r0, #0x1
	beq	.L407	@cond_branch
	b	.L405
.L414:
	.align	2, 0
.L413:
	.word	gStorage
.L406:
	mov	r0, #0x0
	bl	InitMonPlaceChange
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L405
.L407:
	bl	DoMonPlaceChange
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L405	@cond_branch
	ldr	r0, .L415
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L409	@cond_branch
	ldr	r0, .L415+0x4
	bl	SetPokeStorageTask
	b	.L405
.L416:
	.align	2, 0
.L415:
	.word	sInPartyMenu
	.word	Task_HandleMovingMonFromParty
.L409:
	ldr	r0, .L417
	bl	SetPokeStorageTask
.L405:
	pop	{r4}
	pop	{r0}
	bx	r0
.L418:
	.align	2, 0
.L417:
	.word	Task_PokeStorageMain
.Lfe17:
	.size	 Task_MoveMon,.Lfe17-Task_MoveMon
	.align	2, 0
	.type	 Task_PlaceMon,function
	.thumb_func
Task_PlaceMon:
	push	{r4, lr}
	ldr	r4, .L428
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L421	@cond_branch
	cmp	r0, #0x1
	beq	.L422	@cond_branch
	b	.L420
.L429:
	.align	2, 0
.L428:
	.word	gStorage
.L421:
	mov	r0, #0x1
	bl	SetPokeStorageQuestLogEvent
	mov	r0, #0x1
	bl	InitMonPlaceChange
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L420
.L422:
	bl	DoMonPlaceChange
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L420	@cond_branch
	ldr	r0, .L430
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L424	@cond_branch
	ldr	r0, .L430+0x4
	bl	SetPokeStorageTask
	b	.L420
.L431:
	.align	2, 0
.L430:
	.word	sInPartyMenu
	.word	Task_HandleMovingMonFromParty
.L424:
	ldr	r0, .L432
	bl	SetPokeStorageTask
.L420:
	pop	{r4}
	pop	{r0}
	bx	r0
.L433:
	.align	2, 0
.L432:
	.word	Task_PokeStorageMain
.Lfe18:
	.size	 Task_PlaceMon,.Lfe18-Task_PlaceMon
	.align	2, 0
	.type	 Task_ShiftMon,function
	.thumb_func
Task_ShiftMon:
	push	{r4, lr}
	ldr	r4, .L441
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L436	@cond_branch
	cmp	r0, #0x1
	beq	.L437	@cond_branch
	b	.L435
.L442:
	.align	2, 0
.L441:
	.word	gStorage
.L436:
	mov	r0, #0x0
	bl	SetPokeStorageQuestLogEvent
	mov	r0, #0x2
	bl	InitMonPlaceChange
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L435
.L437:
	bl	DoMonPlaceChange
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L435	@cond_branch
	bl	StartDisplayMonMosaic
	ldr	r0, .L443
	bl	SetPokeStorageTask
.L435:
	pop	{r4}
	pop	{r0}
	bx	r0
.L444:
	.align	2, 0
.L443:
	.word	Task_PokeStorageMain
.Lfe19:
	.size	 Task_ShiftMon,.Lfe19-Task_ShiftMon
	.align	2, 0
	.type	 Task_WithdrawMon,function
	.thumb_func
Task_WithdrawMon:
	push	{lr}
	ldr	r0, .L462
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L446	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L462+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L463:
	.align	2, 0
.L462:
	.word	gStorage
	.word	.L459
	.align	2, 0
	.align	2, 0
.L459:
	.word	.L447
	.word	.L450
	.word	.L452
	.word	.L454
	.word	.L456
	.word	.L458
.L447:
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x6
	bne	.L448	@cond_branch
	mov	r0, #0xe
	bl	PrintStorageMessage
	ldr	r0, .L464
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L446
.L465:
	.align	2, 0
.L464:
	.word	gStorage
.L448:
	bl	SaveCursorPos
	mov	r0, #0x0
	bl	InitMonPlaceChange
	ldr	r0, .L466
	ldr	r1, [r0]
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L446
.L467:
	.align	2, 0
.L466:
	.word	gStorage
.L450:
	ldr	r0, .L468
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L446	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L468+0x4
	bl	SetPokeStorageTask
	b	.L446
.L469:
	.align	2, 0
.L468:
	.word	gMain
	.word	Task_PokeStorageMain
.L452:
	bl	DoMonPlaceChange
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L446	@cond_branch
	mov	r0, #0x1
	bl	SetMovingMonPriority
	bl	SetUpDoShowPartyMenu
	b	.L461
.L454:
	bl	DoShowPartyMenu
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L446	@cond_branch
	mov	r0, #0x1
	bl	SetPokeStorageQuestLogEvent
	mov	r0, #0x1
	bl	InitMonPlaceChange
	b	.L461
.L456:
	bl	DoMonPlaceChange
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L446	@cond_branch
	bl	UpdatePartySlotColors
.L461:
	ldr	r0, .L470
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L446
.L471:
	.align	2, 0
.L470:
	.word	gStorage
.L458:
	ldr	r0, .L472
	bl	SetPokeStorageTask
.L446:
	pop	{r0}
	bx	r0
.L473:
	.align	2, 0
.L472:
	.word	Task_HidePartyPokemon
.Lfe20:
	.size	 Task_WithdrawMon,.Lfe20-Task_WithdrawMon
	.align	2, 0
	.type	 Task_DepositMenu,function
	.thumb_func
Task_DepositMenu:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L494
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.LCB2696
	b	.L475	@long jump
.LCB2696:
	lsl	r0, r0, #0x2
	ldr	r1, .L494+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L495:
	.align	2, 0
.L494:
	.word	gStorage
	.word	.L490
	.align	2, 0
	.align	2, 0
.L490:
	.word	.L476
	.word	.L477
	.word	.L485
	.word	.L486
	.word	.L488
.L476:
	mov	r0, #0x6
	bl	PrintStorageMessage
	ldr	r4, .L496
	ldr	r0, [r4]
	ldr	r1, .L496+0x4
	add	r0, r0, r1
	ldr	r2, .L496+0x8
	mov	r1, #0x0
	str	r1, [sp]
	mov	r1, #0xa
	mov	r3, #0x3
	bl	LoadChooseBoxMenuGfx
	ldr	r0, .L496+0xc
	ldrb	r0, [r0]
	bl	CreateChooseBoxMenuSprites
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L492
.L497:
	.align	2, 0
.L496:
	.word	gStorage
	.word	0x1e58
	.word	0xdac7
	.word	sDepositBoxId
.L477:
	bl	HandleBoxChooseSelectionInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	cmp	r0, #0xc8
	beq	.L475	@cond_branch
	cmp	r0, #0xc9
	bne	.L481	@cond_branch
	bl	ClearBottomWindow
	bl	DestroyChooseBoxMenuSprites
	bl	FreeBoxSelectionPopupSpriteGfx
	b	.L493
.L481:
	add	r0, r4, #0
	bl	TryStorePartyMonInBox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L482	@cond_branch
	ldr	r0, .L498
	strb	r4, [r0]
	mov	r0, #0x2
	bl	SetPokeStorageQuestLogEvent
	bl	ClearBottomWindow
	bl	DestroyChooseBoxMenuSprites
	bl	FreeBoxSelectionPopupSpriteGfx
	ldr	r0, .L498+0x4
	ldr	r1, [r0]
	mov	r0, #0x2
	b	.L492
.L499:
	.align	2, 0
.L498:
	.word	sDepositBoxId
	.word	gStorage
.L482:
	mov	r0, #0x8
	bl	PrintStorageMessage
	ldr	r0, .L500
	ldr	r1, [r0]
	mov	r0, #0x4
	b	.L492
.L501:
	.align	2, 0
.L500:
	.word	gStorage
.L485:
	bl	CompactPartySlots
	bl	CompactPartySprites
	ldr	r0, .L502
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L492
.L503:
	.align	2, 0
.L502:
	.word	gStorage
.L486:
	bl	GetNumPartySpritesCompacting
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L475	@cond_branch
	bl	ResetSelectionAfterDeposit
	bl	StartDisplayMonMosaic
	bl	UpdatePartySlotColors
.L493:
	ldr	r0, .L504
	bl	SetPokeStorageTask
	b	.L475
.L505:
	.align	2, 0
.L504:
	.word	Task_PokeStorageMain
.L488:
	ldr	r0, .L506
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L475	@cond_branch
	mov	r0, #0x6
	bl	PrintStorageMessage
	ldr	r0, .L506+0x4
	ldr	r1, [r0]
	mov	r0, #0x1
.L492:
	strb	r0, [r1]
.L475:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L507:
	.align	2, 0
.L506:
	.word	gMain
	.word	gStorage
.Lfe21:
	.size	 Task_DepositMenu,.Lfe21-Task_DepositMenu
	.align	2, 0
	.type	 Task_ReleaseMon,function
	.thumb_func
Task_ReleaseMon:
	push	{lr}
	ldr	r0, .L554
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0xd
	bls	.LCB2893
	b	.L509	@long jump
.LCB2893:
	lsl	r0, r0, #0x2
	ldr	r1, .L554+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L555:
	.align	2, 0
.L554:
	.word	gStorage
	.word	.L549
	.align	2, 0
	.align	2, 0
.L549:
	.word	.L510
	.word	.L511
	.word	.L519
	.word	.L528
	.word	.L529
	.word	.L531
	.word	.L535
	.word	.L537
	.word	.L538
	.word	.L539
	.word	.L541
	.word	.L543
	.word	.L545
	.word	.L547
.L510:
	mov	r0, #0x9
	bl	PrintStorageMessage
	mov	r0, #0x1
	bl	ShowYesNoWindow
	ldr	r0, .L556
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L511:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L515	@cond_branch
	cmp	r1, #0
	bgt	.L518	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L514	@cond_branch
	b	.L509
.L557:
	.align	2, 0
.L556:
	.word	gStorage
.L518:
	cmp	r1, #0x1
	beq	.LCB2946
	b	.L509	@long jump
.LCB2946:
.L514:
	bl	ClearBottomWindow
	b	.L537
.L515:
	bl	ClearBottomWindow
	bl	InitCanReleaseMonVars
	bl	InitReleaseMon
	b	.L552
.L519:
	bl	RunCanReleaseMon
	bl	TryHideReleaseMon
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB2967
	b	.L509	@long jump
.LCB2967:
	b	.L523
.L524:
	cmp	r0, #0
	bne	.LCB2975
	b	.L551	@long jump
.LCB2975:
.L523:
	bl	RunCanReleaseMon
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L524	@cond_branch
	b	.L552
.L528:
	bl	ReleaseMon
	bl	RefreshDisplayMonData
	mov	r0, #0xa
	b	.L553
.L529:
	ldr	r0, .L558
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB3008
	b	.L509	@long jump
.LCB3008:
	mov	r0, #0xb
	b	.L553
.L559:
	.align	2, 0
.L558:
	.word	gMain
.L531:
	ldr	r0, .L560
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L509	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L560+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L533	@cond_branch
	bl	CompactPartySlots
	bl	CompactPartySprites
	b	.L552
.L561:
	.align	2, 0
.L560:
	.word	gMain
	.word	sInPartyMenu
.L533:
	ldr	r0, .L562
	ldr	r1, [r0]
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L509
.L563:
	.align	2, 0
.L562:
	.word	gStorage
.L535:
	bl	GetNumPartySpritesCompacting
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L509	@cond_branch
	bl	DoTrySetDisplayMonData
	bl	StartDisplayMonMosaic
	bl	UpdatePartySlotColors
	b	.L552
.L537:
	ldr	r0, .L564
	bl	SetPokeStorageTask
	b	.L509
.L565:
	.align	2, 0
.L564:
	.word	Task_PokeStorageMain
.L538:
	mov	r0, #0xa
	b	.L553
.L539:
	ldr	r0, .L566
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L509	@cond_branch
	mov	r0, #0x15
	b	.L553
.L567:
	.align	2, 0
.L566:
	.word	gMain
.L541:
	ldr	r0, .L568
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L509	@cond_branch
	bl	ClearBottomWindow
	bl	DoReleaseMonComeBackAnim
	b	.L552
.L569:
	.align	2, 0
.L568:
	.word	gMain
.L543:
	bl	ResetReleaseMonSpritePtr
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L509	@cond_branch
	bl	TrySetCursorFistAnim
	mov	r0, #0x13
	b	.L553
.L545:
	ldr	r0, .L570
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L509	@cond_branch
	mov	r0, #0x14
.L553:
	bl	PrintStorageMessage
.L552:
	ldr	r0, .L570+0x4
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L509
.L571:
	.align	2, 0
.L570:
	.word	gMain
	.word	gStorage
.L551:
	ldr	r0, .L572
	ldr	r1, [r0]
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L509
.L573:
	.align	2, 0
.L572:
	.word	gStorage
.L547:
	ldr	r0, .L574
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L509	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L574+0x4
	bl	SetPokeStorageTask
.L509:
	pop	{r0}
	bx	r0
.L575:
	.align	2, 0
.L574:
	.word	gMain
	.word	Task_PokeStorageMain
.Lfe22:
	.size	 Task_ReleaseMon,.Lfe22-Task_ReleaseMon
	.align	2, 0
	.type	 Task_ShowMarkMenu,function
	.thumb_func
Task_ShowMarkMenu:
	push	{r4, lr}
	ldr	r4, .L583
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L578	@cond_branch
	cmp	r0, #0x1
	beq	.L579	@cond_branch
	b	.L577
.L584:
	.align	2, 0
.L583:
	.word	gStorage
.L578:
	mov	r0, #0xc
	bl	PrintStorageMessage
	ldr	r0, [r4]
	ldr	r2, .L585
	add	r1, r0, r2
	ldrb	r1, [r1]
	ldr	r3, .L585+0x4
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0xb0
	mov	r2, #0x10
	bl	OpenMonMarkingsMenu
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L577
.L586:
	.align	2, 0
.L585:
	.word	0xce7
	.word	0xda4
.L579:
	bl	HandleMonMarkingsMenuInput
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L577	@cond_branch
	bl	FreeMonMarkingsMenu
	bl	ClearBottomWindow
	ldr	r0, [r4]
	ldr	r1, .L587
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	SetMonMarkings
	bl	RefreshDisplayMonData
	ldr	r0, .L587+0x4
	bl	SetPokeStorageTask
.L577:
	pop	{r4}
	pop	{r0}
	bx	r0
.L588:
	.align	2, 0
.L587:
	.word	0xda4
	.word	Task_PokeStorageMain
.Lfe23:
	.size	 Task_ShowMarkMenu,.Lfe23-Task_ShowMarkMenu
	.align	2, 0
	.type	 Task_TakeItemForMoving,function
	.thumb_func
Task_TakeItemForMoving:
	push	{r4, r5, lr}
	ldr	r5, .L604
	ldr	r0, [r5]
	ldrb	r1, [r0]
	cmp	r1, #0x1
	beq	.L594	@cond_branch
	cmp	r1, #0x1
	bgt	.L602	@cond_branch
	cmp	r1, #0
	beq	.L591	@cond_branch
	b	.L590
.L605:
	.align	2, 0
.L604:
	.word	gStorage
.L602:
	cmp	r1, #0x2
	beq	.L596	@cond_branch
	cmp	r1, #0x3
	beq	.L598	@cond_branch
	b	.L590
.L591:
	ldr	r1, .L606
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L592	@cond_branch
	bl	ClearBottomWindow
	b	.L603
.L607:
	.align	2, 0
.L606:
	.word	0xce2
.L592:
	ldr	r0, .L608
	bl	SetPokeStorageTask
	b	.L590
.L609:
	.align	2, 0
.L608:
	.word	Task_PrintCantStoreMail
.L594:
	mov	r0, #0x2
	bl	StartCursorAnim
	ldr	r0, .L610
	ldrb	r0, [r0]
	neg	r4, r0
	orr	r4, r4, r0
	lsr	r4, r4, #0x1f
	bl	GetBoxCursorPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	Item_FromMonToMoving
	b	.L603
.L611:
	.align	2, 0
.L610:
	.word	sInPartyMenu
.L596:
	bl	IsItemIconAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L590	@cond_branch
	mov	r0, #0x3
	bl	StartCursorAnim
	bl	ClearBottomWindow
	bl	DoTrySetDisplayMonData
	bl	PrintDisplayMonInfo
.L603:
	ldr	r1, [r5]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L590
.L598:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L590	@cond_branch
	ldr	r0, .L612
	bl	SetPokeStorageTask
.L590:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L613:
	.align	2, 0
.L612:
	.word	Task_PokeStorageMain
.Lfe24:
	.size	 Task_TakeItemForMoving,.Lfe24-Task_TakeItemForMoving
	.align	2, 0
	.type	 Task_GiveMovingItemToMon,function
	.thumb_func
Task_GiveMovingItemToMon:
	push	{r4, lr}
	ldr	r0, .L629
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bhi	.L615	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L629+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L630:
	.align	2, 0
.L629:
	.word	gStorage
	.word	.L625
	.align	2, 0
	.align	2, 0
.L625:
	.word	.L627
	.word	.L617
	.word	.L619
	.word	.L621
	.word	.L623
.L617:
	mov	r0, #0x2
	bl	StartCursorAnim
	ldr	r0, .L631
	ldrb	r0, [r0]
	neg	r4, r0
	orr	r4, r4, r0
	lsr	r4, r4, #0x1f
	bl	GetBoxCursorPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	Item_GiveMovingToMon
	b	.L628
.L632:
	.align	2, 0
.L631:
	.word	sInPartyMenu
.L619:
	bl	IsItemIconAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L615	@cond_branch
	mov	r0, #0x0
	bl	StartCursorAnim
	bl	DoTrySetDisplayMonData
	bl	PrintDisplayMonInfo
	mov	r0, #0x1c
	bl	PrintStorageMessage
	b	.L628
.L621:
	ldr	r0, .L633
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L615	@cond_branch
.L627:
	bl	ClearBottomWindow
.L628:
	ldr	r0, .L633+0x4
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L615
.L634:
	.align	2, 0
.L633:
	.word	gMain
	.word	gStorage
.L623:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L615	@cond_branch
	ldr	r0, .L635
	bl	SetPokeStorageTask
.L615:
	pop	{r4}
	pop	{r0}
	bx	r0
.L636:
	.align	2, 0
.L635:
	.word	Task_PokeStorageMain
.Lfe25:
	.size	 Task_GiveMovingItemToMon,.Lfe25-Task_GiveMovingItemToMon
	.align	2, 0
	.type	 Task_ItemToBag,function
	.thumb_func
Task_ItemToBag:
	push	{r4, r5, lr}
	ldr	r1, .L653
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0x4
	bls	.LCB3577
	b	.L638	@long jump
.LCB3577:
	lsl	r0, r0, #0x2
	ldr	r1, .L653+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L654:
	.align	2, 0
.L653:
	.word	gStorage
	.word	.L651
	.align	2, 0
	.align	2, 0
.L651:
	.word	.L639
	.word	.L643
	.word	.L645
	.word	.L649
	.word	.L647
.L639:
	ldr	r0, [r5]
	ldr	r1, .L655
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L640	@cond_branch
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0x1a
	bl	PrintStorageMessage
	ldr	r1, [r5]
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L638
.L656:
	.align	2, 0
.L655:
	.word	0xce2
.L640:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L657
	ldrb	r0, [r0]
	neg	r4, r0
	orr	r4, r4, r0
	lsr	r4, r4, #0x1f
	bl	GetBoxCursorPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	Item_TakeMons
	ldr	r1, [r5]
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L638
.L658:
	.align	2, 0
.L657:
	.word	sInPartyMenu
.L643:
	bl	IsItemIconAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L638	@cond_branch
	mov	r0, #0x19
	bl	PrintStorageMessage
	ldr	r0, .L659
	ldr	r1, [r0]
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L638
.L660:
	.align	2, 0
.L659:
	.word	gStorage
.L645:
	ldr	r0, .L661
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L638	@cond_branch
	bl	ClearBottomWindow
	bl	DoTrySetDisplayMonData
	bl	PrintDisplayMonInfo
	ldr	r0, .L661+0x4
	ldr	r1, [r0]
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L638
.L662:
	.align	2, 0
.L661:
	.word	gMain
	.word	gStorage
.L647:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L638	@cond_branch
	ldr	r0, .L663
	bl	SetPokeStorageTask
	b	.L638
.L664:
	.align	2, 0
.L663:
	.word	Task_PokeStorageMain
.L649:
	ldr	r0, .L665
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L638	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L665+0x4
	bl	SetPokeStorageTask
.L638:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L666:
	.align	2, 0
.L665:
	.word	gMain
	.word	Task_PokeStorageMain
.Lfe26:
	.size	 Task_ItemToBag,.Lfe26-Task_ItemToBag
	.align	2, 0
	.type	 Task_SwitchSelectedItem,function
	.thumb_func
Task_SwitchSelectedItem:
	push	{r4, lr}
	ldr	r1, .L684
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x4
	bhi	.L668	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L684+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L685:
	.align	2, 0
.L684:
	.word	gStorage
	.word	.L680
	.align	2, 0
	.align	2, 0
.L680:
	.word	.L669
	.word	.L672
	.word	.L674
	.word	.L676
	.word	.L678
.L669:
	ldr	r0, [r4]
	ldr	r1, .L686
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L670	@cond_branch
	bl	ClearBottomWindow
	ldr	r1, [r4]
	b	.L682
.L687:
	.align	2, 0
.L686:
	.word	0xce2
.L670:
	ldr	r0, .L688
	bl	SetPokeStorageTask
	b	.L668
.L689:
	.align	2, 0
.L688:
	.word	Task_PrintCantStoreMail
.L672:
	mov	r0, #0x2
	bl	StartCursorAnim
	ldr	r0, .L690
	ldrb	r0, [r0]
	neg	r4, r0
	orr	r4, r4, r0
	lsr	r4, r4, #0x1f
	bl	GetBoxCursorPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	Item_SwitchMonsWithMoving
	b	.L683
.L691:
	.align	2, 0
.L690:
	.word	sInPartyMenu
.L674:
	bl	IsItemIconAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L668	@cond_branch
	mov	r0, #0x3
	bl	StartCursorAnim
	bl	DoTrySetDisplayMonData
	bl	PrintDisplayMonInfo
	mov	r0, #0x1d
	bl	PrintStorageMessage
	b	.L683
.L676:
	ldr	r0, .L692
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L668	@cond_branch
	bl	ClearBottomWindow
.L683:
	ldr	r0, .L692+0x4
	ldr	r1, [r0]
.L682:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L668
.L693:
	.align	2, 0
.L692:
	.word	gMain
	.word	gStorage
.L678:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L668	@cond_branch
	ldr	r0, .L694
	bl	SetPokeStorageTask
.L668:
	pop	{r4}
	pop	{r0}
	bx	r0
.L695:
	.align	2, 0
.L694:
	.word	Task_PokeStorageMain
.Lfe27:
	.size	 Task_SwitchSelectedItem,.Lfe27-Task_SwitchSelectedItem
	.align	2, 0
	.type	 Task_ShowItemInfo,function
	.thumb_func
Task_ShowItemInfo:
	push	{lr}
	ldr	r0, .L715
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x6
	bhi	.L697	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L715+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L716:
	.align	2, 0
.L715:
	.word	gStorage
	.word	.L711
	.align	2, 0
	.align	2, 0
.L711:
	.word	.L698
	.word	.L699
	.word	.L701
	.word	.L703
	.word	.L705
	.word	.L707
	.word	.L709
.L698:
	bl	ClearBottomWindow
	b	.L713
.L699:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L697	@cond_branch
	mov	r0, #0x6
	bl	PlaySE
	bl	PrintItemDescription
	bl	InitItemInfoWindow
	b	.L713
.L701:
	bl	UpdateItemInfoWindowSlideIn
	b	.L714
.L703:
	bl	IsDma3ManagerBusyWithBgCopy
	b	.L714
.L705:
	ldr	r0, .L717
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L697	@cond_branch
	mov	r0, #0x6
	bl	PlaySE
	b	.L713
.L718:
	.align	2, 0
.L717:
	.word	gMain
.L707:
	bl	UpdateItemInfoWindowSlideOut
.L714:
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L697	@cond_branch
.L713:
	ldr	r0, .L719
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L697
.L720:
	.align	2, 0
.L719:
	.word	gStorage
.L709:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L697	@cond_branch
	ldr	r0, .L721
	bl	SetPokeStorageTask
.L697:
	pop	{r0}
	bx	r0
.L722:
	.align	2, 0
.L721:
	.word	Task_PokeStorageMain
.Lfe28:
	.size	 Task_ShowItemInfo,.Lfe28-Task_ShowItemInfo
	.align	2, 0
	.type	 Task_CloseBoxWhileHoldingItem,function
	.thumb_func
Task_CloseBoxWhileHoldingItem:
	push	{r4, lr}
	ldr	r0, .L746
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bls	.LCB4051
	b	.L724	@long jump
.LCB4051:
	lsl	r0, r0, #0x2
	ldr	r1, .L746+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L747:
	.align	2, 0
.L746:
	.word	gStorage
	.word	.L743
	.align	2, 0
	.align	2, 0
.L743:
	.word	.L725
	.word	.L726
	.word	.L736
	.word	.L738
	.word	.L739
	.word	.L741
.L725:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1b
	bl	PrintStorageMessage
	mov	r0, #0x0
	bl	ShowYesNoWindow
	ldr	r0, .L748
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L724
.L749:
	.align	2, 0
.L748:
	.word	gStorage
.L726:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L730	@cond_branch
	cmp	r1, #0
	bgt	.L735	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L729	@cond_branch
	b	.L724
.L735:
	cmp	r1, #0x1
	bne	.L724	@cond_branch
.L729:
	bl	ClearBottomWindow
	b	.L745
.L730:
	ldr	r4, .L750
	ldr	r0, [r4]
	ldr	r1, .L750+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L731	@cond_branch
	bl	ClearBottomWindow
	ldr	r1, [r4]
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L724
.L751:
	.align	2, 0
.L750:
	.word	gStorage
	.word	0x2224
.L731:
	mov	r0, #0x1a
	bl	PrintStorageMessage
	ldr	r1, [r4]
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L724
.L736:
	ldr	r0, .L752
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L724	@cond_branch
	bl	ClearBottomWindow
	ldr	r0, .L752+0x4
	ldr	r1, [r0]
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L724
.L753:
	.align	2, 0
.L752:
	.word	gMain
	.word	gStorage
.L738:
	bl	MoveItemFromCursorToBag
	ldr	r0, .L754
	ldr	r1, [r0]
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L724
.L755:
	.align	2, 0
.L754:
	.word	gStorage
.L739:
	bl	IsItemIconAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L724	@cond_branch
	mov	r0, #0x0
	bl	StartCursorAnim
.L745:
	ldr	r0, .L756
	bl	SetPokeStorageTask
	b	.L724
.L757:
	.align	2, 0
.L756:
	.word	Task_PokeStorageMain
.L741:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L724	@cond_branch
	ldr	r0, .L758
	bl	SetPokeStorageTask
.L724:
	pop	{r4}
	pop	{r0}
	bx	r0
.L759:
	.align	2, 0
.L758:
	.word	Task_PokeStorageMain
.Lfe29:
	.size	 Task_CloseBoxWhileHoldingItem,.Lfe29-Task_CloseBoxWhileHoldingItem
	.align	2, 0
	.type	 Task_HandleMovingMonFromParty,function
	.thumb_func
Task_HandleMovingMonFromParty:
	push	{r4, lr}
	ldr	r4, .L767
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L762	@cond_branch
	cmp	r0, #0x1
	beq	.L763	@cond_branch
	b	.L761
.L768:
	.align	2, 0
.L767:
	.word	gStorage
.L762:
	bl	CompactPartySlots
	bl	CompactPartySprites
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L761
.L763:
	bl	GetNumPartySpritesCompacting
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L761	@cond_branch
	bl	UpdatePartySlotColors
	ldr	r0, .L769
	bl	SetPokeStorageTask
.L761:
	pop	{r4}
	pop	{r0}
	bx	r0
.L770:
	.align	2, 0
.L769:
	.word	Task_PokeStorageMain
.Lfe30:
	.size	 Task_HandleMovingMonFromParty,.Lfe30-Task_HandleMovingMonFromParty
	.align	2, 0
	.type	 Task_PrintCantStoreMail,function
	.thumb_func
Task_PrintCantStoreMail:
	push	{r4, lr}
	ldr	r4, .L784
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L774	@cond_branch
	cmp	r0, #0x1
	bgt	.L782	@cond_branch
	cmp	r0, #0
	beq	.L773	@cond_branch
	b	.L772
.L785:
	.align	2, 0
.L784:
	.word	gStorage
.L782:
	cmp	r0, #0x2
	beq	.L776	@cond_branch
	cmp	r0, #0x3
	beq	.L778	@cond_branch
	b	.L772
.L773:
	mov	r0, #0x1e
	bl	PrintStorageMessage
	b	.L783
.L774:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L772	@cond_branch
	b	.L783
.L776:
	ldr	r0, .L786
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L772	@cond_branch
	bl	ClearBottomWindow
.L783:
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L772
.L787:
	.align	2, 0
.L786:
	.word	gMain
.L778:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L772	@cond_branch
	ldr	r0, .L788
	bl	SetPokeStorageTask
.L772:
	pop	{r4}
	pop	{r0}
	bx	r0
.L789:
	.align	2, 0
.L788:
	.word	Task_PokeStorageMain
.Lfe31:
	.size	 Task_PrintCantStoreMail,.Lfe31-Task_PrintCantStoreMail
	.align	2, 0
	.type	 Task_HandleBoxOptions,function
	.thumb_func
Task_HandleBoxOptions:
	push	{r4, lr}
	ldr	r4, .L807
	ldr	r0, [r4]
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L793	@cond_branch
	cmp	r0, #0x1
	bgt	.L806	@cond_branch
	cmp	r0, #0
	beq	.L792	@cond_branch
	b	.L790
.L808:
	.align	2, 0
.L807:
	.word	gStorage
.L806:
	cmp	r0, #0x2
	beq	.L795	@cond_branch
	b	.L790
.L792:
	mov	r0, #0x1
	bl	PrintStorageMessage
	bl	AddMenu
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L790
.L793:
	bl	IsMenuLoading
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L790	@cond_branch
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L795:
	bl	HandleMenuInput
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xc
	bhi	.L790	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L809
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L810:
	.align	2, 0
.L809:
	.word	.L802
	.align	2, 0
	.align	2, 0
.L802:
	.word	.L798
	.word	.L798
	.word	.L790
	.word	.L790
	.word	.L790
	.word	.L790
	.word	.L790
	.word	.L790
	.word	.L790
	.word	.L790
	.word	.L801
	.word	.L800
	.word	.L799
.L798:
	mov	r0, #0x1
	bl	AnimateBoxScrollArrows
	bl	ClearBottomWindow
	ldr	r0, .L811
	bl	SetPokeStorageTask
	b	.L790
.L812:
	.align	2, 0
.L811:
	.word	Task_PokeStorageMain
.L799:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L813
	bl	SetPokeStorageTask
	b	.L790
.L814:
	.align	2, 0
.L813:
	.word	Task_NameBox
.L800:
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r0, .L815
	bl	SetPokeStorageTask
	b	.L790
.L816:
	.align	2, 0
.L815:
	.word	Task_HandleWallpapers
.L801:
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r0, .L817
	bl	SetPokeStorageTask
.L790:
	pop	{r4}
	pop	{r0}
	bx	r0
.L818:
	.align	2, 0
.L817:
	.word	Task_JumpBox
.Lfe32:
	.size	 Task_HandleBoxOptions,.Lfe32-Task_HandleBoxOptions
	.align	2, 0
	.type	 Task_HandleWallpapers,function
	.thumb_func
Task_HandleWallpapers:
	push	{r4, r5, lr}
	ldr	r0, .L847
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bls	.LCB4537
	b	.L820	@long jump
.LCB4537:
	lsl	r0, r0, #0x2
	ldr	r1, .L847+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L848:
	.align	2, 0
.L847:
	.word	gStorage
	.word	.L843
	.align	2, 0
	.align	2, 0
.L843:
	.word	.L821
	.word	.L822
	.word	.L824
	.word	.L833
	.word	.L835
	.word	.L841
.L821:
	bl	AddWallpaperSetsMenu
	mov	r0, #0x2
	bl	PrintStorageMessage
	ldr	r0, .L849
	ldr	r1, [r0]
	b	.L845
.L850:
	.align	2, 0
.L849:
	.word	gStorage
.L822:
	bl	IsMenuLoading
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB4576
	b	.L820	@long jump
.LCB4576:
	ldr	r0, .L851
	ldr	r1, [r0]
	b	.L845
.L852:
	.align	2, 0
.L851:
	.word	gStorage
.L824:
	bl	HandleMenuInput
	ldr	r5, .L853
	ldr	r1, [r5]
	ldr	r4, .L853+0x4
	add	r1, r1, r4
	strh	r0, [r1]
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L826	@cond_branch
	mov	r0, #0x1
	bl	AnimateBoxScrollArrows
	bl	ClearBottomWindow
	ldr	r0, .L853+0x8
	bl	SetPokeStorageTask
	b	.L820
.L854:
	.align	2, 0
.L853:
	.word	gStorage
	.word	0x78e
	.word	Task_PokeStorageMain
.L826:
	cmp	r0, r1
	blt	.L820	@cond_branch
	cmp	r0, #0x15
	bgt	.L820	@cond_branch
	cmp	r0, #0x12
	blt	.L820	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	RemoveMenu
	ldr	r1, [r5]
	add	r2, r1, r4
	ldrh	r0, [r2]
	sub	r0, r0, #0x12
	strh	r0, [r2]
	b	.L845
.L833:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L820	@cond_branch
	ldr	r4, .L855
	ldr	r0, [r4]
	ldr	r1, .L855+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	AddWallpapersMenu
	mov	r0, #0x3
	bl	PrintStorageMessage
	b	.L846
.L856:
	.align	2, 0
.L855:
	.word	gStorage
	.word	0x78e
.L835:
	bl	HandleMenuInput
	ldr	r4, .L857
	ldr	r1, [r4]
	mov	r5, #0xf2
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	strh	r0, [r1]
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L820	@cond_branch
	add	r0, r0, #0x1
	cmp	r1, r0
	bne	.L839	@cond_branch
	bl	ClearBottomWindow
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L820
.L858:
	.align	2, 0
.L857:
	.word	gStorage
.L839:
	mov	r0, #0x5
	bl	PlaySE
	bl	ClearBottomWindow
	ldr	r1, [r4]
	add	r1, r1, r5
	ldrh	r0, [r1]
	sub	r0, r0, #0x16
	strh	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	SetWallpaperForCurrentBox
.L846:
	ldr	r1, [r4]
.L845:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L820
.L841:
	bl	DoWallpaperGfxChange
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L820	@cond_branch
	mov	r0, #0x1
	bl	AnimateBoxScrollArrows
	ldr	r0, .L859
	bl	SetPokeStorageTask
.L820:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L860:
	.align	2, 0
.L859:
	.word	Task_PokeStorageMain
.Lfe33:
	.size	 Task_HandleWallpapers,.Lfe33-Task_HandleWallpapers
	.align	2, 0
	.type	 Task_JumpBox,function
	.thumb_func
Task_JumpBox:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L879
	ldr	r0, [r5]
	ldrb	r4, [r0]
	cmp	r4, #0x1
	beq	.L864	@cond_branch
	cmp	r4, #0x1
	bgt	.L877	@cond_branch
	cmp	r4, #0
	beq	.L863	@cond_branch
	b	.L862
.L880:
	.align	2, 0
.L879:
	.word	gStorage
.L877:
	cmp	r4, #0x2
	beq	.L872	@cond_branch
	cmp	r4, #0x3
	beq	.L873	@cond_branch
	b	.L862
.L863:
	mov	r0, #0x5
	bl	PrintStorageMessage
	ldr	r0, [r5]
	ldr	r1, .L881
	add	r0, r0, r1
	ldr	r2, .L881+0x4
	str	r4, [sp]
	mov	r1, #0xa
	mov	r3, #0x3
	bl	LoadChooseBoxMenuGfx
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CreateChooseBoxMenuSprites
	b	.L878
.L882:
	.align	2, 0
.L881:
	.word	0x1e58
	.word	0xdac7
.L864:
	bl	HandleBoxChooseSelectionInput
	ldr	r1, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L883
	add	r1, r1, r2
	strh	r0, [r1]
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0xc8
	beq	.L862	@cond_branch
	bl	ClearBottomWindow
	bl	DestroyChooseBoxMenuSprites
	bl	FreeBoxSelectionPopupSpriteGfx
	ldr	r0, [r5]
	ldr	r2, .L883
	add	r1, r0, r2
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0xc9
	beq	.L869	@cond_branch
	add	r4, r0, #0
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L878	@cond_branch
.L869:
	mov	r0, #0x1
	bl	AnimateBoxScrollArrows
	ldr	r0, .L883+0x4
	bl	SetPokeStorageTask
	b	.L862
.L884:
	.align	2, 0
.L883:
	.word	0x2ca
	.word	Task_PokeStorageMain
.L872:
	ldr	r1, .L885
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	SetUpScrollToBox
.L878:
	ldr	r1, [r5]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L862
.L886:
	.align	2, 0
.L885:
	.word	0x2ca
.L873:
	bl	ScrollToBox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L862	@cond_branch
	ldr	r0, [r5]
	ldr	r2, .L887
	add	r0, r0, r2
	ldrb	r0, [r0]
	bl	SetCurrentBox
	ldr	r0, .L887+0x4
	bl	SetPokeStorageTask
.L862:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L888:
	.align	2, 0
.L887:
	.word	0x2ca
	.word	Task_PokeStorageMain
.Lfe34:
	.size	 Task_JumpBox,.Lfe34-Task_JumpBox
	.align	2, 0
	.type	 Task_NameBox,function
	.thumb_func
Task_NameBox:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L896
	ldr	r0, [r5]
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.L891	@cond_branch
	cmp	r4, #0x1
	beq	.L892	@cond_branch
	b	.L890
.L897:
	.align	2, 0
.L896:
	.word	gStorage
.L891:
	bl	SaveMovingMon
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, [r5]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L890
.L892:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L890	@cond_branch
	ldr	r0, .L898
	strb	r4, [r0]
	ldr	r1, [r5]
	mov	r0, #0x2
	strb	r0, [r1, #0x2]
	ldr	r0, .L898+0x4
	bl	SetPokeStorageTask
.L890:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L899:
	.align	2, 0
.L898:
	.word	sWhichToReshow
	.word	Task_ChangeScreen
.Lfe35:
	.size	 Task_NameBox,.Lfe35-Task_NameBox
	.align	2, 0
	.type	 Task_ShowMonSummary,function
	.thumb_func
Task_ShowMonSummary:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L907
	ldr	r0, [r5]
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.L902	@cond_branch
	cmp	r4, #0x1
	beq	.L903	@cond_branch
	b	.L901
.L908:
	.align	2, 0
.L907:
	.word	gStorage
.L902:
	bl	InitSummaryScreenData
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, [r5]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L901
.L903:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L901	@cond_branch
	ldr	r0, .L909
	strb	r1, [r0]
	ldr	r0, [r5]
	strb	r4, [r0, #0x2]
	ldr	r0, .L909+0x4
	bl	SetPokeStorageTask
.L901:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L910:
	.align	2, 0
.L909:
	.word	sWhichToReshow
	.word	Task_ChangeScreen
.Lfe36:
	.size	 Task_ShowMonSummary,.Lfe36-Task_ShowMonSummary
	.align	2, 0
	.type	 Task_GiveItemFromBag,function
	.thumb_func
Task_GiveItemFromBag:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L918
	ldr	r0, [r4]
	ldrb	r1, [r0]
	cmp	r1, #0
	beq	.L913	@cond_branch
	cmp	r1, #0x1
	beq	.L914	@cond_branch
	b	.L912
.L919:
	.align	2, 0
.L918:
	.word	gStorage
.L913:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L912
.L914:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L912	@cond_branch
	ldr	r1, .L920
	mov	r0, #0x2
	strb	r0, [r1]
	ldr	r1, [r4]
	mov	r0, #0x3
	strb	r0, [r1, #0x2]
	ldr	r0, .L920+0x4
	bl	SetPokeStorageTask
.L912:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L921:
	.align	2, 0
.L920:
	.word	sWhichToReshow
	.word	Task_ChangeScreen
.Lfe37:
	.size	 Task_GiveItemFromBag,.Lfe37-Task_GiveItemFromBag
	.align	2, 0
	.type	 Task_OnCloseBoxPressed,function
	.thumb_func
Task_OnCloseBoxPressed:
	push	{r4, lr}
	ldr	r0, .L945
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.LCB5135
	b	.L923	@long jump
.LCB5135:
	lsl	r0, r0, #0x2
	ldr	r1, .L945+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L946:
	.align	2, 0
.L945:
	.word	gStorage
	.word	.L942
	.align	2, 0
	.align	2, 0
.L942:
	.word	.L924
	.word	.L929
	.word	.L931
	.word	.L939
	.word	.L940
.L924:
	bl	IsMonBeingMoved
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L925	@cond_branch
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0xf
	bl	PrintStorageMessage
	ldr	r0, .L947
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L923
.L948:
	.align	2, 0
.L947:
	.word	gStorage
.L925:
	bl	IsActiveItemMoving
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L927	@cond_branch
	ldr	r0, .L949
	bl	SetPokeStorageTask
	b	.L923
.L950:
	.align	2, 0
.L949:
	.word	Task_CloseBoxWhileHoldingItem
.L927:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	PrintStorageMessage
	mov	r0, #0x0
	bl	ShowYesNoWindow
	ldr	r0, .L951
	ldr	r1, [r0]
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L923
.L952:
	.align	2, 0
.L951:
	.word	gStorage
.L929:
	ldr	r0, .L953
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L923	@cond_branch
	b	.L934
.L954:
	.align	2, 0
.L953:
	.word	gMain
.L931:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L935	@cond_branch
	cmp	r1, #0
	bgt	.L938	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L934	@cond_branch
	b	.L923
.L938:
	cmp	r1, #0x1
	bne	.L923	@cond_branch
.L934:
	bl	ClearBottomWindow
	ldr	r0, .L955
	bl	SetPokeStorageTask
	b	.L923
.L956:
	.align	2, 0
.L955:
	.word	Task_PokeStorageMain
.L935:
	mov	r0, #0x3
	bl	PlaySE
	bl	ClearBottomWindow
	b	.L944
.L939:
	mov	r0, #0x14
	mov	r1, #0x0
	mov	r2, #0x1
	bl	BeginPCScreenEffect_TurnOff
.L944:
	ldr	r0, .L957
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L923
.L958:
	.align	2, 0
.L957:
	.word	gStorage
.L940:
	bl	IsPCScreenEffectRunning_TurnOff
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L923	@cond_branch
	bl	UpdateBoxToSendMons
	bl	CalculatePlayerPartyCount
	ldr	r1, .L959
	strb	r0, [r1]
	ldr	r0, .L959+0x4
	ldr	r0, [r0]
	strb	r4, [r0, #0x2]
	ldr	r0, .L959+0x8
	bl	SetPokeStorageTask
.L923:
	pop	{r4}
	pop	{r0}
	bx	r0
.L960:
	.align	2, 0
.L959:
	.word	gPlayerPartyCount
	.word	gStorage
	.word	Task_ChangeScreen
.Lfe38:
	.size	 Task_OnCloseBoxPressed,.Lfe38-Task_OnCloseBoxPressed
	.align	2, 0
	.type	 Task_OnBPressed,function
	.thumb_func
Task_OnBPressed:
	push	{r4, lr}
	ldr	r0, .L984
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.LCB5340
	b	.L962	@long jump
.LCB5340:
	lsl	r0, r0, #0x2
	ldr	r1, .L984+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L985:
	.align	2, 0
.L984:
	.word	gStorage
	.word	.L981
	.align	2, 0
	.align	2, 0
.L981:
	.word	.L963
	.word	.L968
	.word	.L970
	.word	.L978
	.word	.L979
.L963:
	bl	IsMonBeingMoved
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L964	@cond_branch
	mov	r0, #0x1a
	bl	PlaySE
	mov	r0, #0xf
	bl	PrintStorageMessage
	ldr	r0, .L986
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L962
.L987:
	.align	2, 0
.L986:
	.word	gStorage
.L964:
	bl	IsActiveItemMoving
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L966	@cond_branch
	ldr	r0, .L988
	bl	SetPokeStorageTask
	b	.L962
.L989:
	.align	2, 0
.L988:
	.word	Task_CloseBoxWhileHoldingItem
.L966:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x12
	bl	PrintStorageMessage
	mov	r0, #0x0
	bl	ShowYesNoWindow
	ldr	r0, .L990
	ldr	r1, [r0]
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L962
.L991:
	.align	2, 0
.L990:
	.word	gStorage
.L968:
	ldr	r0, .L992
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L962	@cond_branch
	b	.L972
.L993:
	.align	2, 0
.L992:
	.word	gMain
.L970:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L972	@cond_branch
	cmp	r1, #0
	bgt	.L977	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L974	@cond_branch
	b	.L962
.L977:
	cmp	r1, #0x1
	beq	.L974	@cond_branch
	b	.L962
.L972:
	bl	ClearBottomWindow
	ldr	r0, .L994
	bl	SetPokeStorageTask
	b	.L962
.L995:
	.align	2, 0
.L994:
	.word	Task_PokeStorageMain
.L974:
	mov	r0, #0x3
	bl	PlaySE
	bl	ClearBottomWindow
	b	.L983
.L978:
	mov	r0, #0x14
	mov	r1, #0x0
	mov	r2, #0x0
	bl	BeginPCScreenEffect_TurnOff
.L983:
	ldr	r0, .L996
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L962
.L997:
	.align	2, 0
.L996:
	.word	gStorage
.L979:
	bl	IsPCScreenEffectRunning_TurnOff
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L962	@cond_branch
	bl	UpdateBoxToSendMons
	bl	CalculatePlayerPartyCount
	ldr	r1, .L998
	strb	r0, [r1]
	ldr	r0, .L998+0x4
	ldr	r0, [r0]
	strb	r4, [r0, #0x2]
	ldr	r0, .L998+0x8
	bl	SetPokeStorageTask
.L962:
	pop	{r4}
	pop	{r0}
	bx	r0
.L999:
	.align	2, 0
.L998:
	.word	gPlayerPartyCount
	.word	gStorage
	.word	Task_ChangeScreen
.Lfe39:
	.size	 Task_OnBPressed,.Lfe39-Task_OnBPressed
	.align	2, 0
	.type	 Task_ChangeScreen,function
	.thumb_func
Task_ChangeScreen:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L1012
	ldr	r0, [r0]
	ldrb	r4, [r0, #0x2]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x3
	bne	.L1001	@cond_branch
	bl	IsActiveItemMoving
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1001	@cond_branch
	bl	GetMovingItem
	ldr	r1, .L1012+0x4
	b	.L1011
.L1013:
	.align	2, 0
.L1012:
	.word	gStorage
	.word	sMovingItemId
.L1001:
	ldr	r1, .L1014
	mov	r0, #0x0
.L1011:
	strh	r0, [r1]
	cmp	r4, #0x1
	beq	.L1006	@cond_branch
	cmp	r4, #0x1
	ble	.L1005	@cond_branch
	cmp	r4, #0x2
	beq	.L1007	@cond_branch
	cmp	r4, #0x3
	beq	.L1008	@cond_branch
.L1005:
	bl	FreePokeStorageData
	ldr	r0, .L1014+0x4
	bl	SetMainCallback2
	b	.L1003
.L1015:
	.align	2, 0
.L1014:
	.word	sMovingItemId
	.word	CB2_ExitPokeStorage
.L1006:
	ldr	r0, .L1016
	ldr	r1, [r0]
	ldr	r2, .L1016+0x4
	add	r0, r1, r2
	ldr	r0, [r0]
	mov	r8, r0
	sub	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r6, [r0]
	sub	r2, r2, #0x1
	add	r0, r1, r2
	ldrb	r5, [r0]
	ldr	r0, .L1016+0x8
	add	r1, r1, r0
	ldrb	r4, [r1]
	bl	FreePokeStorageData
	ldr	r3, .L1016+0xc
	str	r4, [sp]
	mov	r0, r8
	add	r1, r6, #0
	add	r2, r5, #0
	bl	ShowPokemonSummaryScreen
	b	.L1003
.L1017:
	.align	2, 0
.L1016:
	.word	gStorage
	.word	0x217c
	.word	0x217a
	.word	CB2_ReturnToPokeStorage
.L1007:
	bl	FreePokeStorageData
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L1018
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DoNamingScreen
	b	.L1003
.L1019:
	.align	2, 0
.L1018:
	.word	CB2_ReturnToPokeStorage
.L1008:
	bl	FreePokeStorageData
	ldr	r2, .L1020
	mov	r0, #0x4
	mov	r1, #0x0
	bl	GoToBagMenu
.L1003:
	add	r0, r7, #0
	bl	DestroyTask
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1021:
	.align	2, 0
.L1020:
	.word	CB2_ReturnToPokeStorage
.Lfe40:
	.size	 Task_ChangeScreen,.Lfe40-Task_ChangeScreen
	.align	2, 0
	.type	 GiveChosenBagItem,function
	.thumb_func
GiveChosenBagItem:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L1026
	ldrh	r1, [r0]
	mov	r0, sp
	strh	r1, [r0]
	cmp	r1, #0
	beq	.L1023	@cond_branch
	bl	GetBoxCursorPosition
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L1026+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1024	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1026+0x8
	add	r0, r0, r1
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
	b	.L1025
.L1027:
	.align	2, 0
.L1026:
	.word	gSpecialVar_ItemId
	.word	sInPartyMenu
	.word	gPlayerParty
.L1024:
	add	r0, r1, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetCurrentBoxMonData
.L1025:
	mov	r0, sp
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
.L1023:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 GiveChosenBagItem,.Lfe41-GiveChosenBagItem
	.align	2, 0
	.type	 FreePokeStorageData,function
	.thumb_func
FreePokeStorageData:
	push	{r4, lr}
	bl	TilemapUtil_Free
	bl	MultiMove_Free
	ldr	r4, .L1029
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
	bl	FreeAllWindowBuffers
	pop	{r4}
	pop	{r0}
	bx	r0
.L1030:
	.align	2, 0
.L1029:
	.word	gStorage
.Lfe42:
	.size	 FreePokeStorageData,.Lfe42-FreePokeStorageData
	.align	2, 0
	.type	 SetScrollingBackground,function
	.thumb_func
SetScrollingBackground:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r1, .L1032
	mov	r0, #0xe
	bl	SetGpuReg
	ldr	r1, .L1032+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndLoadBgGfxUsingHeap
	ldr	r0, .L1032+0x8
	ldr	r1, .L1032+0xc
	bl	LZ77UnCompVram
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L1033:
	.align	2, 0
.L1032:
	.word	0x1f0f
	.word	sScrollingBg_Gfx
	.word	sScrollingBg_Tilemap
	.word	0x600f800
.Lfe43:
	.size	 SetScrollingBackground,.Lfe43-SetScrollingBackground
	.align	2, 0
	.type	 ScrollBackground,function
	.thumb_func
ScrollBackground:
	push	{lr}
	mov	r0, #0x3
	mov	r1, #0x80
	mov	r2, #0x1
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x80
	mov	r2, #0x2
	bl	ChangeBgY
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 ScrollBackground,.Lfe44-ScrollBackground
	.align	2, 0
	.type	 LoadPokeStorageMenuGfx,function
	.thumb_func
LoadPokeStorageMenuGfx:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L1036
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r1, .L1036+0x4
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndLoadBgGfxUsingHeap
	ldr	r0, .L1036+0x8
	ldr	r5, .L1036+0xc
	ldr	r1, [r5]
	ldr	r4, .L1036+0x10
	add	r1, r1, r4
	bl	LZ77UnCompWram
	ldr	r1, [r5]
	add	r1, r1, r4
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1037:
	.align	2, 0
.L1036:
	.word	sBgTemplates
	.word	gPokeStorageMenu_Gfx
	.word	sMenu_Tilemap
	.word	gStorage
	.word	0x5abc
.Lfe45:
	.size	 LoadPokeStorageMenuGfx,.Lfe45-LoadPokeStorageMenuGfx
	.align	2, 0
	.type	 InitPokeStorageWindows,function
	.thumb_func
InitPokeStorageWindows:
	push	{lr}
	ldr	r0, .L1041
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1039	@cond_branch
	bl	DeactivateAllTextPrinters
	mov	r0, #0x1
	b	.L1040
.L1042:
	.align	2, 0
.L1041:
	.word	sWindowTemplates
.L1039:
	mov	r0, #0x0
.L1040:
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 InitPokeStorageWindows,.Lfe46-InitPokeStorageWindows
	.align	2, 0
	.type	 LoadsMiscSpritePalette,function
	.thumb_func
LoadsMiscSpritePalette:
	push	{lr}
	ldr	r0, .L1044
	bl	LoadSpritePalette
	pop	{r0}
	bx	r0
.L1045:
	.align	2, 0
.L1044:
	.word	sMiscSpritePalette
.Lfe47:
	.size	 LoadsMiscSpritePalette,.Lfe47-LoadsMiscSpritePalette
	.align	2, 0
	.type	 InitPalettesAndSprites,function
	.thumb_func
InitPalettesAndSprites:
	push	{lr}
	ldr	r0, .L1049
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L1049+0x4
	mov	r1, #0x20
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L1049+0x8
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L1049+0xc
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x3
	beq	.L1047	@cond_branch
	ldr	r0, .L1049+0x10
	mov	r1, #0x30
	mov	r2, #0x20
	bl	LoadPalette
	b	.L1048
.L1050:
	.align	2, 0
.L1049:
	.word	gPokeStorageInterface_Pal
	.word	gPokeStorageInterface_NoDisplayMon_Pal
	.word	sItemInfoFrame_Pal
	.word	gStorage
	.word	sScrollingBg_Pal
.L1047:
	ldr	r0, .L1051
	mov	r1, #0x30
	mov	r2, #0x20
	bl	LoadPalette
.L1048:
	ldr	r1, .L1051+0x4
	mov	r0, #0xa
	bl	SetGpuReg
	bl	CreateDisplayMonSprite
	bl	CreateMarkingComboSprite
	bl	CreateWaveformSprites
	bl	RefreshDisplayMonData
	pop	{r0}
	bx	r0
.L1052:
	.align	2, 0
.L1051:
	.word	sScrollingBgMoveItems_Pal
	.word	0x1e05
.Lfe48:
	.size	 InitPalettesAndSprites,.Lfe48-InitPalettesAndSprites
	.align	2, 0
	.type	 CreateMarkingComboSprite,function
	.thumb_func
CreateMarkingComboSprite:
	push	{r4, lr}
	ldr	r1, .L1054
	mov	r0, #0x10
	mov	r2, #0x0
	bl	CreateMonMarkingComboSprite
	ldr	r4, .L1054+0x4
	ldr	r1, [r4]
	mov	r3, #0xd9
	lsl	r3, r3, #0x4
	add	r1, r1, r3
	str	r0, [r1]
	ldrb	r2, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r0, [r4]
	add	r0, r0, r3
	ldr	r0, [r0]
	add	r0, r0, #0x43
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, r3
	ldr	r2, [r0]
	mov	r1, #0x28
	strh	r1, [r2, #0x20]
	ldr	r1, [r0]
	mov	r0, #0x96
	strh	r0, [r1, #0x22]
	mov	r0, #0x10
	bl	GetSpriteTileStartByTag
	ldr	r1, [r4]
	ldr	r2, .L1054+0x8
	add	r1, r1, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0xb
	ldr	r2, .L1054+0xc
	add	r0, r0, r2
	str	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1055:
	.align	2, 0
.L1054:
	.word	0xdac8
	.word	gStorage
	.word	0xd9c
	.word	0x6010000
.Lfe49:
	.size	 CreateMarkingComboSprite,.Lfe49-CreateMarkingComboSprite
	.align	2, 0
	.type	 CreateWaveformSprites,function
	.thumb_func
CreateWaveformSprites:
	push	{r4, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L1062
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	LoadSpriteSheet
	mov	r4, #0x0
.L1060:
	lsl	r1, r4, #0x6
	sub	r1, r1, r4
	add	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	ldr	r0, .L1062+0x4
	mov	r2, #0x9
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1062+0x8
	ldr	r2, [r1]
	lsl	r1, r4, #0x2
	ldr	r3, .L1062+0xc
	add	r2, r2, r3
	add	r2, r2, r1
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1062+0x10
	add	r1, r1, r0
	str	r1, [r2]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1
	bls	.L1060	@cond_branch
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L1063:
	.align	2, 0
.L1062:
	.word	sWaveformSpriteSheet
	.word	sSpriteTemplate_Waveform
	.word	gStorage
	.word	0xd94
	.word	gSprites
.Lfe50:
	.size	 CreateWaveformSprites,.Lfe50-CreateWaveformSprites
	.align	2, 0
	.type	 RefreshDisplayMonData,function
	.thumb_func
RefreshDisplayMonData:
	push	{lr}
	ldr	r0, .L1065
	ldr	r1, [r0]
	mov	r2, #0xce
	lsl	r2, r2, #0x4
	add	r0, r1, r2
	ldrh	r0, [r0]
	sub	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	LoadDisplayMonGfx
	bl	PrintDisplayMonInfo
	bl	UpdateWaveformAnimation
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.L1066:
	.align	2, 0
.L1065:
	.word	gStorage
.Lfe51:
	.size	 RefreshDisplayMonData,.Lfe51-RefreshDisplayMonData
	.align	2, 0
	.type	 StartDisplayMonMosaic,function
	.thumb_func
StartDisplayMonMosaic:
	push	{lr}
	bl	RefreshDisplayMonData
	ldr	r3, .L1069
	ldr	r0, [r3]
	ldr	r1, .L1069+0x4
	add	r0, r0, r1
	ldr	r2, [r0]
	cmp	r2, #0
	beq	.L1068	@cond_branch
	ldrb	r0, [r2, #0x1]
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldr	r1, [r3]
	ldr	r0, .L1069+0x4
	add	r1, r1, r0
	ldr	r2, [r1]
	mov	r0, #0xa
	strh	r0, [r2, #0x2e]
	ldr	r2, [r1]
	mov	r0, #0x1
	strh	r0, [r2, #0x30]
	ldr	r2, [r1]
	ldr	r0, .L1069+0x8
	str	r0, [r2, #0x1c]
	ldr	r0, [r1]
	ldrh	r0, [r0, #0x2e]
	lsl	r1, r0, #0xc
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x4c
	bl	SetGpuReg
.L1068:
	pop	{r0}
	bx	r0
.L1070:
	.align	2, 0
.L1069:
	.word	gStorage
	.word	0x2238
	.word	SpriteCB_DisplayMonMosaic
.Lfe52:
	.size	 StartDisplayMonMosaic,.Lfe52-StartDisplayMonMosaic
	.align	2, 0
	.type	 IsDisplayMonMosaicActive,function
	.thumb_func
IsDisplayMonMosaicActive:
	ldr	r0, .L1072
	ldr	r0, [r0]
	ldr	r1, .L1072+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1f
	bx	lr
.L1073:
	.align	2, 0
.L1072:
	.word	gStorage
	.word	0x2238
.Lfe53:
	.size	 IsDisplayMonMosaicActive,.Lfe53-IsDisplayMonMosaicActive
	.align	2, 0
	.type	 SpriteCB_DisplayMonMosaic,function
	.thumb_func
SpriteCB_DisplayMonMosaic:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	ldrh	r1, [r4, #0x30]
	sub	r0, r0, r1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L1075	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x2e]
.L1075:
	ldrh	r0, [r4, #0x2e]
	lsl	r1, r0, #0xc
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x4c
	bl	SetGpuReg
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1076	@cond_branch
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x11
	neg	r1, r1
	and	r1, r1, r0
	strb	r1, [r4, #0x1]
	ldr	r0, .L1077
	str	r0, [r4, #0x1c]
.L1076:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1078:
	.align	2, 0
.L1077:
	.word	SpriteCallbackDummy
.Lfe54:
	.size	 SpriteCB_DisplayMonMosaic,.Lfe54-SpriteCB_DisplayMonMosaic
	.align	2, 0
	.type	 CreateDisplayMonSprite,function
	.thumb_func
CreateDisplayMonSprite:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x28
	ldr	r0, .L1101
	mov	ip, r0
	ldr	r1, [r0]
	ldr	r4, .L1101+0x4
	add	r0, r1, r4
	str	r0, [sp, #0x18]
	add	r3, sp, #0x18
	mov	r0, #0x82
	lsl	r0, r0, #0xa
	str	r0, [r3, #0x4]
	ldr	r5, .L1101+0x8
	add	r1, r1, r5
	str	r1, [sp, #0x20]
	ldr	r0, .L1101+0xc
	add	r2, sp, #0x20
	str	r0, [r2, #0x4]
	mov	r1, sp
	ldr	r0, .L1101+0x10
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	mov	r6, #0x0
	add	r7, r2, #0
	mov	r5, ip
	mov	r2, #0x0
	ldr	r1, .L1101+0x14
.L1083:
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r0, r0, r6
	strb	r2, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, r1
	bls	.L1083	@cond_branch
	mov	r6, #0x0
	ldr	r5, .L1101
	ldr	r4, .L1101+0x8
	mov	r2, #0x0
.L1088:
	ldr	r0, [r5]
	lsl	r1, r6, #0x1
	add	r0, r0, r4
	add	r0, r0, r1
	strh	r2, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0xf
	bls	.L1088	@cond_branch
	ldr	r0, .L1101
	ldr	r0, [r0]
	ldr	r6, .L1101+0x18
	add	r0, r0, r6
	mov	r1, #0x0
	str	r1, [r0]
	add	r0, r3, #0
	bl	LoadSpriteSheet
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0
	beq	.L1091	@cond_branch
	add	r0, r7, #0
	bl	LoadSpritePalette
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xff
	beq	.L1091	@cond_branch
	b	.L1100
.L1102:
	.align	2, 0
.L1101:
	.word	gStorage
	.word	0x22bc
	.word	0x223c
	.word	0xdac6
	.word	sSpriteTemplate_DisplayMon
	.word	0x7ff
	.word	0x2238
.L1095:
	ldr	r0, .L1103
	ldr	r2, [r0]
	ldr	r7, .L1103+0x4
	add	r3, r2, r7
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1103+0x8
	add	r0, r0, r1
	str	r0, [r3]
	lsl	r0, r4, #0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldr	r3, .L1103+0xc
	add	r1, r2, r3
	strh	r0, [r1]
	ldr	r6, .L1103+0x10
	add	r2, r2, r6
	lsl	r0, r5, #0x5
	ldr	r7, .L1103+0x14
	add	r0, r0, r7
	str	r0, [r2]
	b	.L1091
.L1104:
	.align	2, 0
.L1103:
	.word	gStorage
	.word	0x2238
	.word	gSprites
	.word	0x2232
	.word	0x2234
	.word	0x6010000
.L1100:
	mov	r0, sp
	mov	r1, #0x28
	mov	r2, #0x30
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	bne	.L1095	@cond_branch
.L1091:
	ldr	r0, .L1105
	ldr	r0, [r0]
	ldr	r1, .L1105+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L1098	@cond_branch
	mov	r0, #0x2
	bl	FreeSpriteTilesByTag
	ldr	r0, .L1105+0x8
	bl	FreeSpritePaletteByTag
.L1098:
	add	sp, sp, #0x28
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1106:
	.align	2, 0
.L1105:
	.word	gStorage
	.word	0x2238
	.word	0xdac6
.Lfe55:
	.size	 CreateDisplayMonSprite,.Lfe55-CreateDisplayMonSprite
	.align	2, 0
	.type	 LoadDisplayMonGfx,function
	.thumb_func
LoadDisplayMonGfx:
	push	{r4, r5, r6, r7, lr}
	add	r3, r1, #0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r6, .L1111
	ldr	r4, [r6]
	ldr	r7, .L1111+0x4
	add	r0, r4, r7
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1107	@cond_branch
	cmp	r2, #0
	beq	.L1109	@cond_branch
	lsl	r0, r2, #0x3
	ldr	r1, .L1111+0x8
	add	r0, r0, r1
	ldr	r5, .L1111+0xc
	add	r1, r4, r5
	bl	HandleLoadSpecialPokePic
	ldr	r1, [r6]
	ldr	r2, .L1111+0x10
	add	r0, r1, r2
	ldr	r0, [r0]
	ldr	r4, .L1111+0x14
	add	r1, r1, r4
	bl	LZ77UnCompWram
	ldr	r0, [r6]
	add	r5, r0, r5
	ldr	r1, .L1111+0x18
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r2, .L1111+0x1c
	add	r0, r5, #0
	bl	CpuSet
	ldr	r0, [r6]
	add	r4, r0, r4
	ldr	r2, .L1111+0x20
	add	r0, r0, r2
	ldrh	r1, [r0]
	add	r0, r4, #0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, [r6]
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	b	.L1107
.L1112:
	.align	2, 0
.L1111:
	.word	gStorage
	.word	0x2238
	.word	gMonFrontPicTable
	.word	0x22bc
	.word	0xcd8
	.word	0x223c
	.word	0x2234
	.word	0x4000200
	.word	0x2232
.L1109:
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L1107:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 LoadDisplayMonGfx,.Lfe56-LoadDisplayMonGfx
	.align	2, 0
	.type	 PrintDisplayMonInfo,function
	.thumb_func
PrintDisplayMonInfo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r6, .L1133
	ldr	r2, [r6]
	ldrb	r0, [r2, #0x1]
	cmp	r0, #0x3
	beq	.L1114	@cond_branch
	mov	r4, #0x0
	mov	r5, #0x0
	mov	r8, r6
.L1118:
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L1133+0x4
	add	r0, r0, r1
	mov	r2, r8
	ldr	r1, [r2]
	add	r2, r1, r0
	mov	r3, #0x6
	cmp	r4, #0x2
	bne	.L1119	@cond_branch
	mov	r3, #0xa
.L1119:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r7, #0xff
	str	r7, [sp, #0x4]
	mov	r6, #0x0
	str	r6, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x2
	bl	AddTextPrinterParameterized
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r5, #0
	add	r0, r0, #0xe
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r4, #0x2
	bls	.L1118	@cond_branch
	ldr	r0, .L1133
	ldr	r2, [r0]
	ldr	r0, .L1133+0x8
	add	r2, r2, r0
	add	r0, r5, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	str	r7, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r3, #0x6
	bl	AddTextPrinterParameterized
	b	.L1122
.L1134:
	.align	2, 0
.L1133:
	.word	gStorage
	.word	0xcf5
	.word	0xd61
.L1114:
	ldr	r1, .L1135
	add	r2, r2, r1
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r0, #0x0
	mov	r3, #0x6
	bl	AddTextPrinterParameterized
	mov	r4, #0x0
	mov	r5, #0xf
.L1126:
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r2, .L1135+0x4
	add	r0, r0, r2
	ldr	r1, [r6]
	add	r2, r1, r0
	mov	r3, #0x6
	cmp	r4, #0x2
	bne	.L1127	@cond_branch
	mov	r3, #0xa
.L1127:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x2
	bl	AddTextPrinterParameterized
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r5, #0
	add	r0, r0, #0xe
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r4, #0x2
	bls	.L1126	@cond_branch
.L1122:
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r4, .L1135+0x8
	ldr	r1, [r4]
	mov	r2, #0xce
	lsl	r2, r2, #0x4
	add	r0, r1, r2
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L1130	@cond_branch
	add	r2, r2, #0x7
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r2, #0xb5
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	UpdateMonMarkingTiles
	ldr	r0, [r4]
	mov	r1, #0xd9
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	b	.L1132
.L1136:
	.align	2, 0
.L1135:
	.word	0xd61
	.word	0xcf5
	.word	gStorage
.L1130:
	mov	r2, #0xd9
	lsl	r2, r2, #0x4
	add	r0, r1, r2
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
.L1132:
	strb	r0, [r1]
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe57:
	.size	 PrintDisplayMonInfo,.Lfe57-PrintDisplayMonInfo
	.align	2, 0
	.type	 UpdateWaveformAnimation,function
	.thumb_func
UpdateWaveformAnimation:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L1150
	ldr	r0, [r0]
	mov	r1, #0xce
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L1138	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x8
	bl	TilemapUtil_SetRect
	mov	r4, #0x0
.L1142:
	ldr	r0, .L1150
	ldr	r0, [r0]
	lsl	r1, r4, #0x2
	ldr	r2, .L1150+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnimIfDifferent
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1
	bls	.L1142	@cond_branch
	b	.L1144
.L1151:
	.align	2, 0
.L1150:
	.word	gStorage
	.word	0xd94
.L1138:
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x8
	bl	TilemapUtil_SetRect
	mov	r4, #0x0
.L1148:
	ldr	r0, .L1152
	ldr	r0, [r0]
	lsl	r1, r4, #0x2
	ldr	r2, .L1152+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldr	r0, [r0]
	lsl	r1, r4, #0x19
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1
	bls	.L1148	@cond_branch
.L1144:
	mov	r0, #0x0
	bl	TilemapUtil_Update
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1153:
	.align	2, 0
.L1152:
	.word	gStorage
	.word	0xd94
.Lfe58:
	.size	 UpdateWaveformAnimation,.Lfe58-UpdateWaveformAnimation
	.align	2, 0
	.type	 InitSupplementalTilemaps,function
	.thumb_func
InitSupplementalTilemaps:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L1157
	ldr	r4, .L1157+0x4
	ldr	r1, [r4]
	add	r1, r1, #0xb0
	bl	LZ77UnCompWram
	ldr	r0, .L1157+0x8
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r2, [r4]
	add	r2, r2, #0xb0
	mov	r0, #0x16
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, #0xc
	bl	TilemapUtil_SetTilemap
	ldr	r2, .L1157+0xc
	mov	r0, #0x4
	str	r0, [sp]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x9
	bl	TilemapUtil_SetTilemap
	mov	r0, #0x1
	mov	r1, #0xa
	mov	r2, #0x0
	bl	TilemapUtil_SetPos
	mov	r0, #0x2
	mov	r1, #0x15
	mov	r2, #0x0
	bl	TilemapUtil_SetPos
	bl	SetPartySlotTilemaps
	ldr	r0, .L1157+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1155	@cond_branch
	mov	r0, #0x1
	bl	UpdateCloseBoxButtonTilemap
	mov	r0, #0x1
	bl	CreatePartyMonsSprites
	mov	r0, #0x2
	bl	TilemapUtil_Update
	mov	r0, #0x1
	bl	TilemapUtil_Update
	b	.L1156
.L1158:
	.align	2, 0
.L1157:
	.word	gPokeStoragePartyMenu_Tilemap
	.word	gStorage
	.word	gPokeStoragePartyMenu_Pal
	.word	sCloseBoxButton_Tilemap
	.word	sInPartyMenu
.L1155:
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x14
	mov	r3, #0xc
	bl	TilemapUtil_SetRect
	mov	r0, #0x1
	bl	UpdateCloseBoxButtonTilemap
	mov	r0, #0x1
	bl	TilemapUtil_Update
	mov	r0, #0x2
	bl	TilemapUtil_Update
.L1156:
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L1159
	ldr	r0, [r0]
	ldr	r1, .L1159+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1160:
	.align	2, 0
.L1159:
	.word	gStorage
	.word	0x2c7
.Lfe59:
	.size	 InitSupplementalTilemaps,.Lfe59-InitSupplementalTilemaps
	.align	2, 0
	.type	 SetUpShowPartyMenu,function
	.thumb_func
SetUpShowPartyMenu:
	push	{lr}
	ldr	r0, .L1162
	ldr	r1, [r0]
	mov	r0, #0xb0
	lsl	r0, r0, #0x2
	add	r2, r1, r0
	mov	r3, #0x0
	mov	r0, #0x14
	strh	r0, [r2]
	ldr	r0, .L1162+0x4
	add	r2, r1, r0
	mov	r0, #0x2
	strh	r0, [r2]
	ldr	r0, .L1162+0x8
	add	r1, r1, r0
	strb	r3, [r1]
	mov	r0, #0x0
	bl	CreatePartyMonsSprites
	pop	{r0}
	bx	r0
.L1163:
	.align	2, 0
.L1162:
	.word	gStorage
	.word	0x2c2
	.word	0x2c5
.Lfe60:
	.size	 SetUpShowPartyMenu,.Lfe60-SetUpShowPartyMenu
	.align	2, 0
	.type	 ShowPartyMenu,function
	.thumb_func
ShowPartyMenu:
	push	{r4, lr}
	ldr	r4, .L1170
	ldr	r2, [r4]
	ldr	r1, .L1170+0x4
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0x14
	beq	.L1169	@cond_branch
	mov	r0, #0xb0
	lsl	r0, r0, #0x2
	add	r1, r2, r0
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L1170+0x8
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x1
	bl	TilemapUtil_Move
	mov	r0, #0x1
	bl	TilemapUtil_Update
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x8
	bl	MovePartySprites
	ldr	r1, [r4]
	ldr	r0, .L1170+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x14
	beq	.L1166	@cond_branch
	mov	r0, #0x1
	b	.L1168
.L1171:
	.align	2, 0
.L1170:
	.word	gStorage
	.word	0x2c5
	.word	0x2c2
.L1166:
	ldr	r1, .L1172
	mov	r0, #0x1
	strb	r0, [r1]
.L1169:
	mov	r0, #0x0
.L1168:
	pop	{r4}
	pop	{r1}
	bx	r1
.L1173:
	.align	2, 0
.L1172:
	.word	sInPartyMenu
.Lfe61:
	.size	 ShowPartyMenu,.Lfe61-ShowPartyMenu
	.align	2, 0
	.type	 SetUpHidePartyMenu,function
	.thumb_func
SetUpHidePartyMenu:
	push	{r4, lr}
	ldr	r4, .L1176
	ldr	r1, [r4]
	mov	r0, #0xb0
	lsl	r0, r0, #0x2
	add	r2, r1, r0
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r2]
	ldr	r0, .L1176+0x4
	add	r2, r1, r0
	mov	r0, #0x16
	strh	r0, [r2]
	ldr	r0, .L1176+0x8
	add	r1, r1, r0
	strb	r3, [r1]
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x3
	bne	.L1175	@cond_branch
	bl	MoveHeldItemWithPartyMenu
.L1175:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1177:
	.align	2, 0
.L1176:
	.word	gStorage
	.word	0x2c2
	.word	0x2c5
.Lfe62:
	.size	 SetUpHidePartyMenu,.Lfe62-SetUpHidePartyMenu
	.align	2, 0
	.type	 HidePartyMenu,function
	.thumb_func
HidePartyMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r5, .L1183
	ldr	r2, [r5]
	ldr	r1, .L1183+0x4
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0x14
	beq	.L1179	@cond_branch
	mov	r0, #0xb0
	lsl	r0, r0, #0x2
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r4, .L1183+0x8
	add	r1, r2, r4
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, #0x1
	mov	r1, #0x3
	bl	TilemapUtil_Move
	mov	r0, #0x1
	bl	TilemapUtil_Update
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r3, [r0]
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r2, #0xa
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x8
	neg	r0, r0
	bl	MovePartySprites
	ldr	r1, [r5]
	ldr	r0, .L1183+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x14
	beq	.L1180	@cond_branch
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	b	.L1182
.L1184:
	.align	2, 0
.L1183:
	.word	gStorage
	.word	0x2c5
	.word	0x2c2
.L1180:
	ldr	r0, .L1185
	mov	r1, #0x0
	strb	r1, [r0]
	bl	DestroyAllPartyMonIcons
	bl	CompactPartySlots
	mov	r0, #0x2
	str	r0, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x9
	bl	TilemapUtil_SetRect
	mov	r0, #0x2
	bl	TilemapUtil_Update
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
.L1179:
	mov	r0, #0x0
.L1182:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1186:
	.align	2, 0
.L1185:
	.word	sInPartyMenu
.Lfe63:
	.size	 HidePartyMenu,.Lfe63-HidePartyMenu
	.align	2, 0
	.type	 UpdateCloseBoxButtonTilemap,function
	.thumb_func
UpdateCloseBoxButtonTilemap:
	push	{lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1188	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x9
	bl	TilemapUtil_SetRect
	b	.L1189
.L1188:
	mov	r0, #0x2
	str	r0, [sp]
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x9
	bl	TilemapUtil_SetRect
.L1189:
	mov	r0, #0x2
	bl	TilemapUtil_Update
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 UpdateCloseBoxButtonTilemap,.Lfe64-UpdateCloseBoxButtonTilemap
	.align	2, 0
	.type	 StartFlashingCloseBoxButton,function
	.thumb_func
StartFlashingCloseBoxButton:
	ldr	r2, .L1191
	ldr	r0, [r2]
	ldr	r1, .L1191+0x4
	add	r0, r0, r1
	mov	r3, #0x1
	strb	r3, [r0]
	ldr	r0, [r2]
	add	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x1e
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r1, .L1191+0x8
	add	r0, r0, r1
	strb	r3, [r0]
	bx	lr
.L1192:
	.align	2, 0
.L1191:
	.word	gStorage
	.word	0x2c7
	.word	0x2c9
.Lfe65:
	.size	 StartFlashingCloseBoxButton,.Lfe65-StartFlashingCloseBoxButton
	.align	2, 0
	.type	 StopFlashingCloseBoxButton,function
	.thumb_func
StopFlashingCloseBoxButton:
	push	{lr}
	ldr	r0, .L1195
	ldr	r0, [r0]
	ldr	r2, .L1195+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1194	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	bl	UpdateCloseBoxButtonTilemap
.L1194:
	pop	{r0}
	bx	r0
.L1196:
	.align	2, 0
.L1195:
	.word	gStorage
	.word	0x2c7
.Lfe66:
	.size	 StopFlashingCloseBoxButton,.Lfe66-StopFlashingCloseBoxButton
	.align	2, 0
	.type	 UpdateCloseBoxButtonFlash,function
	.thumb_func
UpdateCloseBoxButtonFlash:
	push	{r4, lr}
	ldr	r3, .L1200
	ldr	r1, [r3]
	ldr	r2, .L1200+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1198	@cond_branch
	mov	r0, #0xb2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1e
	bls	.L1198	@cond_branch
	ldr	r0, [r3]
	mov	r1, #0xb2
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r3]
	mov	r2, #0x0
	ldr	r4, .L1200+0x8
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L1199	@cond_branch
	mov	r2, #0x1
.L1199:
	strb	r2, [r1]
	ldr	r0, [r3]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	UpdateCloseBoxButtonTilemap
.L1198:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1201:
	.align	2, 0
.L1200:
	.word	gStorage
	.word	0x2c7
	.word	0x2c9
.Lfe67:
	.size	 UpdateCloseBoxButtonFlash,.Lfe67-UpdateCloseBoxButtonFlash
	.align	2, 0
	.type	 SetPartySlotTilemaps,function
	.thumb_func
SetPartySlotTilemaps:
	push	{r4, lr}
	mov	r4, #0x1
.L1206:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1209
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	neg	r1, r0
	orr	r1, r1, r0
	lsr	r1, r1, #0x1f
	add	r0, r4, #0
	bl	SetPartySlotTilemap
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L1206	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L1210:
	.align	2, 0
.L1209:
	.word	gPlayerParty
.Lfe68:
	.size	 SetPartySlotTilemaps,.Lfe68-SetPartySlotTilemaps
	.align	2, 0
	.type	 SetPartySlotTilemap,function
	.thumb_func
SetPartySlotTilemap:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r7, .L1224
	cmp	r1, #0
	beq	.L1212	@cond_branch
	ldr	r7, .L1224+0x4
.L1212:
	sub	r0, r0, #0x1
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0x1
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x12
	mov	r1, #0xe0
	lsl	r1, r1, #0xb
	add	r0, r0, r1
	lsr	r3, r0, #0x10
	mov	r0, #0x0
	ldr	r1, .L1224+0x8
	mov	ip, r1
.L1217:
	mov	r2, #0x0
	add	r4, r7, #0
	add	r4, r4, #0x8
	add	r5, r3, #0
	add	r5, r5, #0xc
	add	r6, r0, #0x1
.L1221:
	mov	r0, ip
	ldr	r1, [r0]
	add	r0, r3, r2
	lsl	r0, r0, #0x1
	add	r1, r1, #0xb0
	add	r1, r1, r0
	lsl	r0, r2, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x3
	bls	.L1221	@cond_branch
	add	r7, r4, #0
	lsl	r0, r5, #0x10
	lsr	r3, r0, #0x10
	lsl	r0, r6, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bls	.L1217	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1225:
	.align	2, 0
.L1224:
	.word	sPartySlotEmpty_Tilemap
	.word	sPartySlotFilled_Tilemap
	.word	gStorage
.Lfe69:
	.size	 SetPartySlotTilemap,.Lfe69-SetPartySlotTilemap
	.align	2, 0
	.type	 UpdatePartySlotColors,function
	.thumb_func
UpdatePartySlotColors:
	push	{lr}
	add	sp, sp, #-0x4
	bl	SetPartySlotTilemaps
	mov	r0, #0x16
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0xc
	bl	TilemapUtil_SetRect
	mov	r0, #0x1
	bl	TilemapUtil_Update
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 UpdatePartySlotColors,.Lfe70-UpdatePartySlotColors
	.align	2, 0
	.type	 SetUpDoShowPartyMenu,function
	.thumb_func
SetUpDoShowPartyMenu:
	push	{lr}
	ldr	r0, .L1228
	ldr	r0, [r0]
	ldr	r1, .L1228+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x6
	bl	PlaySE
	bl	SetUpShowPartyMenu
	pop	{r0}
	bx	r0
.L1229:
	.align	2, 0
.L1228:
	.word	gStorage
	.word	0x2c6
.Lfe71:
	.size	 SetUpDoShowPartyMenu,.Lfe71-SetUpDoShowPartyMenu
	.align	2, 0
	.type	 DoShowPartyMenu,function
	.thumb_func
DoShowPartyMenu:
	push	{r4, r5, lr}
	ldr	r4, .L1242
	ldr	r0, [r4]
	ldr	r5, .L1242+0x4
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L1234	@cond_branch
	cmp	r0, #0x1
	bgt	.L1240	@cond_branch
	cmp	r0, #0
	beq	.L1232	@cond_branch
	b	.L1231
.L1243:
	.align	2, 0
.L1242:
	.word	gStorage
	.word	0x2c6
.L1240:
	cmp	r0, #0x2
	beq	.L1237	@cond_branch
	b	.L1231
.L1232:
	bl	ShowPartyMenu
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1231	@cond_branch
	bl	SetCursorInParty
	b	.L1236
.L1234:
	bl	UpdateCursorPos
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1231	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L1244
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1236	@cond_branch
	bl	StartDisplayMonMosaic
.L1236:
	ldr	r1, [r4]
	add	r1, r1, r5
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1231
.L1245:
	.align	2, 0
.L1244:
	.word	0xce6
.L1237:
	mov	r0, #0x0
	b	.L1241
.L1231:
	mov	r0, #0x1
.L1241:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 DoShowPartyMenu,.Lfe72-DoShowPartyMenu
	.align	2, 0
	.type	 InitPokeStorageBg0,function
	.thumb_func
InitPokeStorageBg0:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r1, #0xe8
	lsl	r1, r1, #0x5
	mov	r0, #0x8
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x2
	mov	r2, #0xd0
	bl	LoadStdWindowGfx
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 InitPokeStorageBg0,.Lfe73-InitPokeStorageBg0
	.align	2, 0
	.type	 PrintStorageMessage,function
	.thumb_func
PrintStorageMessage:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r1, .L1268
	lsl	r0, r6, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x7
	bhi	.L1248	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1268+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1269:
	.align	2, 0
.L1268:
	.word	sMessages
	.word	.L1263
	.align	2, 0
	.align	2, 0
.L1263:
	.word	.L1248
	.word	.L1252
	.word	.L1252
	.word	.L1252
	.word	.L1255
	.word	.L1255
	.word	.L1255
	.word	.L1256
.L1252:
	ldr	r0, .L1270
	ldr	r1, [r0]
	ldr	r0, .L1270+0x4
	add	r1, r1, r0
	b	.L1265
.L1271:
	.align	2, 0
.L1270:
	.word	gStorage
	.word	0xcea
.L1255:
	ldr	r0, .L1272
	ldr	r1, [r0]
	ldr	r2, .L1272+0x4
	add	r1, r1, r2
.L1265:
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	b	.L1248
.L1273:
	.align	2, 0
.L1272:
	.word	gStorage
	.word	0x21d0
.L1256:
	bl	IsActiveItemMoving
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1257	@cond_branch
	ldr	r0, .L1274
	ldr	r4, [r0]
	ldr	r0, .L1274+0x4
	add	r4, r4, r0
	bl	GetMovingItemName
	add	r1, r0, #0
	add	r0, r4, #0
	b	.L1266
.L1275:
	.align	2, 0
.L1274:
	.word	gStorage
	.word	0x21db
.L1257:
	ldr	r0, .L1276
	ldr	r1, [r0]
	ldr	r2, .L1276+0x4
	add	r0, r1, r2
	ldr	r2, .L1276+0x8
	add	r1, r1, r2
.L1266:
	bl	StringCopy
	add	r2, r0, #0
	b	.L1267
.L1277:
	.align	2, 0
.L1276:
	.word	gStorage
	.word	0x21db
	.word	0xd61
.L1261:
	add	r2, r1, #0
.L1267:
	sub	r1, r2, #0x1
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1261	@cond_branch
	mov	r0, #0xff
	strb	r0, [r2]
	ldr	r0, .L1278
	ldr	r1, [r0]
	ldr	r0, .L1278+0x4
	add	r1, r1, r0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
.L1248:
	ldr	r5, .L1278
	ldr	r0, [r5]
	mov	r4, #0x86
	lsl	r4, r4, #0x6
	add	r0, r0, r4
	ldr	r2, .L1278+0x8
	lsl	r1, r6, #0x3
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, [r5]
	add	r2, r2, r4
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x1
	mov	r1, #0x2
	mov	r2, #0xd
	bl	DrawTextBorderOuter
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1279:
	.align	2, 0
.L1278:
	.word	gStorage
	.word	0x21db
	.word	sMessages
.Lfe74:
	.size	 PrintStorageMessage,.Lfe74-PrintStorageMessage
	.align	2, 0
	.type	 ShowYesNoWindow,function
	.thumb_func
ShowYesNoWindow:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L1281
	mov	r1, #0xb
	str	r1, [sp]
	mov	r1, #0xe
	str	r1, [sp, #0x4]
	mov	r1, #0x1
	str	r1, [sp, #0x8]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r0, r4, #0
	bl	Menu_MoveCursorNoWrapAround
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L1282:
	.align	2, 0
.L1281:
	.word	sYesNoWindowTemplate
.Lfe75:
	.size	 ShowYesNoWindow,.Lfe75-ShowYesNoWindow
	.align	2, 0
	.type	 ClearBottomWindow,function
	.thumb_func
ClearBottomWindow:
	push	{lr}
	mov	r0, #0x1
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 ClearBottomWindow,.Lfe76-ClearBottomWindow
	.align	2, 0
	.type	 AddWallpaperSetsMenu,function
	.thumb_func
AddWallpaperSetsMenu:
	push	{lr}
	bl	InitMenu
	mov	r0, #0x12
	bl	SetMenuText
	mov	r0, #0x13
	bl	SetMenuText
	mov	r0, #0x14
	bl	SetMenuText
	mov	r0, #0x15
	bl	SetMenuText
	bl	AddMenu
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 AddWallpaperSetsMenu,.Lfe77-AddWallpaperSetsMenu
	.align	2, 0
	.type	 AddWallpapersMenu,function
	.thumb_func
AddWallpapersMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	InitMenu
	cmp	r4, #0x1
	beq	.L1288	@cond_branch
	cmp	r4, #0x1
	bgt	.L1293	@cond_branch
	cmp	r4, #0
	beq	.L1287	@cond_branch
	b	.L1286
.L1293:
	cmp	r5, #0x2
	beq	.L1289	@cond_branch
	cmp	r5, #0x3
	beq	.L1290	@cond_branch
	b	.L1286
.L1287:
	mov	r0, #0x16
	bl	SetMenuText
	mov	r0, #0x17
	bl	SetMenuText
	mov	r0, #0x18
	bl	SetMenuText
	mov	r0, #0x19
	bl	SetMenuText
	b	.L1286
.L1288:
	mov	r0, #0x1a
	bl	SetMenuText
	mov	r0, #0x1b
	bl	SetMenuText
	mov	r0, #0x1c
	bl	SetMenuText
	mov	r0, #0x1d
	bl	SetMenuText
	b	.L1286
.L1289:
	mov	r0, #0x1e
	bl	SetMenuText
	mov	r0, #0x1f
	bl	SetMenuText
	mov	r0, #0x20
	bl	SetMenuText
	mov	r0, #0x21
	bl	SetMenuText
	b	.L1286
.L1290:
	mov	r0, #0x22
	bl	SetMenuText
	mov	r0, #0x23
	bl	SetMenuText
	mov	r0, #0x24
	bl	SetMenuText
	mov	r0, #0x25
	bl	SetMenuText
.L1286:
	bl	AddMenu
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 AddWallpapersMenu,.Lfe78-AddWallpapersMenu
	.align	2, 0
	.globl	GetCurrentBoxOption
	.type	 GetCurrentBoxOption,function
	.thumb_func
GetCurrentBoxOption:
	ldr	r0, .L1295
	ldrb	r0, [r0]
	bx	lr
.L1296:
	.align	2, 0
.L1295:
	.word	sCurrentBoxOption
.Lfe79:
	.size	 GetCurrentBoxOption,.Lfe79-GetCurrentBoxOption
	.align	2, 0
	.type	 InitCursorItemIcon,function
	.thumb_func
InitCursorItemIcon:
	push	{lr}
	bl	IsCursorOnBoxTitle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1298	@cond_branch
	ldr	r0, .L1302
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1299	@cond_branch
	bl	GetBoxCursorPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x1
	bl	TryLoadItemIconAtPos
	b	.L1298
.L1303:
	.align	2, 0
.L1302:
	.word	sInPartyMenu
.L1299:
	bl	GetBoxCursorPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	TryLoadItemIconAtPos
.L1298:
	ldr	r1, .L1304
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L1301	@cond_branch
	bl	InitItemIconInCursor
	mov	r0, #0x3
	bl	StartCursorAnim
.L1301:
	pop	{r0}
	bx	r0
.L1305:
	.align	2, 0
.L1304:
	.word	sMovingItemId
.Lfe80:
	.size	 InitCursorItemIcon,.Lfe80-InitCursorItemIcon
	.align	2, 0
	.type	 SetPokeStorageQuestLogEvent,function
	.thumb_func
SetPokeStorageQuestLogEvent:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	GetMovingMonOriginalBoxId
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1337
	ldr	r0, [r0]
	mov	r1, #0xce
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldrh	r7, [r0]
	ldr	r0, .L1337+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1307	@cond_branch
	mov	r6, #0xe
	bl	GetBoxCursorPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1337+0x8
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	b	.L1333
.L1338:
	.align	2, 0
.L1337:
	.word	gStorage
	.word	sInPartyMenu
	.word	gPlayerParty
.L1307:
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	GetBoxCursorPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x41
	bl	GetCurrentBoxMonData
.L1333:
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L1339
	ldr	r0, [r0]
	ldr	r2, .L1339+0x4
	add	r1, r0, r2
	cmp	r5, #0x1
	beq	.L1320	@cond_branch
	cmp	r5, #0x1
	bgt	.L1332	@cond_branch
	cmp	r5, #0
	beq	.L1311	@cond_branch
	b	.L1306
.L1340:
	.align	2, 0
.L1339:
	.word	gStorage
	.word	0x2228
.L1332:
	cmp	r5, #0x2
	beq	.L1329	@cond_branch
	cmp	r5, #0x3
	beq	.L1330	@cond_branch
	b	.L1306
.L1311:
	ldr	r0, .L1341
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1312	@cond_branch
	cmp	r4, #0xe
	beq	.L1306	@cond_branch
.L1334:
	mov	r2, #0x16
	b	.L1315
.L1342:
	.align	2, 0
.L1341:
	.word	sInPartyMenu
.L1312:
	cmp	r4, #0xe
	beq	.L1334	@cond_branch
	mov	r0, #0x15
	cmp	r4, r6
	beq	.L1318	@cond_branch
	mov	r0, #0x14
.L1318:
	add	r2, r0, #0
.L1315:
	strh	r7, [r1]
	strh	r3, [r1, #0x2]
	b	.L1335
.L1320:
	mov	r0, #0x0
	strh	r7, [r1]
	strh	r0, [r1, #0x2]
	strb	r4, [r1, #0x4]
	mov	r0, #0xff
	strb	r0, [r1, #0x5]
	ldr	r0, .L1343
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1321	@cond_branch
	cmp	r4, #0xe
	beq	.L1306	@cond_branch
	mov	r2, #0x19
	b	.L1309
.L1344:
	.align	2, 0
.L1343:
	.word	sInPartyMenu
.L1321:
	cmp	r4, #0xe
	bne	.L1325	@cond_branch
	mov	r2, #0x1a
	strb	r6, [r1, #0x4]
	b	.L1309
.L1325:
	cmp	r4, r6
	beq	.L1327	@cond_branch
	mov	r2, #0x17
	b	.L1336
.L1327:
	mov	r2, #0x18
	b	.L1309
.L1329:
	mov	r2, #0x1a
	mov	r0, #0x0
	strh	r7, [r1]
	strh	r0, [r1, #0x2]
	ldr	r0, .L1345
	ldrb	r0, [r0]
	strb	r0, [r1, #0x4]
	mov	r0, #0xff
	strb	r0, [r1, #0x5]
	b	.L1309
.L1346:
	.align	2, 0
.L1345:
	.word	sDepositBoxId
.L1330:
	mov	r2, #0x1b
	mov	r0, #0x0
	strh	r0, [r1]
	strh	r0, [r1, #0x2]
.L1335:
	strb	r4, [r1, #0x4]
.L1336:
	strb	r6, [r1, #0x5]
.L1309:
	add	r0, r2, #0
	bl	SetQuestLogEvent
.L1306:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe81:
	.size	 SetPokeStorageQuestLogEvent,.Lfe81-SetPokeStorageQuestLogEvent
	.align	2, 0
	.type	 UpdateBoxToSendMons,function
	.thumb_func
UpdateBoxToSendMons:
	push	{r4, lr}
	ldr	r4, .L1349
	bl	StorageGetCurrentBox
	ldrb	r1, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	beq	.L1348	@cond_branch
	ldr	r0, .L1349+0x4
	bl	FlagClear
	ldr	r4, .L1349+0x8
	bl	StorageGetCurrentBox
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	VarSet
.L1348:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1350:
	.align	2, 0
.L1349:
	.word	sLastUsedBox
	.word	0x843
	.word	0x4037
.Lfe82:
	.size	 UpdateBoxToSendMons,.Lfe82-UpdateBoxToSendMons
.text
	.align	2, 0 @ Don't pad with nop

