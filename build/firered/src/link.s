@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sLinkTestDebugValuesEnabled,object
	.size	 sLinkTestDebugValuesEnabled,1
sLinkTestDebugValuesEnabled:
	.byte	0x0
	.type	 sDummyFlag,object
	.size	 sDummyFlag,1
sDummyFlag:
	.byte	0x0
	.globl	gBerryBlenderKeySendAttempts
	.align	2, 0
	.type	 gBerryBlenderKeySendAttempts,object
	.size	 gBerryBlenderKeySendAttempts,4
gBerryBlenderKeySendAttempts:
	.word	0x0
	.globl	gBlockRecvBuffer
	.align	1, 0
	.type	 gBlockRecvBuffer,object
	.size	 gBlockRecvBuffer,1280
gBlockRecvBuffer:
	.space	1280
	.globl	gBlockSendBuffer
	.type	 gBlockSendBuffer,object
	.size	 gBlockSendBuffer,256
gBlockSendBuffer:
	.space	256
	.type	 sLinkOpen,object
	.size	 sLinkOpen,1
sLinkOpen:
	.byte	0x0
	.globl	gLinkType
	.align	1, 0
	.type	 gLinkType,object
	.size	 gLinkType,2
gLinkType:
	.short	0x0
	.align	1, 0
	.type	 sTimeOutCounter,object
	.size	 sTimeOutCounter,2
sTimeOutCounter:
	.short	0x0
	.globl	gLocalLinkPlayer
	.align	2, 0
	.type	 gLocalLinkPlayer,object
	.size	 gLocalLinkPlayer,28
gLocalLinkPlayer:
	.space	28
	.globl	gLinkPlayers
	.align	2, 0
	.type	 gLinkPlayers,object
	.size	 gLinkPlayers,140
gLinkPlayers:
	.space	140
	.globl	gSavedLinkPlayers
	.align	2, 0
	.type	 gSavedLinkPlayers,object
	.size	 gSavedLinkPlayers,140
gSavedLinkPlayers:
	.space	140
	.globl	sLinkErrorBuffer
	.align	2, 0
	.type	 sLinkErrorBuffer,object
	.size	 sLinkErrorBuffer,8
sLinkErrorBuffer:
	.space	8
	.align	1, 0
	.type	 sReadyCloseLinkAttempts,object
	.size	 sReadyCloseLinkAttempts,2
sReadyCloseLinkAttempts:
	.short	0x0
	.align	2, 0
	.type	 sLinkErrorBgTilemapBuffer,object
	.size	 sLinkErrorBgTilemapBuffer,4
sLinkErrorBgTilemapBuffer:
	.word	0x0
	.section .rodata
	.align	1, 0
	.type	 sWirelessLinkDisplayPal,object
sWirelessLinkDisplayPal:
	.short	0x0
	.short	0x7fff
	.short	0x17f
	.short	0x263e
	.short	0x533f
	.short	0x7bdd
	.short	0x7f76
	.short	0x3d67
	.short	0x7eee
	.short	0x7b7b
	.short	0x5bd0
	.short	0x41cd
	.short	0x6b17
	.short	0x5a93
	.short	0x2d29
	.short	0x0
	.size	 sWirelessLinkDisplayPal,32
	.align	1, 0
	.type	 sWirelessLinkDisplayGfx,object
sWirelessLinkDisplayGfx:
	.short	0x10
	.short	0xe
	.short	0x30
	.short	0xf000
	.short	0x9001
	.short	0x1101
	.short	0x1111
	.short	0x8951
	.short	0x3d0
	.short	0xaaaa
	.short	0x401a
	.short	0x5a07
	.short	0x3055
	.short	0x13
	.short	0xeeee
	.short	0x1111
	.short	0xbbde
	.short	0x1111
	.short	0x9e04
	.short	0x11dc
	.short	0x9b11
	.short	0x300
	.short	0xc9ee
	.short	0x1100
	.short	0xede1
	.short	0x55c9
	.short	0xcce5
	.short	0x809e
	.short	0x1f10
	.short	0xeeee
	.short	0xeeee
	.short	0xbbbb
	.short	0x14bb
	.short	0xddbb
	.short	0x70dd
	.short	0xdc01
	.short	0x300
	.short	0xcccc
	.short	0xcc21
	.short	0x20bc
	.short	0x1e1f
	.short	0x5111
	.short	0xbb
	.short	0x4203
	.short	0x10bd
	.short	0x1b03
	.short	0x5111
	.short	0xeb
	.short	0xeb07
	.short	0xed03
	.short	0x5111
	.short	0xecce
	.short	0x4055
	.short	0xc05f
	.short	0x1303
	.short	0xaaa1
	.short	0x10aa
	.short	0x5507
	.short	0x30a5
	.short	0xf007
	.short	0x809f
	.short	0x750
	.short	0x5555
	.short	0x6888
	.short	0x5111
	.short	0xa968
	.short	0xb00
	.short	0x18
	.short	0x1603
	.short	0x27c0
	.short	0x5555
	.short	0x5ff0
	.short	0xf0ff
	.short	0xf01f
	.short	0xf017
	.short	0xf01f
	.short	0xd003
	.short	0x901f
	.short	0x90fb
	.short	0xf001
	.short	0xf937
	.short	0x3ff0
	.short	0x3f0
	.short	0x1ff0
	.short	0x3f0
	.short	0x1f50
	.short	0x8886
	.short	0xb00
	.short	0x8657
	.short	0x300
	.short	0x81
	.short	0x6103
	.short	0x1ff0
	.short	0xb10
	.short	0x4711
	.short	0xf0fe
	.short	0x103
	.short	0x215e
	.short	0x115f
	.short	0xf0ef
	.short	0x1003
	.short	0x3
	.short	0xe11f
	.short	0x11d4
	.short	0xe0fb
	.short	0x217b
	.short	0x300
	.short	0x1031
	.short	0x995f
	.short	0x299
	.short	0xe999
	.short	0xeeed
	.short	0x5dee
	.short	0x1710
	.short	0x31
	.short	0x3113
	.short	0x2153
	.short	0x2222
	.short	0x1352
	.short	0x2300
	.short	0x3132
	.short	0x1142
	.short	0x2411
	.short	0x1a22
	.short	0x2222
	.short	0x22
	.short	0xe03d
	.short	0x12b7
	.short	0x300
	.short	0xfe13
	.short	0x9f90
	.short	0xef11
	.short	0x3f0
	.short	0x7e10
	.short	0x9f40
	.short	0x3f0
	.short	0x330
	.short	0x79aa
	.short	0xf05a
	.short	0xf09b
	.short	0xf0ff
	.short	0x3003
	.short	0xee03
	.short	0xa05e
	.short	0x5b1f
	.short	0x41
	.short	0x4403
	.short	0x600
	.short	0x300
	.short	0x2044
	.short	0x7
	.short	0x453e
	.short	0x44
	.short	0x5114
	.short	0x1444
	.short	0x300
	.short	0x1044
	.short	0x5703
	.short	0x14
	.short	0x4403
	.short	0x310
	.short	0x54
	.short	0x2003
	.short	0xf101
	.short	0x85f1
	.short	0x170
	.short	0xddd3
	.short	0x3ddd
	.short	0x5300
	.short	0x6054
	.short	0x7d53
	.short	0x41
	.short	0x3
	.short	0x33
	.short	0x6006
	.short	0x5001
	.short	0x147f
	.short	0x6710
	.short	0x90f7
	.short	0x106b
	.short	0xf007
	.short	0xc0bf
	.short	0xe5df
	.short	0x9bf1
	.short	0xffd0
	.short	0x4311
	.short	0x23db
	.short	0x104f
	.short	0xa103
	.short	0x4f11
	.short	0x310
	.short	0x50a1
	.short	0x111f
	.short	0xed43
	.short	0x300
	.short	0xef41
	.short	0x5301
	.short	0x1a
	.short	0x3
	.short	0x1a1b
	.short	0x3f61
	.short	0x212b
	.short	0x53
	.short	0x3203
	.short	0x2f00
	.short	0x4122
	.short	0xa0f7
	.short	0x105f
	.short	0x2231
	.short	0x22
	.short	0x111f
	.short	0x4351
	.short	0x3c11
	.short	0x3411
	.short	0xef11
	.short	0xf401
	.short	0xfa01
	.short	0x1f80
	.short	0x1112
	.short	0x513f
	.short	0x23
	.short	0x3
	.short	0x213c
	.short	0xd0f7
	.short	0x113f
	.short	0xf0e6
	.short	0xf0a3
	.short	0xa330
	.short	0x9f40
	.short	0x9bf0
	.short	0xdf90
	.short	0xeee1
	.short	0x11eb
	.short	0xe100
	.short	0xe99d
	.short	0xe111
	.short	0x9ccb
	.short	0x1411
	.short	0xdbe1
	.short	0xcd
	.short	0xdd03
	.short	0x350
	.short	0xe555
	.short	0xdb15
	.short	0xcddd
	.short	0x6b04
	.short	0xce
	.short	0xe903
	.short	0x300
	.short	0x9c00
	.short	0x111e
	.short	0xcc21
	.short	0x11d9
	.short	0x831
	.short	0xe9cd
	.short	0x5231
	.short	0x300
	.short	0xcd32
	.short	0x50e9
	.short	0x1055
	.short	0x41d3
	.short	0xd900
	.short	0x1151
	.short	0x1223
	.short	0x5108
	.short	0x3113
	.short	0x22
	.short	0x23a7
	.short	0x2454
	.short	0x1300
	.short	0x5224
	.short	0x1221
	.short	0x5221
	.short	0xfc25
	.short	0x100
	.short	0xa751
	.short	0xb311
	.short	0xbb11
	.short	0xc321
	.short	0x1f82
	.short	0xdd33
	.short	0xdd01
	.short	0x3333
	.short	0x3dd3
	.short	0x3333
	.short	0x1f0
	.short	0x20fe
	.short	0x8101
	.short	0x12ea
	.short	0x4233
	.short	0x7143
	.short	0x11df
	.short	0x1f7
	.short	0x515a
	.short	0x180
	.short	0x5162
	.short	0x2211
	.short	0x3113
	.short	0x3241
	.short	0x1102
	.short	0x2122
	.short	0x3142
	.short	0x5042
	.short	0x117f
	.short	0x1124
	.short	0x5e1
	.short	0xe16f
	.short	0xec
	.short	0x9e03
	.short	0x12
	.short	0xe111
	.short	0x13c9
	.short	0x9d11
	.short	0x21cc
	.short	0x1308
	.short	0xdc9e
	.short	0x23
	.short	0x2203
	.short	0x9e55
	.short	0xdc00
	.short	0xeebe
	.short	0x511e
	.short	0xd99e
	.short	0x1e
	.short	0xc951
	.short	0x1ebc
	.short	0xdc51
	.short	0x1ebd
	.short	0x512f
	.short	0xa0dd
	.short	0x5e03
	.short	0x3f92
	.short	0xf311
	.short	0x5f41
	.short	0x6f31
	.short	0x11ff
	.short	0x105c
	.short	0x111b
	.short	0x114f
	.short	0x2157
	.short	0x235f
	.short	0x2357
	.short	0xf3fb
	.short	0xc15f
	.short	0xfb73
	.short	0x3701
	.short	0x3221
	.short	0x5555
	.short	0x2125
	.short	0xfbfb
	.short	0x350
	.short	0xfb11
	.short	0x312
	.short	0xb12
	.short	0xf10
	.short	0x4235
	.short	0xd31b
	.short	0xcffb
	.short	0xb12
	.short	0x1312
	.short	0x5235
	.short	0xdf62
	.short	0x9be0
	.short	0x1312
	.short	0x9f54
	.short	0xf0f8
	.short	0x60a3
	.short	0x1a3
	.short	0x71ff
	.short	0x40ef
	.short	0xbd03
	.short	0xe111
	.short	0xbb48
	.short	0x1302
	.short	0xebee
	.short	0x1f12
	.short	0xe9cd
	.short	0x4511
	.short	0x2122
	.short	0xd9eb
	.short	0x5231
	.short	0x7f06
	.short	0x631
	.short	0x7f7b
	.short	0x1221
	.short	0x120f
	.short	0x1317
	.short	0x11ff
	.short	0x1067
	.short	0x1103
	.short	0x11f3
	.short	0xf6fb
	.short	0x312
	.short	0xb12
	.short	0x1312
	.short	0x3e00
	.short	0xa445
	.short	0xf313
	.short	0x44bf
	.short	0xf1fd
	.short	0x40f1
	.short	0x1201
	.short	0x213
	.short	0xa31b
	.short	0xf4d3
	.short	0x443f
	.short	0x7f50
	.short	0x11fa
	.short	0x11f3
	.short	0x12fb
	.short	0x2203
	.short	0x20b
	.short	0x5413
	.short	0x8000
	.short	0xc122
	.short	0x7307
	.short	0xeb11
	.short	0x1321
	.short	0xdc9d
	.short	0x13
	.short	0xacdc
	.short	0x302
	.short	0x42be
	.short	0xdc0f
	.short	0xff13
	.short	0xefb1
	.short	0x511e
	.short	0xdb4f
	.short	0x300
	.short	0xbbbe
	.short	0x300
	.short	0x1702
	.short	0x5f63
	.short	0xfbf5
	.short	0x20fd
	.short	0x4303
	.short	0x5f
	.short	0xf501
	.short	0x10fb
	.short	0x8503
	.short	0x313f
	.short	0xfbd3
	.short	0x238f
	.short	0xe57f
	.short	0xeeee
	.short	0xef11
	.short	0xeb15
	.short	0xf315
	.short	0xfb15
	.short	0x16ff
	.short	0x1003
	.short	0x161b
	.short	0x1613
	.short	0x101b
	.short	0x150b
	.short	0xd3eb
	.short	0x38fb
	.short	0xff37
	.short	0x7f30
	.short	0xfbf5
	.short	0x9f42
	.short	0x9f64
	.short	0xfbf5
	.short	0x310
	.short	0xdff5
	.short	0x5ff4
	.short	0xf0ff
	.short	0xe017
	.short	0xa51f
	.short	0x30f3
	.short	0x260f
	.short	0x200b
	.short	0xf31f
	.short	0x73bf
	.short	0x7ebf
	.short	0x45
	.short	0x151f
	.short	0xf5e3
	.short	0x70f9
	.short	0xf401
	.short	0xa43f
	.short	0x543f
	.short	0xe5ff
	.short	0x46f3
	.short	0xf00b
	.short	0xf0bf
	.short	0xf003
	.short	0xf01f
	.short	0x311f
	.short	0x58eb
	.short	0xf703
	.short	0x1ff0
	.short	0xeb79
	.short	0x730
	.short	0x3fe0
	.short	0x9e1
	.short	0x9e3
	.short	0x29eb
	.short	0xf3f3
	.short	0xfb29
	.short	0x31a
	.short	0xb1a
	.short	0xbd11
	.short	0x5555
	.short	0xe319
	.short	0xeb19
	.short	0x90f3
	.short	0x1a01
	.short	0x1a0b
	.short	0x1013
	.short	0xce1f
	.short	0x39ec
	.short	0x19eb
	.short	0xfff3
	.short	0xfb19
	.short	0x31a
	.short	0xb1a
	.short	0x131a
	.short	0x5f20
	.short	0xeb49
	.short	0x760
	.short	0x9fe0
	.short	0xb9fc
	.short	0xf0f3
	.short	0xb0df
	.short	0x1a13
	.short	0x1a03
	.short	0x1a0b
	.short	0x8813
	.short	0xff68
	.short	0x1ff0
	.short	0x3ff0
	.short	0x17f0
	.short	0x1ff0
	.short	0x3f0
	.short	0x1f50
	.short	0xf1f1
	.short	0xf779
	.short	0xf0ff
	.short	0xf03f
	.short	0xf03f
	.short	0xf017
	.short	0xf01f
	.short	0xf003
	.short	0x801f
	.short	0x1a03
	.short	0x8203
	.short	0xb1a
	.short	0x5586
	.short	0x8655
	.short	0xb88
	.short	0x70e2
	.short	0xaf
	.short	0x8003
	.short	0x300
	.short	0x87
	.short	0x1003
	.short	0xa00f
	.short	0xfb03
	.short	0xe33f
	.short	0x5fb0
	.short	0x31fc
	.short	0x140
	.short	0x8887
	.short	0x88
	.short	0xe002
	.short	0xff4f
	.short	0x3f0
	.short	0x1f0
	.short	0x110
	.short	0x3a00
	.short	0x120
	.short	0xbff0
	.short	0xdff0
	.short	0x3f0
	.short	0x4cff
	.short	0x21f
	.short	0xf01d
	.short	0xf059
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0c0
	.short	0xf001
	.short	0x1
	.short	0x0
	.size	 sWirelessLinkDisplayGfx,1192
	.align	1, 0
	.type	 sWirelessLinkDisplayTilemap,object
sWirelessLinkDisplayTilemap:
	.short	0x10
	.short	0x8
	.short	0x3f
	.short	0xf000
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0f0
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0x1
	.short	0x6200
	.short	0x4e00
	.short	0xa064
	.short	0x6201
	.short	0xf004
	.short	0xd019
	.short	0x7019
	.short	0x6001
	.short	0x0
	.short	0x61
	.short	0x66
	.short	0x1
	.short	0x2
	.short	0x300
	.short	0x400
	.short	0x500
	.short	0x600
	.short	0x8
	.short	0x461
	.short	0x2060
	.short	0x6027
	.short	0x700
	.short	0x0
	.short	0x8
	.short	0x9
	.short	0xa
	.short	0xb
	.short	0xc00
	.short	0xd00
	.short	0xe00
	.short	0xf00
	.short	0x60
	.short	0x1930
	.short	0x190
	.short	0x63
	.short	0x65
	.short	0x10
	.short	0x1100
	.short	0x1200
	.short	0x1300
	.short	0x1400
	.short	0xa
	.short	0x15
	.short	0x16
	.short	0x630f
	.short	0x2520
	.short	0x63
	.short	0x1700
	.short	0x1800
	.short	0x1900
	.short	0x1a00
	.short	0x0
	.short	0x1b
	.short	0x1c
	.short	0x1d
	.short	0x301e
	.short	0x1f00
	.short	0x1940
	.short	0x3fd0
	.short	0x20
	.short	0x21
	.short	0x2200
	.short	0x2300
	.short	0x2400
	.short	0x2500
	.short	0x4000
	.short	0x8026
	.short	0x273f
	.short	0x2800
	.short	0x2900
	.short	0x0
	.short	0x2a
	.short	0x2b
	.short	0x2c
	.short	0x2d
	.short	0x2e18
	.short	0x2f00
	.short	0x3ff0
	.short	0x3f20
	.short	0x30
	.short	0x31
	.short	0x3200
	.short	0x3300
	.short	0x3400
	.short	0x3500
	.short	0x20
	.short	0x8036
	.short	0x373f
	.short	0x3800
	.short	0x3900
	.short	0x0
	.short	0x3a
	.short	0x3b
	.short	0x3c
	.short	0xc3d
	.short	0x3e00
	.short	0x3f00
	.short	0x3ff0
	.short	0x3f20
	.short	0x40
	.short	0x4100
	.short	0x4200
	.short	0x4300
	.short	0x4400
	.short	0x1000
	.short	0x45
	.short	0x8046
	.short	0x473f
	.short	0x4800
	.short	0x0
	.short	0x49
	.short	0x4a
	.short	0x4b
	.short	0x4c
	.short	0x4d04
	.short	0x4e00
	.short	0x4f00
	.short	0x3ff0
	.short	0x6000
	.short	0x800
	.short	0x861
	.short	0x50
	.short	0x51
	.short	0x52
	.short	0x5300
	.short	0x5400
	.short	0x5500
	.short	0x5600
	.short	0x4
	.short	0xc61
	.short	0xc60
	.short	0x1930
	.short	0x57
	.short	0x5800
	.short	0x5900
	.short	0x5a00
	.short	0x5b00
	.short	0x0
	.short	0x5c
	.short	0x5d
	.short	0x5e
	.short	0x5f
	.short	0x30cb
	.short	0xc119
	.short	0x8bf
	.short	0xa064
	.short	0x6201
	.short	0x2360
	.short	0x19f0
	.short	0xf0ff
	.short	0xf03d
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0ff
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0ff
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0ff
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0f8
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0x1001
	.short	0x1
	.size	 sWirelessLinkDisplayTilemap,492
	.align	1, 0
	.type	 sLinkTestFontPal,object
sLinkTestFontPal:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7fe0
	.size	 sLinkTestFontPal,32
	.align	1, 0
	.type	 sLinkTestFontGfx,object
sLinkTestFontGfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0xef
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe0
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0x0
	.short	0xe
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0x0
	.short	0xe
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0xe000
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0xfe00
	.short	0xeff
	.short	0xee00
	.short	0xefe
	.short	0xeee0
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xe0
	.short	0xe
	.short	0xeefe
	.short	0xef
	.short	0xeefe
	.short	0xef
	.short	0xeefe
	.short	0xef
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0x0
	.short	0xe
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0xeee0
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xe0
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xe0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xee0
	.short	0xee
	.short	0xeee0
	.short	0x0
	.short	0xfffe
	.short	0xe
	.short	0xfefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0x0
	.short	0xfffe
	.short	0xe
	.short	0xeefe
	.short	0xef
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xeefe
	.short	0xef
	.short	0xfffe
	.short	0xe
	.short	0xeee0
	.short	0x0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xe0
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xfff0
	.short	0xffff
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xfff
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf000
	.short	0xff00
	.short	0xfff0
	.short	0xfff
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0x0
	.short	0xf0f0
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xfff0
	.short	0xffff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf000
	.short	0xf0f0
	.short	0xf000
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xf0f0
	.short	0xffff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0f0
	.short	0xffff
	.short	0xf0f0
	.short	0xf0
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xff0
	.short	0xf0f0
	.short	0xf00
	.short	0xff0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf000
	.short	0xf0ff
	.short	0x0
	.short	0xf
	.short	0xf0f0
	.short	0xf00
	.short	0xf0
	.short	0xf0f
	.short	0xf0
	.short	0xf0f
	.short	0xf0f0
	.short	0xf0f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf000
	.short	0xf0f0
	.short	0xf00
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf0
	.short	0xffff
	.short	0xf0
	.short	0xfff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xff
	.short	0xf0f0
	.short	0xff0
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff0
	.short	0xf0f0
	.short	0xf0ff
	.short	0xf0
	.short	0xff0
	.short	0xf0
	.short	0xf0
	.short	0xf0f0
	.short	0xffff
	.short	0xf0f0
	.short	0xf0
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xff0
	.short	0xf0f0
	.short	0xf00
	.short	0xff0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xf0ff
	.short	0x0
	.short	0xf0f
	.short	0xf0f0
	.short	0xf00
	.short	0xf0
	.short	0xf0f
	.short	0xf0
	.short	0xf0f
	.short	0xf0f0
	.short	0xf0f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f
	.short	0xf00
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xf0ff
	.short	0xf0
	.short	0xfff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xff
	.short	0xf0f0
	.short	0xff0
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0xe00
	.short	0xe
	.short	0xefe0
	.short	0xef
	.short	0xefe0
	.short	0xef
	.short	0xe00
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe00
	.short	0xe
	.short	0xefe0
	.short	0xef
	.short	0xfffe
	.short	0xeff
	.short	0xefe0
	.short	0xef
	.short	0xfffe
	.short	0xeff
	.short	0xefe0
	.short	0xef
	.short	0xe00
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xffe0
	.short	0xef
	.short	0xfefe
	.short	0xe
	.short	0xffe0
	.short	0xef
	.short	0xfe00
	.short	0xefe
	.short	0xffe0
	.short	0xef
	.short	0xee00
	.short	0xe
	.short	0xeee0
	.short	0xe0
	.short	0xfffe
	.short	0xefe
	.short	0xfefe
	.short	0xef
	.short	0xfffe
	.short	0xeff
	.short	0xffe0
	.short	0xefe
	.short	0xfefe
	.short	0xeff
	.short	0xe0e0
	.short	0xee
	.short	0x0
	.short	0x0
	.short	0xee00
	.short	0xe
	.short	0xffe0
	.short	0xef
	.short	0xefe0
	.short	0xef
	.short	0xffe0
	.short	0xefe
	.short	0xfe00
	.short	0xef
	.short	0xefe0
	.short	0xeff
	.short	0xfe00
	.short	0xefee
	.short	0xe000
	.short	0xe00
	.short	0xe000
	.short	0xe
	.short	0xfe00
	.short	0xef
	.short	0xfe00
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0x0
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0x0
	.short	0xefe0
	.short	0x0
	.short	0xefe0
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe00
	.short	0x0
	.short	0xefe0
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0x0
	.short	0xe00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfee0
	.short	0xee
	.short	0xfefe
	.short	0xefe
	.short	0xffe0
	.short	0xef
	.short	0xffe0
	.short	0xef
	.short	0xfefe
	.short	0xefe
	.short	0xe0e0
	.short	0xe0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xfee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xfee0
	.short	0xee
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0xe
	.short	0xfe00
	.short	0xef
	.short	0xfe00
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0x0
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0xe
	.short	0xfe00
	.short	0xef
	.short	0xfe00
	.short	0xef
	.short	0xe000
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe0
	.short	0x0
	.short	0xefe
	.short	0xe000
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xe0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0xef
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe0
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0x0
	.short	0xe
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0x0
	.short	0xe
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0xe000
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0xfe00
	.short	0xeff
	.short	0xe000
	.short	0xefe
	.short	0xeee0
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xe0
	.short	0xe
	.short	0xeefe
	.short	0xef
	.short	0xeefe
	.short	0xef
	.short	0xeefe
	.short	0xef
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0x0
	.short	0xe
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0xeee0
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xe0
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xe0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xee
	.short	0xee00
	.short	0x0
	.short	0xffe0
	.short	0xe
	.short	0xffe0
	.short	0xe
	.short	0xee00
	.short	0x0
	.short	0xffe0
	.short	0xe
	.short	0xffe0
	.short	0xe
	.short	0xee00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xee00
	.short	0x0
	.short	0xffe0
	.short	0xe
	.short	0xffe0
	.short	0xe
	.short	0xee00
	.short	0x0
	.short	0xffe0
	.short	0xe
	.short	0xffe0
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xefe0
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xeee0
	.short	0xe
	.short	0xfffe
	.short	0xef
	.short	0xeee0
	.short	0xe
	.short	0xfffe
	.short	0xef
	.short	0xeee0
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe00
	.short	0x0
	.short	0xefe0
	.short	0x0
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0x0
	.short	0xe00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfee0
	.short	0xeff
	.short	0xe000
	.short	0xee
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xee0
	.short	0xee
	.short	0xeee0
	.short	0x0
	.short	0xfffe
	.short	0xe
	.short	0xfefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0x0
	.short	0xfffe
	.short	0xe
	.short	0xeefe
	.short	0xef
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xeefe
	.short	0xef
	.short	0xfffe
	.short	0xe
	.short	0xeee0
	.short	0x0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xe0
	.short	0x0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xee
	.short	0xeefe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xe0
	.short	0xe000
	.short	0xee
	.short	0xfe00
	.short	0xeff
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xe000
	.short	0xef
	.short	0xfe00
	.short	0xeff
	.short	0xe000
	.short	0xee
	.short	0xe000
	.short	0xee
	.short	0xfe00
	.short	0xeff
	.short	0xe000
	.short	0xef
	.short	0xe0e0
	.short	0xef
	.short	0xeefe
	.short	0xef
	.short	0xeefe
	.short	0xef
	.short	0xfffe
	.short	0xef
	.short	0xeee0
	.short	0xe
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xefe
	.short	0xeefe
	.short	0xef
	.short	0xfefe
	.short	0xe
	.short	0xfffe
	.short	0xe
	.short	0xeefe
	.short	0xef
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xe0
	.short	0xe0
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xeefe
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xefe
	.short	0xeffe
	.short	0xeff
	.short	0xeffe
	.short	0xeff
	.short	0xfefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xe0
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xef0
	.short	0xeffe
	.short	0xef0
	.short	0xfefe
	.short	0xefe
	.short	0xfefe
	.short	0xefe
	.short	0xeefe
	.short	0xeff
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xe0
	.short	0xee00
	.short	0xe
	.short	0xffe0
	.short	0xef
	.short	0xeefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xffe0
	.short	0xef
	.short	0xee00
	.short	0xe
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xee
	.short	0xefe
	.short	0x0
	.short	0xefe
	.short	0x0
	.short	0xe0
	.short	0x0
	.short	0xee00
	.short	0xe
	.short	0xff00
	.short	0xef
	.short	0xeefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xffe0
	.short	0xefff
	.short	0xee00
	.short	0xeee
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xfefe
	.short	0xee
	.short	0xeefe
	.short	0xef
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xe0
	.short	0xee00
	.short	0xe
	.short	0xffe0
	.short	0xef
	.short	0xeefe
	.short	0xe
	.short	0xffe0
	.short	0xef
	.short	0xee00
	.short	0xefe
	.short	0xeee0
	.short	0xefe
	.short	0xfffe
	.short	0xef
	.short	0xeee0
	.short	0xe
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xfee0
	.short	0xee
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xeefe
	.short	0xefe
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe
	.short	0xefe0
	.short	0xef
	.short	0xefe0
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0xe0e0
	.short	0xe0
	.short	0xfefe
	.short	0xefe
	.short	0xfefe
	.short	0xefe
	.short	0xfefe
	.short	0xefe
	.short	0xfefe
	.short	0xefe
	.short	0xfefe
	.short	0xefe
	.short	0xefe0
	.short	0xef
	.short	0xe00
	.short	0xe
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xefe
	.short	0xefe0
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0xef
	.short	0xefe
	.short	0xefe
	.short	0xe0
	.short	0xee0
	.short	0xe0
	.short	0xe0
	.short	0xefe
	.short	0xefe
	.short	0xefe0
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xe000
	.short	0x0
	.short	0xeee0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xef
	.short	0xfe00
	.short	0xe
	.short	0xfe00
	.short	0xe
	.short	0xefe0
	.short	0xee
	.short	0xfffe
	.short	0xeff
	.short	0xeee0
	.short	0xee
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xfff
	.short	0xf00
	.short	0xf00
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xfff
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xf00
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0xf00
	.short	0xf00
	.short	0xff00
	.short	0xfff
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff
	.short	0xf000
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xff00
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xff
	.short	0xf00
	.short	0xf00
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xff00
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff0
	.short	0xf
	.short	0xf0f0
	.short	0xf0
	.short	0xf0f0
	.short	0xf0
	.short	0xf0f0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xf
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xfff0
	.short	0xf
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xfff
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xff
	.short	0xff00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xf
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf000
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0f
	.short	0xf00
	.short	0xf0f
	.short	0xf000
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0xf000
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xf0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0xff00
	.short	0xff
	.short	0xf0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf000
	.short	0xff
	.short	0xff00
	.short	0xf00
	.short	0xff00
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf000
	.short	0xf
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xf0
	.short	0xff00
	.short	0xf
	.short	0xf000
	.short	0xf0
	.short	0xff00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0xf000
	.short	0xf00
	.short	0xf000
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0xf00
	.short	0xf0f
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0xff00
	.short	0xf0f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xfff0
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xfff0
	.short	0xff
	.short	0xf0f
	.short	0xf0f
	.short	0xf00f
	.short	0xf00
	.short	0xfff0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf000
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf00
	.short	0xfff0
	.short	0xf00f
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xf00
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xf0
	.short	0xf0f0
	.short	0xfff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf00
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf0
	.short	0xf000
	.short	0xff
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xfff0
	.short	0xfff
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xff
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf000
	.short	0xf
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xfff
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xfff0
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xfff
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0f0
	.short	0xfff
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0xf0f0
	.short	0x0
	.short	0xf00
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0xff0
	.short	0xf0f
	.short	0xff0
	.short	0xf0f
	.short	0xf0f0
	.short	0xff0
	.short	0xff00
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0xff00
	.short	0xf00
	.short	0xff00
	.short	0xf00
	.short	0xff0
	.short	0xfff0
	.short	0xff0
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xf0f0
	.short	0xffff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0f0
	.short	0xffff
	.short	0xf0f0
	.short	0xf0
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff0
	.short	0x0
	.short	0xf00
	.short	0xff0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0xf0f
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff
	.short	0xff00
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0xff
	.short	0xf000
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xff00
	.short	0xfff
	.short	0xf000
	.short	0xf00
	.short	0xf000
	.short	0xf0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf0
	.short	0xff00
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf0f
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff0
	.short	0xf000
	.short	0xf
	.short	0xff0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xff
	.short	0xf000
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf000
	.short	0xf00
	.short	0xf000
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf00
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xfff0
	.short	0xfff
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xff0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf00
	.short	0xf0
	.short	0xf0f0
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0xf00
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xff
	.short	0xf000
	.short	0xff
	.short	0xf00
	.short	0xf0f
	.short	0xf0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0xff00
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xf
	.short	0xf00
	.short	0xf
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xf0
	.short	0xf0f
	.short	0xf0
	.short	0xf0f
	.short	0xf0
	.short	0xf0f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0xf000
	.short	0xf00
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf
	.short	0xf000
	.short	0xf
	.short	0xff0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0xf000
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0xf00
	.short	0xf000
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf000
	.short	0xf00
	.short	0xf000
	.short	0xf0
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xf00
	.short	0xf
	.short	0xf00
	.short	0xf
	.short	0xf00
	.short	0xf
	.short	0xf00
	.short	0xf0f
	.short	0xf0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf0
	.short	0xfff0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xf0f
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0xfff0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0xf0f0
	.short	0xf00
	.short	0xf0
	.short	0xf0f
	.short	0xf0
	.short	0xf0f
	.short	0xf0f0
	.short	0xf0f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xf00
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0xfff
	.short	0xf0
	.short	0xfff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xff
	.short	0xf0f0
	.short	0xff0
	.short	0xf00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0xff00
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0xf000
	.short	0xf00
	.short	0xff00
	.short	0xfff
	.short	0xfff0
	.short	0xf00
	.short	0xff00
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xff0
	.short	0xfff0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xf00
	.short	0xfff0
	.short	0xf00
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0xff0
	.short	0xf0f
	.short	0xff0
	.short	0xf0f
	.short	0xf0f0
	.short	0xf00
	.short	0xff00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xfff0
	.short	0x0
	.short	0xf00
	.short	0xf00
	.short	0xfff0
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xff0
	.short	0xfff0
	.short	0xff
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xff
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xff
	.short	0xff0
	.short	0xf0f
	.short	0xf0
	.short	0xf0f
	.short	0xf0
	.short	0xf0f
	.short	0xf0f0
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0xff
	.short	0xf0
	.short	0xf0f
	.short	0xff00
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xff
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xfff0
	.short	0xff
	.short	0x0
	.short	0xf00
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0xf000
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0xff
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0xf0f
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xfff0
	.short	0xf0
	.short	0xf00
	.short	0xff
	.short	0xff00
	.short	0xf0
	.short	0xff0
	.short	0xf0
	.short	0xff0
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff00
	.short	0xff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0xff
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0x0
	.short	0xf00
	.short	0xff
	.short	0xff00
	.short	0xf00
	.short	0xff0
	.short	0xf00
	.short	0xff0
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf0f0
	.short	0xf
	.short	0xff0
	.short	0xf0
	.short	0xff0
	.short	0xf0
	.short	0xf0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf000
	.short	0xf0f0
	.short	0xfff0
	.short	0xfff
	.short	0xf000
	.short	0xf00
	.short	0xf000
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0xf0
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0x0
	.short	0xf0ff
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xff00
	.short	0xf0ff
	.short	0xf00
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf0
	.short	0xf0f0
	.short	0xfff0
	.short	0xfff
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xfff0
	.short	0xffff
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xfff0
	.short	0xfff
	.short	0xf00
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xff0
	.short	0xf0f0
	.short	0x0
	.short	0xf0
	.short	0xff0
	.short	0xf0
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xfff0
	.short	0xf0ff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0xf
	.short	0xf0
	.short	0xf0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xfff0
	.short	0xfff
	.short	0xf00
	.short	0xf00
	.short	0xf00
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0xf000
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf0
	.short	0xf0f0
	.short	0xf0
	.short	0xf0
	.short	0xf00
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xff00
	.short	0xf0ff
	.short	0xf00
	.short	0xf0
	.short	0xf0f0
	.short	0xff
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xff00
	.short	0xf0ff
	.short	0x0
	.short	0xf
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xf0f0
	.short	0xfff0
	.short	0xf0f0
	.short	0xf00
	.short	0xf0f0
	.short	0xf00
	.short	0x0
	.short	0xf0
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf0f0
	.short	0xff00
	.short	0xf0ff
	.short	0x0
	.short	0x0
	.short	0xfff0
	.short	0xfff
	.short	0x0
	.short	0xf
	.short	0xf000
	.short	0x0
	.short	0xf00
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sLinkTestFontGfx,8192
	.align	2, 0
	.type	 sBlockRequests,object
sBlockRequests:
	.word	gBlockSendBuffer
	.word	0xc8
	.word	gBlockSendBuffer
	.word	0xc8
	.word	gBlockSendBuffer
	.word	0x64
	.word	gBlockSendBuffer
	.word	0xdc
	.word	gBlockSendBuffer
	.word	0x28
	.size	 sBlockRequests,40
	.align	2, 0
	.type	 sASCIIGameFreakInc,object
	.size	 sASCIIGameFreakInc,15
sASCIIGameFreakInc:
	.ascii	"GameFreak inc.\000"
	.align	2, 0
	.type	 sASCIITestPrint,object
	.size	 sASCIITestPrint,23
sASCIITestPrint:
	.ascii	"TEST PRINT\n"
	.ascii	"P0\n"
	.ascii	"P1\n"
	.ascii	"P2\n"
	.ascii	"P3\000"
	.align	2, 0
	.type	 sLinkErrorBgTemplates,object
	.size	 sLinkErrorBgTemplates,8
sLinkErrorBgTemplates:
	.byte	0xf8
	.byte	0x1
	.space	2
	.byte	0x81
	.byte	0x10
	.space	2
	.align	2, 0
	.type	 sLinkErrorWindowTemplates,object
sLinkErrorWindowTemplates:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x5
	.byte	0xf
	.short	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x1e
	.byte	0x7
	.byte	0xf
	.short	0x98
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0x1e
	.byte	0x7
	.byte	0xf
	.short	0x16a
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sLinkErrorWindowTemplates,32
	.type	 sLinkErrorTextColor,object
sLinkErrorTextColor:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sLinkErrorTextColor,3
.text
	.align	2, 0
	.globl	IsWirelessAdapterConnected
	.type	 IsWirelessAdapterConnected,function
	.thumb_func
IsWirelessAdapterConnected:
	push	{lr}
	ldr	r0, .L6
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L3	@cond_branch
	mov	r0, #0x0
	b	.L5
.L7:
	.align	2, 0
.L6:
	.word	gQuestLogState
.L3:
	bl	SetWirelessCommType1
	bl	InitRFUAPI
	mov	r0, #0x1
	bl	sub_80FB128
	bl	rfu_LMAN_REQBN_softReset_and_checkID
	ldr	r1, .L8
	cmp	r0, r1
	beq	.L4	@cond_branch
	bl	SetWirelessCommType0_Internal
	bl	CloseLink
	bl	RestoreSerialTimer3IntrHandlers
	mov	r0, #0x0
	b	.L5
.L9:
	.align	2, 0
.L8:
	.word	0x8001
.L4:
	bl	rfu_REQ_stopMode
	bl	rfu_waitREQComplete
	mov	r0, #0x1
.L5:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 IsWirelessAdapterConnected,.Lfe1-IsWirelessAdapterConnected
	.align	2, 0
	.globl	Task_DestroySelf
	.type	 Task_DestroySelf,function
	.thumb_func
Task_DestroySelf:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 Task_DestroySelf,.Lfe2-Task_DestroySelf
	.align	2, 0
	.globl	InitLinkTestBG
	.type	 InitLinkTestBG,function
	.thumb_func
InitLinkTestBG:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	ldr	r4, [sp, #0x18]
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L19
	lsl	r1, r5, #0x4
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r3, .L19+0x4
	ldr	r0, .L19+0x8
	str	r0, [r3]
	lsl	r2, r7, #0xe
	lsl	r0, r4, #0x5
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	add	r2, r2, r0
	str	r2, [r3, #0x4]
	ldr	r0, .L19+0xc
	str	r0, [r3, #0x8]
	ldr	r0, [r3, #0x8]
	ldr	r0, .L19+0x10
	str	r6, [r0]
	str	r5, [r0, #0x4]
	str	r4, [r0, #0x8]
	mov	r0, r8
	cmp	r0, #0x2
	beq	.L14	@cond_branch
	cmp	r0, #0x2
	bgt	.L18	@cond_branch
	cmp	r0, #0x1
	beq	.L13	@cond_branch
	b	.L12
.L20:
	.align	2, 0
.L19:
	.word	sLinkTestFontPal
	.word	0x40000d4
	.word	sLinkTestFontGfx
	.word	-0x7ffff000
	.word	gLinkTestBGInfo
.L18:
	mov	r0, r8
	cmp	r0, #0x3
	beq	.L15	@cond_branch
	b	.L12
.L13:
	lsl	r1, r6, #0x8
	mov	r0, #0x1
	orr	r1, r1, r0
	lsl	r0, r7, #0x2
	orr	r1, r1, r0
	mov	r0, #0xa
	bl	SetGpuReg
	b	.L12
.L14:
	lsl	r1, r6, #0x8
	mov	r0, #0x1
	orr	r1, r1, r0
	lsl	r0, r7, #0x2
	orr	r1, r1, r0
	mov	r0, #0xc
	bl	SetGpuReg
	b	.L12
.L15:
	lsl	r1, r6, #0x8
	mov	r0, #0x1
	orr	r1, r1, r0
	lsl	r0, r7, #0x2
	orr	r1, r1, r0
	mov	r0, #0xe
	bl	SetGpuReg
.L12:
	mov	r0, r8
	lsl	r4, r0, #0x2
	add	r0, r4, #0
	add	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	add	r4, r4, #0x12
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 InitLinkTestBG,.Lfe3-InitLinkTestBG
	.align	2, 0
	.type	 LoadLinkTestBgGfx,function
	.thumb_func
LoadLinkTestBgGfx:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	mov	r8, r0
	add	r6, r1, #0
	add	r4, r2, #0
	add	r5, r3, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L22
	mov	r2, r8
	lsl	r1, r2, #0x4
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r2, .L22+0x4
	ldr	r0, .L22+0x8
	str	r0, [r2]
	lsl	r0, r5, #0xe
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	str	r0, [r2, #0x4]
	ldr	r0, .L22+0xc
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	ldr	r0, .L22+0x10
	str	r4, [r0]
	mov	r1, r8
	str	r1, [r0, #0x4]
	mov	r1, #0x0
	str	r1, [r0, #0x8]
	ldr	r0, .L22+0x14
	add	r6, r6, r0
	ldrb	r0, [r6]
	lsl	r4, r4, #0x8
	lsl	r5, r5, #0x2
	orr	r4, r4, r5
	add	r1, r4, #0
	bl	SetGpuReg
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	sLinkTestFontPal
	.word	0x40000d4
	.word	sLinkTestFontGfx
	.word	-0x7ffff000
	.word	gLinkTestBGInfo
	.word	gBGControlRegOffsets
.Lfe4:
	.size	 LoadLinkTestBgGfx,.Lfe4-LoadLinkTestBgGfx
	.align	2, 0
	.type	 LinkTestScreen,function
	.thumb_func
LinkTestScreen:
	push	{r4, lr}
	add	sp, sp, #-0x4
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L30
	bl	SetVBlankCallback
	bl	ResetBlockSend
	ldr	r1, .L30+0x4
	ldr	r2, .L30+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	bl	OpenLink
	ldr	r0, .L30+0xc
	ldrh	r0, [r0, #0x24]
	bl	SeedRng
	mov	r4, #0x0
.L28:
	bl	Random
	ldr	r1, .L30+0x10
	ldr	r1, [r1]
	add	r1, r1, #0xa
	add	r1, r1, r4
	strb	r0, [r1]
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L28	@cond_branch
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r2, #0x4
	mov	r3, #0x0
	bl	InitLinkTestBG
	mov	r1, #0xaa
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	ldr	r0, .L30+0x14
	mov	r1, #0x0
	bl	CreateTask
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	ldr	r0, .L30+0x18
	str	r4, [r0]
	bl	InitLocalLinkPlayer
	ldr	r0, .L30+0x1c
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L30+0x20
	bl	SetMainCallback2
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L31:
	.align	2, 0
.L30:
	.word	VBlankCB_LinkError
	.word	gLinkType
	.word	0x1111
	.word	gMain
	.word	gSaveBlock2Ptr
	.word	Task_DestroySelf
	.word	sDummy3
	.word	Task_PrintTestData
	.word	CB2_LinkTest
.Lfe5:
	.size	 LinkTestScreen,.Lfe5-LinkTestScreen
	.align	2, 0
	.globl	SetLocalLinkPlayerId
	.type	 SetLocalLinkPlayerId,function
	.thumb_func
SetLocalLinkPlayerId:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L33
	strh	r0, [r1, #0x18]
	bx	lr
.L34:
	.align	2, 0
.L33:
	.word	gLocalLinkPlayer
.Lfe6:
	.size	 SetLocalLinkPlayerId,.Lfe6-SetLocalLinkPlayerId
	.align	2, 0
	.type	 InitLocalLinkPlayer,function
	.thumb_func
InitLocalLinkPlayer:
	push	{r4, r5, lr}
	ldr	r5, .L37
	ldr	r4, .L37+0x4
	ldr	r1, [r4]
	ldrb	r2, [r1, #0xa]
	ldrb	r0, [r1, #0xb]
	lsl	r0, r0, #0x8
	orr	r2, r2, r0
	ldrb	r0, [r1, #0xc]
	lsl	r0, r0, #0x10
	orr	r2, r2, r0
	ldrb	r0, [r1, #0xd]
	lsl	r0, r0, #0x18
	orr	r2, r2, r0
	str	r2, [r5, #0x4]
	add	r0, r5, #0
	add	r0, r0, #0x8
	bl	StringCopy
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x8]
	strb	r0, [r5, #0x13]
	ldr	r0, .L37+0x8
	ldrh	r0, [r0]
	str	r0, [r5, #0x14]
	ldr	r0, .L37+0xc
	ldrb	r0, [r0]
	strh	r0, [r5, #0x1a]
	ldr	r0, .L37+0x10
	ldrb	r0, [r0]
	mov	r2, #0x80
	lsl	r2, r2, #0x7
	add	r1, r2, #0
	add	r0, r0, r1
	strh	r0, [r5]
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	strh	r0, [r5, #0x2]
	bl	IsNationalPokedexEnabled
	strb	r0, [r5, #0x10]
	ldr	r0, .L37+0x14
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L36	@cond_branch
	ldrb	r0, [r5, #0x10]
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r5, #0x10]
.L36:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	gLocalLinkPlayer
	.word	gSaveBlock2Ptr
	.word	gLinkType
	.word	gGameLanguage
	.word	gGameVersion
	.word	0x844
.Lfe7:
	.size	 InitLocalLinkPlayer,.Lfe7-InitLocalLinkPlayer
	.align	2, 0
	.type	 VBlankCB_LinkError,function
	.thumb_func
VBlankCB_LinkError:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 VBlankCB_LinkError,.Lfe8-VBlankCB_LinkError
	.align	2, 0
	.globl	InitLink
	.type	 InitLink,function
	.thumb_func
InitLink:
	push	{lr}
	ldr	r3, .L46
	ldr	r1, .L46+0x4
	ldr	r2, .L46+0x8
	add	r0, r1, #0
	add	r0, r0, #0xe
.L44:
	strh	r2, [r0]
	sub	r0, r0, #0x2
	cmp	r0, r1
	bge	.L44	@cond_branch
	mov	r0, #0x1
	strb	r0, [r3]
	bl	EnableSerial
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	sLinkOpen
	.word	gSendCmd
	.word	0xefff
.Lfe9:
	.size	 InitLink,.Lfe9-InitLink
	.align	2, 0
	.globl	Task_TriggerHandshake
	.type	 Task_TriggerHandshake,function
	.thumb_func
Task_TriggerHandshake:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L50
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5
	bne	.L49	@cond_branch
	ldr	r1, .L50+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	add	r0, r2, #0
	bl	DestroyTask
.L49:
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	gTasks
	.word	gShouldAdvanceLinkState
.Lfe10:
	.size	 Task_TriggerHandshake,.Lfe10-Task_TriggerHandshake
	.align	2, 0
	.globl	OpenLink
	.type	 OpenLink,function
	.thumb_func
OpenLink:
	push	{r4, r5, r6, lr}
	ldr	r0, .L60
	ldrb	r4, [r0]
	cmp	r4, #0
	bne	.L53	@cond_branch
	bl	ResetSerial
	bl	InitLink
	ldr	r1, .L60+0x4
	ldr	r0, .L60+0x8
	str	r0, [r1]
	ldr	r0, .L60+0xc
	strb	r4, [r0]
	ldr	r0, .L60+0x10
	strb	r4, [r0]
	ldr	r0, .L60+0x14
	strb	r4, [r0]
	bl	ResetBlockReceivedFlags
	bl	ResetBlockSend
	ldr	r0, .L60+0x18
	str	r4, [r0]
	ldr	r0, .L60+0x1c
	strb	r4, [r0]
	ldr	r0, .L60+0x20
	strb	r4, [r0]
	ldr	r0, .L60+0x24
	strh	r4, [r0]
	ldr	r0, .L60+0x28
	mov	r1, #0x2
	bl	CreateTask
	b	.L54
.L61:
	.align	2, 0
.L60:
	.word	gWirelessCommType
	.word	gLinkCallback
	.word	LinkCB_RequestPlayerDataExchange
	.word	gLinkVSyncDisabled
	.word	gLinkErrorOccurred
	.word	gSuppressLinkErrorMessage
	.word	sDummy1
	.word	gLinkDummy2
	.word	gLinkDummy1
	.word	gReadyCloseLinkType
	.word	Task_TriggerHandshake
.L53:
	bl	InitRFUAPI
.L54:
	ldr	r1, .L62
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r1, #0x0
	ldr	r6, .L62+0x4
	mov	r2, #0x0
	mov	r5, #0x1
	ldr	r4, .L62+0x8
	ldr	r3, .L62+0xc
.L58:
	add	r0, r1, r6
	strb	r5, [r0]
	add	r0, r1, r4
	strb	r2, [r0]
	add	r0, r1, r3
	strb	r2, [r0]
	add	r1, r1, #0x1
	cmp	r1, #0x3
	ble	.L58	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	gReceivedRemoteLinkPlayers
	.word	gRemoteLinkPlayersNotReceived
	.word	gReadyToCloseLink
	.word	gReadyToExitStandby
.Lfe11:
	.size	 OpenLink,.Lfe11-OpenLink
	.align	2, 0
	.globl	CloseLink
	.type	 CloseLink,function
	.thumb_func
CloseLink:
	push	{r4, lr}
	ldr	r0, .L66
	mov	r4, #0x0
	strb	r4, [r0]
	ldr	r0, .L66+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L65	@cond_branch
	bl	LinkRfu_Shutdown
.L65:
	ldr	r0, .L66+0x8
	strb	r4, [r0]
	bl	DisableSerial
	pop	{r4}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	sLinkOpen
.Lfe12:
	.size	 CloseLink,.Lfe12-CloseLink
	.align	2, 0
	.type	 TestBlockTransfer,function
	.thumb_func
TestBlockTransfer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r5, .L84
	ldr	r4, .L84+0x4
	ldrb	r0, [r5]
	ldrh	r1, [r4]
	cmp	r0, r1
	beq	.L69	@cond_branch
	ldrh	r0, [r4]
	mov	r1, #0x2
	mov	r2, #0x3
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	ldrh	r0, [r4]
	strb	r0, [r5]
.L69:
	mov	r5, #0x0
	ldr	r7, .L84+0x8
.L73:
	ldr	r0, .L84+0xc
	add	r6, r5, r0
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r4, r0, r7
	ldrb	r0, [r6]
	ldrh	r1, [r4]
	cmp	r0, r1
	beq	.L72	@cond_branch
	ldrh	r0, [r4]
	add	r2, r5, #0x4
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, #0x2
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	ldrh	r0, [r4]
	strb	r0, [r6]
.L72:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L73	@cond_branch
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xf
	bne	.L76	@cond_branch
	mov	r5, #0x0
	ldr	r0, .L84+0x8
	mov	r9, r0
	ldr	r1, .L84+0x10
	mov	r8, r1
.L80:
	add	r0, r7, #0
	asr	r0, r0, r5
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L79	@cond_branch
	lsl	r0, r5, #0x8
	ldr	r1, .L84+0x14
	add	r0, r0, r1
	lsl	r4, r5, #0x1
	add	r1, r4, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r9
	ldrh	r1, [r1, #0x2]
	bl	LinkTestCalcBlockChecksum
	ldr	r1, .L84+0x18
	add	r4, r4, r1
	mov	r6, #0x0
	strh	r0, [r4]
	add	r0, r5, #0
	bl	ResetBlockReceivedFlag
	ldrh	r0, [r4]
	cmp	r0, r8
	beq	.L79	@cond_branch
	ldr	r0, .L84+0x1c
	strb	r6, [r0]
	ldr	r0, .L84+0x20
	strb	r6, [r0]
.L79:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L80	@cond_branch
.L76:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L85:
	.align	2, 0
.L84:
	.word	sLinkTestLastBlockSendPos
	.word	sBlockSend
	.word	sBlockRecv
	.word	sLinkTestLastBlockRecvPos
	.word	0x342
	.word	gBlockRecvBuffer
	.word	gLinkTestBlockChecksums
	.word	sLinkTestDebugValuesEnabled
	.word	sDummyFlag
.Lfe13:
	.size	 TestBlockTransfer,.Lfe13-TestBlockTransfer
	.align	2, 0
	.type	 LinkTestProcessKeyInput,function
	.thumb_func
LinkTestProcessKeyInput:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L95
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L87	@cond_branch
	ldr	r1, .L95+0x4
	mov	r0, #0x1
	strb	r0, [r1]
.L87:
	ldrh	r1, [r4, #0x2c]
	mov	r5, #0x2
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L88	@cond_branch
	ldr	r0, .L95+0x8
	ldr	r1, .L95+0xc
	bl	InitBlockSend
.L88:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L89	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L89:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L90	@cond_branch
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
.L90:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L91	@cond_branch
	mov	r0, #0x1
	bl	TrySavingData
.L91:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L92	@cond_branch
	bl	SetCloseLinkCallback
.L92:
	ldr	r0, .L95+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L93	@cond_branch
	ldr	r2, [r4, #0x24]
	ldr	r0, .L95+0x14
	ldrb	r1, [r0]
	ldr	r0, .L95+0x18
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L94	@cond_branch
	mov	r0, #0x10
	orr	r1, r1, r0
.L94:
	add	r0, r2, #0
	bl	SetLinkDebugValues
.L93:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L96:
	.align	2, 0
.L95:
	.word	gMain
	.word	gShouldAdvanceLinkState
	.word	gHeap+0x4000
	.word	0x2004
	.word	sLinkTestDebugValuesEnabled
	.word	gLinkVSyncDisabled
	.word	gLinkCallback
.Lfe14:
	.size	 LinkTestProcessKeyInput,.Lfe14-LinkTestProcessKeyInput
	.align	2, 0
	.type	 CB2_LinkTest,function
	.thumb_func
CB2_LinkTest:
	push	{lr}
	bl	LinkTestProcessKeyInput
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	TestBlockTransfer
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 CB2_LinkTest,.Lfe15-CB2_LinkTest
	.align	2, 0
	.globl	LinkMain2
	.type	 LinkMain2,function
	.thumb_func
LinkMain2:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r0, .L108
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L99	@cond_branch
	mov	r0, #0x0
	b	.L107
.L109:
	.align	2, 0
.L108:
	.word	sLinkOpen
.L99:
	mov	r1, #0x0
	ldr	r5, .L110
	ldr	r3, .L110+0x4
	mov	r2, #0x0
.L103:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x7
	bls	.L103	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r5]
	ldr	r0, .L110+0x8
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L105	@cond_branch
	ldr	r0, .L110+0xc
	ldr	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	bl	ProcessRecvCmds
	ldr	r0, .L110+0x10
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L106	@cond_branch
	bl	_call_via_r0
.L106:
	bl	CheckErrorStatus
.L105:
	ldr	r0, .L110+0x8
	ldrh	r0, [r0]
.L107:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L111:
	.align	2, 0
.L110:
	.word	gLinkHeldKeys
	.word	gSendCmd
	.word	gLinkStatus
	.word	0x4000128
	.word	gLinkCallback
.Lfe16:
	.size	 LinkMain2,.Lfe16-LinkMain2
	.align	2, 0
	.type	 HandleReceiveRemoteLinkPlayer,function
	.thumb_func
HandleReceiveRemoteLinkPlayer:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x0
	ldr	r1, .L119
	add	r0, r0, r1
	strb	r5, [r0]
	mov	r4, #0x0
	add	r6, r1, #0
	b	.L113
.L120:
	.align	2, 0
.L119:
	.word	gRemoteLinkPlayersNotReceived
.L116:
	add	r0, r4, r6
	ldrb	r0, [r0]
	add	r5, r5, r0
	add	r4, r4, #0x1
.L113:
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L116	@cond_branch
	cmp	r5, #0
	bne	.L118	@cond_branch
	ldr	r1, .L121
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L118	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
.L118:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L122:
	.align	2, 0
.L121:
	.word	gReceivedRemoteLinkPlayers
.Lfe17:
	.size	 HandleReceiveRemoteLinkPlayer,.Lfe17-HandleReceiveRemoteLinkPlayer
	.align	2, 0
	.type	 ProcessRecvCmds,function
	.thumb_func
ProcessRecvCmds:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r6, #0x0
.L127:
	ldr	r0, .L167
	lsl	r1, r6, #0x1
	add	r3, r1, r0
	mov	r0, #0x0
	strh	r0, [r3]
	lsl	r4, r6, #0x4
	ldr	r5, .L167+0x4
	add	r2, r4, r5
	ldrh	r0, [r2]
	mov	ip, r1
	add	r7, r6, #0x1
	str	r7, [sp]
	cmp	r0, #0
	bne	.LCB1203
	b	.L126	@long jump
.LCB1203:
	ldrh	r1, [r2]
	ldr	r0, .L167+0x8
	cmp	r1, r0
	bne	.LCB1208
	b	.L155	@long jump
.LCB1208:
	cmp	r1, r0
	bgt	.L162	@cond_branch
	ldr	r0, .L167+0xc
	cmp	r1, r0
	bne	.LCB1213
	b	.L159	@long jump
.LCB1213:
	cmp	r1, r0
	bgt	.L163	@cond_branch
	ldr	r0, .L167+0x10
	cmp	r1, r0
	beq	.L130	@cond_branch
	ldr	r0, .L167+0x14
	cmp	r1, r0
	bne	.LCB1221
	b	.L156	@long jump
.LCB1221:
	b	.L126
.L168:
	.align	2, 0
.L167:
	.word	gLinkPartnersHeldKeys
	.word	gRecvCmds
	.word	0x5fff
	.word	0x4444
	.word	0x2222
	.word	0x2ffe
.L163:
	ldr	r0, .L169
	cmp	r1, r0
	beq	.L132	@cond_branch
	add	r0, r0, #0x11
	cmp	r1, r0
	beq	.L133	@cond_branch
	b	.L126
.L170:
	.align	2, 0
.L169:
	.word	0x5555
.L162:
	ldr	r0, .L171
	cmp	r1, r0
	beq	.L134	@cond_branch
	cmp	r1, r0
	bgt	.L164	@cond_branch
	ldr	r0, .L171+0x4
	cmp	r1, r0
	beq	.L135	@cond_branch
	ldr	r0, .L171+0x8
	cmp	r1, r0
	bne	.LCB1263
	b	.L157	@long jump
.LCB1263:
	b	.L126
.L172:
	.align	2, 0
.L171:
	.word	0xbbbb
	.word	0x8888
	.word	0xaaaa
.L164:
	ldr	r0, .L173
	cmp	r1, r0
	bne	.LCB1278
	b	.L159	@long jump
.LCB1278:
	ldr	r0, .L173+0x4
	cmp	r1, r0
	bne	.LCB1281
	b	.L158	@long jump
.LCB1281:
	b	.L126
.L174:
	.align	2, 0
.L173:
	.word	0xcafe
	.word	0xcccc
.L130:
	bl	InitLocalLinkPlayer
	ldr	r0, .L175
	add	r2, r0, #0
	add	r2, r2, #0x10
	ldr	r1, .L175+0x4
	ldmia	r1!, {r3, r4, r5}
	stmia	r2!, {r3, r4, r5}
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldr	r1, [r1]
	str	r1, [r2]
	ldr	r4, .L175+0x8
	add	r2, r0, #0
	add	r1, r4, #0
	ldmia	r1!, {r5, r6, r7}
	stmia	r2!, {r5, r6, r7}
	ldrh	r3, [r1]
	strh	r3, [r2]
	ldrb	r1, [r1, #0x2]
	strb	r1, [r2, #0x2]
	add	r1, r0, #0
	add	r1, r1, #0x2c
	ldmia	r4!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldrh	r2, [r4]
	strh	r2, [r1]
	ldrb	r2, [r4, #0x2]
	strb	r2, [r1, #0x2]
	mov	r1, #0x3c
	bl	InitBlockSend
	b	.L126
.L176:
	.align	2, 0
.L175:
	.word	gLocalLinkPlayerBlock
	.word	gLocalLinkPlayer
	.word	sASCIIGameFreakInc
.L132:
.L133:
	ldr	r1, .L177
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L126
.L178:
	.align	2, 0
.L177:
	.word	gLinkDummy2
.L134:
	mov	r7, ip
	add	r1, r7, r6
	lsl	r1, r1, #0x2
	ldr	r0, .L179
	add	r1, r1, r0
	mov	r2, #0x0
	strh	r2, [r1]
	ldr	r0, .L179+0x4
	add	r0, r0, #0x2
	add	r0, r4, r0
	ldrh	r0, [r0]
	strh	r0, [r1, #0x2]
	ldr	r0, .L179+0x4
	add	r0, r0, #0x4
	add	r0, r4, r0
	ldrh	r0, [r0]
	strb	r0, [r1, #0x9]
	b	.L126
.L180:
	.align	2, 0
.L179:
	.word	sBlockRecv
	.word	gRecvCmds
.L135:
	mov	r3, ip
	add	r0, r3, r6
	lsl	r0, r0, #0x2
	ldr	r5, .L181
	add	r3, r0, r5
	ldrh	r1, [r3, #0x2]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r7, r5, #0
	mov	sl, r7
	cmp	r1, r0
	bls	.L136	@cond_branch
	ldr	r0, .L181+0x4
	mov	r8, r0
	mov	r2, #0x0
	add	r5, r3, #0
	ldr	r7, .L181+0x8
	add	r3, r4, #0
.L140:
	ldrh	r1, [r5]
	lsr	r1, r1, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r8
	add	r2, r2, #0x1
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	add	r0, r0, r7
	ldrh	r0, [r0]
	strh	r0, [r1]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	cmp	r2, #0x6
	bls	.L140	@cond_branch
	b	.L142
.L182:
	.align	2, 0
.L181:
	.word	sBlockRecv
	.word	gDecompressionBuffer
	.word	gRecvCmds
.L136:
	mov	r2, #0x0
	ldr	r1, .L183
	mov	r9, r1
	add	r7, r3, #0
	ldr	r3, .L183+0x4
	mov	r8, r3
	lsl	r5, r6, #0x8
	add	r3, r4, #0
.L146:
	ldrh	r1, [r7]
	lsr	r1, r1, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r5
	add	r1, r1, r9
	add	r2, r2, #0x1
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	add	r0, r0, r8
	ldrh	r0, [r0]
	strh	r0, [r1]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	cmp	r2, #0x6
	bls	.L146	@cond_branch
.L142:
	mov	r4, ip
	add	r1, r4, r6
	lsl	r1, r1, #0x2
	add	r1, r1, sl
	ldrh	r0, [r1]
	add	r0, r0, #0xe
	mov	r3, #0x0
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r1, #0x2]
	cmp	r0, r1
	bcc	.L126	@cond_branch
	ldr	r0, .L183+0x8
	add	r0, r6, r0
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L149	@cond_branch
	lsl	r1, r6, #0x8
	ldr	r0, .L183
	add	r1, r1, r0
	mov	r8, r1
	lsl	r0, r6, #0x3
	sub	r0, r0, r6
	lsl	r0, r0, #0x2
	ldr	r1, .L183+0xc
	add	r2, r0, r1
	add	r1, r2, #0
	mov	r0, r8
	add	r0, r0, #0x10
	ldmia	r0!, {r4, r5, r7}
	stmia	r1!, {r4, r5, r7}
	ldmia	r0!, {r4, r5, r7}
	stmia	r1!, {r4, r5, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L150	@cond_branch
	strb	r3, [r2, #0x12]
	strb	r3, [r2, #0x11]
	strb	r3, [r2, #0x10]
.L150:
	add	r0, r2, #0
	bl	ConvertLinkPlayerName
	ldr	r5, .L183+0x10
	mov	r0, r8
	add	r1, r5, #0
	bl	strcmp
	cmp	r0, #0
	bne	.L152	@cond_branch
	mov	r0, r8
	add	r0, r0, #0x2c
	add	r1, r5, #0
	bl	strcmp
	cmp	r0, #0
	beq	.L151	@cond_branch
.L152:
	ldr	r0, .L183+0x14
	bl	SetMainCallback2
	b	.L126
.L184:
	.align	2, 0
.L183:
	.word	gBlockRecvBuffer
	.word	gRecvCmds
	.word	gRemoteLinkPlayersNotReceived
	.word	gLinkPlayers
	.word	sASCIIGameFreakInc
	.word	CB2_LinkError
.L151:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	bl	HandleReceiveRemoteLinkPlayer
	b	.L126
.L149:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	bl	SetBlockReceivedFlag
	b	.L126
.L155:
	ldr	r0, .L185
	b	.L166
.L186:
	.align	2, 0
.L185:
	.word	gReadyToCloseLink
.L156:
	ldr	r0, .L187
.L166:
	add	r0, r6, r0
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L126
.L188:
	.align	2, 0
.L187:
	.word	gReadyToExitStandby
.L157:
	bl	SetBerryBlenderLinkCallback
	b	.L126
.L158:
	ldr	r3, .L189
	ldr	r0, .L189+0x4
	add	r0, r0, #0x2
	add	r0, r4, r0
	ldrh	r2, [r0]
	lsl	r2, r2, #0x3
	add	r0, r2, r3
	ldr	r1, [r0]
	add	r3, r3, #0x4
	add	r2, r2, r3
	ldrh	r2, [r2]
	mov	r0, #0x0
	bl	SendBlock
	b	.L126
.L190:
	.align	2, 0
.L189:
	.word	sBlockRequests
	.word	gRecvCmds
.L159:
	ldr	r0, .L191
	add	r0, r0, #0x2
	add	r0, r4, r0
	ldrh	r0, [r0]
	strh	r0, [r3]
.L126:
	ldr	r5, [sp]
	lsl	r0, r5, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bhi	.LCB1671
	b	.L127	@long jump
.LCB1671:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	gRecvCmds
.Lfe18:
	.size	 ProcessRecvCmds,.Lfe18-ProcessRecvCmds
	.align	2, 0
	.globl	BuildSendCmd
	.type	 BuildSendCmd,function
	.thumb_func
BuildSendCmd:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L225
	cmp	r2, r0
	beq	.L199	@cond_branch
	cmp	r2, r0
	bgt	.L217	@cond_branch
	ldr	r0, .L225+0x4
	cmp	r2, r0
	beq	.L197	@cond_branch
	cmp	r2, r0
	bgt	.L218	@cond_branch
	ldr	r0, .L225+0x8
	cmp	r2, r0
	beq	.L195	@cond_branch
	ldr	r0, .L225+0xc
.L224:
	cmp	r2, r0
	bne	.LCB1711
	b	.L211	@long jump
.LCB1711:
	b	.L194
.L226:
	.align	2, 0
.L225:
	.word	0x6666
	.word	0x4444
	.word	0x2222
	.word	0x2ffe
.L218:
	ldr	r0, .L227
	cmp	r2, r0
	bne	.LCB1726
	b	.L211	@long jump
.LCB1726:
	cmp	r2, r0
	bgt	.L219	@cond_branch
	sub	r0, r0, #0x11
	b	.L224
.L228:
	.align	2, 0
.L227:
	.word	0x5566
.L219:
	ldr	r0, .L229
	cmp	r2, r0
	bne	.LCB1741
	b	.L210	@long jump
.LCB1741:
	b	.L194
.L230:
	.align	2, 0
.L229:
	.word	0x5fff
.L217:
	ldr	r0, .L231
	cmp	r2, r0
	beq	.L208	@cond_branch
	cmp	r2, r0
	bgt	.L220	@cond_branch
	ldr	r0, .L231+0x4
	cmp	r2, r0
	beq	.L200	@cond_branch
	ldr	r0, .L231+0x8
	b	.L224
.L232:
	.align	2, 0
.L231:
	.word	0xaaab
	.word	0x7777
	.word	0xaaaa
.L220:
	ldr	r0, .L233
	cmp	r2, r0
	beq	.L212	@cond_branch
	cmp	r2, r0
	bgt	.L221	@cond_branch
	ldr	r0, .L233+0x4
	cmp	r2, r0
	beq	.L206	@cond_branch
	b	.L194
.L234:
	.align	2, 0
.L233:
	.word	0xcafe
	.word	0xbbbb
.L221:
	ldr	r0, .L235
	cmp	r2, r0
	beq	.L209	@cond_branch
	b	.L194
.L236:
	.align	2, 0
.L235:
	.word	0xcccc
.L195:
	ldr	r0, .L237
	strh	r2, [r0]
	ldr	r1, .L237+0x4
	ldrh	r1, [r1]
	b	.L222
.L238:
	.align	2, 0
.L237:
	.word	gSendCmd
	.word	gLinkType
.L197:
	ldr	r0, .L239
	strh	r2, [r0]
	ldr	r1, .L239+0x4
	ldrh	r1, [r1, #0x2c]
	b	.L222
.L240:
	.align	2, 0
.L239:
	.word	gSendCmd
	.word	gMain
.L199:
	ldr	r0, .L241
	mov	r1, #0x0
	b	.L223
.L242:
	.align	2, 0
.L241:
	.word	gSendCmd
.L200:
	ldr	r0, .L243
	strh	r2, [r0]
	mov	r1, #0x0
	add	r3, r0, #0
	mov	r2, #0xee
.L204:
	add	r1, r1, #0x1
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x4
	bls	.L204	@cond_branch
	b	.L194
.L244:
	.align	2, 0
.L243:
	.word	gSendCmd
.L206:
	ldr	r1, .L245
	strh	r2, [r1]
	ldr	r2, .L245+0x4
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1, #0x2]
	ldrb	r0, [r2, #0x9]
	add	r0, r0, #0x80
	strh	r0, [r1, #0x4]
	b	.L194
.L246:
	.align	2, 0
.L245:
	.word	gSendCmd
	.word	sBlockSend
.L208:
	ldr	r0, .L247
	strh	r2, [r0]
	ldr	r1, .L247+0x4
	ldrh	r1, [r1]
	b	.L222
.L248:
	.align	2, 0
.L247:
	.word	gSendCmd
	.word	gSpecialVar_ItemId
.L209:
	ldr	r0, .L249
	strh	r2, [r0]
	ldr	r1, .L249+0x4
	ldrb	r1, [r1]
	b	.L222
.L250:
	.align	2, 0
.L249:
	.word	gSendCmd
	.word	gBlockRequestType
.L210:
	ldr	r0, .L251
	strh	r2, [r0]
	ldr	r1, .L251+0x4
	ldrh	r1, [r1]
	b	.L222
.L252:
	.align	2, 0
.L251:
	.word	gSendCmd
	.word	gReadyCloseLinkType
.L211:
	ldr	r0, .L253
	strh	r2, [r0]
	b	.L194
.L254:
	.align	2, 0
.L253:
	.word	gSendCmd
.L212:
	ldr	r0, .L255
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L194	@cond_branch
	ldr	r0, .L255+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L194	@cond_branch
	ldr	r0, .L255+0x8
.L223:
	strh	r2, [r0]
.L222:
	strh	r1, [r0, #0x2]
.L194:
	pop	{r0}
	bx	r0
.L256:
	.align	2, 0
.L255:
	.word	gHeldKeyCodeToSend
	.word	gLinkTransferringData
	.word	gSendCmd
.Lfe19:
	.size	 BuildSendCmd,.Lfe19-BuildSendCmd
	.align	2, 0
	.globl	StartSendingKeysToLink
	.type	 StartSendingKeysToLink,function
	.thumb_func
StartSendingKeysToLink:
	push	{lr}
	ldr	r0, .L259
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L258	@cond_branch
	bl	StartSendingKeysToRfu
.L258:
	ldr	r1, .L259+0x4
	ldr	r0, .L259+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gWirelessCommType
	.word	gLinkCallback
	.word	LinkCB_SendHeldKeys
.Lfe20:
	.size	 StartSendingKeysToLink,.Lfe20-StartSendingKeysToLink
	.align	2, 0
	.globl	IsSendingKeysToLink
	.type	 IsSendingKeysToLink,function
	.thumb_func
IsSendingKeysToLink:
	push	{lr}
	ldr	r0, .L265
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L262	@cond_branch
	bl	IsSendingKeysToRfu
	b	.L264
.L266:
	.align	2, 0
.L265:
	.word	gWirelessCommType
.L262:
	ldr	r0, .L267
	ldr	r1, [r0]
	ldr	r0, .L267+0x4
	cmp	r1, r0
	beq	.L263	@cond_branch
	mov	r0, #0x0
	b	.L264
.L268:
	.align	2, 0
.L267:
	.word	gLinkCallback
	.word	LinkCB_SendHeldKeys
.L263:
	mov	r0, #0x1
.L264:
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 IsSendingKeysToLink,.Lfe21-IsSendingKeysToLink
	.align	2, 0
	.type	 LinkCB_SendHeldKeys,function
	.thumb_func
LinkCB_SendHeldKeys:
	push	{lr}
	ldr	r0, .L271
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L270	@cond_branch
	ldr	r0, .L271+0x4
	bl	BuildSendCmd
.L270:
	pop	{r0}
	bx	r0
.L272:
	.align	2, 0
.L271:
	.word	gReceivedRemoteLinkPlayers
	.word	0xcafe
.Lfe22:
	.size	 LinkCB_SendHeldKeys,.Lfe22-LinkCB_SendHeldKeys
	.align	2, 0
	.globl	ClearLinkCallback
	.type	 ClearLinkCallback,function
	.thumb_func
ClearLinkCallback:
	ldr	r1, .L274
	mov	r0, #0x0
	str	r0, [r1]
	bx	lr
.L275:
	.align	2, 0
.L274:
	.word	gLinkCallback
.Lfe23:
	.size	 ClearLinkCallback,.Lfe23-ClearLinkCallback
	.align	2, 0
	.globl	ClearLinkCallback_2
	.type	 ClearLinkCallback_2,function
	.thumb_func
ClearLinkCallback_2:
	push	{lr}
	ldr	r0, .L279
	ldrb	r1, [r0]
	cmp	r1, #0
	beq	.L277	@cond_branch
	bl	ClearLinkRfuCallback
	b	.L278
.L280:
	.align	2, 0
.L279:
	.word	gWirelessCommType
.L277:
	ldr	r0, .L281
	str	r1, [r0]
.L278:
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gLinkCallback
.Lfe24:
	.size	 ClearLinkCallback_2,.Lfe24-ClearLinkCallback_2
	.align	2, 0
	.globl	GetLinkPlayerCount
	.type	 GetLinkPlayerCount,function
	.thumb_func
GetLinkPlayerCount:
	push	{lr}
	ldr	r0, .L287
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L284	@cond_branch
	ldr	r0, .L287+0x4
	ldr	r0, [r0]
	mov	r1, #0x1c
	and	r0, r0, r1
	lsr	r0, r0, #0x2
	b	.L286
.L288:
	.align	2, 0
.L287:
	.word	gWirelessCommType
	.word	gLinkStatus
.L284:
	bl	GetRfuPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L286:
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 GetLinkPlayerCount,.Lfe25-GetLinkPlayerCount
	.align	2, 0
	.globl	OpenLinkTimed
	.type	 OpenLinkTimed,function
	.thumb_func
OpenLinkTimed:
	push	{lr}
	ldr	r0, .L290
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L290+0x4
	strh	r1, [r0]
	bl	OpenLink
	pop	{r0}
	bx	r0
.L291:
	.align	2, 0
.L290:
	.word	sPlayerDataExchangeStatus
	.word	sTimeOutCounter
.Lfe26:
	.size	 OpenLinkTimed,.Lfe26-OpenLinkTimed
	.align	2, 0
	.globl	GetLinkPlayerDataExchangeStatusTimed
	.type	 GetLinkPlayerDataExchangeStatusTimed,function
	.thumb_func
GetLinkPlayerDataExchangeStatusTimed:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r7, #0x0
	ldr	r0, .L320
	ldrb	r4, [r0]
	cmp	r4, #0x1
	bne	.L293	@cond_branch
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bgt	.L295	@cond_branch
	cmp	r0, r6
	ble	.L294	@cond_branch
.L295:
	ldr	r1, .L320+0x4
	mov	r0, #0x6
	str	r0, [r1]
	b	.L318
.L321:
	.align	2, 0
.L320:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerDataExchangeStatus
.L294:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L297	@cond_branch
	ldr	r0, .L322
	strb	r4, [r0]
	bl	CloseLink
.L297:
	mov	r6, #0x0
	ldr	r4, .L322+0x4
	mov	r5, #0x0
	b	.L298
.L323:
	.align	2, 0
.L322:
	.word	gLinkErrorOccurred
	.word	gLinkPlayers
.L301:
	add	r0, r4, #0
	add	r0, r0, #0x14
	add	r0, r5, r0
	ldr	r1, [r0]
	ldr	r0, [r4, #0x14]
	cmp	r1, r0
	bne	.L300	@cond_branch
	add	r7, r7, #0x1
.L300:
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
.L298:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	blt	.L301	@cond_branch
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r7, r0
	bne	.L304	@cond_branch
	ldr	r0, .L324
	ldr	r1, [r0, #0x14]
	ldr	r0, .L324+0x4
	cmp	r1, r0
	bne	.L305	@cond_branch
	bl	Trade_CalcLinkPlayerCompatibilityParam
	cmp	r0, #0x1
	beq	.L308	@cond_branch
	cmp	r0, #0x1
	bgt	.L312	@cond_branch
	cmp	r0, #0
	beq	.L307	@cond_branch
	ldr	r2, .L324+0x8
	b	.L315
.L325:
	.align	2, 0
.L324:
	.word	gLinkPlayers
	.word	0x1133
	.word	sPlayerDataExchangeStatus
.L312:
	cmp	r0, #0x2
	beq	.L309	@cond_branch
	ldr	r2, .L326
	b	.L315
.L327:
	.align	2, 0
.L326:
	.word	sPlayerDataExchangeStatus
.L307:
	ldr	r1, .L328
	mov	r0, #0x1
	b	.L319
.L329:
	.align	2, 0
.L328:
	.word	sPlayerDataExchangeStatus
.L308:
	ldr	r1, .L330
	mov	r0, #0x4
	b	.L319
.L331:
	.align	2, 0
.L330:
	.word	sPlayerDataExchangeStatus
.L309:
	ldr	r1, .L332
	mov	r0, #0x5
	b	.L319
.L333:
	.align	2, 0
.L332:
	.word	sPlayerDataExchangeStatus
.L305:
	ldr	r1, .L334
	mov	r0, #0x1
	b	.L319
.L335:
	.align	2, 0
.L334:
	.word	sPlayerDataExchangeStatus
.L304:
	ldr	r1, .L336
	mov	r0, #0x3
.L319:
	str	r0, [r1]
	add	r2, r1, #0
	b	.L315
.L337:
	.align	2, 0
.L336:
	.word	sPlayerDataExchangeStatus
.L293:
	ldr	r0, .L338
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	mov	r0, #0x96
	lsl	r0, r0, #0x12
	ldr	r2, .L338+0x4
	cmp	r1, r0
	bls	.L315	@cond_branch
	mov	r0, #0x2
	str	r0, [r2]
.L315:
	ldrb	r0, [r2]
.L318:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L339:
	.align	2, 0
.L338:
	.word	sTimeOutCounter
	.word	sPlayerDataExchangeStatus
.Lfe27:
	.size	 GetLinkPlayerDataExchangeStatusTimed,.Lfe27-GetLinkPlayerDataExchangeStatusTimed
	.align	2, 0
	.globl	IsLinkPlayerDataExchangeComplete
	.type	 IsLinkPlayerDataExchangeComplete,function
	.thumb_func
IsLinkPlayerDataExchangeComplete:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r4, #0x0
	ldr	r5, .L349
	b	.L341
.L350:
	.align	2, 0
.L349:
	.word	gLinkPlayers
.L344:
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x14
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, [r5, #0x14]
	cmp	r1, r0
	bne	.L343	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L343:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L341:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L344	@cond_branch
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	bne	.L347	@cond_branch
	mov	r2, #0x1
	ldr	r0, .L351
	str	r2, [r0]
	b	.L348
.L352:
	.align	2, 0
.L351:
	.word	sPlayerDataExchangeStatus
.L347:
	mov	r2, #0x0
	ldr	r1, .L353
	mov	r0, #0x3
	str	r0, [r1]
.L348:
	add	r0, r2, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L354:
	.align	2, 0
.L353:
	.word	sPlayerDataExchangeStatus
.Lfe28:
	.size	 IsLinkPlayerDataExchangeComplete,.Lfe28-IsLinkPlayerDataExchangeComplete
	.align	2, 0
	.globl	GetLinkPlayerTrainerId
	.type	 GetLinkPlayerTrainerId,function
	.thumb_func
GetLinkPlayerTrainerId:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L356
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r0, [r1]
	bx	lr
.L357:
	.align	2, 0
.L356:
	.word	gLinkPlayers
.Lfe29:
	.size	 GetLinkPlayerTrainerId,.Lfe29-GetLinkPlayerTrainerId
	.align	2, 0
	.globl	ResetLinkPlayers
	.type	 ResetLinkPlayers,function
	.thumb_func
ResetLinkPlayers:
	push	{r4, r5, lr}
	ldr	r5, .L364
	mov	r4, #0x4
.L362:
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x1c
	bl	memset
	add	r5, r5, #0x1c
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L362	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gLinkPlayers
.Lfe30:
	.size	 ResetLinkPlayers,.Lfe30-ResetLinkPlayers
	.align	2, 0
	.type	 ResetBlockSend,function
	.thumb_func
ResetBlockSend:
	ldr	r1, .L367
	mov	r0, #0x0
	strb	r0, [r1, #0x8]
	strh	r0, [r1]
	strh	r0, [r1, #0x2]
	str	r0, [r1, #0x4]
	bx	lr
.L368:
	.align	2, 0
.L367:
	.word	sBlockSend
.Lfe31:
	.size	 ResetBlockSend,.Lfe31-ResetBlockSend
	.align	2, 0
	.type	 InitBlockSend,function
	.thumb_func
InitBlockSend:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	add	r6, r1, #0
	ldr	r4, .L375
	ldrb	r5, [r4, #0x8]
	cmp	r5, #0
	beq	.L370	@cond_branch
	mov	r0, #0x0
	b	.L374
.L376:
	.align	2, 0
.L375:
	.word	sBlockSend
.L370:
	bl	GetMultiplayerId
	strb	r0, [r4, #0x9]
	mov	r0, #0x1
	strb	r0, [r4, #0x8]
	strh	r6, [r4, #0x2]
	strh	r5, [r4]
	add	r0, r0, #0xff
	cmp	r6, r0
	bls	.L371	@cond_branch
	str	r7, [r4, #0x4]
	b	.L372
.L371:
	ldr	r5, .L377
	cmp	r7, r5
	beq	.L373	@cond_branch
	add	r0, r5, #0
	add	r1, r7, #0
	add	r2, r6, #0
	bl	memcpy
.L373:
	str	r5, [r4, #0x4]
.L372:
	ldr	r0, .L377+0x4
	bl	BuildSendCmd
	ldr	r1, .L377+0x8
	ldr	r0, .L377+0xc
	str	r0, [r1]
	ldr	r1, .L377+0x10
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x1
.L374:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L378:
	.align	2, 0
.L377:
	.word	gBlockSendBuffer
	.word	0xbbbb
	.word	gLinkCallback
	.word	LinkCB_BlockSendBegin
	.word	sBlockSendDelayCounter
.Lfe32:
	.size	 InitBlockSend,.Lfe32-InitBlockSend
	.align	2, 0
	.type	 LinkCB_BlockSendBegin,function
	.thumb_func
LinkCB_BlockSendBegin:
	push	{lr}
	ldr	r1, .L381
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x2
	bls	.L380	@cond_branch
	ldr	r1, .L381+0x4
	ldr	r0, .L381+0x8
	str	r0, [r1]
.L380:
	pop	{r0}
	bx	r0
.L382:
	.align	2, 0
.L381:
	.word	sBlockSendDelayCounter
	.word	gLinkCallback
	.word	LinkCB_BlockSend
.Lfe33:
	.size	 LinkCB_BlockSendBegin,.Lfe33-LinkCB_BlockSendBegin
	.align	2, 0
	.type	 LinkCB_BlockSend,function
	.thumb_func
LinkCB_BlockSend:
	push	{r4, r5, r6, lr}
	ldr	r0, .L390
	ldr	r5, [r0, #0x4]
	ldr	r2, .L390+0x4
	ldr	r1, .L390+0x8
	strh	r1, [r2]
	mov	r3, #0x0
	add	r4, r0, #0
	add	r6, r4, #0
	add	r2, r2, #0x2
.L387:
	lsl	r0, r3, #0x1
	ldrh	r1, [r6]
	add	r0, r0, r1
	add	r0, r0, r5
	ldrb	r1, [r0, #0x1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0]
	orr	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x6
	ble	.L387	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0xe
	strh	r0, [r4]
	ldrh	r1, [r4, #0x2]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r1, r0
	bhi	.L389	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4, #0x8]
	ldr	r1, .L390+0xc
	ldr	r0, .L390+0x10
	str	r0, [r1]
.L389:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L391:
	.align	2, 0
.L390:
	.word	sBlockSend
	.word	gSendCmd
	.word	0x8888
	.word	gLinkCallback
	.word	LinkCB_BlockSendEnd
.Lfe34:
	.size	 LinkCB_BlockSend,.Lfe34-LinkCB_BlockSend
	.align	2, 0
	.type	 LinkCB_BlockSendEnd,function
	.thumb_func
LinkCB_BlockSendEnd:
	ldr	r1, .L393
	mov	r0, #0x0
	str	r0, [r1]
	bx	lr
.L394:
	.align	2, 0
.L393:
	.word	gLinkCallback
.Lfe35:
	.size	 LinkCB_BlockSendEnd,.Lfe35-LinkCB_BlockSendEnd
	.align	2, 0
	.type	 LinkCB_BerryBlenderSendHeldKeys,function
	.thumb_func
LinkCB_BerryBlenderSendHeldKeys:
	push	{lr}
	bl	GetMultiplayerId
	ldr	r0, .L396
	bl	BuildSendCmd
	ldr	r1, .L396+0x4
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L397:
	.align	2, 0
.L396:
	.word	0x4444
	.word	gBerryBlenderKeySendAttempts
.Lfe36:
	.size	 LinkCB_BerryBlenderSendHeldKeys,.Lfe36-LinkCB_BerryBlenderSendHeldKeys
	.align	2, 0
	.type	 SetBerryBlenderLinkCallback,function
	.thumb_func
SetBerryBlenderLinkCallback:
	ldr	r1, .L399
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r1, .L399+0x4
	ldr	r0, .L399+0x8
	str	r0, [r1]
	bx	lr
.L400:
	.align	2, 0
.L399:
	.word	gBerryBlenderKeySendAttempts
	.word	gLinkCallback
	.word	LinkCB_BerryBlenderSendHeldKeys
.Lfe37:
	.size	 SetBerryBlenderLinkCallback,.Lfe37-SetBerryBlenderLinkCallback
	.align	2, 0
	.type	 GetBerryBlenderKeySendAttempts,function
	.thumb_func
GetBerryBlenderKeySendAttempts:
	ldr	r0, .L402
	ldr	r0, [r0]
	bx	lr
.L403:
	.align	2, 0
.L402:
	.word	gBerryBlenderKeySendAttempts
.Lfe38:
	.size	 GetBerryBlenderKeySendAttempts,.Lfe38-GetBerryBlenderKeySendAttempts
	.align	2, 0
	.type	 SendBerryBlenderNoSpaceForPokeblocks,function
	.thumb_func
SendBerryBlenderNoSpaceForPokeblocks:
	push	{lr}
	ldr	r0, .L405
	bl	BuildSendCmd
	pop	{r0}
	bx	r0
.L406:
	.align	2, 0
.L405:
	.word	0xaaaa
.Lfe39:
	.size	 SendBerryBlenderNoSpaceForPokeblocks,.Lfe39-SendBerryBlenderNoSpaceForPokeblocks
	.align	2, 0
	.globl	GetMultiplayerId
	.type	 GetMultiplayerId,function
	.thumb_func
GetMultiplayerId:
	push	{lr}
	ldr	r0, .L411
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L408	@cond_branch
	ldr	r0, .L411+0x4
	ldr	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	b	.L410
.L412:
	.align	2, 0
.L411:
	.word	gWirelessCommType
	.word	0x4000128
.L408:
	bl	LinkRfu_GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L410:
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 GetMultiplayerId,.Lfe40-GetMultiplayerId
	.align	2, 0
	.globl	BitmaskAllOtherLinkPlayers
	.type	 BitmaskAllOtherLinkPlayers,function
	.thumb_func
BitmaskAllOtherLinkPlayers:
	push	{lr}
	bl	GetMultiplayerId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x1
	lsl	r0, r0, r1
	mov	r1, #0xf
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 BitmaskAllOtherLinkPlayers,.Lfe41-BitmaskAllOtherLinkPlayers
	.align	2, 0
	.globl	SendBlock
	.type	 SendBlock,function
	.thumb_func
SendBlock:
	push	{lr}
	add	r3, r1, #0
	lsl	r2, r2, #0x10
	lsr	r1, r2, #0x10
	ldr	r0, .L419
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L415	@cond_branch
	add	r0, r3, #0
	bl	InitBlockSend
	b	.L418
.L420:
	.align	2, 0
.L419:
	.word	gWirelessCommType
.L415:
	add	r0, r3, #0
	bl	Rfu_InitBlockSend
.L418:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 SendBlock,.Lfe42-SendBlock
	.align	2, 0
	.globl	SendBlockRequest
	.type	 SendBlockRequest,function
	.thumb_func
SendBlockRequest:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	ldr	r0, .L425
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L422	@cond_branch
	add	r0, r1, #0
	bl	Rfu_SendBlockRequest
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L424
.L426:
	.align	2, 0
.L425:
	.word	gWirelessCommType
.L422:
	ldr	r0, .L427
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L423	@cond_branch
	mov	r0, #0x0
	b	.L424
.L428:
	.align	2, 0
.L427:
	.word	gLinkCallback
.L423:
	ldr	r0, .L429
	strb	r2, [r0]
	ldr	r0, .L429+0x4
	bl	BuildSendCmd
	mov	r0, #0x1
.L424:
	pop	{r1}
	bx	r1
.L430:
	.align	2, 0
.L429:
	.word	gBlockRequestType
	.word	0xcccc
.Lfe43:
	.size	 SendBlockRequest,.Lfe43-SendBlockRequest
	.align	2, 0
	.globl	IsLinkTaskFinished
	.type	 IsLinkTaskFinished,function
	.thumb_func
IsLinkTaskFinished:
	push	{lr}
	ldr	r0, .L435
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L432	@cond_branch
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L434
.L436:
	.align	2, 0
.L435:
	.word	gWirelessCommType
.L432:
	mov	r1, #0x0
	ldr	r0, .L437
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L433	@cond_branch
	mov	r1, #0x1
.L433:
	add	r0, r1, #0
.L434:
	pop	{r1}
	bx	r1
.L438:
	.align	2, 0
.L437:
	.word	gLinkCallback
.Lfe44:
	.size	 IsLinkTaskFinished,.Lfe44-IsLinkTaskFinished
	.align	2, 0
	.globl	GetBlockReceivedStatus
	.type	 GetBlockReceivedStatus,function
	.thumb_func
GetBlockReceivedStatus:
	push	{lr}
	ldr	r0, .L444
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L440	@cond_branch
	ldr	r2, .L444+0x4
	ldrb	r0, [r2, #0x3]
	lsl	r0, r0, #0x3
	ldrb	r1, [r2, #0x2]
	lsl	r1, r1, #0x2
	orr	r0, r0, r1
	ldrb	r1, [r2, #0x1]
	lsl	r1, r1, #0x1
	orr	r0, r0, r1
	ldrb	r1, [r2]
	orr	r0, r0, r1
	b	.L443
.L445:
	.align	2, 0
.L444:
	.word	gWirelessCommType
	.word	gBlockReceivedStatus
.L440:
	bl	Rfu_GetBlockReceivedStatus
.L443:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 GetBlockReceivedStatus,.Lfe45-GetBlockReceivedStatus
	.align	2, 0
	.type	 SetBlockReceivedFlag,function
	.thumb_func
SetBlockReceivedFlag:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L449
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L447	@cond_branch
	add	r0, r1, #0
	bl	Rfu_SetBlockReceivedFlag
	b	.L448
.L450:
	.align	2, 0
.L449:
	.word	gWirelessCommType
.L447:
	ldr	r0, .L451
	add	r0, r1, r0
	mov	r1, #0x1
	strb	r1, [r0]
.L448:
	pop	{r0}
	bx	r0
.L452:
	.align	2, 0
.L451:
	.word	gBlockReceivedStatus
.Lfe46:
	.size	 SetBlockReceivedFlag,.Lfe46-SetBlockReceivedFlag
	.align	2, 0
	.globl	ResetBlockReceivedFlags
	.type	 ResetBlockReceivedFlags,function
	.thumb_func
ResetBlockReceivedFlags:
	push	{r4, lr}
	ldr	r0, .L466
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L454	@cond_branch
	mov	r4, #0x0
.L458:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	Rfu_ResetBlockReceivedFlag
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L458	@cond_branch
	b	.L460
.L467:
	.align	2, 0
.L466:
	.word	gWirelessCommType
.L454:
	ldr	r1, .L468
	mov	r2, #0x0
	add	r0, r1, #0x3
.L464:
	strb	r2, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L464	@cond_branch
.L460:
	pop	{r4}
	pop	{r0}
	bx	r0
.L469:
	.align	2, 0
.L468:
	.word	gBlockReceivedStatus
.Lfe47:
	.size	 ResetBlockReceivedFlags,.Lfe47-ResetBlockReceivedFlags
	.align	2, 0
	.globl	ResetBlockReceivedFlag
	.type	 ResetBlockReceivedFlag,function
	.thumb_func
ResetBlockReceivedFlag:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L474
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L471	@cond_branch
	add	r0, r1, #0
	bl	Rfu_ResetBlockReceivedFlag
	b	.L472
.L475:
	.align	2, 0
.L474:
	.word	gWirelessCommType
.L471:
	ldr	r0, .L476
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L472	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
.L472:
	pop	{r0}
	bx	r0
.L477:
	.align	2, 0
.L476:
	.word	gBlockReceivedStatus
.Lfe48:
	.size	 ResetBlockReceivedFlag,.Lfe48-ResetBlockReceivedFlag
	.align	2, 0
	.globl	CheckShouldAdvanceLinkState
	.type	 CheckShouldAdvanceLinkState,function
	.thumb_func
CheckShouldAdvanceLinkState:
	push	{lr}
	ldr	r0, .L480
	ldr	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L479	@cond_branch
	mov	r0, #0x1c
	and	r1, r1, r0
	cmp	r1, #0x4
	bls	.L479	@cond_branch
	ldr	r1, .L480+0x4
	mov	r0, #0x1
	strb	r0, [r1]
.L479:
	pop	{r0}
	bx	r0
.L481:
	.align	2, 0
.L480:
	.word	gLinkStatus
	.word	gShouldAdvanceLinkState
.Lfe49:
	.size	 CheckShouldAdvanceLinkState,.Lfe49-CheckShouldAdvanceLinkState
	.align	2, 0
	.type	 LinkTestCalcBlockChecksum,function
	.thumb_func
LinkTestCalcBlockChecksum:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	mov	r3, #0x0
	mov	r2, #0x0
	lsr	r1, r1, #0x11
	cmp	r3, r1
	bcs	.L484	@cond_branch
.L486:
	lsl	r0, r2, #0x1
	add	r0, r0, r4
	ldrh	r0, [r0]
	add	r0, r3, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, r1
	bcc	.L486	@cond_branch
.L484:
	add	r0, r3, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 LinkTestCalcBlockChecksum,.Lfe50-LinkTestCalcBlockChecksum
	.align	2, 0
	.type	 LinkTest_PrintNumChar,function
	.thumb_func
LinkTest_PrintNumChar:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	ldr	r4, .L489
	ldr	r3, [r4]
	lsl	r3, r3, #0xb
	mov	r5, #0xc0
	lsl	r5, r5, #0x13
	add	r3, r3, r5
	lsr	r2, r2, #0x13
	add	r2, r2, r1
	lsl	r2, r2, #0x1
	add	r2, r2, r3
	ldr	r3, [r4, #0x4]
	lsl	r3, r3, #0xc
	ldr	r1, [r4, #0x8]
	add	r1, r1, #0x1
	add	r0, r0, r1
	orr	r3, r3, r0
	strh	r3, [r2]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L490:
	.align	2, 0
.L489:
	.word	gLinkTestBGInfo
.Lfe51:
	.size	 LinkTest_PrintNumChar,.Lfe51-LinkTest_PrintNumChar
	.align	2, 0
	.type	 LinkTest_PrintChar,function
	.thumb_func
LinkTest_PrintChar:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	ldr	r4, .L492
	ldr	r3, [r4]
	lsl	r3, r3, #0xb
	mov	r5, #0xc0
	lsl	r5, r5, #0x13
	add	r3, r3, r5
	lsr	r2, r2, #0x13
	add	r2, r2, r1
	lsl	r2, r2, #0x1
	add	r2, r2, r3
	ldr	r3, [r4, #0x4]
	lsl	r3, r3, #0xc
	ldr	r1, [r4, #0x8]
	add	r1, r1, r0
	orr	r3, r3, r1
	strh	r3, [r2]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L493:
	.align	2, 0
.L492:
	.word	gLinkTestBGInfo
.Lfe52:
	.size	 LinkTest_PrintChar,.Lfe52-LinkTest_PrintChar
	.align	2, 0
	.type	 LinkTest_PrintHex,function
	.thumb_func
LinkTest_PrintHex:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r4, #0x0
	cmp	r4, r3
	bge	.L496	@cond_branch
	mov	r2, #0xf
.L498:
	mov	r0, sp
	add	r1, r0, r4
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1]
	lsr	r5, r5, #0x4
	add	r4, r4, #0x1
	cmp	r4, r3
	blt	.L498	@cond_branch
.L496:
	sub	r4, r3, #0x1
	cmp	r4, #0
	blt	.L501	@cond_branch
.L503:
	mov	r1, sp
	add	r0, r1, r4
	ldrb	r0, [r0]
	add	r1, r6, #0
	add	r2, r7, #0
	bl	LinkTest_PrintNumChar
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L503	@cond_branch
.L501:
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 LinkTest_PrintHex,.Lfe53-LinkTest_PrintHex
	.align	2, 0
	.type	 LinkTest_PrintString,function
	.thumb_func
LinkTest_PrintString:
	push	{r4, r5, r6, r7, lr}
	add	r3, r0, #0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r6, #0x0
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L507	@cond_branch
	add	r4, r3, #0
	lsl	r5, r2, #0x18
.L509:
	ldrb	r0, [r4]
	cmp	r0, #0xa
	bne	.L510	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r5, r5, r0
	mov	r6, #0x0
	b	.L508
.L510:
	ldrb	r0, [r4]
	add	r1, r7, r6
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsr	r2, r5, #0x18
	bl	LinkTest_PrintChar
	add	r6, r6, #0x1
.L508:
	add	r4, r4, #0x1
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L509	@cond_branch
.L507:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 LinkTest_PrintString,.Lfe54-LinkTest_PrintString
	.align	2, 0
	.type	 LinkCB_RequestPlayerDataExchange,function
	.thumb_func
LinkCB_RequestPlayerDataExchange:
	push	{lr}
	ldr	r0, .L515
	ldr	r0, [r0]
	mov	r1, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L514	@cond_branch
	ldr	r0, .L515+0x4
	bl	BuildSendCmd
.L514:
	ldr	r1, .L515+0x8
	mov	r0, #0x0
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L516:
	.align	2, 0
.L515:
	.word	gLinkStatus
	.word	0x2222
	.word	gLinkCallback
.Lfe55:
	.size	 LinkCB_RequestPlayerDataExchange,.Lfe55-LinkCB_RequestPlayerDataExchange
	.align	2, 0
	.type	 Task_PrintTestData,function
	.thumb_func
Task_PrintTestData:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x20
	ldr	r1, .L523
	mov	r0, sp
	bl	strcpy
	mov	r0, sp
	mov	r1, #0x5
	mov	r2, #0x2
	bl	LinkTest_PrintString
	ldr	r0, .L523+0x4
	ldrb	r0, [r0]
	mov	r1, #0x2
	mov	r2, #0x1
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	ldr	r4, .L523+0x8
	ldr	r0, [r4]
	mov	r1, #0xf
	mov	r2, #0x1
	mov	r3, #0x8
	bl	LinkTest_PrintHex
	ldr	r0, .L523+0xc
	ldrb	r0, [r0, #0x1]
	mov	r1, #0x2
	mov	r2, #0xa
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	ldr	r0, [r4]
	mov	r1, #0x1c
	and	r0, r0, r1
	lsr	r0, r0, #0x2
	mov	r1, #0xf
	mov	r2, #0xa
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0xf
	mov	r2, #0xc
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	ldr	r0, .L523+0x10
	ldrb	r0, [r0]
	mov	r1, #0x19
	mov	r2, #0x1
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	ldr	r0, .L523+0x14
	ldrb	r0, [r0]
	mov	r1, #0x19
	mov	r2, #0x2
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0xf
	mov	r2, #0x5
	mov	r3, #0x2
	bl	LinkTest_PrintHex
	ldr	r0, .L523+0x18
	ldr	r0, [r0]
	mov	r1, #0x2
	mov	r2, #0xc
	mov	r3, #0x8
	bl	LinkTest_PrintHex
	ldr	r0, .L523+0x1c
	ldr	r0, [r0]
	mov	r1, #0x2
	mov	r2, #0xd
	mov	r3, #0x8
	bl	LinkTest_PrintHex
	bl	GetSioMultiSI
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x19
	mov	r2, #0x5
	mov	r3, #0x1
	bl	LinkTest_PrintHex
	bl	IsSioMultiMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x19
	mov	r2, #0x6
	mov	r3, #0x1
	bl	LinkTest_PrintHex
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x19
	mov	r2, #0x7
	mov	r3, #0x1
	bl	LinkTest_PrintHex
	bl	HasLinkErrorOccurred
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x19
	mov	r2, #0x8
	mov	r3, #0x1
	bl	LinkTest_PrintHex
	mov	r6, #0x0
	mov	r5, #0x80
	lsl	r5, r5, #0x13
	ldr	r4, .L523+0x20
.L521:
	ldrh	r0, [r4]
	lsr	r2, r5, #0x18
	mov	r1, #0xa
	mov	r3, #0x4
	bl	LinkTest_PrintHex
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r5, r5, r0
	add	r4, r4, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L521	@cond_branch
	add	sp, sp, #0x20
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L524:
	.align	2, 0
.L523:
	.word	sASCIITestPrint
	.word	gShouldAdvanceLinkState
	.word	gLinkStatus
	.word	gLink
	.word	gLastSendQueueCount
	.word	gLastRecvQueueCount
	.word	gLinkDebugSeed
	.word	gLinkDebugFlags
	.word	gLinkTestBlockChecksums
.Lfe56:
	.size	 Task_PrintTestData,.Lfe56-Task_PrintTestData
	.align	2, 0
	.globl	SetLinkDebugValues
	.type	 SetLinkDebugValues,function
	.thumb_func
SetLinkDebugValues:
	ldr	r2, .L526
	str	r0, [r2]
	ldr	r0, .L526+0x4
	str	r1, [r0]
	bx	lr
.L527:
	.align	2, 0
.L526:
	.word	gLinkDebugSeed
	.word	gLinkDebugFlags
.Lfe57:
	.size	 SetLinkDebugValues,.Lfe57-SetLinkDebugValues
	.align	2, 0
	.globl	GetSavedLinkPlayerCountAsBitFlags
	.type	 GetSavedLinkPlayerCountAsBitFlags,function
	.thumb_func
GetSavedLinkPlayerCountAsBitFlags:
	push	{r4, lr}
	mov	r1, #0x0
	mov	r2, #0x0
	ldr	r0, .L534
	ldrb	r0, [r0]
	cmp	r1, r0
	bge	.L530	@cond_branch
	mov	r4, #0x1
	add	r3, r0, #0
.L532:
	add	r0, r4, #0
	lsl	r0, r0, r2
	orr	r1, r1, r0
	lsl	r0, r1, #0x18
	lsr	r1, r0, #0x18
	add	r2, r2, #0x1
	cmp	r2, r3
	blt	.L532	@cond_branch
.L530:
	add	r0, r1, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L535:
	.align	2, 0
.L534:
	.word	gSavedLinkPlayerCount
.Lfe58:
	.size	 GetSavedLinkPlayerCountAsBitFlags,.Lfe58-GetSavedLinkPlayerCountAsBitFlags
	.align	2, 0
	.globl	GetLinkPlayerCountAsBitFlags
	.type	 GetLinkPlayerCountAsBitFlags,function
	.thumb_func
GetLinkPlayerCountAsBitFlags:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	mov	r5, #0x0
	mov	r6, #0x1
	b	.L537
.L540:
	add	r0, r6, #0
	lsl	r0, r0, r5
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
	add	r5, r5, #0x1
.L537:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	blt	.L540	@cond_branch
	add	r0, r4, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe59:
	.size	 GetLinkPlayerCountAsBitFlags,.Lfe59-GetLinkPlayerCountAsBitFlags
	.align	2, 0
	.globl	SaveLinkPlayers
	.type	 SaveLinkPlayers,function
	.thumb_func
SaveLinkPlayers:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L548
	strb	r0, [r1]
	bl	GetMultiplayerId
	ldr	r1, .L548+0x4
	strb	r0, [r1]
	ldr	r4, .L548+0x8
	ldr	r3, .L548+0xc
	mov	r2, #0x4
.L546:
	add	r0, r3, #0
	add	r1, r4, #0
	ldmia	r1!, {r5, r6, r7}
	stmia	r0!, {r5, r6, r7}
	ldmia	r1!, {r5, r6, r7}
	stmia	r0!, {r5, r6, r7}
	ldr	r1, [r1]
	str	r1, [r0]
	add	r4, r4, #0x1c
	add	r3, r3, #0x1c
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L546	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L549:
	.align	2, 0
.L548:
	.word	gSavedLinkPlayerCount
	.word	gSavedMultiplayerId
	.word	gLinkPlayers
	.word	gSavedLinkPlayers
.Lfe60:
	.size	 SaveLinkPlayers,.Lfe60-SaveLinkPlayers
	.align	2, 0
	.globl	GetSavedPlayerCount
	.type	 GetSavedPlayerCount,function
	.thumb_func
GetSavedPlayerCount:
	ldr	r0, .L551
	ldrb	r0, [r0]
	bx	lr
.L552:
	.align	2, 0
.L551:
	.word	gSavedLinkPlayerCount
.Lfe61:
	.size	 GetSavedPlayerCount,.Lfe61-GetSavedPlayerCount
	.align	2, 0
	.type	 GetSavedMultiplayerId,function
	.thumb_func
GetSavedMultiplayerId:
	ldr	r0, .L554
	ldrb	r0, [r0]
	bx	lr
.L555:
	.align	2, 0
.L554:
	.word	gSavedMultiplayerId
.Lfe62:
	.size	 GetSavedMultiplayerId,.Lfe62-GetSavedMultiplayerId
	.align	2, 0
	.type	 DoesLinkPlayerCountMatchSaved,function
	.thumb_func
DoesLinkPlayerCountMatchSaved:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r0, .L565
	ldrb	r2, [r0]
	add	r6, r0, #0
	cmp	r5, r2
	bge	.L558	@cond_branch
	ldr	r1, .L565+0x4
	ldr	r0, .L565+0x8
	add	r4, r0, #0x4
	add	r3, r1, #0x4
.L560:
	ldr	r1, [r3]
	ldr	r0, [r4]
	cmp	r1, r0
	bne	.L559	@cond_branch
	add	r5, r5, #0x1
.L559:
	add	r4, r4, #0x1c
	add	r3, r3, #0x1c
	sub	r2, r2, #0x1
	cmp	r2, #0
	bne	.L560	@cond_branch
.L558:
	ldrb	r6, [r6]
	cmp	r5, r6
	beq	.L563	@cond_branch
	mov	r0, #0x0
	b	.L564
.L566:
	.align	2, 0
.L565:
	.word	gSavedLinkPlayerCount
	.word	gLinkPlayers
	.word	gSavedLinkPlayers
.L563:
	mov	r0, #0x1
.L564:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 DoesLinkPlayerCountMatchSaved,.Lfe63-DoesLinkPlayerCountMatchSaved
	.align	2, 0
	.globl	CheckLinkPlayersMatchSaved
	.type	 CheckLinkPlayersMatchSaved,function
	.thumb_func
CheckLinkPlayersMatchSaved:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r4, #0x0
	ldr	r0, .L575
	ldrb	r0, [r0]
	cmp	r4, r0
	bcs	.L569	@cond_branch
	ldr	r6, .L575+0x4
	ldr	r5, .L575+0x8
	mov	r0, #0x8
	add	r0, r0, r6
	mov	r8, r0
	add	r7, r5, #0
	add	r7, r7, #0x8
.L571:
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r2, r0, #0x2
	add	r1, r6, #0x4
	add	r1, r2, r1
	add	r0, r5, #0x4
	add	r0, r2, r0
	ldr	r1, [r1]
	ldr	r0, [r0]
	cmp	r1, r0
	bne	.L573	@cond_branch
	mov	r1, r8
	add	r0, r2, r1
	add	r1, r2, r7
	bl	StringCompare
	cmp	r0, #0
	beq	.L570	@cond_branch
.L573:
	ldr	r1, .L575+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	bl	CloseLink
	ldr	r0, .L575+0x10
	bl	SetMainCallback2
.L570:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L575
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L571	@cond_branch
.L569:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L576:
	.align	2, 0
.L575:
	.word	gSavedLinkPlayerCount
	.word	gSavedLinkPlayers
	.word	gLinkPlayers
	.word	gLinkErrorOccurred
	.word	CB2_LinkError
.Lfe64:
	.size	 CheckLinkPlayersMatchSaved,.Lfe64-CheckLinkPlayersMatchSaved
	.align	2, 0
	.globl	ResetLinkPlayerCount
	.type	 ResetLinkPlayerCount,function
	.thumb_func
ResetLinkPlayerCount:
	ldr	r0, .L578
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L578+0x4
	strb	r1, [r0]
	bx	lr
.L579:
	.align	2, 0
.L578:
	.word	gSavedLinkPlayerCount
	.word	gSavedMultiplayerId
.Lfe65:
	.size	 ResetLinkPlayerCount,.Lfe65-ResetLinkPlayerCount
	.align	2, 0
	.globl	GetLinkPlayerCount_2
	.type	 GetLinkPlayerCount_2,function
	.thumb_func
GetLinkPlayerCount_2:
	ldr	r0, .L581
	ldr	r0, [r0]
	mov	r1, #0x1c
	and	r0, r0, r1
	lsr	r0, r0, #0x2
	bx	lr
.L582:
	.align	2, 0
.L581:
	.word	gLinkStatus
.Lfe66:
	.size	 GetLinkPlayerCount_2,.Lfe66-GetLinkPlayerCount_2
	.align	2, 0
	.globl	IsLinkMaster
	.type	 IsLinkMaster,function
	.thumb_func
IsLinkMaster:
	push	{lr}
	ldr	r0, .L587
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L584	@cond_branch
	ldr	r0, .L587+0x4
	ldr	r0, [r0]
	lsr	r0, r0, #0x5
	mov	r1, #0x1
	and	r0, r0, r1
	b	.L586
.L588:
	.align	2, 0
.L587:
	.word	gWirelessCommType
	.word	gLinkStatus
.L584:
	bl	Rfu_IsMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L586:
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 IsLinkMaster,.Lfe67-IsLinkMaster
	.align	2, 0
	.type	 GetDummy2,function
	.thumb_func
GetDummy2:
	ldr	r0, .L590
	ldrb	r0, [r0]
	bx	lr
.L591:
	.align	2, 0
.L590:
	.word	sDummy2
.Lfe68:
	.size	 GetDummy2,.Lfe68-GetDummy2
	.align	2, 0
	.globl	SetCloseLinkCallbackAndType
	.type	 SetCloseLinkCallbackAndType,function
	.thumb_func
SetCloseLinkCallbackAndType:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L596
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L593	@cond_branch
	bl	Rfu_SetCloseLinkCallback
	b	.L594
.L597:
	.align	2, 0
.L596:
	.word	gWirelessCommType
.L593:
	ldr	r2, .L598
	ldr	r1, [r2]
	cmp	r1, #0
	bne	.L594	@cond_branch
	ldr	r0, .L598+0x4
	str	r0, [r2]
	ldr	r0, .L598+0x8
	strb	r1, [r0]
	ldr	r0, .L598+0xc
	strh	r3, [r0]
.L594:
	pop	{r0}
	bx	r0
.L599:
	.align	2, 0
.L598:
	.word	gLinkCallback
	.word	LinkCB_ReadyCloseLink
	.word	gLinkDummy1
	.word	gReadyCloseLinkType
.Lfe69:
	.size	 SetCloseLinkCallbackAndType,.Lfe69-SetCloseLinkCallbackAndType
	.align	2, 0
	.globl	SetCloseLinkCallback
	.type	 SetCloseLinkCallback,function
	.thumb_func
SetCloseLinkCallback:
	push	{lr}
	ldr	r0, .L605
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L601	@cond_branch
	bl	Rfu_SetCloseLinkCallback
	b	.L602
.L606:
	.align	2, 0
.L605:
	.word	gWirelessCommType
.L601:
	ldr	r2, .L607
	ldr	r1, [r2]
	cmp	r1, #0
	beq	.L603	@cond_branch
	ldr	r1, .L607+0x4
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L602
.L608:
	.align	2, 0
.L607:
	.word	gLinkCallback
	.word	sReadyCloseLinkAttempts
.L603:
	ldr	r0, .L609
	str	r0, [r2]
	ldr	r0, .L609+0x4
	strb	r1, [r0]
	ldr	r0, .L609+0x8
	strh	r1, [r0]
.L602:
	pop	{r0}
	bx	r0
.L610:
	.align	2, 0
.L609:
	.word	LinkCB_ReadyCloseLink
	.word	gLinkDummy1
	.word	gReadyCloseLinkType
.Lfe70:
	.size	 SetCloseLinkCallback,.Lfe70-SetCloseLinkCallback
	.align	2, 0
	.type	 LinkCB_ReadyCloseLink,function
	.thumb_func
LinkCB_ReadyCloseLink:
	push	{lr}
	ldr	r0, .L613
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L612	@cond_branch
	ldr	r0, .L613+0x4
	bl	BuildSendCmd
	ldr	r1, .L613+0x8
	ldr	r0, .L613+0xc
	str	r0, [r1]
.L612:
	pop	{r0}
	bx	r0
.L614:
	.align	2, 0
.L613:
	.word	gLastRecvQueueCount
	.word	0x5fff
	.word	gLinkCallback
	.word	LinkCB_WaitCloseLink
.Lfe71:
	.size	 LinkCB_ReadyCloseLink,.Lfe71-LinkCB_ReadyCloseLink
	.align	2, 0
	.type	 LinkCB_WaitCloseLink,function
	.thumb_func
LinkCB_WaitCloseLink:
	push	{r4, lr}
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r3, #0x0
	mov	r1, #0x0
	cmp	r3, r2
	bge	.L617	@cond_branch
	ldr	r4, .L623
.L619:
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L618	@cond_branch
	add	r3, r3, #0x1
.L618:
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L619	@cond_branch
.L617:
	cmp	r3, r2
	bne	.L622	@cond_branch
	ldr	r2, .L623+0x4
	ldr	r0, [r2]
	ldr	r1, .L623+0x8
	and	r0, r0, r1
	str	r0, [r2]
	ldr	r0, .L623+0xc
	mov	r4, #0x1
	strb	r4, [r0]
	bl	CloseLink
	ldr	r1, .L623+0x10
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r0, .L623+0x14
	strb	r4, [r0]
.L622:
	pop	{r4}
	pop	{r0}
	bx	r0
.L624:
	.align	2, 0
.L623:
	.word	gReadyToCloseLink
	.word	gBattleTypeFlags
	.word	0xffdf
	.word	gLinkVSyncDisabled
	.word	gLinkCallback
	.word	gLinkDummy1
.Lfe72:
	.size	 LinkCB_WaitCloseLink,.Lfe72-LinkCB_WaitCloseLink
	.align	2, 0
	.globl	SetLinkStandbyCallback
	.type	 SetLinkStandbyCallback,function
	.thumb_func
SetLinkStandbyCallback:
	push	{lr}
	ldr	r0, .L629
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L626	@cond_branch
	bl	Rfu_SetLinkStandbyCallback
	b	.L627
.L630:
	.align	2, 0
.L629:
	.word	gWirelessCommType
.L626:
	ldr	r1, .L631
	ldr	r0, [r1]
	cmp	r0, #0
	bne	.L628	@cond_branch
	ldr	r0, .L631+0x4
	str	r0, [r1]
.L628:
	ldr	r1, .L631+0x8
	mov	r0, #0x0
	strb	r0, [r1]
.L627:
	pop	{r0}
	bx	r0
.L632:
	.align	2, 0
.L631:
	.word	gLinkCallback
	.word	LinkCB_Standby
	.word	gLinkDummy1
.Lfe73:
	.size	 SetLinkStandbyCallback,.Lfe73-SetLinkStandbyCallback
	.align	2, 0
	.type	 LinkCB_Standby,function
	.thumb_func
LinkCB_Standby:
	push	{lr}
	ldr	r0, .L635
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L634	@cond_branch
	ldr	r0, .L635+0x4
	bl	BuildSendCmd
	ldr	r1, .L635+0x8
	ldr	r0, .L635+0xc
	str	r0, [r1]
.L634:
	pop	{r0}
	bx	r0
.L636:
	.align	2, 0
.L635:
	.word	gLastRecvQueueCount
	.word	0x2ffe
	.word	gLinkCallback
	.word	LinkCB_StandbyForAll
.Lfe74:
	.size	 LinkCB_Standby,.Lfe74-LinkCB_Standby
	.align	2, 0
	.type	 LinkCB_StandbyForAll,function
	.thumb_func
LinkCB_StandbyForAll:
	push	{r4, lr}
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, #0x0
	cmp	r1, r2
	bcs	.L639	@cond_branch
	ldr	r3, .L650
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L639	@cond_branch
.L640:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, r2
	bcs	.L639	@cond_branch
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L640	@cond_branch
.L639:
	cmp	r1, r2
	bne	.L644	@cond_branch
	mov	r1, #0x0
	ldr	r4, .L650+0x4
	ldr	r3, .L650
	mov	r2, #0x0
.L648:
	add	r0, r1, r3
	strb	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bls	.L648	@cond_branch
	mov	r0, #0x0
	str	r0, [r4]
.L644:
	pop	{r4}
	pop	{r0}
	bx	r0
.L651:
	.align	2, 0
.L650:
	.word	gReadyToExitStandby
	.word	gLinkCallback
.Lfe75:
	.size	 LinkCB_StandbyForAll,.Lfe75-LinkCB_StandbyForAll
	.align	2, 0
	.type	 CheckErrorStatus,function
	.thumb_func
CheckErrorStatus:
	push	{lr}
	ldr	r0, .L655
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L653	@cond_branch
	ldr	r0, .L655+0x4
	ldr	r2, [r0]
	mov	r0, #0xfe
	lsl	r0, r0, #0xb
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L653	@cond_branch
	ldr	r0, .L655+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L654	@cond_branch
	ldr	r1, .L655+0xc
	str	r2, [r1]
	ldr	r0, .L655+0x10
	ldrb	r0, [r0]
	strb	r0, [r1, #0x4]
	ldr	r0, .L655+0x14
	ldrb	r0, [r0]
	strb	r0, [r1, #0x5]
	ldr	r0, .L655+0x18
	bl	SetMainCallback2
.L654:
	ldr	r1, .L655+0x1c
	mov	r0, #0x1
	strb	r0, [r1]
	bl	CloseLink
.L653:
	pop	{r0}
	bx	r0
.L656:
	.align	2, 0
.L655:
	.word	sLinkOpen
	.word	gLinkStatus
	.word	gSuppressLinkErrorMessage
	.word	sLinkErrorBuffer
	.word	gLastRecvQueueCount
	.word	gLastSendQueueCount
	.word	CB2_LinkError
	.word	gLinkErrorOccurred
.Lfe76:
	.size	 CheckErrorStatus,.Lfe76-CheckErrorStatus
	.align	2, 0
	.globl	SetLinkErrorFromRfu
	.type	 SetLinkErrorFromRfu,function
	.thumb_func
SetLinkErrorFromRfu:
	push	{r4, lr}
	ldr	r4, .L658
	str	r0, [r4]
	strb	r1, [r4, #0x5]
	strb	r2, [r4, #0x4]
	strb	r3, [r4, #0x6]
	pop	{r4}
	pop	{r0}
	bx	r0
.L659:
	.align	2, 0
.L658:
	.word	sLinkErrorBuffer
.Lfe77:
	.size	 SetLinkErrorFromRfu,.Lfe77-SetLinkErrorFromRfu
	.align	2, 0
	.globl	CB2_LinkError
	.type	 CB2_LinkError,function
	.thumb_func
CB2_LinkError:
	push	{r4, lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L664
	bl	m4aMPlayStop
	ldr	r0, .L664+0x4
	bl	m4aMPlayStop
	ldr	r0, .L664+0x8
	bl	m4aMPlayStop
	ldr	r0, .L664+0xc
	mov	r1, #0xe0
	lsl	r1, r1, #0x9
	bl	InitHeap
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFadeControl
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	bl	FillPalette
	bl	ResetTasks
	bl	ScanlineEffect_Stop
	ldr	r1, .L664+0x10
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L661	@cond_branch
	ldr	r0, .L664+0x14
	ldrb	r0, [r0, #0x6]
	cmp	r0, #0
	bne	.L662	@cond_branch
	mov	r0, #0x3
	strb	r0, [r1]
.L662:
	bl	ResetLinkRfuGFLayer
.L661:
	ldr	r0, .L664+0x18
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L664+0x1c
	mov	r0, #0x0
	mov	r2, #0x2
	bl	InitBgsFromTemplates
	ldr	r4, .L664+0x20
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	bl	Alloc
	add	r1, r0, #0
	str	r1, [r4]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r0, .L664+0x24
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L663	@cond_branch
	bl	DeactivateAllTextPrinters
	bl	ResetTempTileDataBuffers
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0xe0
	lsl	r1, r1, #0x8
	mov	r0, #0x0
	bl	ClearGpuRegBits
	ldr	r0, .L664+0x28
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L664+0x2c
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L664+0x30
	mov	r1, #0x0
	bl	CreateTask
	bl	StopMapMusic
	ldr	r1, .L664+0x34
	mov	r0, #0x0
	str	r0, [r1]
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	ldr	r0, .L664+0x38
	bl	SetMainCallback2
.L663:
	pop	{r4}
	pop	{r0}
	bx	r0
.L665:
	.align	2, 0
.L664:
	.word	gMPlayInfo_SE1
	.word	gMPlayInfo_SE2
	.word	gMPlayInfo_SE3
	.word	gHeap
	.word	gWirelessCommType
	.word	sLinkErrorBuffer
	.word	VBlankCB_LinkError
	.word	sLinkErrorBgTemplates
	.word	sLinkErrorBgTilemapBuffer
	.word	sLinkErrorWindowTemplates
	.word	gStandardMenuPalette
	.word	gSoftResetDisabled
	.word	Task_DestroySelf
	.word	gMain
	.word	CB2_PrintErrorMessage
.Lfe78:
	.size	 CB2_LinkError,.Lfe78-CB2_LinkError
	.align	2, 0
	.type	 ErrorMsg_MoveCloserToPartner,function
	.thumb_func
ErrorMsg_MoveCloserToPartner:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r1, .L667
	mov	r5, #0x0
	str	r5, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndLoadBgGfxUsingHeap
	ldr	r1, .L667+0x4
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L667+0x8
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r4, .L667+0xc
	str	r4, [sp]
	str	r5, [sp, #0x4]
	ldr	r0, .L667+0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x3
	mov	r2, #0x2
	mov	r3, #0x5
	bl	AddTextPrinterParameterized3
	str	r4, [sp]
	str	r5, [sp, #0x4]
	ldr	r0, .L667+0x14
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x3
	mov	r2, #0x2
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CopyWindowToVram
	mov	r0, #0x2
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L668:
	.align	2, 0
.L667:
	.word	sWirelessLinkDisplayGfx
	.word	sWirelessLinkDisplayTilemap
	.word	sWirelessLinkDisplayPal
	.word	sLinkErrorTextColor
	.word	gText_CommErrorEllipsis
	.word	gText_MoveCloserToLinkPartner
.Lfe79:
	.size	 ErrorMsg_MoveCloserToPartner,.Lfe79-ErrorMsg_MoveCloserToPartner
	.align	2, 0
	.type	 ErrorMsg_CheckConnections,function
	.thumb_func
ErrorMsg_CheckConnections:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, .L670
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r0, .L670+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x0
	bl	CopyWindowToVram
	mov	r0, #0x2
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	ShowBg
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L671:
	.align	2, 0
.L670:
	.word	sLinkErrorTextColor
	.word	gText_CommErrorCheckConnections
.Lfe80:
	.size	 ErrorMsg_CheckConnections,.Lfe80-ErrorMsg_CheckConnections
	.align	2, 0
	.type	 CB2_PrintErrorMessage,function
	.thumb_func
CB2_PrintErrorMessage:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L695
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3c
	beq	.L678	@cond_branch
	cmp	r0, #0x3c
	bgt	.L686	@cond_branch
	cmp	r0, #0
	beq	.L674	@cond_branch
	cmp	r0, #0x1e
	beq	.L679	@cond_branch
	b	.L673
.L696:
	.align	2, 0
.L695:
	.word	gMain
.L686:
	cmp	r0, #0x5a
	beq	.L679	@cond_branch
	cmp	r0, #0x82
	beq	.L680	@cond_branch
	b	.L673
.L674:
	ldr	r0, .L697
	ldrb	r0, [r0, #0x6]
	cmp	r0, #0
	beq	.L675	@cond_branch
	bl	ErrorMsg_MoveCloserToPartner
	b	.L673
.L698:
	.align	2, 0
.L697:
	.word	sLinkErrorBuffer
.L675:
	bl	ErrorMsg_CheckConnections
	b	.L673
.L678:
.L679:
	mov	r0, #0x16
	bl	PlaySE
	b	.L673
.L680:
	ldr	r0, .L699
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L681	@cond_branch
	ldr	r0, .L699+0x4
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r0, .L699+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x3
	mov	r2, #0x2
	mov	r3, #0x14
	bl	AddTextPrinterParameterized3
	b	.L673
.L700:
	.align	2, 0
.L699:
	.word	gWirelessCommType
	.word	sLinkErrorTextColor
	.word	gText_ABtnTitleScreen
.L681:
	cmp	r0, #0x1
	bne	.L673	@cond_branch
	ldr	r0, .L701
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r0, .L701+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x3
	mov	r2, #0x2
	mov	r3, #0x14
	bl	AddTextPrinterParameterized3
.L673:
	ldr	r0, .L701+0x8
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r0, r2
	ldrb	r1, [r1]
	cmp	r1, #0xa0
	bne	.L694	@cond_branch
	ldr	r4, .L701+0xc
	ldrb	r2, [r4]
	cmp	r2, #0x1
	bne	.L688	@cond_branch
	ldrh	r0, [r0, #0x2e]
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L687	@cond_branch
	bl	HelpSystem_Enable
	mov	r0, #0x15
	bl	PlaySE
	mov	r0, #0x0
	strb	r0, [r4]
	ldr	r1, .L701+0x10
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	ReloadSave
	b	.L687
.L702:
	.align	2, 0
.L701:
	.word	sLinkErrorTextColor
	.word	gText_ABtnRegistrationCounter
	.word	gMain
	.word	gWirelessCommType
	.word	sLinkErrorBuffer
.L688:
	cmp	r2, #0x2
	bne	.L687	@cond_branch
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L687	@cond_branch
	bl	HelpSystem_Enable
	bl	rfu_REQ_stopMode
	bl	rfu_waitREQComplete
	bl	DoSoftReset
.L687:
	ldr	r0, .L703
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r0, r2
	ldrb	r1, [r1]
	cmp	r1, #0xa0
	beq	.L693	@cond_branch
.L694:
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r0, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L693:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L704:
	.align	2, 0
.L703:
	.word	gMain
.Lfe81:
	.size	 CB2_PrintErrorMessage,.Lfe81-CB2_PrintErrorMessage
	.align	2, 0
	.globl	GetSioMultiSI
	.type	 GetSioMultiSI,function
	.thumb_func
GetSioMultiSI:
	ldr	r0, .L706
	ldrh	r0, [r0]
	lsr	r0, r0, #0x2
	mov	r1, #0x1
	and	r0, r0, r1
	bx	lr
.L707:
	.align	2, 0
.L706:
	.word	0x4000128
.Lfe82:
	.size	 GetSioMultiSI,.Lfe82-GetSioMultiSI
	.align	2, 0
	.type	 IsSioMultiMaster,function
	.thumb_func
IsSioMultiMaster:
	push	{lr}
	mov	r3, #0x0
	ldr	r2, .L710
	ldrh	r1, [r2]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L709	@cond_branch
	ldrh	r1, [r2]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L709	@cond_branch
	mov	r3, #0x1
.L709:
	add	r0, r3, #0
	pop	{r1}
	bx	r1
.L711:
	.align	2, 0
.L710:
	.word	0x4000128
.Lfe83:
	.size	 IsSioMultiMaster,.Lfe83-IsSioMultiMaster
	.align	2, 0
	.globl	IsLinkConnectionEstablished
	.type	 IsLinkConnectionEstablished,function
	.thumb_func
IsLinkConnectionEstablished:
	ldr	r0, .L713
	ldr	r0, [r0]
	lsr	r0, r0, #0x6
	mov	r1, #0x1
	and	r0, r0, r1
	bx	lr
.L714:
	.align	2, 0
.L713:
	.word	gLinkStatus
.Lfe84:
	.size	 IsLinkConnectionEstablished,.Lfe84-IsLinkConnectionEstablished
	.align	2, 0
	.globl	SetSuppressLinkErrorMessage
	.type	 SetSuppressLinkErrorMessage,function
	.thumb_func
SetSuppressLinkErrorMessage:
	ldr	r1, .L716
	strb	r0, [r1]
	bx	lr
.L717:
	.align	2, 0
.L716:
	.word	gSuppressLinkErrorMessage
.Lfe85:
	.size	 SetSuppressLinkErrorMessage,.Lfe85-SetSuppressLinkErrorMessage
	.align	2, 0
	.globl	HasLinkErrorOccurred
	.type	 HasLinkErrorOccurred,function
	.thumb_func
HasLinkErrorOccurred:
	ldr	r0, .L719
	ldrb	r0, [r0]
	bx	lr
.L720:
	.align	2, 0
.L719:
	.word	gLinkErrorOccurred
.Lfe86:
	.size	 HasLinkErrorOccurred,.Lfe86-HasLinkErrorOccurred
	.align	2, 0
	.globl	LocalLinkPlayerToBlock
	.type	 LocalLinkPlayerToBlock,function
	.thumb_func
LocalLinkPlayerToBlock:
	push	{r4, r5, r6, lr}
	bl	InitLocalLinkPlayer
	ldr	r1, .L722
	add	r2, r1, #0
	add	r2, r2, #0x10
	ldr	r0, .L722+0x4
	ldmia	r0!, {r3, r4, r5}
	stmia	r2!, {r3, r4, r5}
	ldmia	r0!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r3, .L722+0x8
	add	r2, r1, #0
	add	r0, r3, #0
	ldmia	r0!, {r4, r5, r6}
	stmia	r2!, {r4, r5, r6}
	ldrh	r4, [r0]
	strh	r4, [r2]
	ldrb	r0, [r0, #0x2]
	strb	r0, [r2, #0x2]
	add	r0, r1, #0
	add	r0, r0, #0x2c
	ldmia	r3!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldrh	r2, [r3]
	strh	r2, [r0]
	ldrb	r2, [r3, #0x2]
	strb	r2, [r0, #0x2]
	ldr	r0, .L722+0xc
	mov	r2, #0x3c
	bl	memcpy
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L723:
	.align	2, 0
.L722:
	.word	gLocalLinkPlayerBlock
	.word	gLocalLinkPlayer
	.word	sASCIIGameFreakInc
	.word	gBlockSendBuffer
.Lfe87:
	.size	 LocalLinkPlayerToBlock,.Lfe87-LocalLinkPlayerToBlock
	.align	2, 0
	.globl	LinkPlayerFromBlock
	.type	 LinkPlayerFromBlock,function
	.thumb_func
LinkPlayerFromBlock:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x8
	ldr	r1, .L727
	add	r4, r2, r1
	lsl	r2, r0, #0x3
	sub	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L727+0x4
	add	r2, r2, r0
	add	r1, r2, #0
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldmia	r0!, {r3, r5, r6}
	stmia	r1!, {r3, r5, r6}
	ldmia	r0!, {r3, r5, r6}
	stmia	r1!, {r3, r5, r6}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r2, #0
	bl	ConvertLinkPlayerName
	ldr	r5, .L727+0x8
	add	r0, r4, #0
	add	r1, r5, #0
	bl	strcmp
	cmp	r0, #0
	bne	.L726	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x2c
	add	r1, r5, #0
	bl	strcmp
	cmp	r0, #0
	beq	.L725	@cond_branch
.L726:
	ldr	r0, .L727+0xc
	bl	SetMainCallback2
.L725:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L728:
	.align	2, 0
.L727:
	.word	gBlockRecvBuffer
	.word	gLinkPlayers
	.word	sASCIIGameFreakInc
	.word	CB2_LinkError
.Lfe88:
	.size	 LinkPlayerFromBlock,.Lfe88-LinkPlayerFromBlock
	.align	2, 0
	.globl	HandleLinkConnection
	.type	 HandleLinkConnection,function
	.thumb_func
HandleLinkConnection:
	push	{r4, r5, lr}
	ldr	r0, .L738
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L730	@cond_branch
	ldr	r0, .L738+0x4
	ldr	r1, .L738+0x8
	ldr	r2, .L738+0xc
	bl	LinkMain1
	ldr	r4, .L738+0x10
	str	r0, [r4]
	ldr	r0, .L738+0x14
	bl	LinkMain2
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L732	@cond_branch
	bl	IsSendingKeysOverCable
	cmp	r0, #0x1
	bne	.L732	@cond_branch
.L737:
	mov	r0, #0x1
	b	.L736
.L739:
	.align	2, 0
.L738:
	.word	gWirelessCommType
	.word	gShouldAdvanceLinkState
	.word	gSendCmd
	.word	gRecvCmds
	.word	gLinkStatus
	.word	gMain+0x2c
.L730:
	bl	LinkRfuMain1
	add	r4, r0, #0
	bl	LinkRfuMain2
	add	r5, r0, #0
	bl	IsSendingKeysOverCable
	cmp	r0, #0x1
	bne	.L732	@cond_branch
	cmp	r4, #0x1
	beq	.L737	@cond_branch
	bl	IsRfuRecvQueueEmpty
	cmp	r0, #0
	bne	.L737	@cond_branch
	cmp	r5, #0
	bne	.L737	@cond_branch
.L732:
	mov	r0, #0x0
.L736:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe89:
	.size	 HandleLinkConnection,.Lfe89-HandleLinkConnection
	.align	2, 0
	.globl	SetWirelessCommType1
	.type	 SetWirelessCommType1,function
	.thumb_func
SetWirelessCommType1:
	push	{lr}
	ldr	r0, .L742
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L741	@cond_branch
	ldr	r1, .L742+0x4
	mov	r0, #0x1
	strb	r0, [r1]
.L741:
	pop	{r0}
	bx	r0
.L743:
	.align	2, 0
.L742:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.Lfe90:
	.size	 SetWirelessCommType1,.Lfe90-SetWirelessCommType1
	.align	2, 0
	.type	 SetWirelessCommType0_Internal,function
	.thumb_func
SetWirelessCommType0_Internal:
	push	{lr}
	ldr	r0, .L746
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.L745	@cond_branch
	ldr	r0, .L746+0x4
	strb	r1, [r0]
.L745:
	pop	{r0}
	bx	r0
.L747:
	.align	2, 0
.L746:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.Lfe91:
	.size	 SetWirelessCommType0_Internal,.Lfe91-SetWirelessCommType0_Internal
	.align	2, 0
	.globl	SetWirelessCommType0
	.type	 SetWirelessCommType0,function
	.thumb_func
SetWirelessCommType0:
	push	{lr}
	ldr	r0, .L750
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.L749	@cond_branch
	ldr	r0, .L750+0x4
	strb	r1, [r0]
.L749:
	pop	{r0}
	bx	r0
.L751:
	.align	2, 0
.L750:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.Lfe92:
	.size	 SetWirelessCommType0,.Lfe92-SetWirelessCommType0
	.align	2, 0
	.globl	GetLinkRecvQueueLength
	.type	 GetLinkRecvQueueLength,function
	.thumb_func
GetLinkRecvQueueLength:
	push	{lr}
	ldr	r0, .L756
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L753	@cond_branch
	ldr	r0, .L756+0x4
	ldr	r1, .L756+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	b	.L755
.L757:
	.align	2, 0
.L756:
	.word	gWirelessCommType
	.word	gLink
	.word	0xfbd
.L753:
	bl	GetRfuRecvQueueLength
.L755:
	pop	{r1}
	bx	r1
.Lfe93:
	.size	 GetLinkRecvQueueLength,.Lfe93-GetLinkRecvQueueLength
	.align	2, 0
	.globl	IsLinkRecvQueueAtOverworldMax
	.type	 IsLinkRecvQueueAtOverworldMax,function
	.thumb_func
IsLinkRecvQueueAtOverworldMax:
	push	{lr}
	bl	GetLinkRecvQueueLength
	cmp	r0, #0x2
	bhi	.L759	@cond_branch
	mov	r0, #0x0
	b	.L760
.L759:
	mov	r0, #0x1
.L760:
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 IsLinkRecvQueueAtOverworldMax,.Lfe94-IsLinkRecvQueueAtOverworldMax
	.align	2, 0
	.globl	ConvertLinkPlayerName
	.type	 ConvertLinkPlayerName,function
	.thumb_func
ConvertLinkPlayerName:
	push	{lr}
	ldrb	r1, [r0, #0x10]
	strb	r1, [r0, #0x12]
	add	r2, r0, #0
	add	r2, r2, #0x8
	ldrb	r1, [r0, #0x1a]
	add	r0, r2, #0
	bl	ConvertInternationalString
	pop	{r0}
	bx	r0
.Lfe95:
	.size	 ConvertLinkPlayerName,.Lfe95-ConvertLinkPlayerName
	.align	2, 0
	.type	 DisableSerial,function
	.thumb_func
DisableSerial:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0xc0
	bl	DisableInterrupts
	ldr	r1, .L763
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L763+0x4
	mov	r2, #0x0
	strh	r2, [r0]
	add	r1, r1, #0xda
	mov	r0, #0xc0
	strh	r0, [r1]
	ldr	r0, .L763+0x8
	strh	r2, [r0]
	ldr	r2, .L763+0xc
	mov	r0, #0x0
	mov	r1, #0
	str	r0, [r2]
	str	r1, [r2, #0x4]
	str	r0, [sp]
	ldr	r1, .L763+0x10
	ldr	r2, .L763+0x14
	mov	r0, sp
	bl	CpuSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L764:
	.align	2, 0
.L763:
	.word	0x4000128
	.word	0x400010e
	.word	0x400012a
	.word	0x4000120
	.word	gLink
	.word	0x50003f0
.Lfe96:
	.size	 DisableSerial,.Lfe96-DisableSerial
	.align	2, 0
	.type	 EnableSerial,function
	.thumb_func
EnableSerial:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r0, #0xc0
	bl	DisableInterrupts
	ldr	r0, .L766
	mov	r4, #0x0
	strh	r4, [r0]
	ldr	r2, .L766+0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	add	r0, r1, #0
	strh	r0, [r2]
	ldrh	r0, [r2]
	ldr	r3, .L766+0x8
	add	r1, r3, #0
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r0, #0x80
	bl	EnableInterrupts
	ldr	r0, .L766+0xc
	strh	r4, [r0]
	mov	r5, #0x0
	str	r5, [sp]
	ldr	r1, .L766+0x10
	ldr	r2, .L766+0x14
	mov	r0, sp
	bl	CpuSet
	ldr	r0, .L766+0x18
	strb	r4, [r0]
	ldr	r0, .L766+0x1c
	strh	r5, [r0]
	ldr	r0, .L766+0x20
	strh	r5, [r0]
	ldr	r0, .L766+0x24
	strb	r4, [r0]
	ldr	r0, .L766+0x28
	strb	r4, [r0]
	ldr	r0, .L766+0x2c
	strb	r4, [r0]
	ldr	r0, .L766+0x30
	strb	r4, [r0]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L767:
	.align	2, 0
.L766:
	.word	0x4000134
	.word	0x4000128
	.word	0x4003
	.word	0x400012a
	.word	gLink
	.word	0x50003f0
	.word	sNumVBlanksWithoutSerialIntr
	.word	sSendNonzeroCheck
	.word	sRecvNonzeroCheck
	.word	sChecksumAvailable
	.word	sHandshakePlayerCount
	.word	gLastSendQueueCount
	.word	gLastRecvQueueCount
.Lfe97:
	.size	 EnableSerial,.Lfe97-EnableSerial
	.align	2, 0
	.globl	ResetSerial
	.type	 ResetSerial,function
	.thumb_func
ResetSerial:
	push	{lr}
	bl	EnableSerial
	bl	DisableSerial
	pop	{r0}
	bx	r0
.Lfe98:
	.size	 ResetSerial,.Lfe98-ResetSerial
	.align	2, 0
	.globl	LinkMain1
	.type	 LinkMain1,function
	.thumb_func
LinkMain1:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r0, .L792
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x4
	bhi	.L770	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L792+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L793:
	.align	2, 0
.L792:
	.word	gLink
	.word	.L783
	.align	2, 0
	.align	2, 0
.L783:
	.word	.L771
	.word	.L772
	.word	.L774
	.word	.L781
	.word	.L782
.L771:
	bl	DisableSerial
	ldr	r1, .L794
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	b	.L770
.L795:
	.align	2, 0
.L794:
	.word	gLink
.L772:
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L770	@cond_branch
	bl	EnableSerial
	ldr	r1, .L796
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	b	.L770
.L797:
	.align	2, 0
.L796:
	.word	gLink
.L774:
	ldrb	r1, [r4]
	cmp	r1, #0x1
	beq	.L777	@cond_branch
	cmp	r1, #0x2
	beq	.L779	@cond_branch
	bl	CheckMasterOrSlave
	b	.L770
.L777:
	ldr	r2, .L798
	ldrb	r0, [r2]
	cmp	r0, #0x8
	bne	.L770	@cond_branch
	ldrb	r0, [r2, #0x3]
	cmp	r0, #0x1
	bls	.L770	@cond_branch
	strb	r1, [r2, #0xe]
	b	.L770
.L799:
	.align	2, 0
.L798:
	.word	gLink
.L779:
	ldr	r0, .L800
	mov	r1, #0x0
	strb	r1, [r0, #0x1]
	ldr	r0, .L800+0x4
	strh	r1, [r0]
	b	.L770
.L801:
	.align	2, 0
.L800:
	.word	gLink
	.word	0x400012a
.L781:
	bl	InitTimer
	ldr	r1, .L802
	mov	r0, #0x4
	strb	r0, [r1, #0x1]
.L782:
	add	r0, r5, #0
	bl	EnqueueSendCmd
	add	r0, r6, #0
	bl	DequeueRecvCmds
.L770:
	mov	r0, #0x0
	strb	r0, [r4]
	ldr	r1, .L802
	ldrb	r2, [r1, #0x2]
	ldrb	r0, [r1, #0x3]
	lsl	r0, r0, #0x2
	orr	r2, r2, r0
	ldrb	r0, [r1]
	cmp	r0, #0x8
	bne	.L785	@cond_branch
	mov	r0, #0x20
	orr	r2, r2, r0
.L785:
	ldrb	r0, [r1, #0xc]
	lsl	r3, r0, #0x8
	ldrb	r0, [r1, #0xf]
	lsl	r4, r0, #0x9
	ldrb	r0, [r1, #0x10]
	lsl	r5, r0, #0xc
	ldrb	r0, [r1, #0x11]
	lsl	r6, r0, #0xd
	ldrb	r0, [r1, #0x12]
	lsl	r7, r0, #0xe
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x4
	bne	.L786	@cond_branch
	mov	r0, #0x40
	orr	r0, r0, r3
	orr	r0, r0, r2
	b	.L791
.L803:
	.align	2, 0
.L802:
	.word	gLink
.L786:
	add	r0, r2, #0
	orr	r0, r0, r3
.L791:
	orr	r0, r0, r4
	orr	r0, r0, r5
	orr	r0, r0, r6
	orr	r0, r0, r7
	add	r2, r0, #0
	ldrb	r3, [r1, #0x13]
	cmp	r3, #0x1
	bne	.L788	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	orr	r2, r2, r0
.L788:
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x3
	bls	.L789	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0xa
	orr	r2, r2, r0
.L789:
	add	r1, r2, #0
	cmp	r3, #0x2
	bne	.L790	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0xb
	orr	r1, r1, r0
.L790:
	add	r0, r1, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe99:
	.size	 LinkMain1,.Lfe99-LinkMain1
	.align	2, 0
	.type	 CheckMasterOrSlave,function
	.thumb_func
CheckMasterOrSlave:
	push	{lr}
	ldr	r0, .L807
	ldr	r1, [r0]
	mov	r0, #0xc
	and	r1, r1, r0
	ldr	r2, .L807+0x4
	cmp	r1, #0x8
	bne	.L805	@cond_branch
	ldrb	r0, [r2, #0x2]
	cmp	r0, #0
	bne	.L805	@cond_branch
	strb	r1, [r2]
	b	.L806
.L808:
	.align	2, 0
.L807:
	.word	0x4000128
	.word	gLink
.L805:
	mov	r0, #0x0
	strb	r0, [r2]
.L806:
	pop	{r0}
	bx	r0
.Lfe100:
	.size	 CheckMasterOrSlave,.Lfe100-CheckMasterOrSlave
	.align	2, 0
	.type	 InitTimer,function
	.thumb_func
InitTimer:
	push	{lr}
	ldr	r0, .L811
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L810	@cond_branch
	ldr	r1, .L811+0x4
	ldr	r2, .L811+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x41
	strh	r0, [r1]
	mov	r0, #0x40
	bl	EnableInterrupts
.L810:
	pop	{r0}
	bx	r0
.L812:
	.align	2, 0
.L811:
	.word	gLink
	.word	0x400010c
	.word	0xff3b
.Lfe101:
	.size	 InitTimer,.Lfe101-InitTimer
	.align	2, 0
	.type	 EnqueueSendCmd,function
	.thumb_func
EnqueueSendCmd:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r3, r0, #0
	ldr	r2, .L823
	ldr	r1, .L823+0x4
	ldrh	r0, [r1]
	strh	r0, [r2]
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L823+0x8
	ldr	r4, .L823+0xc
	add	r0, r1, r4
	ldrb	r4, [r0]
	add	r6, r1, #0
	cmp	r4, #0x31
	bhi	.L814	@cond_branch
	mov	r1, #0xce
	lsl	r1, r1, #0x2
	add	r0, r6, r1
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x31
	bls	.L815	@cond_branch
	sub	r0, r0, #0x32
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L815:
	mov	r2, #0x0
	ldr	r4, .L823+0x10
	mov	r9, r4
	ldr	r1, .L823+0x14
	mov	sl, r1
	lsl	r5, r0, #0x1
	mov	r0, #0x18
	add	r0, r0, r6
	mov	r8, r0
	mov	ip, r2
	mov	r7, #0x64
.L819:
	ldrh	r0, [r4]
	ldrh	r1, [r3]
	orr	r0, r0, r1
	strh	r0, [r4]
	mov	r0, r2
	mul	r0, r0, r7
	add	r0, r5, r0
	add	r0, r0, r8
	strh	r1, [r0]
	mov	r1, ip
	strh	r1, [r3]
	add	r3, r3, #0x2
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x7
	bls	.L819	@cond_branch
	b	.L821
.L824:
	.align	2, 0
.L823:
	.word	gLinkSavedIme
	.word	0x4000208
	.word	gLink
	.word	0x339
	.word	sSendNonzeroCheck
	.word	gLastSendQueueCount
.L814:
	mov	r0, #0x1
	strb	r0, [r6, #0x12]
	ldr	r2, .L825
	mov	r9, r2
	ldr	r4, .L825+0x4
	mov	sl, r4
.L821:
	mov	r1, r9
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L822	@cond_branch
	ldr	r2, .L825+0x8
	add	r0, r6, r2
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	mov	r2, #0x0
	strb	r1, [r0]
	mov	r4, r9
	strh	r2, [r4]
.L822:
	ldr	r1, .L825+0xc
	ldr	r2, .L825+0x10
	ldrh	r0, [r2]
	strh	r0, [r1]
	ldr	r4, .L825+0x8
	add	r0, r6, r4
	ldrb	r0, [r0]
	mov	r1, sl
	strb	r0, [r1]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L826:
	.align	2, 0
.L825:
	.word	sSendNonzeroCheck
	.word	gLastSendQueueCount
	.word	0x339
	.word	0x4000208
	.word	gLinkSavedIme
.Lfe102:
	.size	 EnqueueSendCmd,.Lfe102-EnqueueSendCmd
	.align	2, 0
	.type	 DequeueRecvCmds,function
	.thumb_func
DequeueRecvCmds:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r0
	ldr	r2, .L851
	ldr	r1, .L851+0x4
	ldrh	r0, [r1]
	strh	r0, [r2]
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L851+0x8
	ldr	r3, .L851+0xc
	add	r0, r1, r3
	ldrb	r0, [r0]
	mov	ip, r1
	cmp	r0, #0
	bne	.L828	@cond_branch
	mov	r3, #0x0
	ldrb	r0, [r1, #0x3]
	cmp	r3, r0
	bcs	.L830	@cond_branch
	mov	r5, #0x0
	add	r6, r0, #0
.L832:
	mov	r2, #0x0
	lsl	r1, r3, #0x4
	add	r4, r3, #0x1
	add	r1, r1, r9
.L836:
	lsl	r0, r2, #0x1
	add	r0, r0, r1
	strh	r5, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x7
	bls	.L836	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, r6
	bcc	.L832	@cond_branch
.L830:
	mov	r0, #0x1
	mov	r7, ip
	strb	r0, [r7, #0xc]
	b	.L839
.L852:
	.align	2, 0
.L851:
	.word	gLinkSavedIme
	.word	0x4000208
	.word	gLink
	.word	0xfbd
.L828:
	mov	r3, #0x0
	mov	r0, ip
	ldrb	r1, [r0, #0x3]
	cmp	r3, r1
	bcs	.L841	@cond_branch
	ldr	r0, .L853
	add	r0, r0, ip
	ldrb	r0, [r0]
	lsl	r6, r0, #0x1
	mov	r2, #0xcf
	lsl	r2, r2, #0x2
	add	r2, r2, ip
	mov	r8, r2
	mov	sl, r1
.L843:
	mov	r2, #0x0
	lsl	r1, r3, #0x4
	add	r4, r3, #0x1
	lsl	r0, r3, #0x1
	mov	r7, r9
	add	r5, r1, r7
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	lsl	r3, r0, #0x5
.L847:
	lsl	r1, r2, #0x1
	add	r1, r1, r5
	mov	r7, #0x64
	mov	r0, r2
	mul	r0, r0, r7
	add	r0, r6, r0
	add	r0, r0, r3
	add	r0, r0, r8
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x7
	bls	.L847	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, sl
	bcc	.L843	@cond_branch
.L841:
	mov	r2, ip
	ldr	r0, .L853+0x4
	add	r1, r2, r0
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	mov	r3, #0x0
	strb	r0, [r1]
	ldr	r1, .L853
	add	r2, r2, r1
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x31
	bls	.L850	@cond_branch
	strb	r3, [r2]
.L850:
	mov	r2, ip
	strb	r3, [r2, #0xc]
.L839:
	ldr	r1, .L853+0x8
	ldr	r3, .L853+0xc
	ldrh	r0, [r3]
	strh	r0, [r1]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L854:
	.align	2, 0
.L853:
	.word	0xfbc
	.word	0xfbd
	.word	0x4000208
	.word	gLinkSavedIme
.Lfe103:
	.size	 DequeueRecvCmds,.Lfe103-DequeueRecvCmds
	.align	2, 0
	.globl	LinkVSync
	.type	 LinkVSync,function
	.thumb_func
LinkVSync:
	push	{r4, lr}
	ldr	r3, .L874
	ldrb	r4, [r3]
	cmp	r4, #0
	beq	.L856	@cond_branch
	ldrb	r0, [r3, #0x1]
	cmp	r0, #0x2
	beq	.L873	@cond_branch
	cmp	r0, #0x4
	bne	.L867	@cond_branch
	mov	r0, #0xd
	ldrsb	r0, [r3, r0]
	cmp	r0, #0x8
	bgt	.L859	@cond_branch
	ldrb	r0, [r3, #0x10]
	cmp	r0, #0x1
	beq	.L873	@cond_branch
	mov	r0, #0x1
	strb	r0, [r3, #0x13]
	b	.L867
.L875:
	.align	2, 0
.L874:
	.word	gLink
.L859:
	ldrb	r0, [r3, #0x13]
	cmp	r0, #0x1
	beq	.L867	@cond_branch
	mov	r0, #0x0
	strb	r0, [r3, #0xd]
.L873:
	bl	StartTransfer
	b	.L867
.L856:
	ldrb	r2, [r3, #0x1]
	cmp	r2, #0x4
	beq	.L869	@cond_branch
	cmp	r2, #0x2
	bne	.L867	@cond_branch
.L869:
	ldr	r1, .L876
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bls	.L867	@cond_branch
	cmp	r2, #0x4
	bne	.L871	@cond_branch
	mov	r0, #0x2
	strb	r0, [r3, #0x13]
.L871:
	cmp	r2, #0x2
	bne	.L867	@cond_branch
	strb	r4, [r3, #0x3]
	strb	r4, [r3, #0xf]
.L867:
	pop	{r4}
	pop	{r0}
	bx	r0
.L877:
	.align	2, 0
.L876:
	.word	sNumVBlanksWithoutSerialIntr
.Lfe104:
	.size	 LinkVSync,.Lfe104-LinkVSync
	.align	2, 0
	.globl	Timer3Intr
	.type	 Timer3Intr,function
	.thumb_func
Timer3Intr:
	push	{lr}
	bl	StopTimer
	bl	StartTransfer
	pop	{r0}
	bx	r0
.Lfe105:
	.size	 Timer3Intr,.Lfe105-Timer3Intr
	.align	2, 0
	.globl	SerialCB
	.type	 SerialCB,function
	.thumb_func
SerialCB:
	push	{r4, lr}
	ldr	r4, .L889
	ldr	r0, .L889+0x4
	ldr	r1, [r0]
	lsl	r0, r1, #0x1a
	lsr	r0, r0, #0x1e
	strb	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0x2
	beq	.L882	@cond_branch
	cmp	r0, #0x4
	bne	.L880	@cond_branch
	lsl	r0, r1, #0x19
	lsr	r0, r0, #0x1f
	strb	r0, [r4, #0x10]
	bl	DoRecv
	bl	DoSend
	bl	SendRecvDone
	b	.L880
.L890:
	.align	2, 0
.L889:
	.word	gLink
	.word	0x4000128
.L882:
	bl	DoHandshake
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L880	@cond_branch
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L884	@cond_branch
	mov	r0, #0x3
	strb	r0, [r4, #0x1]
	mov	r0, #0x8
	strb	r0, [r4, #0xd]
	b	.L880
.L884:
	mov	r0, #0x4
	strb	r0, [r4, #0x1]
.L880:
	ldr	r3, .L891
	ldrb	r0, [r3, #0xd]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r3, #0xd]
	ldr	r1, .L891+0x4
	strb	r2, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x8
	bne	.L888	@cond_branch
	ldr	r0, .L891+0x8
	ldr	r2, .L891+0xc
	add	r1, r3, r2
	ldrb	r1, [r1]
	strb	r1, [r0]
.L888:
	pop	{r4}
	pop	{r0}
	bx	r0
.L892:
	.align	2, 0
.L891:
	.word	gLink
	.word	sNumVBlanksWithoutSerialIntr
	.word	gLastRecvQueueCount
	.word	0xfbd
.Lfe106:
	.size	 SerialCB,.Lfe106-SerialCB
	.align	2, 0
	.type	 StartTransfer,function
	.thumb_func
StartTransfer:
	ldr	r0, .L894
	ldrh	r1, [r0]
	mov	r2, #0x80
	orr	r1, r1, r2
	strh	r1, [r0]
	bx	lr
.L895:
	.align	2, 0
.L894:
	.word	0x4000128
.Lfe107:
	.size	 StartTransfer,.Lfe107-StartTransfer
	.align	2, 0
	.type	 DoHandshake,function
	.thumb_func
DoHandshake:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r5, #0x0
	ldr	r6, .L915
	ldr	r0, .L915+0x4
	ldrb	r1, [r0, #0xe]
	add	r7, r0, #0
	cmp	r1, #0x1
	bne	.L897	@cond_branch
	ldr	r1, .L915+0x8
	ldr	r2, .L915+0xc
	b	.L913
.L916:
	.align	2, 0
.L915:
	.word	0xffff
	.word	gLink
	.word	0x400012a
	.word	0x8fff
.L897:
	ldr	r1, .L917
	ldr	r2, .L917+0x4
.L913:
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r2, .L917+0x8
	ldr	r3, .L917+0xc
	ldr	r0, [r3]		@ created by thumb_load_double_from_address
	ldr	r1, [r3, #0x4]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	mov	r0, #0x0
	mov	r1, #0
	str	r0, [r3]
	str	r1, [r3, #0x4]
	strb	r0, [r2, #0xa]
	mov	r4, #0x0
	ldr	r0, .L917+0x10
	mov	r9, r0
	mov	r8, r2
	ldr	r2, .L917+0x14
	ldr	r1, .L917+0x18
	mov	ip, r1
.L902:
	lsl	r0, r4, #0x1
	add	r0, r0, r8
	ldrh	r3, [r0]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r3
	ldr	r1, .L917+0x4
	cmp	r0, r1
	beq	.L904	@cond_branch
	add	r0, r3, #0
	cmp	r0, r2
	bne	.L903	@cond_branch
.L904:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r3, #0
	cmp	r6, r0
	bls	.L901	@cond_branch
	cmp	r0, #0
	beq	.L901	@cond_branch
	add	r6, r3, #0
	b	.L901
.L918:
	.align	2, 0
.L917:
	.word	0x400012a
	.word	0xb9a0
	.word	gLink+0x4
	.word	0x4000120
	.word	sHandshakePlayerCount
	.word	0x8fff
	.word	0xffff
.L903:
	cmp	r0, ip
	beq	.L900	@cond_branch
	mov	r5, #0x0
	b	.L900
.L901:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L902	@cond_branch
.L900:
	strb	r5, [r7, #0x3]
	add	r0, r5, #0
	cmp	r0, #0x1
	bls	.L910	@cond_branch
	mov	r2, r9
	ldrb	r2, [r2]
	cmp	r0, r2
	bne	.L909	@cond_branch
	ldrh	r1, [r7, #0x4]
	ldr	r0, .L919
	cmp	r1, r0
	bne	.L909	@cond_branch
	mov	r0, #0x1
	b	.L912
.L920:
	.align	2, 0
.L919:
	.word	0x8fff
.L909:
	ldrb	r0, [r7, #0x3]
	cmp	r0, #0x1
	bls	.L910	@cond_branch
	mov	r0, #0x3
	and	r6, r6, r0
	add	r0, r6, #0x1
	b	.L914
.L910:
	mov	r0, #0x0
.L914:
	strb	r0, [r7, #0xf]
	ldrb	r0, [r7, #0x3]
	mov	r1, r9
	strb	r0, [r1]
	mov	r0, #0x0
.L912:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe108:
	.size	 DoHandshake,.Lfe108-DoHandshake
	.align	2, 0
	.type	 DoRecv,function
	.thumb_func
DoRecv:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	ldr	r0, .L939
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r0, .L939+0x4
	ldrb	r1, [r0, #0x16]
	add	r6, r0, #0
	cmp	r1, #0
	bne	.L922	@cond_branch
	mov	r4, #0x0
	ldr	r7, .L939+0x8
	ldrb	r0, [r6, #0x3]
	cmp	r4, r0
	bcs	.L924	@cond_branch
	add	r5, r6, #0
	ldrh	r1, [r6, #0x14]
	add	r3, r7, #0
	add	r2, r6, #0
.L926:
	lsl	r0, r4, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	cmp	r1, r0
	beq	.L925	@cond_branch
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L925	@cond_branch
	mov	r0, #0x1
	strb	r0, [r5, #0x11]
.L925:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrb	r0, [r2, #0x3]
	cmp	r4, r0
	bcc	.L926	@cond_branch
.L924:
	mov	r0, #0x0
	strh	r0, [r6, #0x14]
	mov	r0, #0x1
	strb	r0, [r7]
	b	.L929
.L940:
	.align	2, 0
.L939:
	.word	0x4000120
	.word	gLink
	.word	sChecksumAvailable
.L922:
	ldr	r2, .L941
	add	r1, r6, r2
	add	r2, r2, #0x1
	add	r0, r6, r2
	ldrb	r2, [r0]
	ldrb	r1, [r1]
	add	r0, r2, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x31
	bls	.L930	@cond_branch
	sub	r0, r0, #0x32
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L930:
	cmp	r2, #0x31
	bhi	.L931	@cond_branch
	mov	r4, #0x0
	ldrb	r1, [r6, #0x3]
	cmp	r4, r1
	bcs	.L937	@cond_branch
	add	r5, r6, #0
	ldr	r7, .L941+0x4
	lsl	r0, r0, #0x1
	mov	ip, r0
	mov	r2, #0xcf
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	mov	r8, r2
.L935:
	lsl	r1, r4, #0x1
	mov	r2, sp
	add	r0, r2, r1
	ldrh	r3, [r0]
	ldrh	r2, [r5, #0x14]
	add	r0, r3, r2
	strh	r0, [r5, #0x14]
	ldrh	r0, [r7]
	orr	r0, r0, r3
	strh	r0, [r7]
	ldrb	r2, [r5, #0x17]
	mov	r0, #0x64
	mul	r0, r0, r2
	add	r0, r0, ip
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	add	r0, r0, r8
	strh	r3, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrb	r0, [r5, #0x3]
	cmp	r4, r0
	bcc	.L935	@cond_branch
	b	.L937
.L942:
	.align	2, 0
.L941:
	.word	0xfbc
	.word	sRecvNonzeroCheck
.L931:
	mov	r0, #0x2
	strb	r0, [r6, #0x12]
.L937:
	ldrb	r0, [r6, #0x17]
	add	r0, r0, #0x1
	strb	r0, [r6, #0x17]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	bne	.L929	@cond_branch
	ldr	r2, .L943
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L929	@cond_branch
	ldr	r1, .L943+0x4
	add	r0, r6, r1
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r2]
.L929:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L944:
	.align	2, 0
.L943:
	.word	sRecvNonzeroCheck
	.word	0xfbd
.Lfe109:
	.size	 DoRecv,.Lfe109-DoRecv
	.align	2, 0
	.type	 DoSend,function
	.thumb_func
DoSend:
	push	{r4, lr}
	ldr	r0, .L955
	ldrb	r1, [r0, #0x16]
	add	r4, r0, #0
	cmp	r1, #0x8
	bne	.L946	@cond_branch
	ldr	r1, .L955+0x4
	ldrh	r0, [r4, #0x14]
	strh	r0, [r1]
	ldr	r1, .L955+0x8
	ldrb	r2, [r1]
	cmp	r2, #0
	bne	.L947	@cond_branch
	ldr	r0, .L955+0xc
	add	r1, r4, r0
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0xce
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x31
	bls	.L950	@cond_branch
	strb	r2, [r1]
	b	.L950
.L956:
	.align	2, 0
.L955:
	.word	gLink
	.word	0x400012a
	.word	sSendBufferEmpty
	.word	0x339
.L947:
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L950
.L946:
	ldr	r1, .L957
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L954	@cond_branch
	ldr	r2, .L957+0x4
	add	r0, r4, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L951	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
.L951:
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L952	@cond_branch
.L954:
	ldr	r1, .L957+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L953
.L958:
	.align	2, 0
.L957:
	.word	sSendBufferEmpty
	.word	0x339
	.word	0x400012a
.L952:
	ldr	r3, .L959
	mov	r1, #0xce
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	ldrb	r2, [r4, #0x16]
	mov	r1, #0x64
	mul	r1, r1, r2
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x18
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r3]
.L953:
	ldrb	r0, [r4, #0x16]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x16]
.L950:
	pop	{r4}
	pop	{r0}
	bx	r0
.L960:
	.align	2, 0
.L959:
	.word	0x400012a
.Lfe110:
	.size	 DoSend,.Lfe110-DoSend
	.align	2, 0
	.type	 StopTimer,function
	.thumb_func
StopTimer:
	push	{lr}
	ldr	r0, .L963
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L962	@cond_branch
	ldr	r2, .L963+0x4
	ldrh	r1, [r2]
	ldr	r0, .L963+0x8
	and	r0, r0, r1
	strh	r0, [r2]
	ldr	r1, .L963+0xc
	ldr	r2, .L963+0x10
	add	r0, r2, #0
	strh	r0, [r1]
.L962:
	pop	{r0}
	bx	r0
.L964:
	.align	2, 0
.L963:
	.word	gLink
	.word	0x400010e
	.word	0xff7f
	.word	0x400010c
	.word	0xff3b
.Lfe111:
	.size	 StopTimer,.Lfe111-StopTimer
	.align	2, 0
	.type	 SendRecvDone,function
	.thumb_func
SendRecvDone:
	push	{lr}
	ldr	r1, .L969
	ldrb	r0, [r1, #0x17]
	cmp	r0, #0x8
	bne	.L966	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1, #0x16]
	strb	r0, [r1, #0x17]
	b	.L967
.L970:
	.align	2, 0
.L969:
	.word	gLink
.L966:
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L967	@cond_branch
	ldr	r0, .L971
	ldrh	r1, [r0]
	mov	r2, #0x80
	orr	r1, r1, r2
	strh	r1, [r0]
.L967:
	pop	{r0}
	bx	r0
.L972:
	.align	2, 0
.L971:
	.word	0x400010e
.Lfe112:
	.size	 SendRecvDone,.Lfe112-SendRecvDone
	.align	2, 0
	.globl	ResetSendBuffer
	.type	 ResetSendBuffer,function
	.thumb_func
ResetSendBuffer:
	push	{r4, r5, r6, lr}
	ldr	r1, .L984
	ldr	r2, .L984+0x4
	add	r0, r1, r2
	mov	r2, #0x0
	strb	r2, [r0]
	mov	r3, #0xce
	lsl	r3, r3, #0x2
	add	r0, r1, r3
	strb	r2, [r0]
	mov	r0, #0x0
	mov	r6, #0x64
	add	r5, r1, #0
	add	r5, r5, #0x18
	ldr	r4, .L984+0x8
.L977:
	mov	r2, #0x0
	add	r1, r0, #0x1
	mov	r3, r0
	mul	r3, r3, r6
.L981:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	add	r0, r0, r5
	strh	r4, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x31
	bls	.L981	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x7
	bls	.L977	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L985:
	.align	2, 0
.L984:
	.word	gLink
	.word	0x339
	.word	0xefff
.Lfe113:
	.size	 ResetSendBuffer,.Lfe113-ResetSendBuffer
	.align	2, 0
	.globl	ResetRecvBuffer
	.type	 ResetRecvBuffer,function
	.thumb_func
ResetRecvBuffer:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L1002
	ldr	r2, .L1002+0x4
	add	r0, r1, r2
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r3, .L1002+0x8
	add	r0, r1, r3
	strb	r2, [r0]
	mov	r0, #0x64
	mov	ip, r0
	mov	r3, #0xcf
	lsl	r3, r3, #0x2
	add	r7, r1, r3
	ldr	r6, .L1002+0xc
.L990:
	mov	r3, #0x0
	lsl	r0, r2, #0x1
	add	r5, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	lsl	r4, r0, #0x5
.L994:
	mov	r2, #0x0
	add	r1, r3, #0x1
	mov	r0, ip
	mul	r0, r0, r3
	add	r3, r0, #0
.L998:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	add	r0, r0, r4
	add	r0, r0, r7
	strh	r6, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x31
	bls	.L998	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x7
	bls	.L994	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L990	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1003:
	.align	2, 0
.L1002:
	.word	gLink
	.word	0xfbd
	.word	0xfbc
	.word	0xefff
.Lfe114:
	.size	 ResetRecvBuffer,.Lfe114-ResetRecvBuffer
	.comm	gLink, 4032	@ 4032
	.comm	gRecvCmds, 80	@ 80
	.comm	gLinkStatus, 4	@ 4
	.comm	gSendCmd, 16	@ 16
	.comm	gShouldAdvanceLinkState, 4	@ 1
	.comm	gReceivedRemoteLinkPlayers, 4	@ 1
	.comm	gWirelessCommType, 4	@ 1
	.comm	gLinkPartnersHeldKeys, 12	@ 12

	.lcomm	sBlockSend,12

	.lcomm	sBlockRecv,48

	.lcomm	sBlockSendDelayCounter,4

	.lcomm	sDummy1,4

	.lcomm	sDummy2,1

	.lcomm	sPlayerDataExchangeStatus,4

	.lcomm	sDummy3,4

	.lcomm	sLinkTestLastBlockSendPos,1

	.lcomm	sLinkTestLastBlockRecvPos,4

	.lcomm	sNumVBlanksWithoutSerialIntr,1

	.lcomm	sSendBufferEmpty,1

	.lcomm	sSendNonzeroCheck,2

	.lcomm	sRecvNonzeroCheck,2

	.lcomm	sChecksumAvailable,1

	.lcomm	sHandshakePlayerCount,1
	.comm	gLinkDebugSeed, 4	@ 4
	.comm	gLocalLinkPlayerBlock, 60	@ 60
	.comm	gLinkErrorOccurred, 4	@ 1
	.comm	gLinkDebugFlags, 4	@ 4
	.comm	gLinkFiller1, 4	@ 4
	.comm	gRemoteLinkPlayersNotReceived, 4	@ 4
	.comm	gBlockReceivedStatus, 4	@ 4
	.comm	gLinkFiller2, 4	@ 4
	.comm	gLinkHeldKeys, 4	@ 2
	.comm	gLinkDummy1, 4	@ 1
	.comm	gLinkDummy2, 4	@ 1
	.comm	gReadyToExitStandby, 4	@ 4
	.comm	gReadyToCloseLink, 4	@ 4
	.comm	gReadyCloseLinkType, 4	@ 2
	.comm	gSuppressLinkErrorMessage, 4	@ 1
	.comm	gSavedLinkPlayerCount, 4	@ 1
	.comm	gSavedMultiplayerId, 4	@ 1
	.comm	gLinkTestBGInfo, 16	@ 16
	.comm	gLinkCallback, 4	@ 4
	.comm	gLinkTestBlockChecksums, 8	@ 8
	.comm	gBlockRequestType, 4	@ 1
	.comm	gLinkFiller3, 4	@ 4
	.comm	gLinkFiller4, 4	@ 4
	.comm	gLinkFiller5, 4	@ 4
	.comm	gLastSendQueueCount, 4	@ 1
	.comm	gLastRecvQueueCount, 4	@ 1
	.comm	gLinkSavedIme, 4	@ 2
.text
	.align	2, 0 @ Don't pad with nop

