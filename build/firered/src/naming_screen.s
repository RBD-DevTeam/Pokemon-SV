@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sNamingScreen,object
	.size	 sNamingScreen,4
sNamingScreen:
	.word	0x0
	.section .rodata
	.align	1, 0
	.type	 sPCIconOff_Gfx,object
sPCIconOff_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3300
	.short	0x3333
	.short	0x8830
	.short	0x8888
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3333
	.short	0x33
	.short	0x8888
	.short	0x388
	.short	0x5830
	.short	0x5555
	.short	0x5830
	.short	0x5d5d
	.short	0x5830
	.short	0xd5d5
	.short	0x5830
	.short	0x5d5d
	.short	0x5830
	.short	0xd5d5
	.short	0x5830
	.short	0x5d5d
	.short	0x5830
	.short	0x5555
	.short	0x8830
	.short	0x8888
	.short	0x5555
	.short	0x385
	.short	0x5d5d
	.short	0x385
	.short	0xd5d5
	.short	0x385
	.short	0x5d5d
	.short	0x385
	.short	0xd5d5
	.short	0x385
	.short	0x5d5d
	.short	0x385
	.short	0x5555
	.short	0x385
	.short	0xa888
	.short	0x388
	.short	0x3300
	.short	0x3333
	.short	0x0
	.short	0x33d0
	.short	0x3300
	.short	0x3333
	.short	0xff30
	.short	0x8fff
	.short	0xa830
	.short	0x8888
	.short	0x5530
	.short	0x5555
	.short	0x3300
	.short	0x3333
	.short	0x0
	.short	0x0
	.short	0x3333
	.short	0x33
	.short	0xd33
	.short	0x0
	.short	0x3333
	.short	0x33
	.short	0x8888
	.short	0x388
	.short	0xdd38
	.short	0x38d
	.short	0x5555
	.short	0x355
	.short	0x3333
	.short	0x33
	.short	0x0
	.short	0x0
	.size	 sPCIconOff_Gfx,192
	.align	1, 0
	.type	 sPCIconOn_Gfx,object
sPCIconOn_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3300
	.short	0x3333
	.short	0x8830
	.short	0x8888
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3333
	.short	0x33
	.short	0x8888
	.short	0x388
	.short	0xe830
	.short	0xe8e8
	.short	0x8830
	.short	0xffff
	.short	0xe830
	.short	0xffff
	.short	0x8830
	.short	0x8e8e
	.short	0xe830
	.short	0xffef
	.short	0x8830
	.short	0xff8f
	.short	0xe830
	.short	0xe8e8
	.short	0x8830
	.short	0x8888
	.short	0xe8e8
	.short	0x388
	.short	0xffff
	.short	0x38e
	.short	0xffff
	.short	0x388
	.short	0x8e8e
	.short	0x38e
	.short	0xffff
	.short	0x388
	.short	0x8efe
	.short	0x38e
	.short	0xe8e8
	.short	0x388
	.short	0xa888
	.short	0x388
	.short	0x3300
	.short	0x3333
	.short	0x0
	.short	0x33d0
	.short	0x3300
	.short	0x3333
	.short	0xff30
	.short	0x8fff
	.short	0xa830
	.short	0x8888
	.short	0x5530
	.short	0x5555
	.short	0x3300
	.short	0x3333
	.short	0x0
	.short	0x0
	.short	0x3333
	.short	0x33
	.short	0xd33
	.short	0x0
	.short	0x3333
	.short	0x33
	.short	0x8888
	.short	0x388
	.short	0xdd38
	.short	0x38d
	.short	0x5555
	.short	0x355
	.short	0x3333
	.short	0x33
	.short	0x0
	.short	0x0
	.size	 sPCIconOn_Gfx,192
	.align	1, 0
	.type	 sRival_Gfx,object
sRival_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0xddd0
	.short	0xdd00
	.short	0xd65d
	.short	0x66d0
	.short	0x6555
	.short	0x6d00
	.short	0x6555
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xd75
	.short	0x0
	.short	0xd666
	.short	0x0
	.short	0x7666
	.short	0xd0d
	.short	0x6666
	.short	0xddd
	.short	0xdf00
	.short	0x5555
	.short	0x66f0
	.short	0x5756
	.short	0x666f
	.short	0xd666
	.short	0xff40
	.short	0x3dd6
	.short	0xd340
	.short	0x223d
	.short	0x4400
	.short	0x1f12
	.short	0xf000
	.short	0x2d23
	.short	0xa400
	.short	0x334f
	.short	0x5666
	.short	0xd67
	.short	0x6555
	.short	0x766
	.short	0x6d66
	.short	0xd76
	.short	0xd3d6
	.short	0xf3d
	.short	0x313d
	.short	0xf3d
	.short	0x21f1
	.short	0xf4
	.short	0x32d2
	.short	0xf
	.short	0xf433
	.short	0x4a
	.short	0xa340
	.short	0x4fff
	.short	0x3340
	.short	0x4fff
	.short	0xff00
	.short	0xaaff
	.short	0xf000
	.short	0xff7c
	.short	0xf000
	.short	0xdccf
	.short	0xf000
	.short	0xfaa
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0xfff4
	.short	0x43a
	.short	0xfff4
	.short	0xd33
	.short	0xffaa
	.short	0xdf
	.short	0xc7ff
	.short	0xf
	.short	0xfccd
	.short	0xf
	.short	0xaaf0
	.short	0xf
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0x57d0
	.short	0x0
	.short	0x665d
	.short	0xd0d0
	.short	0x6667
	.short	0xddd0
	.short	0x6655
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xd66d
	.short	0xdd
	.short	0x6666
	.short	0xd66
	.short	0x6666
	.short	0xd6
	.short	0x76d0
	.short	0x6655
	.short	0x6670
	.short	0x6555
	.short	0x6d00
	.short	0x5556
	.short	0x4340
	.short	0x6666
	.short	0x4340
	.short	0x6667
	.short	0xf400
	.short	0x6777
	.short	0xf000
	.short	0x7777
	.short	0xa400
	.short	0x77ff
	.short	0x6666
	.short	0xfd
	.short	0x6666
	.short	0xf6
	.short	0x6655
	.short	0xf46
	.short	0x6666
	.short	0x434
	.short	0x7666
	.short	0x434
	.short	0x7776
	.short	0x4f
	.short	0x7777
	.short	0xf
	.short	0xff77
	.short	0x4a
	.short	0xa240
	.short	0xffff
	.short	0x33d0
	.short	0xffff
	.short	0xfd00
	.short	0xaaff
	.short	0xf000
	.short	0xff7c
	.short	0xf000
	.short	0xdccf
	.short	0xf000
	.short	0xfaa
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0xffff
	.short	0x42a
	.short	0xffff
	.short	0x433
	.short	0xffaa
	.short	0xff
	.short	0xc7ff
	.short	0xf
	.short	0xfccd
	.short	0xf
	.short	0xaaf0
	.short	0xf
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xdd00
	.short	0xdd00
	.short	0x6dd7
	.short	0x65d0
	.short	0x6d76
	.short	0x6d00
	.short	0x6766
	.short	0x7d00
	.short	0x6666
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xdd6
	.short	0x0
	.short	0xd666
	.short	0xd0
	.short	0x6666
	.short	0xdd
	.short	0x56d0
	.short	0x6665
	.short	0x666d
	.short	0x6555
	.short	0x76d0
	.short	0x6676
	.short	0x2d00
	.short	0x7776
	.short	0x1400
	.short	0x7327
	.short	0x1400
	.short	0x21f1
	.short	0x4000
	.short	0x32d2
	.short	0x0
	.short	0x3334
	.short	0x6666
	.short	0xd7
	.short	0x6666
	.short	0xd7
	.short	0x7776
	.short	0xd7
	.short	0x7777
	.short	0xd7
	.short	0x7ddd
	.short	0xf
	.short	0x731d
	.short	0xf
	.short	0xf323
	.short	0x0
	.short	0xf43
	.short	0x0
	.short	0x0
	.short	0xfa4f
	.short	0x0
	.short	0xafff
	.short	0x0
	.short	0xafff
	.short	0x0
	.short	0x3fd0
	.short	0x0
	.short	0xdcf0
	.short	0x0
	.short	0xaaf0
	.short	0x0
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0xfff
	.short	0x0
	.short	0xffa
	.short	0x0
	.short	0xffa
	.short	0x0
	.short	0xff3
	.short	0x0
	.short	0xfd
	.short	0x0
	.short	0xfa
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0xddd0
	.short	0xdd00
	.short	0xd65d
	.short	0x66d0
	.short	0x6555
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xd75
	.short	0x0
	.short	0xd666
	.short	0x0
	.short	0x7666
	.short	0xd0d
	.short	0x6d00
	.short	0x6555
	.short	0xdf00
	.short	0x5555
	.short	0x66f0
	.short	0x5756
	.short	0x666f
	.short	0xd666
	.short	0xff40
	.short	0x3dd6
	.short	0xd340
	.short	0x223d
	.short	0x4440
	.short	0x1f12
	.short	0xfa34
	.short	0x2d23
	.short	0x6666
	.short	0xddd
	.short	0x5666
	.short	0xd67
	.short	0x6555
	.short	0x766
	.short	0x6d66
	.short	0xd76
	.short	0xd3d6
	.short	0xf3d
	.short	0x313d
	.short	0xf3d
	.short	0x21f1
	.short	0xf4
	.short	0x32d2
	.short	0xf
	.short	0xaa34
	.short	0x334f
	.short	0xaff0
	.short	0xffff
	.short	0xf000
	.short	0x4fff
	.short	0xf000
	.short	0xafff
	.short	0xf000
	.short	0xffac
	.short	0x0
	.short	0xaccf
	.short	0x0
	.short	0xfaaf
	.short	0x0
	.short	0xff0
	.short	0xf433
	.short	0xa
	.short	0xafff
	.short	0xfa
	.short	0x2df4
	.short	0x42
	.short	0x3dfa
	.short	0x43
	.short	0xdfff
	.short	0xd
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0xddd0
	.short	0xdd00
	.short	0xd65d
	.short	0x66d0
	.short	0x6555
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xd75
	.short	0x0
	.short	0xd666
	.short	0x0
	.short	0x7666
	.short	0xd0d
	.short	0x6d00
	.short	0x6555
	.short	0xdf00
	.short	0x5555
	.short	0x66f0
	.short	0x5756
	.short	0x666f
	.short	0xd666
	.short	0xff40
	.short	0x3dd6
	.short	0xd340
	.short	0x223d
	.short	0x4400
	.short	0x1f12
	.short	0xf000
	.short	0x2d23
	.short	0x6666
	.short	0xddd
	.short	0x5666
	.short	0xd67
	.short	0x6555
	.short	0x766
	.short	0x6d66
	.short	0xd76
	.short	0xd3d6
	.short	0xf3d
	.short	0x313d
	.short	0xf3d
	.short	0x21f1
	.short	0x4f4
	.short	0x32d2
	.short	0x43af
	.short	0xa000
	.short	0x334f
	.short	0xaf00
	.short	0xfffa
	.short	0x2400
	.short	0x4fd2
	.short	0x3400
	.short	0xafd3
	.short	0xd000
	.short	0xfffd
	.short	0x0
	.short	0xff00
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf433
	.short	0x43aa
	.short	0xffff
	.short	0xffa
	.short	0xfff4
	.short	0xf
	.short	0xfffa
	.short	0xf
	.short	0xcaff
	.short	0xf
	.short	0xfcca
	.short	0x0
	.short	0xfaaf
	.short	0x0
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0x57d0
	.short	0x0
	.short	0x665d
	.short	0xd0d0
	.short	0x6667
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xd66d
	.short	0xdd
	.short	0x6666
	.short	0xd66
	.short	0xddd0
	.short	0x6655
	.short	0x76d0
	.short	0x6655
	.short	0x6670
	.short	0x6555
	.short	0x6d00
	.short	0x5556
	.short	0x4340
	.short	0x6666
	.short	0x4340
	.short	0x6667
	.short	0xf400
	.short	0x6777
	.short	0xf340
	.short	0x7777
	.short	0x6666
	.short	0xd6
	.short	0x6666
	.short	0xfd
	.short	0x6666
	.short	0xf6
	.short	0x6655
	.short	0xf46
	.short	0x6666
	.short	0x434
	.short	0x7666
	.short	0x434
	.short	0x7776
	.short	0x4f
	.short	0x7777
	.short	0xf
	.short	0xa640
	.short	0x77ff
	.short	0xff00
	.short	0xffff
	.short	0xf000
	.short	0xfffa
	.short	0xf000
	.short	0xfaac
	.short	0xf000
	.short	0xcccc
	.short	0x0
	.short	0xdccd
	.short	0x0
	.short	0xfaaf
	.short	0x0
	.short	0xff0
	.short	0xff77
	.short	0x4a
	.short	0xffff
	.short	0xff
	.short	0xffff
	.short	0xf36
	.short	0xafff
	.short	0xf33
	.short	0xddcc
	.short	0xff
	.short	0xffff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0x57d0
	.short	0x0
	.short	0x665d
	.short	0xd0d0
	.short	0x6667
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xd66d
	.short	0xdd
	.short	0x6666
	.short	0xd66
	.short	0xddd0
	.short	0x6655
	.short	0x76d0
	.short	0x6655
	.short	0x6670
	.short	0x6555
	.short	0x6d00
	.short	0x5556
	.short	0x4340
	.short	0x6666
	.short	0x4340
	.short	0x6667
	.short	0xf400
	.short	0x6777
	.short	0xf000
	.short	0x7777
	.short	0x6666
	.short	0xd6
	.short	0x6666
	.short	0xfd
	.short	0x6666
	.short	0xf6
	.short	0x6655
	.short	0xf46
	.short	0x6666
	.short	0x434
	.short	0x7666
	.short	0x434
	.short	0x7776
	.short	0x4f
	.short	0x7777
	.short	0x43f
	.short	0xa400
	.short	0x77ff
	.short	0xff00
	.short	0xffff
	.short	0x63f0
	.short	0xffff
	.short	0x33f0
	.short	0xfffa
	.short	0xff00
	.short	0xccdd
	.short	0x0
	.short	0xffff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xff77
	.short	0x46a
	.short	0xffff
	.short	0xff
	.short	0xafff
	.short	0xf
	.short	0xcaaf
	.short	0xf
	.short	0xcccc
	.short	0xf
	.short	0xdccd
	.short	0x0
	.short	0xfaaf
	.short	0x0
	.short	0xff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xdd00
	.short	0xdd00
	.short	0x6dd7
	.short	0x65d0
	.short	0x6d76
	.short	0x6d00
	.short	0x6766
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xdd6
	.short	0x0
	.short	0xd666
	.short	0xd0
	.short	0x7d00
	.short	0x6666
	.short	0x56d0
	.short	0x6665
	.short	0x666d
	.short	0x6555
	.short	0x76d0
	.short	0x6676
	.short	0x2d00
	.short	0x7776
	.short	0x1400
	.short	0x7327
	.short	0x1400
	.short	0x21f1
	.short	0x4000
	.short	0x32d2
	.short	0x6666
	.short	0xdd
	.short	0x6666
	.short	0xd7
	.short	0x6666
	.short	0xd7
	.short	0x7776
	.short	0xd7
	.short	0x7777
	.short	0xd7
	.short	0x7ddd
	.short	0xf
	.short	0x731d
	.short	0xf
	.short	0xf323
	.short	0x0
	.short	0x0
	.short	0x3334
	.short	0x0
	.short	0xfa4f
	.short	0x0
	.short	0xf22f
	.short	0xf000
	.short	0xf33a
	.short	0xf000
	.short	0xfffa
	.short	0x0
	.short	0xf0ff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf43
	.short	0x0
	.short	0xfff
	.short	0x0
	.short	0xfff
	.short	0x0
	.short	0xfdff
	.short	0x0
	.short	0xaddd
	.short	0xf
	.short	0xaaff
	.short	0xf
	.short	0xfff0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xdd00
	.short	0xdd00
	.short	0x6dd7
	.short	0x65d0
	.short	0x6d76
	.short	0x6d00
	.short	0x6766
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xdd6
	.short	0x0
	.short	0xd666
	.short	0xd0
	.short	0x7d00
	.short	0x6666
	.short	0x56d0
	.short	0x6665
	.short	0x666d
	.short	0x6555
	.short	0x76d0
	.short	0x6676
	.short	0x2d00
	.short	0x7776
	.short	0x1400
	.short	0x7327
	.short	0x1400
	.short	0x21f1
	.short	0x4000
	.short	0x32d2
	.short	0x6666
	.short	0xdd
	.short	0x6666
	.short	0xd7
	.short	0x6666
	.short	0xd7
	.short	0x7776
	.short	0xd7
	.short	0x7777
	.short	0xd7
	.short	0x7ddd
	.short	0xf
	.short	0x731d
	.short	0xf
	.short	0xf323
	.short	0x0
	.short	0x0
	.short	0x3334
	.short	0x0
	.short	0xfadf
	.short	0x0
	.short	0xffff
	.short	0xf000
	.short	0xffdf
	.short	0xaf00
	.short	0xdddf
	.short	0xf000
	.short	0xffaa
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0xf43
	.short	0x0
	.short	0xffa
	.short	0x0
	.short	0xf22f
	.short	0x0
	.short	0xf33f
	.short	0x0
	.short	0xfaff
	.short	0x0
	.short	0xfff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sRival_Gfx,2304
	.align	2, 0
	.type	 sTransferredToPCMessages,object
sTransferredToPCMessages:
	.word	Text_MonSentToBoxInSomeonesPC
	.word	Text_MonSentToBoxInBillsPC
	.word	Text_MonSentToBoxSomeonesBoxFull
	.word	Text_MonSentToBoxBillsBoxFull
	.size	 sTransferredToPCMessages,16
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xe0
	.byte	0x1
	.space	2
	.byte	0xd9
	.byte	0x11
	.space	2
	.byte	0xca
	.byte	0x21
	.space	2
	.byte	0xff
	.byte	0x31
	.space	2
	.align	2, 0
	.type	 sWindowTemplates,object
	.size	 sWindowTemplates,48
sWindowTemplates:
	.byte	0x1
	.byte	0x3
	.byte	0xa
	.byte	0x13
	.byte	0x8
	.byte	0xa
	.short	0x30
	.byte	0x2
	.byte	0x3
	.byte	0xa
	.byte	0x13
	.byte	0x8
	.byte	0xa
	.short	0xc8
	.byte	0x3
	.byte	0x8
	.byte	0x6
	.byte	0xe
	.byte	0x2
	.byte	0xa
	.short	0x30
	.byte	0x3
	.byte	0x9
	.byte	0x4
	.byte	0x10
	.byte	0x2
	.byte	0xa
	.short	0x4c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xb
	.short	0x6c
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.type	 sKeyboardChars,object
	.size	 sKeyboardChars,96
sKeyboardChars:
	.byte	0xd5
	.byte	0xd6
	.byte	0xd7
	.byte	0xd8
	.byte	0xd9
	.byte	0xda
	.byte	0x0
	.byte	0xad
	.byte	0xdb
	.byte	0xdc
	.byte	0xdd
	.byte	0xde
	.byte	0xdf
	.byte	0xe0
	.byte	0x0
	.byte	0xb8
	.byte	0xe1
	.byte	0xe2
	.byte	0xe3
	.byte	0xe4
	.byte	0xe5
	.byte	0xe6
	.byte	0xe7
	.space	1
	.byte	0xe8
	.byte	0xe9
	.byte	0xea
	.byte	0xeb
	.byte	0xec
	.byte	0xed
	.byte	0xee
	.space	1
	.byte	0xbb
	.byte	0xbc
	.byte	0xbd
	.byte	0xbe
	.byte	0xbf
	.byte	0xc0
	.byte	0x0
	.byte	0xad
	.byte	0xc1
	.byte	0xc2
	.byte	0xc3
	.byte	0xc4
	.byte	0xc5
	.byte	0xc6
	.byte	0x0
	.byte	0xb8
	.byte	0xc7
	.byte	0xc8
	.byte	0xc9
	.byte	0xca
	.byte	0xcb
	.byte	0xcc
	.byte	0xcd
	.space	1
	.byte	0xce
	.byte	0xcf
	.byte	0xd0
	.byte	0xd1
	.byte	0xd2
	.byte	0xd3
	.byte	0xd4
	.space	1
	.byte	0xa1
	.byte	0xa2
	.byte	0xa3
	.byte	0xa4
	.byte	0xa5
	.space	3
	.byte	0xa6
	.byte	0xa7
	.byte	0xa8
	.byte	0xa9
	.byte	0xaa
	.space	3
	.byte	0xab
	.byte	0xac
	.byte	0xb5
	.byte	0xb6
	.byte	0xba
	.byte	0xae
	.space	2
	.byte	0xb0
	.byte	0xb1
	.byte	0xb2
	.byte	0xb3
	.byte	0xb4
	.space	3
	.type	 sPageColumnCounts,object
sPageColumnCounts:
	.byte	0x8
	.byte	0x8
	.byte	0x6
	.size	 sPageColumnCounts,3
	.type	 sPageColumnXPos,object
	.size	 sPageColumnXPos,24
sPageColumnXPos:
	.byte	0x0
	.byte	0xc
	.byte	0x18
	.byte	0x38
	.byte	0x44
	.byte	0x50
	.byte	0x5c
	.byte	0x7b
	.byte	0x0
	.byte	0xc
	.byte	0x18
	.byte	0x38
	.byte	0x44
	.byte	0x50
	.byte	0x5c
	.byte	0x7b
	.byte	0x0
	.byte	0x16
	.byte	0x2c
	.byte	0x42
	.byte	0x58
	.byte	0x6e
	.space	2
.text
	.align	2, 0
	.globl	DoNamingScreen
	.type	 DoNamingScreen,function
	.thumb_func
DoNamingScreen:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r6, r3, #0x10
	ldr	r4, .L6
	mov	r0, #0xf2
	lsl	r0, r0, #0x5
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldr	r0, [sp, #0x1c]
	bl	SetMainCallback2
	b	.L4
.L7:
	.align	2, 0
.L6:
	.word	sNamingScreen
.L3:
	ldr	r1, .L8
	add	r0, r0, r1
	strb	r7, [r0]
	ldr	r0, [r4]
	ldr	r2, .L8+0x4
	add	r1, r0, r2
	strh	r5, [r1]
	add	r2, r2, #0x2
	add	r1, r0, r2
	strh	r6, [r1]
	ldr	r1, .L8+0x8
	add	r2, r0, r1
	ldr	r1, [sp, #0x18]
	str	r1, [r2]
	ldr	r2, .L8+0xc
	add	r1, r0, r2
	mov	r2, r8
	str	r2, [r1]
	ldr	r1, .L8+0x10
	add	r0, r0, r1
	ldr	r2, [sp, #0x1c]
	str	r2, [r0]
	cmp	r7, #0
	bne	.L5	@cond_branch
	bl	StartTimer1
.L5:
	ldr	r0, .L8+0x14
	bl	SetMainCallback2
.L4:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	0x1e2c
	.word	0x1e34
	.word	0x1e38
	.word	0x1e30
	.word	0x1e3c
	.word	CB2_LoadNamingScreen
.Lfe1:
	.size	 DoNamingScreen,.Lfe1-DoNamingScreen
	.align	2, 0
	.type	 CB2_LoadNamingScreen,function
	.thumb_func
CB2_LoadNamingScreen:
	push	{lr}
	ldr	r0, .L23
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bhi	.L20	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L23+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L24:
	.align	2, 0
.L23:
	.word	gMain
	.word	.L21
	.align	2, 0
	.align	2, 0
.L21:
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L19
.L12:
	bl	ResetVHBlank
	bl	NamingScreen_Init
	b	.L22
.L13:
	bl	NamingScreen_InitBGs
	b	.L22
.L14:
	bl	ResetPaletteFade
	b	.L22
.L15:
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	b	.L22
.L16:
	bl	ResetTasks
	b	.L22
.L17:
	bl	LoadPalettes
	b	.L22
.L18:
	bl	LoadGfx
	b	.L22
.L19:
	bl	CreateSprites
	bl	UpdatePaletteFade
	bl	NamingScreen_ShowBgs
.L22:
	ldr	r1, .L25
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L11
.L26:
	.align	2, 0
.L25:
	.word	gMain
.L20:
	bl	CreateHelperTasks
	bl	CreateNamingScreenTask
.L11:
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 CB2_LoadNamingScreen,.Lfe2-CB2_LoadNamingScreen
	.align	2, 0
	.type	 NamingScreen_Init,function
	.thumb_func
NamingScreen_Init:
	push	{r4, r5, r6, lr}
	ldr	r4, .L29
	ldr	r0, [r4]
	ldr	r1, .L29+0x4
	add	r0, r0, r1
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r1, [r4]
	ldr	r3, .L29+0x8
	add	r0, r1, r3
	mov	r5, #0x0
	strh	r2, [r0]
	ldr	r6, .L29+0xc
	add	r0, r1, r6
	strh	r2, [r0]
	ldr	r0, .L29+0x10
	add	r2, r1, r0
	mov	r3, #0x1
	mov	r0, #0x1
	strh	r0, [r2]
	add	r6, r6, #0x4
	add	r2, r1, r6
	mov	r0, #0x2
	strh	r0, [r2]
	mov	r0, #0xf1
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	strb	r5, [r1]
	ldr	r0, [r4]
	ldr	r1, .L29+0x14
	add	r0, r0, r1
	strb	r3, [r0]
	ldr	r1, [r4]
	ldr	r5, .L29+0x18
	add	r3, r1, r5
	ldr	r2, .L29+0x1c
	add	r6, r6, #0xe
	add	r0, r1, r6
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	str	r0, [r3]
	ldrb	r0, [r0, #0x4]
	ldr	r2, .L29+0x20
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r2, [r4]
	add	r0, r2, r5
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x1]
	lsl	r1, r1, #0x3
	mov	r0, #0xf0
	sub	r0, r0, r1
	asr	r0, r0, #0x1
	add	r0, r0, #0x6
	ldr	r3, .L29+0x24
	add	r1, r2, r3
	strh	r0, [r1]
	ldr	r6, .L29+0x28
	ldrh	r0, [r6]
	ldr	r1, .L29+0x2c
	add	r2, r2, r1
	strb	r0, [r2]
	ldr	r0, [r4]
	mov	r2, #0xc0
	lsl	r2, r2, #0x5
	add	r0, r0, r2
	mov	r1, #0xff
	mov	r2, #0x10
	bl	memset
	ldr	r1, [r4]
	add	r5, r1, r5
	ldr	r0, [r5]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L28	@cond_branch
	mov	r3, #0xc0
	lsl	r3, r3, #0x5
	add	r0, r1, r3
	ldr	r2, .L29+0x30
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
.L28:
	mov	r0, #0x10
	strh	r0, [r6]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	sNamingScreen
	.word	0x1e10
	.word	0x1e18
	.word	0x1e1a
	.word	0x1e1c
	.word	0x1e21
	.word	0x1e28
	.word	sNamingScreenTemplates
	.word	0x1e22
	.word	0x1e16
	.word	gKeyRepeatStartDelay
	.word	0x1e25
	.word	0x1e30
.Lfe3:
	.size	 NamingScreen_Init,.Lfe3-NamingScreen_Init
	.align	2, 0
	.type	 SetSpritesVisible,function
	.thumb_func
SetSpritesVisible:
	push	{r4, r5, lr}
	mov	r3, #0x0
	ldr	r4, .L38
	mov	r5, #0x5
	neg	r5, r5
.L35:
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r2, r0, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	lsl	r0, r1, #0x1f
	cmp	r0, #0
	beq	.L34	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r1
	strb	r0, [r2]
.L34:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x3f
	bls	.L35	@cond_branch
	mov	r0, #0x0
	bl	SetCursorInvisibility
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	gSprites
.Lfe4:
	.size	 SetSpritesVisible,.Lfe4-SetSpritesVisible
	.align	2, 0
	.type	 NamingScreen_InitBGs,function
	.thumb_func
NamingScreen_InitBGs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x10
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0xc
	mov	r8, r0
	add	r2, sp, #0x8
	mov	r6, #0x0
	ldr	r1, .L51
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L51+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L43:
	strh	r6, [r2]
	add	r0, sp, #0x8
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L43	@cond_branch
	strh	r6, [r2]
	add	r2, sp, #0x8
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0xc]
	ldr	r2, .L51
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, sp, #0x8
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L51+0x8
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	bl	InitStandardTextBoxWindows
	bl	InitTextBoxGfxAndPrinters
.L49:
	lsl	r0, r4, #0x3
	ldr	r1, .L51+0xc
	add	r0, r0, r1
	bl	AddWindow
	ldr	r5, .L51+0x10
	ldr	r1, [r5]
	ldr	r2, .L51+0x14
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L49	@cond_branch
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r1, #0xc8
	lsl	r1, r1, #0x3
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L51+0x18
	mov	r0, #0x52
	bl	SetGpuReg
	ldr	r1, [r5]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r5]
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r5]
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	0x40000d4
	.word	-0x7efff800
	.word	sBgTemplates
	.word	sWindowTemplates
	.word	sNamingScreen
	.word	0x1e11
	.word	0x80c
.Lfe5:
	.size	 NamingScreen_InitBGs,.Lfe5-NamingScreen_InitBGs
	.align	2, 0
	.type	 CreateNamingScreenTask,function
	.thumb_func
CreateNamingScreenTask:
	push	{lr}
	ldr	r0, .L54
	mov	r1, #0x2
	bl	CreateTask
	ldr	r0, .L54+0x4
	bl	SetMainCallback2
	bl	BackupHelpContext
	mov	r0, #0x3
	bl	SetHelpContext
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	Task_NamingScreen
	.word	CB2_NamingScreen
.Lfe6:
	.size	 CreateNamingScreenTask,.Lfe6-CreateNamingScreenTask
	.align	2, 0
	.type	 Task_NamingScreen,function
	.thumb_func
Task_NamingScreen:
	push	{lr}
	ldr	r0, .L70
	ldr	r0, [r0]
	ldr	r1, .L70+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x9
	bhi	.L57	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L70+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L71:
	.align	2, 0
.L70:
	.word	sNamingScreen
	.word	0x1e10
	.word	.L68
	.align	2, 0
	.align	2, 0
.L68:
	.word	.L58
	.word	.L59
	.word	.L60
	.word	.L61
	.word	.L62
	.word	.L63
	.word	.L64
	.word	.L65
	.word	.L66
	.word	.L67
.L58:
	bl	MainState_FadeIn
	bl	SetSpritesVisible
	bl	SetVBlank
	b	.L57
.L59:
	bl	MainState_WaitFadeIn
	b	.L57
.L60:
	bl	MainState_HandleInput
	b	.L57
.L61:
	bl	MainState_MoveToOKButton
	b	.L57
.L62:
	bl	MainState_StartPageSwap
	b	.L57
.L63:
	bl	MainState_WaitPageSwap
	b	.L57
.L64:
	bl	MainState_PressedOKButton
	b	.L57
.L65:
	bl	MainState_WaitSentToPCMessage
	b	.L57
.L66:
	bl	MainState_FadeOut
	b	.L57
.L67:
	bl	MainState_Exit
.L57:
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 Task_NamingScreen,.Lfe7-Task_NamingScreen
	.section .rodata
	.type	 sPageToNextGfxId,object
	.size	 sPageToNextGfxId,3
sPageToNextGfxId:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.type	 sPageToNextKeyboardId,object
	.size	 sPageToNextKeyboardId,3
sPageToNextKeyboardId:
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.type	 sPageToKeyboardId,object
	.size	 sPageToKeyboardId,3
sPageToKeyboardId:
	.byte	0x2
	.byte	0x1
	.byte	0x0
.text
	.align	2, 0
	.type	 PageToNextGfxId,function
	.thumb_func
PageToNextGfxId:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L73
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L74:
	.align	2, 0
.L73:
	.word	sPageToNextGfxId
.Lfe8:
	.size	 PageToNextGfxId,.Lfe8-PageToNextGfxId
	.align	2, 0
	.type	 CurrentPageToNextKeyboardId,function
	.thumb_func
CurrentPageToNextKeyboardId:
	ldr	r1, .L76
	ldr	r0, .L76+0x4
	ldr	r0, [r0]
	ldr	r2, .L76+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L77:
	.align	2, 0
.L76:
	.word	sPageToNextKeyboardId
	.word	sNamingScreen
	.word	0x1e22
.Lfe9:
	.size	 CurrentPageToNextKeyboardId,.Lfe9-CurrentPageToNextKeyboardId
	.align	2, 0
	.type	 CurrentPageToKeyboardId,function
	.thumb_func
CurrentPageToKeyboardId:
	ldr	r1, .L79
	ldr	r0, .L79+0x4
	ldr	r0, [r0]
	ldr	r2, .L79+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L80:
	.align	2, 0
.L79:
	.word	sPageToKeyboardId
	.word	sNamingScreen
	.word	0x1e22
.Lfe10:
	.size	 CurrentPageToKeyboardId,.Lfe10-CurrentPageToKeyboardId
	.align	2, 0
	.type	 MainState_FadeIn,function
	.thumb_func
MainState_FadeIn:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L82
	mov	r0, #0x3
	bl	DecompressToBgTilemapBuffer
	ldr	r5, .L82+0x4
	ldr	r0, [r5]
	ldr	r1, .L82+0x8
	add	r0, r0, r1
	mov	r6, #0x0
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r1, .L82+0xc
	mov	r0, #0x2
	bl	DecompressToBgTilemapBuffer
	ldr	r1, .L82+0x10
	mov	r0, #0x1
	bl	DecompressToBgTilemapBuffer
	ldr	r0, [r5]
	ldr	r1, .L82+0x14
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	PrintKeyboardKeys
	ldr	r0, [r5]
	ldr	r1, .L82+0x18
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x1
	bl	PrintKeyboardKeys
	bl	DrawTextEntry
	bl	DrawTextEntryBox
	bl	PrintControls
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	str	r6, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, [r5]
	ldr	r0, .L82+0x1c
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L83:
	.align	2, 0
.L82:
	.word	gNamingScreenBackground_Tilemap
	.word	sNamingScreen
	.word	0x1e22
	.word	gNamingScreenKeyboardLower_Tilemap
	.word	gNamingScreenKeyboardUpper_Tilemap
	.word	0x1e12
	.word	0x1e11
	.word	0x1e10
.Lfe11:
	.size	 MainState_FadeIn,.Lfe11-MainState_FadeIn
	.align	2, 0
	.type	 MainState_WaitFadeIn,function
	.thumb_func
MainState_WaitFadeIn:
	push	{lr}
	ldr	r0, .L86
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L85	@cond_branch
	mov	r0, #0x1
	bl	SetInputState
	mov	r0, #0x1
	bl	SetCursorFlashing
	ldr	r0, .L86+0x4
	ldr	r1, [r0]
	ldr	r0, .L86+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L85:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L87:
	.align	2, 0
.L86:
	.word	gPaletteFade
	.word	sNamingScreen
	.word	0x1e10
.Lfe12:
	.size	 MainState_WaitFadeIn,.Lfe12-MainState_WaitFadeIn
	.align	2, 0
	.type	 MainState_HandleInput,function
	.thumb_func
MainState_HandleInput:
	push	{lr}
	bl	HandleKeyboardEvent
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 MainState_HandleInput,.Lfe13-MainState_HandleInput
	.align	2, 0
	.type	 MainState_MoveToOKButton,function
	.thumb_func
MainState_MoveToOKButton:
	push	{lr}
	bl	IsCursorAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L90	@cond_branch
	mov	r0, #0x1
	bl	SetInputState
	bl	MoveCursorToOKButton
	ldr	r0, .L91
	ldr	r0, [r0]
	ldr	r1, .L91+0x4
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
.L90:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L92:
	.align	2, 0
.L91:
	.word	sNamingScreen
	.word	0x1e10
.Lfe14:
	.size	 MainState_MoveToOKButton,.Lfe14-MainState_MoveToOKButton
	.align	2, 0
	.type	 MainState_PressedOKButton,function
	.thumb_func
MainState_PressedOKButton:
	push	{r4, lr}
	bl	SaveInputText
	mov	r0, #0x0
	bl	SetInputState
	mov	r0, #0x0
	bl	SetCursorFlashing
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x1
	bl	TryStartButtonFlash
	ldr	r4, .L97
	ldr	r0, [r4]
	ldr	r1, .L97+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L94	@cond_branch
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bls	.L94	@cond_branch
	bl	DisplaySentToPCMessage
	ldr	r0, [r4]
	ldr	r1, .L97+0x8
	add	r0, r0, r1
	mov	r1, #0x7
	strb	r1, [r0]
	mov	r0, #0x0
	b	.L96
.L98:
	.align	2, 0
.L97:
	.word	sNamingScreen
	.word	0x1e2c
	.word	0x1e10
.L94:
	ldr	r0, .L99
	ldr	r0, [r0]
	ldr	r1, .L99+0x4
	add	r0, r0, r1
	mov	r1, #0x8
	strb	r1, [r0]
	mov	r0, #0x1
.L96:
	pop	{r4}
	pop	{r1}
	bx	r1
.L100:
	.align	2, 0
.L99:
	.word	sNamingScreen
	.word	0x1e10
.Lfe15:
	.size	 MainState_PressedOKButton,.Lfe15-MainState_PressedOKButton
	.align	2, 0
	.type	 MainState_FadeOut,function
	.thumb_func
MainState_FadeOut:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L102
	ldr	r1, [r0]
	ldr	r0, .L102+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r1}
	bx	r1
.L103:
	.align	2, 0
.L102:
	.word	sNamingScreen
	.word	0x1e10
.Lfe16:
	.size	 MainState_FadeOut,.Lfe16-MainState_FadeOut
	.align	2, 0
	.type	 MainState_Exit,function
	.thumb_func
MainState_Exit:
	push	{r4, r5, lr}
	ldr	r0, .L107
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L105	@cond_branch
	ldr	r4, .L107+0x4
	ldr	r0, [r4]
	ldr	r1, .L107+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	SeedRngAndSetTrainerId
.L106:
	ldr	r0, [r4]
	ldr	r1, .L107+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	SetMainCallback2
	ldr	r0, .L107+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	bl	FreeAllWindowBuffers
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	bl	RestoreHelpContext
.L105:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L108:
	.align	2, 0
.L107:
	.word	gPaletteFade
	.word	sNamingScreen
	.word	0x1e2c
	.word	0x1e3c
	.word	Task_NamingScreen
.Lfe17:
	.size	 MainState_Exit,.Lfe17-MainState_Exit
	.align	2, 0
	.type	 DisplaySentToPCMessage,function
	.thumb_func
DisplaySentToPCMessage:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	mov	r5, #0x0
	bl	IsDestinationBoxFull
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L110	@cond_branch
	ldr	r4, .L113
	ldr	r0, .L113+0x4
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBoxNamePtr
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L113+0x8
	ldr	r1, .L113+0xc
	ldr	r1, [r1]
	ldr	r2, .L113+0x10
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	b	.L111
.L114:
	.align	2, 0
.L113:
	.word	gStringVar1
	.word	0x4037
	.word	gStringVar2
	.word	sNamingScreen
	.word	0x1e30
.L110:
	ldr	r4, .L115
	ldr	r0, .L115+0x4
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBoxNamePtr
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L115+0x8
	ldr	r1, .L115+0xc
	ldr	r1, [r1]
	ldr	r2, .L115+0x10
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L115+0x14
	bl	GetPCBoxToSendMon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBoxNamePtr
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	mov	r5, #0x2
.L111:
	ldr	r0, .L115+0x18
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L112	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L112:
	ldr	r4, .L115+0x1c
	ldr	r1, .L115+0x20
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawDialogueFrame
	ldr	r2, .L115+0x24
	ldrb	r0, [r2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	bl	GetTextSpeedSetting
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x2
	add	r2, r4, #0
	bl	AddTextPrinterParameterized2
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	gStringVar1
	.word	0x4037
	.word	gStringVar2
	.word	sNamingScreen
	.word	0x1e30
	.word	gStringVar3
	.word	0x834
	.word	gStringVar4
	.word	sTransferredToPCMessages
	.word	gTextFlags
.Lfe18:
	.size	 DisplaySentToPCMessage,.Lfe18-DisplaySentToPCMessage
	.align	2, 0
	.type	 MainState_WaitSentToPCMessage,function
	.thumb_func
MainState_WaitSentToPCMessage:
	push	{lr}
	bl	RunTextPrinters
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L118	@cond_branch
	ldr	r0, .L119
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L118	@cond_branch
	ldr	r0, .L119+0x4
	ldr	r0, [r0]
	ldr	r1, .L119+0x8
	add	r0, r0, r1
	mov	r1, #0x8
	strb	r1, [r0]
.L118:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L120:
	.align	2, 0
.L119:
	.word	gMain
	.word	sNamingScreen
	.word	0x1e10
.Lfe19:
	.size	 MainState_WaitSentToPCMessage,.Lfe19-MainState_WaitSentToPCMessage
	.align	2, 0
	.type	 MainState_StartPageSwap,function
	.thumb_func
MainState_StartPageSwap:
	push	{lr}
	mov	r0, #0x0
	bl	SetInputState
	bl	StartPageSwapButtonAnim
	bl	StartPageSwapAnim
	mov	r0, #0x1
	bl	SetCursorInvisibility
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x1
	bl	TryStartButtonFlash
	mov	r0, #0x6
	bl	PlaySE
	ldr	r0, .L122
	ldr	r0, [r0]
	ldr	r1, .L122+0x4
	add	r0, r0, r1
	mov	r1, #0x5
	strb	r1, [r0]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L123:
	.align	2, 0
.L122:
	.word	sNamingScreen
	.word	0x1e10
.Lfe20:
	.size	 MainState_StartPageSwap,.Lfe20-MainState_StartPageSwap
	.align	2, 0
	.type	 MainState_WaitPageSwap,function
	.thumb_func
MainState_WaitPageSwap:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	bl	IsPageSwapAnimNotInProgress
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L125	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetCursorPos
	bl	GetCurrentPageColumnCount
	mov	r5, #0x0
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r6, r4, #0
	cmp	r1, r0
	bne	.L126	@cond_branch
	mov	r5, #0x1
.L126:
	ldr	r2, .L131
	ldr	r0, [r2]
	ldr	r1, .L131+0x4
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r1, [r2]
	ldr	r3, .L131+0x8
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r4, [r2]
	add	r4, r4, r3
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	__umodsi3
	strb	r0, [r4]
	cmp	r5, #0
	beq	.L127	@cond_branch
	mov	r4, sp
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L130
.L132:
	.align	2, 0
.L131:
	.word	sNamingScreen
	.word	0x1e10
	.word	0x1e22
.L127:
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r4, [r0, r2]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L128	@cond_branch
	mov	r4, sp
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
.L130:
	strh	r0, [r4]
.L128:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	bl	SetCursorPos
	bl	DrawKeyboardPageOnDeck
	mov	r0, #0x1
	bl	SetInputState
	mov	r0, #0x0
	bl	SetCursorInvisibility
.L125:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 MainState_WaitPageSwap,.Lfe21-MainState_WaitPageSwap
	.section .rodata
	.align	2, 0
	.type	 sPageSwapAnimStateFuncs,object
sPageSwapAnimStateFuncs:
	.word	PageSwapAnimState_Init
	.word	PageSwapAnimState_1
	.word	PageSwapAnimState_2
	.word	PageSwapAnimState_Done
	.size	 sPageSwapAnimStateFuncs,16
.text
	.align	2, 0
	.type	 StartPageSwapAnim,function
	.thumb_func
StartPageSwapAnim:
	push	{r4, lr}
	ldr	r4, .L134
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	Task_HandlePageSwapAnim
.Lfe22:
	.size	 StartPageSwapAnim,.Lfe22-StartPageSwapAnim
	.align	2, 0
	.type	 Task_HandlePageSwapAnim,function
	.thumb_func
Task_HandlePageSwapAnim:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L141
	ldr	r2, .L141+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L137:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L137	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	sPageSwapAnimStateFuncs
	.word	gTasks
.Lfe23:
	.size	 Task_HandlePageSwapAnim,.Lfe23-Task_HandlePageSwapAnim
	.align	2, 0
	.type	 IsPageSwapAnimNotInProgress,function
	.thumb_func
IsPageSwapAnimNotInProgress:
	push	{lr}
	ldr	r0, .L147
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L144	@cond_branch
	mov	r0, #0x0
	b	.L146
.L148:
	.align	2, 0
.L147:
	.word	Task_HandlePageSwapAnim
.L144:
	mov	r0, #0x1
.L146:
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 IsPageSwapAnimNotInProgress,.Lfe24-IsPageSwapAnimNotInProgress
	.align	2, 0
	.type	 PageSwapAnimState_Init,function
	.thumb_func
PageSwapAnimState_Init:
	ldr	r1, .L150
	ldr	r1, [r1]
	ldr	r3, .L150+0x4
	add	r2, r1, r3
	mov	r3, #0x0
	strh	r3, [r2]
	ldr	r2, .L150+0x8
	add	r1, r1, r2
	strh	r3, [r1]
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	mov	r0, #0x0
	bx	lr
.L151:
	.align	2, 0
.L150:
	.word	sNamingScreen
	.word	0x1e18
	.word	0x1e1a
.Lfe25:
	.size	 PageSwapAnimState_Init,.Lfe25-PageSwapAnimState_Init
	.align	2, 0
	.type	 PageSwapAnimState_1,function
	.thumb_func
PageSwapAnimState_1:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r5, .L154
	ldr	r0, [r5]
	ldr	r2, .L154+0x4
	add	r1, r0, r2
	str	r1, [sp]
	ldr	r1, .L154+0x8
	add	r0, r0, r1
	str	r0, [sp, #0x4]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x4
	strh	r0, [r4, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	mov	r2, #0xf1
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x80
	mov	r1, #0xff
	and	r0, r0, r1
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	ldr	r2, .L154+0xc
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3f
	ble	.L153	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L154+0x10
	add	r2, r0, r1
	ldrb	r3, [r2]
	add	r1, r1, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0]
	strh	r1, [r2]
	strh	r3, [r0]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L153:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L155:
	.align	2, 0
.L154:
	.word	sNamingScreen
	.word	0x1e1a
	.word	0x1e18
	.word	0x1e21
	.word	0x1e1c
.Lfe26:
	.size	 PageSwapAnimState_1,.Lfe26-PageSwapAnimState_1
	.align	2, 0
	.type	 PageSwapAnimState_2,function
	.thumb_func
PageSwapAnimState_2:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r5, .L158
	ldr	r0, [r5]
	ldr	r2, .L158+0x4
	add	r1, r0, r2
	str	r1, [sp]
	ldr	r3, .L158+0x8
	add	r0, r0, r3
	str	r0, [sp, #0x4]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x4
	strh	r0, [r4, #0xa]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	mov	r2, #0xf1
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x80
	mov	r1, #0xff
	and	r0, r0, r1
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	ldr	r3, .L158+0xc
	add	r1, r1, r3
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7f
	ble	.L157	@cond_branch
	ldr	r0, [r5]
	mov	r2, #0xf1
	lsl	r2, r2, #0x5
	add	r1, r0, r2
	ldrb	r2, [r1]
	add	r0, r0, r3
	ldrb	r0, [r0]
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, r3
	strb	r2, [r0]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L157:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L159:
	.align	2, 0
.L158:
	.word	sNamingScreen
	.word	0x1e1a
	.word	0x1e18
	.word	0x1e21
.Lfe27:
	.size	 PageSwapAnimState_2,.Lfe27-PageSwapAnimState_2
	.align	2, 0
	.type	 PageSwapAnimState_Done,function
	.thumb_func
PageSwapAnimState_Done:
	push	{lr}
	ldr	r0, .L161
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L162:
	.align	2, 0
.L161:
	.word	Task_HandlePageSwapAnim
.Lfe28:
	.size	 PageSwapAnimState_Done,.Lfe28-PageSwapAnimState_Done
	.align	2, 0
	.type	 CreateButtonFlashTask,function
	.thumb_func
CreateButtonFlashTask:
	push	{lr}
	ldr	r0, .L164
	mov	r1, #0x3
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L164+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x3
	strh	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L165:
	.align	2, 0
.L164:
	.word	Task_UpdateButtonFlash
	.word	gTasks
.Lfe29:
	.size	 CreateButtonFlashTask,.Lfe29-CreateButtonFlashTask
	.align	2, 0
	.type	 TryStartButtonFlash,function
	.thumb_func
TryStartButtonFlash:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L170
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L170+0x4
	add	r4, r1, r0
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	bne	.L167	@cond_branch
	cmp	r6, #0
	bne	.L167	@cond_branch
	strh	r7, [r4, #0xa]
	mov	r0, #0x1
	strh	r0, [r4, #0xc]
	b	.L166
.L171:
	.align	2, 0
.L170:
	.word	Task_UpdateButtonFlash
	.word	gTasks
.L167:
	cmp	r5, #0x3
	bne	.L168	@cond_branch
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L168	@cond_branch
	cmp	r6, #0
	beq	.L166	@cond_branch
.L168:
	ldrh	r1, [r4, #0x8]
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x3
	beq	.L169	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	bl	RestoreButtonColor
.L169:
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r7, #0
	bl	StartButtonFlash
.L166:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 TryStartButtonFlash,.Lfe30-TryStartButtonFlash
	.align	2, 0
	.type	 Task_UpdateButtonFlash,function
	.thumb_func
Task_UpdateButtonFlash:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L185
	add	r4, r1, r0
	ldrh	r1, [r4, #0x8]
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x3
	beq	.L172	@cond_branch
	mov	r3, #0xc
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	beq	.L172	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	bl	GetButtonPalOffset
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r3, [r4, #0xe]
	add	r1, r3, #0
	add	r2, r3, #0
	bl	MultiplyInvertedPaletteRGBComponents
	ldrh	r1, [r4, #0x12]
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L175	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x12]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L172	@cond_branch
.L175:
	mov	r0, #0x2
	strh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	blt	.L176	@cond_branch
	ldrh	r2, [r4, #0xe]
	mov	r3, #0xe
	ldrsh	r0, [r4, r3]
	cmp	r0, #0xd
	bgt	.L177	@cond_branch
	add	r0, r2, r1
	b	.L183
.L186:
	.align	2, 0
.L185:
	.word	gTasks
.L177:
	mov	r0, #0x10
	strh	r0, [r4, #0xe]
	ldrh	r0, [r4, #0x14]
	add	r0, r0, #0x1
	b	.L184
.L176:
	ldrh	r3, [r4, #0xe]
	add	r0, r1, r3
.L183:
	strh	r0, [r4, #0xe]
	ldrh	r2, [r4, #0x14]
	add	r0, r1, r2
.L184:
	strh	r0, [r4, #0x14]
	mov	r3, #0xe
	ldrsh	r0, [r4, r3]
	ldrh	r1, [r4, #0xe]
	cmp	r0, #0x10
	bne	.L180	@cond_branch
	mov	r2, #0x14
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x16
	bne	.L180	@cond_branch
	ldr	r0, .L187
	strh	r0, [r4, #0x10]
	b	.L172
.L188:
	.align	2, 0
.L187:
	.word	0xfffc
.L180:
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0
	bne	.L172	@cond_branch
	ldrh	r0, [r4, #0xa]
	strh	r0, [r4, #0xc]
	mov	r0, #0x2
	strh	r0, [r4, #0x10]
	strh	r1, [r4, #0x14]
.L172:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 Task_UpdateButtonFlash,.Lfe31-Task_UpdateButtonFlash
	.align	2, 0
	.type	 GetButtonPalOffset,function
	.thumb_func
GetButtonPalOffset:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x4
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	mov	r1, #0x87
	lsl	r1, r1, #0x1
	add	r5, r1, #0
	add	r0, r0, r5
	add	r6, sp, #0x8
	strh	r0, [r6]
	mov	r0, #0x6
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	add	r0, r0, r5
	mov	r1, sp
	add	r1, r1, #0xa
	strh	r0, [r1]
	mov	r0, #0x7
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	add	r0, r0, r5
	add	r1, sp, #0xc
	strh	r0, [r1]
	mov	r0, #0x7
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	ldr	r1, .L190
	add	r0, r0, r1
	mov	r1, sp
	add	r1, r1, #0xe
	strh	r0, [r1]
	mov	r0, sp
	add	r1, r6, #0
	mov	r2, #0x8
	bl	memcpy
	lsl	r4, r4, #0x1
	mov	r1, sp
	add	r0, r1, r4
	ldrh	r0, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L191:
	.align	2, 0
.L190:
	.word	0x101
.Lfe32:
	.size	 GetButtonPalOffset,.Lfe32-GetButtonPalOffset
	.align	2, 0
	.type	 RestoreButtonColor,function
	.thumb_func
RestoreButtonColor:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetButtonPalOffset
	lsl	r0, r0, #0x10
	ldr	r2, .L193
	lsr	r0, r0, #0xf
	add	r2, r0, r2
	ldr	r1, .L193+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	pop	{r0}
	bx	r0
.L194:
	.align	2, 0
.L193:
	.word	gPlttBufferFaded
	.word	gPlttBufferUnfaded
.Lfe33:
	.size	 RestoreButtonColor,.Lfe33-RestoreButtonColor
	.align	2, 0
	.type	 StartButtonFlash,function
	.thumb_func
StartButtonFlash:
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, #0x0
	strh	r1, [r0, #0x8]
	strh	r2, [r0, #0xa]
	mov	r1, #0x1
	strh	r1, [r0, #0xc]
	mov	r2, #0x4
	strh	r2, [r0, #0xe]
	mov	r1, #0x2
	strh	r1, [r0, #0x10]
	strh	r3, [r0, #0x12]
	strh	r2, [r0, #0x14]
	bx	lr
.Lfe34:
	.size	 StartButtonFlash,.Lfe34-StartButtonFlash
	.align	2, 0
	.type	 SpriteCB_Cursor,function
	.thumb_func
SpriteCB_Cursor:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L197	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L197:
	ldrh	r0, [r5, #0x36]
	mov	r1, #0xff
	and	r1, r1, r0
	add	r6, r5, #0
	add	r6, r6, #0x3e
	mov	r0, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r6]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	mov	r0, #0x2e
	ldrsh	r4, [r5, r0]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L198	@cond_branch
	ldrb	r0, [r6]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r6]
.L198:
	ldrb	r1, [r6]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L200	@cond_branch
	mov	r1, #0x36
	ldrsh	r0, [r5, r1]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L200	@cond_branch
	mov	r2, #0x2e
	ldrsh	r1, [r5, r2]
	mov	r2, #0x32
	ldrsh	r0, [r5, r2]
	cmp	r1, r0
	bne	.L200	@cond_branch
	mov	r0, #0x30
	ldrsh	r1, [r5, r0]
	mov	r2, #0x34
	ldrsh	r0, [r5, r2]
	cmp	r1, r0
	beq	.L199	@cond_branch
.L200:
	mov	r0, #0x0
	strh	r0, [r5, #0x38]
	mov	r0, #0x2
	strh	r0, [r5, #0x3a]
	strh	r0, [r5, #0x3c]
.L199:
	ldrh	r0, [r5, #0x3c]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0x3c]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L201	@cond_branch
	ldrh	r1, [r5, #0x3a]
	ldrh	r2, [r5, #0x38]
	add	r0, r1, r2
	strh	r0, [r5, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x10
	beq	.L203	@cond_branch
	cmp	r0, #0
	bne	.L202	@cond_branch
.L203:
	neg	r0, r1
	strh	r0, [r5, #0x3a]
.L202:
	mov	r0, #0x2
	strh	r0, [r5, #0x3c]
.L201:
	mov	r1, #0x36
	ldrsh	r0, [r5, r1]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L204	@cond_branch
	ldrh	r4, [r5, #0x38]
	lsl	r5, r4, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x11
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	ldr	r2, .L205
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r5, #0
	bl	MultiplyInvertedPaletteRGBComponents
.L204:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L206:
	.align	2, 0
.L205:
	.word	0x1010000
.Lfe35:
	.size	 SpriteCB_Cursor,.Lfe35-SpriteCB_Cursor
	.section .rodata
	.align	1, 0
.LC62:
	.short	0x0
	.short	-0x4
	.short	-0x2
	.short	-0x1
.text
	.align	2, 0
	.type	 SpriteCB_InputArrow,function
	.thumb_func
SpriteCB_InputArrow:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L210
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	ldrh	r1, [r4, #0x2e]
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L209	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L208	@cond_branch
.L209:
	mov	r0, #0x8
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r4, #0x30]
.L208:
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x24]
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L211:
	.align	2, 0
.L210:
	.word	.LC62
.Lfe36:
	.size	 SpriteCB_InputArrow,.Lfe36-SpriteCB_InputArrow
	.section .rodata
	.align	1, 0
.LC64:
	.short	0x2
	.short	0x3
	.short	0x2
	.short	0x1
.text
	.align	2, 0
	.type	 SpriteCB_Underscore,function
	.thumb_func
SpriteCB_Underscore:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L217
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	bl	GetTextEntryPosition
	lsl	r0, r0, #0x18
	ldrh	r1, [r4, #0x2e]
	lsl	r1, r1, #0x18
	cmp	r0, r1
	beq	.L213	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x26]
	strh	r0, [r4, #0x30]
	b	.L216
.L218:
	.align	2, 0
.L217:
	.word	.LC64
.L213:
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L214	@cond_branch
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r4, #0x30]
	mov	r0, #0x0
.L216:
	strh	r0, [r4, #0x32]
.L214:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 SpriteCB_Underscore,.Lfe37-SpriteCB_Underscore
	.align	2, 0
	.type	 CreateSprites,function
	.thumb_func
CreateSprites:
	push	{lr}
	bl	CreateCursorSprite
	bl	CreatePageSwapButtonSprites
	bl	CreateBackOkSprites
	bl	CreateTextEntrySprites
	bl	CreateInputTargetIcon
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 CreateSprites,.Lfe38-CreateSprites
	.align	2, 0
	.type	 CreateCursorSprite,function
	.thumb_func
CreateCursorSprite:
	push	{r4, r5, r6, lr}
	ldr	r0, .L221
	mov	r1, #0x26
	mov	r2, #0x58
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r5, .L221+0x4
	ldr	r1, [r5]
	ldr	r4, .L221+0x8
	add	r1, r1, r4
	strb	r0, [r1]
	mov	r0, #0x1
	bl	SetCursorInvisibility
	ldr	r6, .L221+0xc
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r3, [r1, #0x5]
	mov	r2, #0xd
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r0, #0x1]
	and	r2, r2, r1
	orr	r2, r2, r3
	strb	r2, [r0, #0x1]
	ldr	r2, [r5]
	add	r2, r2, r4
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x1
	strh	r1, [r0, #0x3a]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x2
	strh	r1, [r0, #0x3a]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetCursorPos
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L222:
	.align	2, 0
.L221:
	.word	sSpriteTemplate_Cursor
	.word	sNamingScreen
	.word	0x1e23
	.word	gSprites
.Lfe39:
	.size	 CreateCursorSprite,.Lfe39-CreateCursorSprite
	.align	2, 0
	.type	 SetCursorPos,function
	.thumb_func
SetCursorPos:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	ldr	r1, .L227
	ldr	r1, [r1]
	ldr	r2, .L227+0x4
	add	r1, r1, r2
	ldrb	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L227+0x8
	add	r5, r1, r2
	lsr	r1, r0, #0x10
	mov	r8, r1
	asr	r6, r0, #0x10
	ldr	r4, .L227+0xc
	bl	CurrentPageToKeyboardId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L224	@cond_branch
	bl	CurrentPageToKeyboardId
	ldr	r1, .L227+0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x15
	add	r0, r6, r0
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r0, r0, #0x26
	b	.L226
.L228:
	.align	2, 0
.L227:
	.word	sNamingScreen
	.word	0x1e23
	.word	gSprites
	.word	sPageColumnCounts
	.word	sPageColumnXPos
.L224:
	mov	r0, #0x0
.L226:
	strh	r0, [r5, #0x20]
	lsl	r0, r7, #0x10
	asr	r0, r0, #0xc
	add	r0, r0, #0x58
	strh	r0, [r5, #0x22]
	ldrh	r0, [r5, #0x2e]
	strh	r0, [r5, #0x32]
	ldrh	r0, [r5, #0x30]
	strh	r0, [r5, #0x34]
	mov	r2, r8
	strh	r2, [r5, #0x2e]
	strh	r7, [r5, #0x30]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 SetCursorPos,.Lfe40-SetCursorPos
	.align	2, 0
	.type	 GetCursorPos,function
	.thumb_func
GetCursorPos:
	ldr	r2, .L230
	ldr	r2, [r2]
	ldr	r3, .L230+0x4
	add	r2, r2, r3
	ldrb	r3, [r2]
	lsl	r2, r3, #0x4
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	ldr	r3, .L230+0x8
	add	r2, r2, r3
	ldrh	r3, [r2, #0x2e]
	strh	r3, [r0]
	ldrh	r0, [r2, #0x30]
	strh	r0, [r1]
	bx	lr
.L231:
	.align	2, 0
.L230:
	.word	sNamingScreen
	.word	0x1e23
	.word	gSprites
.Lfe41:
	.size	 GetCursorPos,.Lfe41-GetCursorPos
	.align	2, 0
	.type	 MoveCursorToOKButton,function
	.thumb_func
MoveCursorToOKButton:
	push	{lr}
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	SetCursorPos
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 MoveCursorToOKButton,.Lfe42-MoveCursorToOKButton
	.align	2, 0
	.type	 SetCursorInvisibility,function
	.thumb_func
SetCursorInvisibility:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L234
	ldr	r1, .L234+0x4
	ldr	r4, [r1]
	ldr	r1, .L234+0x8
	add	r4, r4, r1
	ldrb	r1, [r4]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r3, [r2, #0x36]
	ldr	r1, .L234+0xc
	and	r1, r1, r3
	strh	r1, [r2, #0x36]
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrh	r2, [r1, #0x36]
	orr	r0, r0, r2
	strh	r0, [r1, #0x36]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x0
	bl	StartSpriteAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L235:
	.align	2, 0
.L234:
	.word	gSprites
	.word	sNamingScreen
	.word	0x1e23
	.word	-0x100
.Lfe43:
	.size	 SetCursorInvisibility,.Lfe43-SetCursorInvisibility
	.align	2, 0
	.type	 SetCursorFlashing,function
	.thumb_func
SetCursorFlashing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	ldr	r5, .L237
	ldr	r1, .L237+0x4
	ldr	r4, [r1]
	ldr	r1, .L237+0x8
	add	r4, r4, r1
	ldrb	r1, [r4]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r3, [r2, #0x36]
	mov	r1, #0xff
	and	r1, r1, r3
	strh	r1, [r2, #0x36]
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsr	r0, r0, #0x10
	ldrh	r2, [r1, #0x36]
	orr	r0, r0, r2
	strh	r0, [r1, #0x36]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L238:
	.align	2, 0
.L237:
	.word	gSprites
	.word	sNamingScreen
	.word	0x1e23
.Lfe44:
	.size	 SetCursorFlashing,.Lfe44-SetCursorFlashing
	.align	2, 0
	.type	 SquishCursor,function
	.thumb_func
SquishCursor:
	push	{lr}
	ldr	r0, .L240
	ldr	r0, [r0]
	ldr	r1, .L240+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L240+0x8
	add	r0, r0, r1
	mov	r1, #0x1
	bl	StartSpriteAnim
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	sNamingScreen
	.word	0x1e23
	.word	gSprites
.Lfe45:
	.size	 SquishCursor,.Lfe45-SquishCursor
	.align	2, 0
	.type	 IsCursorAnimFinished,function
	.thumb_func
IsCursorAnimFinished:
	ldr	r2, .L243
	ldr	r0, .L243+0x4
	ldr	r0, [r0]
	ldr	r1, .L243+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1f
	bx	lr
.L244:
	.align	2, 0
.L243:
	.word	gSprites
	.word	sNamingScreen
	.word	0x1e23
.Lfe46:
	.size	 IsCursorAnimFinished,.Lfe46-IsCursorAnimFinished
	.section .rodata
	.type	 sButtonKeyRoles,object
sButtonKeyRoles:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 sButtonKeyRoles,3
.text
	.align	2, 0
	.type	 GetKeyRoleAtCursorPos,function
	.thumb_func
GetKeyRoleAtCursorPos:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r5, sp
	add	r5, r5, #0x2
	mov	r0, sp
	add	r1, r5, #0
	bl	GetCursorPos
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r4, [r0, r1]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L246	@cond_branch
	ldr	r0, .L249
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	add	r1, r1, r0
	ldrb	r0, [r1]
	b	.L248
.L250:
	.align	2, 0
.L249:
	.word	sButtonKeyRoles
.L246:
	mov	r0, #0x0
.L248:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 GetKeyRoleAtCursorPos,.Lfe47-GetKeyRoleAtCursorPos
	.align	2, 0
	.type	 GetCurrentPageColumnCount,function
	.thumb_func
GetCurrentPageColumnCount:
	push	{r4, lr}
	ldr	r4, .L252
	bl	CurrentPageToKeyboardId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	pop	{r4}
	pop	{r1}
	bx	r1
.L253:
	.align	2, 0
.L252:
	.word	sPageColumnCounts
.Lfe48:
	.size	 GetCurrentPageColumnCount,.Lfe48-GetCurrentPageColumnCount
	.align	2, 0
	.type	 CreatePageSwapButtonSprites,function
	.thumb_func
CreatePageSwapButtonSprites:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L255
	mov	r1, #0xcc
	mov	r2, #0x58
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L255+0x4
	ldr	r1, [r1]
	ldr	r2, .L255+0x8
	add	r1, r1, r2
	strb	r0, [r1]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L255+0xc
	mov	r8, r0
	add	r5, r5, r8
	ldr	r1, .L255+0x10
	add	r0, r5, #0
	bl	SetSubspriteTables
	add	r1, r5, #0
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r6, #0x4
	orr	r0, r0, r6
	strb	r0, [r1]
	ldr	r0, .L255+0x14
	mov	r1, #0xcc
	mov	r2, #0x54
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x3a]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r8
	ldr	r1, .L255+0x18
	add	r0, r4, #0
	bl	SetSubspriteTables
	add	r4, r4, #0x3e
	ldrb	r0, [r4]
	orr	r0, r0, r6
	strb	r0, [r4]
	ldr	r0, .L255+0x1c
	mov	r1, #0xcc
	mov	r2, #0x53
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r6
	strb	r1, [r2, #0x5]
	strh	r0, [r5, #0x3c]
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	orr	r0, r0, r6
	strb	r0, [r2]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L256:
	.align	2, 0
.L255:
	.word	sSpriteTemplate_PageSwapFrame
	.word	sNamingScreen
	.word	0x1e24
	.word	gSprites
	.word	sSubspriteTable_PageSwapFrame
	.word	sSpriteTemplate_PageSwapText
	.word	sSubspriteTable_PageSwapText
	.word	sSpriteTemplate_PageSwapButton
.Lfe49:
	.size	 CreatePageSwapButtonSprites,.Lfe49-CreatePageSwapButtonSprites
	.align	2, 0
	.type	 StartPageSwapButtonAnim,function
	.thumb_func
StartPageSwapButtonAnim:
	ldr	r0, .L258
	ldr	r2, [r0]
	ldr	r1, .L258+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L258+0x8
	add	r0, r0, r1
	mov	r1, #0x2
	strh	r1, [r0, #0x2e]
	ldr	r1, .L258+0xc
	add	r2, r2, r1
	ldrb	r1, [r2]
	strh	r1, [r0, #0x30]
	bx	lr
.L259:
	.align	2, 0
.L258:
	.word	sNamingScreen
	.word	0x1e24
	.word	gSprites
	.word	0x1e22
.Lfe50:
	.size	 StartPageSwapButtonAnim,.Lfe50-StartPageSwapButtonAnim
	.section .rodata
	.align	2, 0
	.type	 sPageSwapSpriteFuncs,object
sPageSwapSpriteFuncs:
	.word	PageSwapSprite_Init
	.word	PageSwapSprite_Idle
	.word	PageSwapSprite_SlideOff
	.word	PageSwapSprite_SlideOn
	.size	 sPageSwapSpriteFuncs,16
.text
	.align	2, 0
	.type	 SpriteCB_PageSwap,function
	.thumb_func
SpriteCB_PageSwap:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L265
.L261:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L261	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L266:
	.align	2, 0
.L265:
	.word	sPageSwapSpriteFuncs
.Lfe51:
	.size	 SpriteCB_PageSwap,.Lfe51-SpriteCB_PageSwap
	.align	2, 0
	.type	 PageSwapSprite_Init,function
	.thumb_func
PageSwapSprite_Init:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0x3a
	ldrsh	r0, [r6, r1]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r1, .L268
	add	r5, r5, r1
	mov	r2, #0x3c
	ldrsh	r0, [r6, r2]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r1
	ldr	r0, .L268+0x4
	ldr	r0, [r0]
	ldr	r1, .L268+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PageToNextGfxId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r5, #0
	add	r2, r4, #0
	bl	SetPageSwapButtonGfx
	ldrh	r0, [r6, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2e]
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L269:
	.align	2, 0
.L268:
	.word	gSprites
	.word	sNamingScreen
	.word	0x1e22
.Lfe52:
	.size	 PageSwapSprite_Init,.Lfe52-PageSwapSprite_Init
	.align	2, 0
	.type	 PageSwapSprite_Idle,function
	.thumb_func
PageSwapSprite_Idle:
	mov	r0, #0x0
	bx	lr
.Lfe53:
	.size	 PageSwapSprite_Idle,.Lfe53-PageSwapSprite_Idle
	.align	2, 0
	.type	 PageSwapSprite_SlideOff,function
	.thumb_func
PageSwapSprite_SlideOff:
	push	{r4, r5, lr}
	add	r3, r0, #0
	mov	r0, #0x3a
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L273
	add	r4, r0, r2
	mov	r0, #0x3c
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r2
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L272	@cond_branch
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	ldr	r0, .L273+0x4
	strh	r0, [r4, #0x26]
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r3, #0x30]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, #0x1
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PageToNextGfxId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	SetPageSwapButtonGfx
.L272:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L274:
	.align	2, 0
.L273:
	.word	gSprites
	.word	0xfffc
.Lfe54:
	.size	 PageSwapSprite_SlideOff,.Lfe54-PageSwapSprite_SlideOff
	.align	2, 0
	.type	 PageSwapSprite_SlideOn,function
	.thumb_func
PageSwapSprite_SlideOn:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L277
	add	r2, r0, r1
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r2, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x26]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	blt	.L276	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0x26]
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
.L276:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L278:
	.align	2, 0
.L277:
	.word	gSprites
.Lfe55:
	.size	 PageSwapSprite_SlideOn,.Lfe55-PageSwapSprite_SlideOn
	.section .rodata
	.align	1, 0
	.type	 sPageSwapPalTags,object
sPageSwapPalTags:
	.short	0x1
	.short	0x3
	.short	0x2
	.size	 sPageSwapPalTags,6
	.align	1, 0
	.type	 sPageSwapGfxTags,object
sPageSwapGfxTags:
	.short	0x4
	.short	0x6
	.short	0x5
	.size	 sPageSwapGfxTags,6
.text
	.align	2, 0
	.type	 SetPageSwapButtonGfx,function
	.thumb_func
SetPageSwapButtonGfx:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L280
	lsl	r4, r5, #0x1
	add	r0, r4, r0
	ldrh	r0, [r0]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	mov	r1, r8
	ldrb	r2, [r1, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	mov	r0, r8
	strb	r1, [r0, #0x5]
	ldr	r0, .L280+0x4
	add	r4, r4, r0
	ldrh	r0, [r4]
	bl	GetSpriteTileStartByTag
	add	r1, r6, #0
	add	r1, r1, #0x40
	strh	r0, [r1]
	add	r6, r6, #0x42
	mov	r1, #0x3f
	and	r1, r1, r5
	ldrb	r2, [r6]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L281:
	.align	2, 0
.L280:
	.word	sPageSwapPalTags
	.word	sPageSwapGfxTags
.Lfe56:
	.size	 SetPageSwapButtonGfx,.Lfe56-SetPageSwapButtonGfx
	.align	2, 0
	.type	 CreateBackOkSprites,function
	.thumb_func
CreateBackOkSprites:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L283
	mov	r1, #0xcc
	mov	r2, #0x74
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r6, .L283+0x4
	add	r4, r4, r6
	ldr	r0, .L283+0x8
	mov	r8, r0
	add	r0, r4, #0
	mov	r1, r8
	bl	SetSubspriteTables
	add	r4, r4, #0x3e
	ldrb	r0, [r4]
	mov	r5, #0x4
	orr	r0, r0, r5
	strb	r0, [r4]
	ldr	r0, .L283+0xc
	mov	r1, #0xcc
	mov	r2, #0x8c
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r6
	add	r0, r4, #0
	mov	r1, r8
	bl	SetSubspriteTables
	add	r4, r4, #0x3e
	ldrb	r0, [r4]
	orr	r0, r0, r5
	strb	r0, [r4]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L284:
	.align	2, 0
.L283:
	.word	sSpriteTemplate_BackButton
	.word	gSprites
	.word	sSubspriteTable_Button
	.word	sSpriteTemplate_OkButton
.Lfe57:
	.size	 CreateBackOkSprites,.Lfe57-CreateBackOkSprites
	.align	2, 0
	.type	 CreateTextEntrySprites,function
	.thumb_func
CreateTextEntrySprites:
	push	{r4, r5, r6, lr}
	ldr	r5, .L291
	ldr	r0, [r5]
	ldr	r4, .L291+0x4
	add	r0, r0, r4
	ldrh	r1, [r0]
	sub	r1, r1, #0x5
	ldr	r0, .L291+0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x38
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r3, .L291+0xc
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r4, r0, r4
	ldrh	r1, [r4]
	mov	r5, #0x0
	ldr	r2, .L291+0x10
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	cmp	r5, r0
	bcs	.L287	@cond_branch
	add	r6, r3, #0
.L289:
	lsl	r1, r1, #0x10
	asr	r4, r1, #0x10
	mov	r0, #0xc0
	lsl	r0, r0, #0xa
	add	r1, r1, r0
	asr	r1, r1, #0x10
	ldr	r0, .L291+0x14
	mov	r2, #0x3c
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	strh	r5, [r0, #0x2e]
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x8
	lsl	r4, r4, #0x10
	lsr	r1, r4, #0x10
	ldr	r0, .L291
	ldr	r0, [r0]
	ldr	r2, .L291+0x10
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	cmp	r5, r0
	bcc	.L289	@cond_branch
.L287:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L292:
	.align	2, 0
.L291:
	.word	sNamingScreen
	.word	0x1e16
	.word	sSpriteTemplate_InputArrow
	.word	gSprites
	.word	0x1e28
	.word	sSpriteTemplate_Underscore
.Lfe58:
	.size	 CreateTextEntrySprites,.Lfe58-CreateTextEntrySprites
	.section .rodata
	.align	2, 0
	.type	 sIconFunctions,object
sIconFunctions:
	.word	NamingScreen_NoIcon
	.word	NamingScreen_CreatePlayerIcon
	.word	NamingScreen_CreatePCIcon
	.word	NamingScreen_CreateMonIcon
	.word	NamingScreen_CreateRivalIcon
	.size	 sIconFunctions,20
.text
	.align	2, 0
	.type	 CreateInputTargetIcon,function
	.thumb_func
CreateInputTargetIcon:
	push	{lr}
	ldr	r1, .L294
	ldr	r0, .L294+0x4
	ldr	r0, [r0]
	ldr	r2, .L294+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	sIconFunctions
	.word	sNamingScreen
	.word	0x1e28
.Lfe59:
	.size	 CreateInputTargetIcon,.Lfe59-CreateInputTargetIcon
	.align	2, 0
	.type	 NamingScreen_NoIcon,function
	.thumb_func
NamingScreen_NoIcon:
	bx	lr
.Lfe60:
	.size	 NamingScreen_NoIcon,.Lfe60-NamingScreen_NoIcon
	.align	2, 0
	.type	 NamingScreen_CreatePlayerIcon,function
	.thumb_func
NamingScreen_CreatePlayerIcon:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L298
	ldr	r0, [r0]
	ldr	r1, .L298+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x0
	bl	GetRivalAvatarGraphicsIdByStateIdAndGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L298+0x8
	mov	r2, #0x0
	str	r2, [sp]
	mov	r2, #0x38
	mov	r3, #0x25
	bl	CreateObjectGraphicsSprite
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L298+0xc
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x4
	bl	StartSpriteAnim
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L299:
	.align	2, 0
.L298:
	.word	sNamingScreen
	.word	0x1e34
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe61:
	.size	 NamingScreen_CreatePlayerIcon,.Lfe61-NamingScreen_CreatePlayerIcon
	.align	2, 0
	.type	 NamingScreen_CreatePCIcon,function
	.thumb_func
NamingScreen_CreatePCIcon:
	push	{r4, lr}
	ldr	r0, .L301
	mov	r1, #0x38
	mov	r2, #0x29
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L301+0x4
	add	r4, r4, r0
	ldr	r1, .L301+0x8
	add	r0, r4, #0
	bl	SetSubspriteTables
	ldrb	r0, [r4, #0x5]
	mov	r1, #0xc
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	pop	{r4}
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	sSpriteTemplate_PCIcon
	.word	gSprites
	.word	sSubspriteTable_PCIcon
.Lfe62:
	.size	 NamingScreen_CreatePCIcon,.Lfe62-NamingScreen_CreatePCIcon
	.align	2, 0
	.type	 NamingScreen_CreateMonIcon,function
	.thumb_func
NamingScreen_CreateMonIcon:
	push	{lr}
	add	sp, sp, #-0xc
	bl	LoadMonIconPalettes
	ldr	r0, .L304
	ldr	r3, [r0]
	ldr	r1, .L304+0x4
	add	r0, r3, r1
	ldrh	r0, [r0]
	ldr	r1, .L304+0x8
	mov	r2, #0x0
	str	r2, [sp]
	ldr	r2, .L304+0xc
	add	r3, r3, r2
	ldr	r2, [r3]
	str	r2, [sp, #0x4]
	mov	r2, #0x1
	str	r2, [sp, #0x8]
	mov	r2, #0x38
	mov	r3, #0x28
	bl	CreateMonIcon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L304+0x10
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x5]
	mov	r2, #0xc
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	sNamingScreen
	.word	0x1e34
	.word	SpriteCallbackDummy
	.word	0x1e38
	.word	gSprites
.Lfe63:
	.size	 NamingScreen_CreateMonIcon,.Lfe63-NamingScreen_CreateMonIcon
	.section .rodata
	.align	2, 0
	.type	 sAnim_Rival,object
sAnim_Rival:
	.short	0x0
	.byte	0xa
	.space	1
	.short	0x18
	.byte	0xa
	.space	1
	.short	0x0
	.byte	0xa
	.space	1
	.short	0x20
	.byte	0xa
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Rival,20
	.align	2, 0
	.type	 sAnims_Rival,object
sAnims_Rival:
	.word	sAnim_Rival
	.size	 sAnims_Rival,4
	.align	2, 0
.LC120:
	.word	sRival_Gfx
	.short	0x900
	.short	0xff
	.align	2, 0
.LC122:
	.word	gNamingScreenRival_Pal
	.short	0xff
	.space	2
.text
	.align	2, 0
	.type	 NamingScreen_CreateRivalIcon,function
	.thumb_func
NamingScreen_CreateRivalIcon:
	push	{r4, lr}
	add	sp, sp, #-0x2c
	ldr	r0, .L307
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x1c]
	str	r1, [sp, #0x20]
	ldr	r0, .L307+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x24]
	str	r1, [sp, #0x28]
	ldr	r1, .L307+0x8
	add	r3, sp, #0x18
	mov	r0, #0x0
	mov	r2, sp
	bl	CopyObjectGraphicsInfoToSpriteTemplate
	mov	r2, sp
	add	r0, sp, #0x1c
	ldrh	r1, [r0, #0x6]
	strh	r1, [r2]
	add	r4, sp, #0x24
	ldrh	r1, [r4, #0x4]
	strh	r1, [r2, #0x2]
	ldr	r1, .L307+0xc
	str	r1, [sp, #0x8]
	bl	LoadSpriteSheet
	add	r0, r4, #0
	bl	LoadSpritePalette
	mov	r0, sp
	mov	r1, #0x38
	mov	r2, #0x25
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L307+0x10
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x5]
	mov	r2, #0xc
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	sp, sp, #0x2c
	pop	{r4}
	pop	{r0}
	bx	r0
.L308:
	.align	2, 0
.L307:
	.word	.LC120
	.word	.LC122
	.word	SpriteCallbackDummy
	.word	sAnims_Rival
	.word	gSprites
.Lfe64:
	.size	 NamingScreen_CreateRivalIcon,.Lfe64-NamingScreen_CreateRivalIcon
	.section .rodata
	.align	2, 0
	.type	 sKeyboardKeyHandlers,object
sKeyboardKeyHandlers:
	.word	KeyboardKeyHandler_Character
	.word	KeyboardKeyHandler_Page
	.word	KeyboardKeyHandler_Backspace
	.word	KeyboardKeyHandler_OK
	.size	 sKeyboardKeyHandlers,16
.text
	.align	2, 0
	.type	 HandleKeyboardEvent,function
	.thumb_func
HandleKeyboardEvent:
	push	{r4, r5, lr}
	bl	GetInputEvent
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	GetKeyRoleAtCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, #0x8
	bne	.L310	@cond_branch
	bl	SwapKeyboardPage
	b	.L317
.L310:
	cmp	r4, #0x6
	bne	.L312	@cond_branch
	bl	DeleteTextCharacter
	b	.L318
.L312:
	cmp	r5, #0x9
	beq	.L314	@cond_branch
	ldr	r1, .L319
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
.L317:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L316
.L320:
	.align	2, 0
.L319:
	.word	sKeyboardKeyHandlers
.L314:
	bl	MoveCursorToOKButton
.L318:
	mov	r0, #0x0
.L316:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 HandleKeyboardEvent,.Lfe65-HandleKeyboardEvent
	.align	2, 0
	.type	 KeyboardKeyHandler_Character,function
	.thumb_func
KeyboardKeyHandler_Character:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	TryStartButtonFlash
	cmp	r4, #0x5
	bne	.L322	@cond_branch
	bl	AddTextCharacter
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SquishCursor
	cmp	r4, #0
	beq	.L322	@cond_branch
	mov	r0, #0x0
	bl	SetInputState
	ldr	r0, .L324
	ldr	r0, [r0]
	ldr	r1, .L324+0x4
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0]
.L322:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L325:
	.align	2, 0
.L324:
	.word	sNamingScreen
	.word	0x1e10
.Lfe66:
	.size	 KeyboardKeyHandler_Character,.Lfe66-KeyboardKeyHandler_Character
	.align	2, 0
	.type	 KeyboardKeyHandler_Page,function
	.thumb_func
KeyboardKeyHandler_Page:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	TryStartButtonFlash
	cmp	r4, #0x5
	beq	.L327	@cond_branch
	mov	r0, #0x0
	b	.L329
.L327:
	bl	SwapKeyboardPage
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L329:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 KeyboardKeyHandler_Page,.Lfe67-KeyboardKeyHandler_Page
	.align	2, 0
	.type	 KeyboardKeyHandler_Backspace,function
	.thumb_func
KeyboardKeyHandler_Backspace:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	TryStartButtonFlash
	cmp	r4, #0x5
	bne	.L331	@cond_branch
	bl	DeleteTextCharacter
.L331:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 KeyboardKeyHandler_Backspace,.Lfe68-KeyboardKeyHandler_Backspace
	.align	2, 0
	.type	 KeyboardKeyHandler_OK,function
	.thumb_func
KeyboardKeyHandler_OK:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	bl	TryStartButtonFlash
	cmp	r4, #0x5
	beq	.L333	@cond_branch
	mov	r0, #0x0
	b	.L335
.L333:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L336
	ldr	r0, [r0]
	ldr	r1, .L336+0x4
	add	r0, r0, r1
	mov	r1, #0x6
	strb	r1, [r0]
	mov	r0, #0x1
.L335:
	pop	{r4}
	pop	{r1}
	bx	r1
.L337:
	.align	2, 0
.L336:
	.word	sNamingScreen
	.word	0x1e10
.Lfe69:
	.size	 KeyboardKeyHandler_OK,.Lfe69-KeyboardKeyHandler_OK
	.align	2, 0
	.type	 SwapKeyboardPage,function
	.thumb_func
SwapKeyboardPage:
	ldr	r0, .L339
	ldr	r0, [r0]
	ldr	r1, .L339+0x4
	add	r0, r0, r1
	mov	r1, #0x4
	strb	r1, [r0]
	mov	r0, #0x1
	bx	lr
.L340:
	.align	2, 0
.L339:
	.word	sNamingScreen
	.word	0x1e10
.Lfe70:
	.size	 SwapKeyboardPage,.Lfe70-SwapKeyboardPage
	.section .rodata
	.align	2, 0
	.type	 sInputFuncs,object
sInputFuncs:
	.word	Input_Disabled
	.word	Input_Enabled
	.size	 sInputFuncs,8
.text
	.align	2, 0
	.type	 CreateInputHandlerTask,function
	.thumb_func
CreateInputHandlerTask:
	push	{lr}
	ldr	r0, .L342
	mov	r1, #0x1
	bl	CreateTask
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	Task_HandleInput
.Lfe71:
	.size	 CreateInputHandlerTask,.Lfe71-CreateInputHandlerTask
	.align	2, 0
	.type	 GetInputEvent,function
	.thumb_func
GetInputEvent:
	push	{lr}
	ldr	r0, .L345
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L345+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0xa]
	pop	{r1}
	bx	r1
.L346:
	.align	2, 0
.L345:
	.word	Task_HandleInput
	.word	gTasks
.Lfe72:
	.size	 GetInputEvent,.Lfe72-GetInputEvent
	.align	2, 0
	.type	 SetInputState,function
	.thumb_func
SetInputState:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L348
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L348+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	Task_HandleInput
	.word	gTasks
.Lfe73:
	.size	 SetInputState,.Lfe73-SetInputState
	.align	2, 0
	.type	 Task_HandleInput,function
	.thumb_func
Task_HandleInput:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L351
	ldr	r2, .L351+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L352:
	.align	2, 0
.L351:
	.word	sInputFuncs
	.word	gTasks
.Lfe74:
	.size	 Task_HandleInput,.Lfe74-Task_HandleInput
	.align	2, 0
	.type	 Input_Disabled,function
	.thumb_func
Input_Disabled:
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	bx	lr
.Lfe75:
	.size	 Input_Disabled,.Lfe75-Input_Disabled
	.align	2, 0
	.type	 Input_Enabled,function
	.thumb_func
Input_Enabled:
	push	{lr}
	add	r2, r0, #0
	mov	r0, #0x0
	strh	r0, [r2, #0xa]
	ldr	r0, .L363
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L355	@cond_branch
	mov	r0, #0x5
	strh	r0, [r2, #0xa]
	b	.L356
.L364:
	.align	2, 0
.L363:
	.word	gMain
.L355:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L357	@cond_branch
	mov	r0, #0x6
	strh	r0, [r2, #0xa]
	b	.L356
.L357:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L359	@cond_branch
	mov	r0, #0x8
	strh	r0, [r2, #0xa]
	b	.L356
.L359:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L361	@cond_branch
	mov	r0, #0x9
	strh	r0, [r2, #0xa]
	b	.L356
.L361:
	add	r0, r2, #0
	bl	HandleDpadMovement
.L356:
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 Input_Enabled,.Lfe76-Input_Enabled
	.section .rodata
	.align	1, 0
.LC140:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	-0x1
	.short	0x1
	.align	1, 0
.LC142:
	.short	0x0
	.short	-0x1
	.short	0x1
	.short	0x0
	.short	0x0
	.align	1, 0
.LC144:
	.short	0x0
	.short	0x1
	.short	0x1
	.short	0x2
	.align	1, 0
.LC146:
	.short	0x0
	.short	0x0
	.short	0x3
.text
	.align	2, 0
	.type	 HandleDpadMovement,function
	.thumb_func
HandleDpadMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x34
	mov	r9, r0
	ldr	r1, .L389
	mov	r0, sp
	mov	r2, #0xa
	bl	memcpy
	add	r0, sp, #0xc
	mov	sl, r0
	ldr	r1, .L389+0x4
	mov	r2, #0xa
	bl	memcpy
	mov	r1, sp
	add	r1, r1, #0x18
	str	r1, [sp, #0x2c]
	ldr	r1, .L389+0x8
	ldr	r0, [sp, #0x2c]
	mov	r2, #0x8
	bl	memcpy
	mov	r2, sp
	add	r2, r2, #0x20
	str	r2, [sp, #0x30]
	ldr	r1, .L389+0xc
	add	r0, r2, #0
	mov	r2, #0x6
	bl	memcpy
	add	r4, sp, #0x28
	mov	r5, sp
	add	r5, r5, #0x2a
	add	r0, r4, #0
	add	r1, r5, #0
	bl	GetCursorPos
	ldr	r0, .L389+0x10
	ldrh	r2, [r0, #0x30]
	mov	r0, #0x40
	and	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	neg	r0, r0
	lsr	r1, r0, #0x1f
	mov	r0, #0x80
	and	r0, r0, r2
	add	r6, r4, #0
	cmp	r0, #0
	beq	.L367	@cond_branch
	mov	r1, #0x2
.L367:
	mov	r0, #0x20
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L368	@cond_branch
	mov	r1, #0x3
.L368:
	mov	r0, #0x10
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L369	@cond_branch
	mov	r1, #0x4
.L369:
	ldrh	r0, [r6]
	mov	r8, r0
	lsl	r1, r1, #0x1
	mov	r2, sp
	add	r7, r2, r1
	ldrh	r0, [r7]
	add	r0, r0, r8
	strh	r0, [r6]
	add	r1, r1, sl
	ldrh	r0, [r1]
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp	r0, #0
	bge	.L370	@cond_branch
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6]
.L370:
	mov	r0, #0x0
	ldrsh	r4, [r6, r0]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	ble	.L371	@cond_branch
	mov	r0, #0x0
	strh	r0, [r6]
.L371:
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L372	@cond_branch
	mov	r2, #0x0
	ldrsh	r4, [r6, r2]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L373	@cond_branch
	ldrh	r0, [r5]
	mov	r1, r9
	strh	r0, [r1, #0xc]
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	lsl	r0, r0, #0x1
	ldr	r1, [sp, #0x2c]
	add	r0, r1, r0
	b	.L387
.L390:
	.align	2, 0
.L389:
	.word	.LC140
	.word	.LC142
	.word	.LC144
	.word	.LC146
	.word	gMain
.L373:
	mov	r2, r8
	lsl	r4, r2, #0x10
	asr	r4, r4, #0x10
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L372	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	bne	.L376	@cond_branch
	mov	r2, r9
	ldrh	r0, [r2, #0xc]
	b	.L388
.L376:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x1
	ldr	r2, [sp, #0x30]
	add	r0, r2, r0
.L387:
	ldrh	r0, [r0]
.L388:
	strh	r0, [r5]
.L372:
	mov	r0, #0x0
	ldrsh	r4, [r6, r0]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L378	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bge	.L379	@cond_branch
	mov	r0, #0x2
	strh	r0, [r5]
.L379:
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x2
	ble	.L380	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
.L380:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L381	@cond_branch
	mov	r0, #0x1
	mov	r2, r9
	strh	r0, [r2, #0xc]
	b	.L384
.L381:
	cmp	r0, #0x2
	bne	.L384	@cond_branch
	mov	r1, r9
	strh	r0, [r1, #0xc]
	b	.L384
.L378:
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bge	.L385	@cond_branch
	mov	r0, #0x3
	strh	r0, [r5]
.L385:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3
	ble	.L384	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
.L384:
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	SetCursorPos
	add	sp, sp, #0x34
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 HandleDpadMovement,.Lfe77-HandleDpadMovement
	.align	2, 0
	.type	 DrawNormalTextEntryBox,function
	.thumb_func
DrawNormalTextEntryBox:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L392
	ldr	r0, [r5]
	ldr	r4, .L392+0x4
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r1, [r5]
	add	r0, r1, r4
	ldrb	r0, [r0]
	ldr	r2, .L392+0x8
	add	r1, r1, r2
	ldr	r1, [r1]
	ldr	r2, [r1, #0x8]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L393:
	.align	2, 0
.L392:
	.word	sNamingScreen
	.word	0x1e14
	.word	0x1e28
.Lfe78:
	.size	 DrawNormalTextEntryBox,.Lfe78-DrawNormalTextEntryBox
	.align	2, 0
	.type	 DrawMonTextEntryBox,function
	.thumb_func
DrawMonTextEntryBox:
	push	{r4, r5, lr}
	add	sp, sp, #-0x2c
	ldr	r5, .L395
	ldr	r0, [r5]
	ldr	r1, .L395+0x4
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L395+0x8
	add	r1, r1, r0
	add	r0, sp, #0xc
	bl	StringCopy
	ldr	r0, [r5]
	ldr	r1, .L395+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, [r0, #0x8]
	add	r0, sp, #0xc
	mov	r2, #0xf
	bl	StringAppendN
	ldr	r0, [r5]
	ldr	r4, .L395+0x10
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0x2c
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	sNamingScreen
	.word	0x1e34
	.word	gSpeciesNames
	.word	0x1e28
	.word	0x1e14
.Lfe79:
	.size	 DrawMonTextEntryBox,.Lfe79-DrawMonTextEntryBox
	.section .rodata
	.align	2, 0
	.type	 sDrawTextEntryBoxFuncs,object
sDrawTextEntryBoxFuncs:
	.word	DrawNormalTextEntryBox
	.word	DrawNormalTextEntryBox
	.word	DrawMonTextEntryBox
	.word	DrawMonTextEntryBox
	.word	DrawNormalTextEntryBox
	.size	 sDrawTextEntryBoxFuncs,20
.text
	.align	2, 0
	.type	 DrawTextEntryBox,function
	.thumb_func
DrawTextEntryBox:
	push	{lr}
	ldr	r1, .L398
	ldr	r0, .L398+0x4
	ldr	r0, [r0]
	ldr	r2, .L398+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L399:
	.align	2, 0
.L398:
	.word	sDrawTextEntryBoxFuncs
	.word	sNamingScreen
	.word	0x1e2c
.Lfe80:
	.size	 DrawTextEntryBox,.Lfe80-DrawTextEntryBox
	.section .rodata
	.align	2, 0
	.type	 sDrawGenderIconFuncs,object
sDrawGenderIconFuncs:
	.word	DummyGenderIcon
	.word	DrawGenderIcon
	.size	 sDrawGenderIconFuncs,8
.text
	.align	2, 0
	.type	 TryDrawGenderIcon,function
	.thumb_func
TryDrawGenderIcon:
	push	{lr}
	ldr	r1, .L401
	ldr	r0, .L401+0x4
	ldr	r0, [r0]
	ldr	r2, .L401+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L402:
	.align	2, 0
.L401:
	.word	sDrawGenderIconFuncs
	.word	sNamingScreen
	.word	0x1e28
.Lfe81:
	.size	 TryDrawGenderIcon,.Lfe81-TryDrawGenderIcon
	.align	2, 0
	.type	 DummyGenderIcon,function
	.thumb_func
DummyGenderIcon:
	bx	lr
.Lfe82:
	.size	 DummyGenderIcon,.Lfe82-DummyGenderIcon
	.section .rodata
	.type	 sGenderColors,object
	.size	 sGenderColors,6
sGenderColors:
	.byte	0x0
	.byte	0x9
	.byte	0x8
	.byte	0x0
	.byte	0x5
	.byte	0x4
.text
	.align	2, 0
	.type	 DrawGenderIcon,function
	.thumb_func
DrawGenderIcon:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	mov	r4, #0x0
	ldr	r1, .L407
	add	r0, sp, #0xc
	bl	StringCopy
	ldr	r5, .L407+0x4
	ldr	r0, [r5]
	ldr	r1, .L407+0x8
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L405	@cond_branch
	cmp	r0, #0xfe
	bne	.L406	@cond_branch
	ldr	r1, .L407+0xc
	add	r0, sp, #0xc
	bl	StringCopy
	mov	r4, #0x1
.L406:
	ldr	r0, [r5]
	ldr	r1, .L407+0x10
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	ldr	r2, .L407+0x14
	add	r1, r1, r2
	str	r1, [sp]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0x4]
	add	r1, sp, #0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x68
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
.L405:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L408:
	.align	2, 0
.L407:
	.word	gText_MaleSymbol
	.word	sNamingScreen
	.word	0x1e36
	.word	gText_FemaleSymbol
	.word	0x1e13
	.word	sGenderColors
.Lfe83:
	.size	 DrawGenderIcon,.Lfe83-DrawGenderIcon
	.align	2, 0
	.type	 GetCharAtKeyboardPos,function
	.thumb_func
GetCharAtKeyboardPos:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L410
	bl	CurrentPageToKeyboardId
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0xd
	add	r4, r4, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x13
	add	r4, r4, r0
	add	r4, r4, r6
	ldrb	r0, [r4]
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L411:
	.align	2, 0
.L410:
	.word	sKeyboardChars
.Lfe84:
	.size	 GetCharAtKeyboardPos,.Lfe84-GetCharAtKeyboardPos
	.align	2, 0
	.type	 GetTextEntryPosition,function
	.thumb_func
GetTextEntryPosition:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r0, .L420
	ldr	r4, [r0]
	ldr	r3, .L420+0x4
	add	r1, r4, r3
	ldr	r1, [r1]
	ldrb	r3, [r1, #0x1]
	add	r5, r0, #0
	cmp	r2, r3
	bcs	.L414	@cond_branch
	mov	r0, #0xc0
	lsl	r0, r0, #0x5
	add	r1, r4, r0
.L416:
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L415	@cond_branch
	add	r0, r2, #0
	b	.L419
.L421:
	.align	2, 0
.L420:
	.word	sNamingScreen
	.word	0x1e28
.L415:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r3
	bcc	.L416	@cond_branch
.L414:
	ldr	r0, [r5]
	ldr	r1, .L422
	add	r0, r0, r1
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L419:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L423:
	.align	2, 0
.L422:
	.word	0x1e28
.Lfe85:
	.size	 GetTextEntryPosition,.Lfe85-GetTextEntryPosition
	.align	2, 0
	.type	 GetPreviousTextCaretPosition,function
	.thumb_func
GetPreviousTextCaretPosition:
	push	{lr}
	ldr	r0, .L432
	ldr	r2, [r0]
	ldr	r1, .L432+0x4
	add	r0, r2, r1
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	sub	r0, r0, #0x1
	lsl	r1, r0, #0x18
	cmp	r1, #0
	ble	.L426	@cond_branch
	mov	r0, #0xc0
	lsl	r0, r0, #0x5
	add	r3, r2, r0
.L428:
	asr	r2, r1, #0x18
	add	r0, r3, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	beq	.L427	@cond_branch
	lsr	r0, r1, #0x18
	b	.L431
.L433:
	.align	2, 0
.L432:
	.word	sNamingScreen
	.word	0x1e28
.L427:
	sub	r0, r2, #0x1
	lsl	r1, r0, #0x18
	cmp	r1, #0
	bgt	.L428	@cond_branch
.L426:
	mov	r0, #0x0
.L431:
	pop	{r1}
	bx	r1
.Lfe86:
	.size	 GetPreviousTextCaretPosition,.Lfe86-GetPreviousTextCaretPosition
	.align	2, 0
	.type	 DeleteTextCharacter,function
	.thumb_func
DeleteTextCharacter:
	push	{r4, r5, r6, lr}
	bl	GetPreviousTextCaretPosition
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L437
	ldr	r0, [r6]
	mov	r5, #0xc0
	lsl	r5, r5, #0x5
	add	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x0
	strb	r1, [r0]
	bl	DrawTextEntry
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r0, [r6]
	add	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
	bl	GetKeyRoleAtCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L436	@cond_branch
	cmp	r0, #0x2
	bne	.L435	@cond_branch
.L436:
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x1
	bl	TryStartButtonFlash
.L435:
	mov	r0, #0x17
	bl	PlaySE
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L438:
	.align	2, 0
.L437:
	.word	sNamingScreen
.Lfe87:
	.size	 DeleteTextCharacter,.Lfe87-DeleteTextCharacter
	.align	2, 0
	.type	 AddTextCharacter,function
	.thumb_func
AddTextCharacter:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetCursorPos
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	GetCharAtKeyboardPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	BufferCharacter
	bl	DrawTextEntry
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x5
	bl	PlaySE
	bl	GetPreviousTextCaretPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L443
	ldr	r1, [r1]
	ldr	r2, .L443+0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x1]
	sub	r1, r1, #0x1
	cmp	r0, r1
	bne	.L440	@cond_branch
	mov	r0, #0x1
	b	.L442
.L444:
	.align	2, 0
.L443:
	.word	sNamingScreen
	.word	0x1e28
.L440:
	mov	r0, #0x0
.L442:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe88:
	.size	 AddTextCharacter,.Lfe88-AddTextCharacter
	.align	2, 0
	.type	 BufferCharacter,function
	.thumb_func
BufferCharacter:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetTextEntryPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L446
	ldr	r1, [r1]
	mov	r2, #0xc0
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	add	r1, r1, r0
	strb	r4, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L447:
	.align	2, 0
.L446:
	.word	sNamingScreen
.Lfe89:
	.size	 BufferCharacter,.Lfe89-BufferCharacter
	.align	2, 0
	.type	 SaveInputText,function
	.thumb_func
SaveInputText:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r1, .L456
	ldr	r0, [r1]
	ldr	r4, .L456+0x4
	add	r0, r0, r4
	ldr	r0, [r0]
	add	r5, r1, #0
	b	.L455
.L457:
	.align	2, 0
.L456:
	.word	sNamingScreen
	.word	0x1e28
.L452:
	ldr	r1, [r1]
	mov	r0, #0xc0
	lsl	r0, r0, #0x5
	add	r3, r1, r0
	add	r0, r3, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L451	@cond_branch
	cmp	r0, #0xff
	beq	.L451	@cond_branch
	ldr	r2, .L458
	add	r0, r1, r2
	ldr	r0, [r0]
	add	r1, r1, r4
	ldr	r1, [r1]
	ldrb	r2, [r1, #0x1]
	add	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r1, r3, #0
	bl	StringCopyN
	b	.L450
.L459:
	.align	2, 0
.L458:
	.word	0x1e30
.L451:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r1, r5, #0
	ldr	r0, [r1]
	ldr	r4, .L460
	add	r0, r0, r4
	ldr	r0, [r0]
.L455:
	ldrb	r0, [r0, #0x1]
	cmp	r2, r0
	bcc	.L452	@cond_branch
.L450:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L461:
	.align	2, 0
.L460:
	.word	0x1e28
.Lfe90:
	.size	 SaveInputText,.Lfe90-SaveInputText
	.align	2, 0
	.type	 LoadGfx,function
	.thumb_func
LoadGfx:
	push	{r4, r5, r6, lr}
	ldr	r0, .L463
	ldr	r6, .L463+0x4
	ldr	r1, [r6]
	ldr	r4, .L463+0x8
	add	r1, r1, r4
	bl	LZ77UnCompWram
	ldr	r1, [r6]
	add	r1, r1, r4
	mov	r5, #0xc0
	lsl	r5, r5, #0x3
	mov	r0, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r6]
	add	r1, r1, r4
	mov	r0, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r6]
	add	r1, r1, r4
	mov	r0, #0x3
	add	r2, r5, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r0, .L463+0xc
	bl	LoadSpriteSheets
	ldr	r0, .L463+0x10
	bl	LoadSpritePalettes
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L464:
	.align	2, 0
.L463:
	.word	gNamingScreenMenu_Gfx
	.word	sNamingScreen
	.word	0x1810
	.word	sSpriteSheets
	.word	sSpritePalettes
.Lfe91:
	.size	 LoadGfx,.Lfe91-LoadGfx
	.align	2, 0
	.type	 CreateHelperTasks,function
	.thumb_func
CreateHelperTasks:
	push	{lr}
	bl	CreateInputHandlerTask
	bl	CreateButtonFlashTask
	pop	{r0}
	bx	r0
.Lfe92:
	.size	 CreateHelperTasks,.Lfe92-CreateHelperTasks
	.align	2, 0
	.type	 LoadPalettes,function
	.thumb_func
LoadPalettes:
	push	{lr}
	ldr	r0, .L467
	mov	r1, #0x0
	mov	r2, #0xc0
	bl	LoadPalette
	ldr	r0, .L467+0x4
	mov	r1, #0xa0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x2
	bl	GetTextWindowPalette
	mov	r1, #0xb0
	mov	r2, #0x20
	bl	LoadPalette
	pop	{r0}
	bx	r0
.L468:
	.align	2, 0
.L467:
	.word	gNamingScreenMenu_Pal
	.word	gNamingScreenKeyboard_Pal
.Lfe93:
	.size	 LoadPalettes,.Lfe93-LoadPalettes
	.align	2, 0
	.type	 DecompressToBgTilemapBuffer,function
	.thumb_func
DecompressToBgTilemapBuffer:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	pop	{r0}
	bx	r0
.Lfe94:
	.size	 DecompressToBgTilemapBuffer,.Lfe94-DecompressToBgTilemapBuffer
	.align	2, 0
	.type	 DrawTextEntry,function
	.thumb_func
DrawTextEntry:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	ldr	r7, .L478
	ldr	r1, [r7]
	ldr	r2, .L478+0x4
	add	r0, r1, r2
	ldr	r0, [r0]
	ldrb	r6, [r0, #0x1]
	sub	r2, r2, #0x12
	add	r0, r1, r2
	ldrh	r0, [r0]
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	ldr	r0, .L478+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r4, #0x0
	cmp	r4, r6
	bcs	.L472	@cond_branch
	add	r5, sp, #0xc
	mov	sl, r4
	ldr	r0, .L478+0xc
	ldrb	r0, [r0]
	mov	r8, r0
.L474:
	ldr	r0, [r7]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	strb	r0, [r5]
	mov	r2, r8
	strb	r2, [r5, #0x1]
	ldrb	r0, [r5]
	bl	IsWideLetter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	cmp	r0, #0x1
	bne	.L475	@cond_branch
	mov	r1, #0x2
.L475:
	ldr	r0, [r7]
	ldr	r2, .L478+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r3, r4, #0x3
	add	r3, r3, r9
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, sl
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r6
	bcc	.L474	@cond_branch
.L472:
	bl	TryDrawGenderIcon
	ldr	r5, .L478
	ldr	r0, [r5]
	ldr	r4, .L478+0x8
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L479:
	.align	2, 0
.L478:
	.word	sNamingScreen
	.word	0x1e28
	.word	0x1e13
	.word	gExpandedPlaceholder_Empty
.Lfe95:
	.size	 DrawTextEntry,.Lfe95-DrawTextEntry
	.section .rodata
	.align	2, 0
	.type	 sTextColorStruct,object
	.size	 sTextColorStruct,12
sTextColorStruct:
	.byte	0xd
	.byte	0x1
	.byte	0x2
	.space	1
	.byte	0xe
	.byte	0x1
	.byte	0x2
	.space	1
	.byte	0xf
	.byte	0x1
	.byte	0x2
	.space	1
	.type	 sFillValues,object
	.size	 sFillValues,3
sFillValues:
	.byte	0xee
	.byte	0xdd
	.byte	0xff
	.align	2, 0
	.type	 sKeyboardTextColors,object
	.size	 sKeyboardTextColors,12
sKeyboardTextColors:
	.word	sTextColorStruct+0x4
	.word	sTextColorStruct
	.word	sTextColorStruct+0x8
.text
	.align	2, 0
	.type	 PrintKeyboardKeys,function
	.thumb_func
PrintKeyboardKeys:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r0, .L486
	add	r0, r5, r0
	ldrb	r1, [r0]
	add	r0, r6, #0
	bl	FillWindowPixelBuffer
	mov	r4, #0x0
	ldr	r1, .L486+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r7, [r0]
	ldr	r0, .L486+0x8
	mov	r8, r0
.L484:
	lsl	r3, r4, #0x4
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r7, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	lsl	r0, r4, #0x2
	lsl	r1, r5, #0x4
	add	r0, r0, r1
	add	r0, r0, r8
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	AddTextPrinterParameterized3
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L484	@cond_branch
	add	r0, r6, #0
	bl	PutWindowTilemap
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L487:
	.align	2, 0
.L486:
	.word	sFillValues
	.word	sKeyboardTextColors
	.word	sNamingScreenKeyboardText
.Lfe96:
	.size	 PrintKeyboardKeys,.Lfe96-PrintKeyboardKeys
	.section .rodata
	.align	2, 0
	.type	 sNextKeyboardPageTilemaps,object
sNextKeyboardPageTilemaps:
	.word	gNamingScreenKeyboardUpper_Tilemap
	.word	gNamingScreenKeyboardLower_Tilemap
	.word	gNamingScreenKeyboardSymbols_Tilemap
	.size	 sNextKeyboardPageTilemaps,12
.text
	.align	2, 0
	.type	 DrawKeyboardPageOnDeck,function
	.thumb_func
DrawKeyboardPageOnDeck:
	push	{r4, r5, lr}
	mov	r0, #0xa
	bl	GetGpuReg
	add	r4, r0, #0
	mov	r5, #0x3
	and	r4, r4, r5
	mov	r0, #0xc
	bl	GetGpuReg
	and	r0, r0, r5
	cmp	r4, r0
	bls	.L489	@cond_branch
	mov	r2, #0x1
	mov	r5, #0x1
	ldr	r1, .L492
	ldr	r0, [r1]
	ldr	r3, .L492+0x4
	b	.L491
.L493:
	.align	2, 0
.L492:
	.word	sNamingScreen
	.word	0x1e11
.L489:
	mov	r2, #0x2
	mov	r5, #0x2
	ldr	r1, .L494
	ldr	r0, [r1]
	ldr	r3, .L494+0x4
.L491:
	add	r0, r0, r3
	ldrb	r4, [r0]
	add	r0, r1, #0
	ldr	r1, .L494+0x8
	ldr	r0, [r0]
	ldr	r3, .L494+0xc
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r2, #0
	bl	DecompressToBgTilemapBuffer
	bl	CurrentPageToNextKeyboardId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	PrintKeyboardKeys
	add	r0, r5, #0
	bl	CopyBgTilemapBufferToVram
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L495:
	.align	2, 0
.L494:
	.word	sNamingScreen
	.word	0x1e12
	.word	sNextKeyboardPageTilemaps
	.word	0x1e22
.Lfe97:
	.size	 DrawKeyboardPageOnDeck,.Lfe97-DrawKeyboardPageOnDeck
	.section .rodata
.LC181:
	.byte	0xf
	.byte	0x1
	.byte	0x2
.text
	.align	2, 0
	.type	 PrintControls,function
	.thumb_func
PrintControls:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x10
	ldr	r1, .L497
	add	r0, sp, #0xc
	mov	r2, #0x3
	bl	memcpy
	ldr	r0, .L497+0x4
	mov	r8, r0
	mov	r0, #0x0
	mov	r1, r8
	mov	r2, #0x0
	bl	GetStringWidth
	add	r6, r0, #0
	ldr	r5, .L497+0x8
	ldr	r0, [r5]
	ldr	r4, .L497+0xc
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0xff
	bl	FillWindowPixelBuffer
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x14
	neg	r1, r1
	add	r2, r1, #0
	sub	r2, r2, r6
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r1, sp, #0xc
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	mov	r1, r8
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L498:
	.align	2, 0
.L497:
	.word	.LC181
	.word	gText_MoveOkBack
	.word	sNamingScreen
	.word	0x1e15
.Lfe98:
	.size	 PrintControls,.Lfe98-PrintControls
	.align	2, 0
	.type	 CB2_NamingScreen,function
	.thumb_func
CB2_NamingScreen:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe99:
	.size	 CB2_NamingScreen,.Lfe99-CB2_NamingScreen
	.align	2, 0
	.type	 ResetVHBlank,function
	.thumb_func
ResetVHBlank:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	pop	{r0}
	bx	r0
.Lfe100:
	.size	 ResetVHBlank,.Lfe100-ResetVHBlank
	.align	2, 0
	.type	 SetVBlank,function
	.thumb_func
SetVBlank:
	push	{lr}
	ldr	r0, .L502
	bl	SetVBlankCallback
	pop	{r0}
	bx	r0
.L503:
	.align	2, 0
.L502:
	.word	VBlankCB_NamingScreen
.Lfe101:
	.size	 SetVBlank,.Lfe101-SetVBlank
	.align	2, 0
	.type	 VBlankCB_NamingScreen,function
	.thumb_func
VBlankCB_NamingScreen:
	push	{r4, r5, lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r5, .L505
	ldr	r0, [r5]
	ldr	r1, .L505+0x4
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x16
	bl	SetGpuReg
	ldr	r0, [r5]
	ldr	r1, .L505+0x8
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x1a
	bl	SetGpuReg
	mov	r0, #0xa
	bl	GetGpuReg
	ldr	r4, .L505+0xc
	add	r1, r4, #0
	and	r1, r1, r0
	mov	r0, #0xa
	bl	SetGpuReg
	ldr	r0, [r5]
	ldr	r1, .L505+0x10
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0xa
	bl	SetGpuRegBits
	mov	r0, #0xc
	bl	GetGpuReg
	and	r4, r4, r0
	mov	r0, #0xc
	add	r1, r4, #0
	bl	SetGpuReg
	ldr	r0, [r5]
	ldr	r1, .L505+0x14
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0xc
	bl	SetGpuRegBits
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L506:
	.align	2, 0
.L505:
	.word	sNamingScreen
	.word	0x1e18
	.word	0x1e1a
	.word	0xfffc
	.word	0x1e1c
	.word	0x1e1e
.Lfe102:
	.size	 VBlankCB_NamingScreen,.Lfe102-VBlankCB_NamingScreen
	.align	2, 0
	.type	 NamingScreen_ShowBgs,function
	.thumb_func
NamingScreen_ShowBgs:
	push	{lr}
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	pop	{r0}
	bx	r0
.Lfe103:
	.size	 NamingScreen_ShowBgs,.Lfe103-NamingScreen_ShowBgs
	.align	2, 0
	.type	 IsWideLetter,function
	.thumb_func
IsWideLetter:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r2, #0x0
	ldr	r0, .L516
	ldrb	r1, [r0]
	add	r3, r0, #0
	cmp	r1, #0xff
	beq	.L510	@cond_branch
	add	r1, r3, #0
.L512:
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r4, r0
	bne	.L511	@cond_branch
	mov	r0, #0x1
	b	.L515
.L517:
	.align	2, 0
.L516:
	.word	gText_AlphabetUpperLower
.L511:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L512	@cond_branch
.L510:
	mov	r0, #0x0
.L515:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 IsWideLetter,.Lfe104-IsWideLetter
	.align	2, 0
	.type	 Debug_NamingScreenPlayer,function
	.thumb_func
Debug_NamingScreenPlayer:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L519
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L519+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L520:
	.align	2, 0
.L519:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe105:
	.size	 Debug_NamingScreenPlayer,.Lfe105-Debug_NamingScreenPlayer
	.align	2, 0
	.type	 Debug_NamingScreenBox,function
	.thumb_func
Debug_NamingScreenBox:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L522
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L522+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L523:
	.align	2, 0
.L522:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe106:
	.size	 Debug_NamingScreenBox,.Lfe106-Debug_NamingScreenBox
	.align	2, 0
	.type	 Debug_NamingScreenCaughtMon,function
	.thumb_func
Debug_NamingScreenCaughtMon:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L525
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L525+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L526:
	.align	2, 0
.L525:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe107:
	.size	 Debug_NamingScreenCaughtMon,.Lfe107-Debug_NamingScreenCaughtMon
	.align	2, 0
	.type	 Debug_NamingScreenNickname,function
	.thumb_func
Debug_NamingScreenNickname:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L528
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L528+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L529:
	.align	2, 0
.L528:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe108:
	.size	 Debug_NamingScreenNickname,.Lfe108-Debug_NamingScreenNickname
	.align	2, 0
	.type	 Debug_NamingScreenRival,function
	.thumb_func
Debug_NamingScreenRival:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L531
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L531+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x4
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L532:
	.align	2, 0
.L531:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe109:
	.size	 Debug_NamingScreenRival,.Lfe109-Debug_NamingScreenRival
	.section .rodata
	.align	2, 0
	.type	 sPlayerNamingScreenTemplate,object
	.size	 sPlayerNamingScreenTemplate,12
sPlayerNamingScreenTemplate:
	.byte	0x0
	.byte	0x7
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.space	3
	.word	gText_YourName
	.align	2, 0
	.type	 sPcBoxNamingScreenTemplate,object
	.size	 sPcBoxNamingScreenTemplate,12
sPcBoxNamingScreenTemplate:
	.byte	0x0
	.byte	0x8
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.space	3
	.word	gText_BoxName
	.align	2, 0
	.type	 sMonNamingScreenTemplate,object
	.size	 sMonNamingScreenTemplate,12
sMonNamingScreenTemplate:
	.byte	0x0
	.byte	0xa
	.byte	0x3
	.byte	0x1
	.byte	0x1
	.space	3
	.word	gText_PkmnsNickname
	.align	2, 0
	.type	 sRivalNamingScreenTemplate,object
	.size	 sRivalNamingScreenTemplate,12
sRivalNamingScreenTemplate:
	.byte	0x0
	.byte	0x7
	.byte	0x4
	.byte	0x0
	.byte	0x1
	.space	3
	.word	gText_RivalsName
	.align	2, 0
	.type	 sNamingScreenTemplates,object
sNamingScreenTemplates:
	.word	sPlayerNamingScreenTemplate
	.word	sPcBoxNamingScreenTemplate
	.word	sMonNamingScreenTemplate
	.word	sMonNamingScreenTemplate
	.word	sRivalNamingScreenTemplate
	.size	 sNamingScreenTemplates,20
	.align	2, 0
	.type	 sOam_8x8,object
	.size	 sOam_8x8,8
sOam_8x8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sOam_16x16,object
	.size	 sOam_16x16,8
sOam_16x16:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sOam_32x16,object
	.size	 sOam_32x16,8
sOam_32x16:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sSubsprites_PageSwapFrame,object
	.size	 sSubsprites_PageSwapFrame,32
sSubsprites_PageSwapFrame:
	.byte	-0x14
	.byte	-0x10
	.byte	0x5
	.byte	0x40
	.byte	0xc
	.byte	-0x10
	.byte	0x40
	.byte	0x40
	.byte	-0x14
	.byte	-0x8
	.byte	0x55
	.byte	0x40
	.byte	0xc
	.byte	-0x8
	.byte	0x90
	.byte	0x40
	.byte	-0x14
	.byte	0x0
	.byte	0xa5
	.byte	0x40
	.byte	0xc
	.byte	0x0
	.byte	0xe0
	.byte	0x40
	.byte	-0x14
	.byte	0x8
	.byte	0xf5
	.byte	0x40
	.byte	0xc
	.byte	0x8
	.byte	0x30
	.byte	0x41
	.align	2, 0
	.type	 sSubsprites_PageSwapText,object
	.size	 sSubsprites_PageSwapText,8
sSubsprites_PageSwapText:
	.byte	-0xc
	.byte	-0x4
	.byte	0x1
	.byte	0x40
	.byte	0x4
	.byte	-0x4
	.byte	0x20
	.byte	0x40
	.align	2, 0
	.type	 sSubsprites_Button,object
	.size	 sSubsprites_Button,24
sSubsprites_Button:
	.byte	-0x14
	.byte	-0xc
	.byte	0x5
	.byte	0x40
	.byte	0xc
	.byte	-0xc
	.byte	0x40
	.byte	0x40
	.byte	-0x14
	.byte	-0x4
	.byte	0x55
	.byte	0x40
	.byte	0xc
	.byte	-0x4
	.byte	0x90
	.byte	0x40
	.byte	-0x14
	.byte	0x4
	.byte	0xa5
	.byte	0x40
	.byte	0xc
	.byte	0x4
	.byte	0xe0
	.byte	0x40
	.align	2, 0
	.type	 sSubsprites_PCIcon,object
	.size	 sSubsprites_PCIcon,12
sSubsprites_PCIcon:
	.byte	-0x8
	.byte	-0xc
	.byte	0x1
	.byte	0xc0
	.byte	-0x8
	.byte	-0x4
	.byte	0x21
	.byte	0xc0
	.byte	-0x8
	.byte	0x4
	.byte	0x41
	.byte	0xc0
	.align	2, 0
	.type	 sSubspriteTable_PageSwapFrame,object
sSubspriteTable_PageSwapFrame:
	.byte	0x8
	.space	3
	.word	sSubsprites_PageSwapFrame
	.size	 sSubspriteTable_PageSwapFrame,8
	.align	2, 0
	.type	 sSubspriteTable_PageSwapText,object
sSubspriteTable_PageSwapText:
	.byte	0x2
	.space	3
	.word	sSubsprites_PageSwapText
	.byte	0x2
	.space	3
	.word	sSubsprites_PageSwapText
	.byte	0x2
	.space	3
	.word	sSubsprites_PageSwapText
	.size	 sSubspriteTable_PageSwapText,24
	.align	2, 0
	.type	 sSubspriteTable_Button,object
sSubspriteTable_Button:
	.byte	0x6
	.space	3
	.word	sSubsprites_Button
	.size	 sSubspriteTable_Button,8
	.align	2, 0
	.type	 sSubspriteTable_PCIcon,object
sSubspriteTable_PCIcon:
	.byte	0x3
	.space	3
	.word	sSubsprites_PCIcon
	.size	 sSubspriteTable_PCIcon,8
	.align	2, 0
	.type	 sImageTable_PCIcon,object
sImageTable_PCIcon:
	.word	sPCIconOff_Gfx
	.short	0xc0
	.space	2
	.word	sPCIconOn_Gfx
	.short	0xc0
	.space	2
	.size	 sImageTable_PCIcon,16
	.align	2, 0
	.type	 sAnim_Loop,object
sAnim_Loop:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Loop,8
	.align	2, 0
	.type	 sAnim_CursorSquish,object
sAnim_CursorSquish:
	.short	0x4
	.byte	0x8
	.space	1
	.short	0x8
	.byte	0x8
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_CursorSquish,12
	.align	2, 0
	.type	 sAnim_PCIcon,object
sAnim_PCIcon:
	.short	0x0
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_PCIcon,12
	.align	2, 0
	.type	 sAnims_Loop,object
sAnims_Loop:
	.word	sAnim_Loop
	.size	 sAnims_Loop,4
	.align	2, 0
	.type	 sAnims_Cursor,object
sAnims_Cursor:
	.word	sAnim_Loop
	.word	sAnim_CursorSquish
	.size	 sAnims_Cursor,8
	.align	2, 0
	.type	 sAnims_PCIcon,object
sAnims_PCIcon:
	.word	sAnim_PCIcon
	.size	 sAnims_PCIcon,4
	.align	2, 0
	.type	 sSpriteTemplate_PageSwapFrame,object
	.size	 sSpriteTemplate_PageSwapFrame,24
sSpriteTemplate_PageSwapFrame:
	.short	0x2
	.short	0x4
	.word	sOam_8x8
	.word	sAnims_Loop
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_PageSwap
	.align	2, 0
	.type	 sSpriteTemplate_PageSwapButton,object
	.size	 sSpriteTemplate_PageSwapButton,24
sSpriteTemplate_PageSwapButton:
	.short	0x3
	.short	0x1
	.word	sOam_32x16
	.word	sAnims_Loop
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_PageSwapText,object
	.size	 sSpriteTemplate_PageSwapText,24
sSpriteTemplate_PageSwapText:
	.short	0x4
	.short	0x4
	.word	sOam_8x8
	.word	sAnims_Loop
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_BackButton,object
	.size	 sSpriteTemplate_BackButton,24
sSpriteTemplate_BackButton:
	.short	0x0
	.short	0x6
	.word	sOam_8x8
	.word	sAnims_Loop
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_OkButton,object
	.size	 sSpriteTemplate_OkButton,24
sSpriteTemplate_OkButton:
	.short	0x1
	.short	0x7
	.word	sOam_8x8
	.word	sAnims_Loop
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Cursor,object
	.size	 sSpriteTemplate_Cursor,24
sSpriteTemplate_Cursor:
	.short	0x7
	.short	0x5
	.word	sOam_16x16
	.word	sAnims_Cursor
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_Cursor
	.align	2, 0
	.type	 sSpriteTemplate_InputArrow,object
	.size	 sSpriteTemplate_InputArrow,24
sSpriteTemplate_InputArrow:
	.short	0xa
	.short	0x3
	.word	sOam_8x8
	.word	sAnims_Loop
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_InputArrow
	.align	2, 0
	.type	 sSpriteTemplate_Underscore,object
	.size	 sSpriteTemplate_Underscore,24
sSpriteTemplate_Underscore:
	.short	0xb
	.short	0x3
	.word	sOam_8x8
	.word	sAnims_Loop
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_Underscore
	.align	2, 0
	.type	 sSpriteTemplate_PCIcon,object
	.size	 sSpriteTemplate_PCIcon,24
sSpriteTemplate_PCIcon:
	.short	0xffff
	.short	0x0
	.word	sOam_8x8
	.word	sAnims_PCIcon
	.word	sImageTable_PCIcon
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sNamingScreenKeyboardText,object
	.size	 sNamingScreenKeyboardText,48
sNamingScreenKeyboardText:
	.word	gText_NamingScreenKeyboard_abcdef
	.word	gText_NamingScreenKeyboard_ghijkl
	.word	gText_NamingScreenKeyboard_mnopqrs
	.word	gText_NamingScreenKeyboard_tuvwxyz
	.word	gText_NamingScreenKeyboard_ABCDEF
	.word	gText_NamingScreenKeyboard_GHIJKL
	.word	gText_NamingScreenKeyboard_MNOPQRS
	.word	gText_NamingScreenKeyboard_TUVWXYZ
	.word	gText_NamingScreenKeyboard_01234
	.word	gText_NamingScreenKeyboard_56789
	.word	gText_NamingScreenKeyboard_Symbols1
	.word	gText_NamingScreenKeyboard_Symbols2
	.align	2, 0
	.type	 sSpriteSheets,object
sSpriteSheets:
	.word	gNamingScreenBackButton_Gfx
	.short	0x1e0
	.short	0x0
	.word	gNamingScreenOKButton_Gfx
	.short	0x1e0
	.short	0x1
	.word	gNamingScreenPageSwapFrame_Gfx
	.short	0x280
	.short	0x2
	.word	gNamingScreenPageSwapButton_Gfx
	.short	0x100
	.short	0x3
	.word	gNamingScreenPageSwapUpper_Gfx
	.short	0x60
	.short	0x4
	.word	gNamingScreenPageSwapLower_Gfx
	.short	0x60
	.short	0x5
	.word	gNamingScreenPageSwapOthers_Gfx
	.short	0x60
	.short	0x6
	.word	gNamingScreenCursor_Gfx
	.short	0x80
	.short	0x7
	.word	gNamingScreenCursorSquished_Gfx
	.short	0x80
	.short	0x8
	.word	gNamingScreenCursorFilled_Gfx
	.short	0x80
	.short	0x9
	.word	gNamingScreenInputArrow_Gfx
	.short	0x20
	.short	0xa
	.word	gNamingScreenUnderscore_Gfx
	.short	0x20
	.short	0xb
	.space	8
	.size	 sSpriteSheets,104
	.align	2, 0
	.type	 sSpritePalettes,object
sSpritePalettes:
	.word	gNamingScreenMenu_Pal
	.short	0x0
	.space	2
	.word	gNamingScreenMenu_Pal+0x20
	.short	0x1
	.space	2
	.word	gNamingScreenMenu_Pal+0x40
	.short	0x2
	.space	2
	.word	gNamingScreenMenu_Pal+0x60
	.short	0x3
	.space	2
	.word	gNamingScreenMenu_Pal+0x80
	.short	0x4
	.space	2
	.word	gNamingScreenMenu_Pal+0xa0
	.short	0x5
	.space	2
	.word	gNamingScreenMenu_Pal+0x80
	.short	0x6
	.space	2
	.word	gNamingScreenMenu_Pal+0x80
	.short	0x7
	.space	2
	.space	8
	.size	 sSpritePalettes,72
.text
	.align	2, 0 @ Don't pad with nop

