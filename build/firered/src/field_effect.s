@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gFieldEffectArguments
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gFieldEffectArguments,object
	.size	 gFieldEffectArguments,32
gFieldEffectArguments:
	.word	0x0
	.space	28
	.section .rodata
	.align	1, 0
	.type	 sNewGameOakObject_Gfx,object
sNewGameOakObject_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x5e9
	.short	0x9900
	.short	0x9ee5
	.short	0xe500
	.short	0xeeee
	.short	0x5000
	.short	0xeeee
	.short	0x0
	.short	0x2ee9
	.short	0xe500
	.short	0x12ee
	.short	0xb000
	.short	0x133e
	.short	0x0
	.short	0x0
	.short	0xbbb5
	.short	0xbbbb
	.short	0xeeee
	.short	0x99ee
	.short	0xeeee
	.short	0x9eee
	.short	0xeeee
	.short	0x99ee
	.short	0xee55
	.short	0x2229
	.short	0xee11
	.short	0x1113
	.short	0xe511
	.short	0x3113
	.short	0x0
	.short	0x0
	.short	0x5
	.short	0x0
	.short	0xf9
	.short	0x0
	.short	0xf99
	.short	0x0
	.short	0xb99
	.short	0x0
	.short	0xf992
	.short	0x0
	.short	0xb952
	.short	0x0
	.short	0xb953
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8249
	.short	0x0
	.short	0x2245
	.short	0x0
	.short	0x1323
	.short	0x0
	.short	0x1313
	.short	0x0
	.short	0x1314
	.short	0x0
	.short	0x1240
	.short	0x0
	.short	0x1300
	.short	0x0
	.short	0x3000
	.short	0x5188
	.short	0x8831
	.short	0x1888
	.short	0x8881
	.short	0x127e
	.short	0xe821
	.short	0x12fe
	.short	0xef21
	.short	0x1111
	.short	0x2111
	.short	0x2111
	.short	0x2111
	.short	0x2121
	.short	0x2322
	.short	0x3221
	.short	0x2433
	.short	0xb998
	.short	0x0
	.short	0xf912
	.short	0x0
	.short	0xf212
	.short	0x0
	.short	0xf232
	.short	0x0
	.short	0xf332
	.short	0x0
	.short	0xf32
	.short	0x0
	.short	0x42
	.short	0x0
	.short	0xf3
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x5500
	.short	0x0
	.short	0xe955
	.short	0x5500
	.short	0xee5e
	.short	0xee50
	.short	0xeeee
	.short	0xeeeb
	.short	0xee5e
	.short	0xee95
	.short	0xe5ee
	.short	0x2114
	.short	0x3222
	.short	0x3440
	.short	0x8443
	.short	0x234b
	.short	0xbf32
	.short	0x276b
	.short	0x6722
	.short	0x766b
	.short	0x6673
	.short	0x7fff
	.short	0xfff7
	.short	0x7667
	.short	0x7666
	.short	0x7667
	.short	0x766f
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xbb
	.short	0x0
	.short	0xb59f
	.short	0xb
	.short	0x5e9f
	.short	0xbbe
	.short	0xee9f
	.short	0xbeee
	.short	0x5eee
	.short	0xeeee
	.short	0xe5ee
	.short	0xe9ee
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xb
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3330
	.short	0x0
	.short	0x1113
	.short	0x0
	.short	0xb000
	.short	0x0
	.short	0xb000
	.short	0x0
	.short	0x5000
	.short	0x0
	.short	0xeb00
	.short	0x0
	.short	0xeb00
	.short	0x0
	.short	0xe500
	.short	0x0
	.short	0xeeb0
	.short	0x3323
	.short	0xbbbb
	.short	0xe9ee
	.short	0x5e9e
	.short	0xe5ee
	.short	0xeee9
	.short	0xe9ee
	.short	0xeee9
	.short	0xe9ee
	.short	0xeee5
	.short	0xe9ee
	.short	0xeee5
	.short	0xe9ee
	.short	0xee5e
	.short	0xe9e9
	.short	0xee5e
	.short	0xe59e
	.short	0x9e5e
	.short	0x7667
	.short	0x7666
	.short	0x6667
	.short	0x7666
	.short	0x6667
	.short	0x7666
	.short	0x6667
	.short	0x7666
	.short	0x6667
	.short	0x7666
	.short	0x6667
	.short	0x7776
	.short	0x7666
	.short	0x7777
	.short	0x6666
	.short	0x7776
	.short	0xe959
	.short	0xe9ee
	.short	0x9e9e
	.short	0xee5e
	.short	0x9eee
	.short	0xee5e
	.short	0x9eee
	.short	0xee5e
	.short	0xe5ee
	.short	0xee5e
	.short	0xe5ee
	.short	0xee5e
	.short	0xee5e
	.short	0xee5e
	.short	0xee59
	.short	0xe59e
	.short	0xfe
	.short	0x0
	.short	0xfe
	.short	0x0
	.short	0xbe
	.short	0x0
	.short	0xfee
	.short	0x0
	.short	0xb9e
	.short	0x0
	.short	0xf99e
	.short	0x0
	.short	0xf99e
	.short	0x0
	.short	0xb999
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1340
	.short	0x0
	.short	0x2400
	.short	0x0
	.short	0x3140
	.short	0x0
	.short	0x4314
	.short	0x0
	.short	0x1440
	.short	0x0
	.short	0xf000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1111
	.short	0xe944
	.short	0x1112
	.short	0xeb32
	.short	0x2222
	.short	0xe422
	.short	0x4343
	.short	0x9442
	.short	0x1414
	.short	0x9544
	.short	0xffff
	.short	0x99b4
	.short	0xff00
	.short	0x9999
	.short	0x0
	.short	0xffff
	.short	0xe5eb
	.short	0x75ee
	.short	0xe59e
	.short	0x75ee
	.short	0x9599
	.short	0x75ee
	.short	0x9959
	.short	0x7599
	.short	0x9959
	.short	0x7999
	.short	0x99f9
	.short	0xf999
	.short	0x55bf
	.short	0xf995
	.short	0x99b0
	.short	0xd959
	.short	0x6666
	.short	0x7666
	.short	0x6666
	.short	0x7666
	.short	0x6666
	.short	0x7666
	.short	0x7766
	.short	0x7777
	.short	0xffff
	.short	0x7fff
	.short	0x11ff
	.short	0xfff1
	.short	0xffdd
	.short	0xffdf
	.short	0xdddd
	.short	0xfddd
	.short	0xeee5
	.short	0xe59e
	.short	0xeee5
	.short	0x959e
	.short	0x9ee5
	.short	0xe9b9
	.short	0x9995
	.short	0x99b9
	.short	0x9999
	.short	0x999b
	.short	0x9999
	.short	0x999b
	.short	0xb599
	.short	0x9999
	.short	0x9959
	.short	0x99bb
	.short	0x99ee
	.short	0xf
	.short	0x99e9
	.short	0xf
	.short	0x999e
	.short	0xf
	.short	0x9999
	.short	0xf
	.short	0xb999
	.short	0x0
	.short	0xf999
	.short	0x0
	.short	0xb99
	.short	0x0
	.short	0xf99
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x99b0
	.short	0xd959
	.short	0x9990
	.short	0xd959
	.short	0x999b
	.short	0xd959
	.short	0x999b
	.short	0xd959
	.short	0x999b
	.short	0xd959
	.short	0x999b
	.short	0xd959
	.short	0x559b
	.short	0xd999
	.short	0x999b
	.short	0xd999
	.short	0xdddc
	.short	0xfcdd
	.short	0xdccc
	.short	0xfccc
	.short	0xdccc
	.short	0xfccc
	.short	0xdddc
	.short	0xfccc
	.short	0xadcc
	.short	0xfccd
	.short	0xfdcc
	.short	0xfcd0
	.short	0xfdcc
	.short	0xdca0
	.short	0xfdcc
	.short	0xcca0
	.short	0x9959
	.short	0x9b99
	.short	0x9959
	.short	0xf999
	.short	0x9959
	.short	0x9999
	.short	0x9959
	.short	0x9999
	.short	0x9959
	.short	0x9999
	.short	0x9999
	.short	0x9999
	.short	0xb99d
	.short	0xbbbb
	.short	0x999d
	.short	0x9999
	.short	0xf9
	.short	0x0
	.short	0xf9
	.short	0x0
	.short	0xb
	.short	0x0
	.short	0xb
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x999b
	.short	0xd999
	.short	0xfff0
	.short	0xcfff
	.short	0xf000
	.short	0xcccd
	.short	0xf000
	.short	0xccdd
	.short	0xf000
	.short	0xaadd
	.short	0xf000
	.short	0xaddc
	.short	0xcf00
	.short	0xdddc
	.short	0xcf00
	.short	0xdddd
	.short	0xadcc
	.short	0xcda0
	.short	0xadcc
	.short	0xca00
	.short	0xaddc
	.short	0xca00
	.short	0xfddd
	.short	0xca00
	.short	0xfddd
	.short	0xca00
	.short	0xfddd
	.short	0xda00
	.short	0xfddd
	.short	0xda00
	.short	0xfddd
	.short	0xdf00
	.short	0x999d
	.short	0x9999
	.short	0xfffd
	.short	0xffff
	.short	0xdddc
	.short	0xfdd
	.short	0xdccc
	.short	0xfdd
	.short	0xdddc
	.short	0xfdd
	.short	0xddcc
	.short	0xfdd
	.short	0xdcdd
	.short	0xfddd
	.short	0xdddd
	.short	0xfddd
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf000
	.short	0xdddd
	.short	0xaf00
	.short	0xdaaa
	.short	0xdf00
	.short	0xaddd
	.short	0xff40
	.short	0xddff
	.short	0x3334
	.short	0xff44
	.short	0x444f
	.short	0x4444
	.short	0xfff0
	.short	0xffff
	.short	0x0
	.short	0x0
	.short	0xaddd
	.short	0xa000
	.short	0xddd
	.short	0xf000
	.short	0xadda
	.short	0xf000
	.short	0xfdad
	.short	0xf000
	.short	0xfddd
	.short	0x0
	.short	0xfdf
	.short	0x0
	.short	0xff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xdddd
	.short	0xfddd
	.short	0xaadd
	.short	0xaaaa
	.short	0xddad
	.short	0xaddd
	.short	0xaddd
	.short	0xdaaa
	.short	0x4fff
	.short	0xf444
	.short	0x344f
	.short	0x4443
	.short	0x444f
	.short	0x4444
	.short	0xfff0
	.short	0xffff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sNewGameOakObject_Gfx,2048
	.align	1, 0
	.type	 sNewGameOakObject_Pal,object
sNewGameOakObject_Pal:
	.short	0x530e
	.short	0x677f
	.short	0x4add
	.short	0x3638
	.short	0x252d
	.short	0x5271
	.short	0x5671
	.short	0x3d89
	.short	0x2906
	.short	0x6f5a
	.short	0x1450
	.short	0x39ce
	.short	0x2d5a
	.short	0x1cb6
	.short	0x7fff
	.short	0x0
	.size	 sNewGameOakObject_Pal,32
	.align	1, 0
	.type	 sPokeballGlow_Gfx,object
sPokeballGlow_Gfx:
	.short	0x0
	.short	0x0
	.short	0x5000
	.short	0x5
	.short	0x7800
	.short	0x56
	.short	0x6730
	.short	0x566
	.short	0x2230
	.short	0x322
	.short	0x2300
	.short	0x32
	.short	0x3000
	.short	0x3
	.short	0x0
	.short	0x0
	.size	 sPokeballGlow_Gfx,32
	.align	1, 0
	.type	 sPokeballGlow_Pal,object
sPokeballGlow_Pal:
	.short	0x0
	.short	0x7fff
	.short	0x56d3
	.short	0x39cd
	.short	0x1ce7
	.short	0xc73
	.short	0x1f
	.short	0x3dff
	.short	0x7fff
	.short	0x354a
	.short	0x3def
	.short	0x7fff
	.short	0x7f97
	.short	0x7314
	.short	0x6af3
	.short	0x5a0b
	.size	 sPokeballGlow_Pal,32
	.align	1, 0
	.type	 sPokecenterMonitor_Gfx,object
sPokecenterMonitor_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9000
	.short	0xbbbb
	.short	0x9000
	.short	0xeeee
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x99
	.short	0x0
	.short	0x9bb
	.short	0x0
	.short	0xa9ee
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x9000
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0xa9e0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9000
	.short	0xbbbb
	.short	0x9000
	.short	0xeeee
	.short	0x9000
	.short	0xaaae
	.short	0x9000
	.short	0xccae
	.short	0x9000
	.short	0xccae
	.short	0x9000
	.short	0xddae
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0xaaaa
	.short	0xaaaa
	.short	0xfffd
	.short	0xffff
	.short	0xfffd
	.short	0xffff
	.short	0xfffd
	.short	0xffff
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0xaaaa
	.short	0xaaaa
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0x0
	.short	0x0
	.short	0x99
	.short	0x0
	.short	0x9bb
	.short	0x0
	.short	0xa9ee
	.short	0x0
	.short	0xa9ea
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0x9000
	.short	0xffae
	.short	0x9000
	.short	0xffae
	.short	0x9000
	.short	0xffae
	.short	0x9000
	.short	0xffae
	.short	0x9000
	.short	0xffae
	.short	0x9000
	.short	0xddae
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xdddd
	.short	0xdddd
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xdddd
	.short	0xdddd
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9000
	.short	0xbbbb
	.short	0x9000
	.short	0xeeee
	.short	0x9000
	.short	0xfffe
	.short	0x9000
	.short	0xbbfe
	.short	0x9000
	.short	0xbbfe
	.short	0x9000
	.short	0xccfe
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0xffff
	.short	0xffff
	.short	0xdddc
	.short	0xdddd
	.short	0xdddc
	.short	0xdddd
	.short	0xdddc
	.short	0xdddd
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0xffff
	.short	0xffff
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0x0
	.short	0x0
	.short	0x99
	.short	0x0
	.short	0x9bb
	.short	0x0
	.short	0xa9ee
	.short	0x0
	.short	0xa9ef
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0x9000
	.short	0xddfe
	.short	0x9000
	.short	0xddfe
	.short	0x9000
	.short	0xddfe
	.short	0x9000
	.short	0xddfe
	.short	0x9000
	.short	0xddfe
	.short	0x9000
	.short	0xccfe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xcccc
	.short	0xcccc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xdddd
	.short	0xcccc
	.short	0xcccc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9000
	.short	0xbbbb
	.short	0x9000
	.short	0xeeee
	.short	0x9000
	.short	0xddde
	.short	0x9000
	.short	0xbbde
	.short	0x9000
	.short	0xbbde
	.short	0x9000
	.short	0xccde
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0xdddd
	.short	0xdddd
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0x0
	.short	0x0
	.short	0x9999
	.short	0x9999
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xeeee
	.short	0xdddd
	.short	0xdddd
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0x0
	.short	0x0
	.short	0x99
	.short	0x0
	.short	0x9bb
	.short	0x0
	.short	0xa9ee
	.short	0x0
	.short	0xa9ed
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0x9000
	.short	0xccde
	.short	0x9000
	.short	0xccde
	.short	0x9000
	.short	0xccde
	.short	0x9000
	.short	0xccde
	.short	0x9000
	.short	0xccde
	.short	0x9000
	.short	0xbbde
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xbbbb
	.short	0xbbbb
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xcccc
	.short	0xbbbb
	.short	0xbbbb
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0xa9ec
	.short	0x0
	.short	0xa9eb
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sPokecenterMonitor_Gfx,1024
	.align	1, 0
	.type	 sHofMonitor_Pal,object
sHofMonitor_Pal:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x354a
	.short	0x7fee
	.short	0x670c
	.short	0x4e2b
	.short	0x45c8
	.size	 sHofMonitor_Pal,32
	.align	1, 0
	.type	 sHofMonitor_Gfx,object
sHofMonitor_Gfx:
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xebbb
	.short	0xeeee
	.short	0xeebb
	.short	0xbbfe
	.short	0xeeeb
	.short	0xbbbb
	.short	0xbeeb
	.short	0xbbbb
	.short	0xbfee
	.short	0xeebb
	.short	0xbbee
	.short	0xbfeb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xeeee
	.short	0xbbbe
	.short	0xefbb
	.short	0xbbee
	.short	0xbbbb
	.short	0xbeee
	.short	0xbbbb
	.short	0xbeeb
	.short	0xbbee
	.short	0xeefb
	.short	0xbefb
	.short	0xeebb
	.short	0xeeee
	.short	0xbbee
	.short	0xbbee
	.short	0xbfeb
	.short	0xbfee
	.short	0xeebb
	.short	0xbeeb
	.short	0xbbbb
	.short	0xeeeb
	.short	0xbbbb
	.short	0xeebb
	.short	0xbbfe
	.short	0xebbb
	.short	0xeeee
	.short	0xbbbb
	.short	0xeeeb
	.short	0xeebb
	.short	0xeeee
	.short	0xbefb
	.short	0xeebb
	.short	0xbbee
	.short	0xeefb
	.short	0xbbbb
	.short	0xbeeb
	.short	0xbbbb
	.short	0xbeee
	.short	0xefbb
	.short	0xbbee
	.short	0xeeee
	.short	0xbbbe
	.short	0xbeee
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xdbbb
	.short	0xdddd
	.short	0xddbb
	.short	0xbbed
	.short	0xdddb
	.short	0xbbbb
	.short	0xbddb
	.short	0xbbbb
	.short	0xbedd
	.short	0xddbb
	.short	0xbbdd
	.short	0xbedb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xdddd
	.short	0xbbbd
	.short	0xdebb
	.short	0xbbdd
	.short	0xbbbb
	.short	0xbddd
	.short	0xbbbb
	.short	0xbddb
	.short	0xbbdd
	.short	0xddeb
	.short	0xbdeb
	.short	0xddbb
	.short	0xdddd
	.short	0xbbdd
	.short	0xbbdd
	.short	0xbedb
	.short	0xbedd
	.short	0xddbb
	.short	0xbddb
	.short	0xbbbb
	.short	0xdddb
	.short	0xbbbb
	.short	0xddbb
	.short	0xbbed
	.short	0xdbbb
	.short	0xdddd
	.short	0xbbbb
	.short	0xdddb
	.short	0xddbb
	.short	0xdddd
	.short	0xbdeb
	.short	0xddbb
	.short	0xbbdd
	.short	0xddeb
	.short	0xbbbb
	.short	0xbddb
	.short	0xbbbb
	.short	0xbddd
	.short	0xdebb
	.short	0xbbdd
	.short	0xdddd
	.short	0xbbbd
	.short	0xbddd
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xcbbb
	.short	0xcccc
	.short	0xccbb
	.short	0xbbdc
	.short	0xcccb
	.short	0xbbbb
	.short	0xbccb
	.short	0xbbbb
	.short	0xbdcc
	.short	0xccbb
	.short	0xbbcc
	.short	0xbdcb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xbbbb
	.short	0xcccc
	.short	0xbbbc
	.short	0xcdbb
	.short	0xbbcc
	.short	0xbbbb
	.short	0xbccc
	.short	0xbbbb
	.short	0xbccb
	.short	0xbbcc
	.short	0xccdb
	.short	0xbcdb
	.short	0xccbb
	.short	0xcccc
	.short	0xbbcc
	.short	0xbbcc
	.short	0xbdcb
	.short	0xbdcc
	.short	0xccbb
	.short	0xbccb
	.short	0xbbbb
	.short	0xcccb
	.short	0xbbbb
	.short	0xccbb
	.short	0xbbdc
	.short	0xcbbb
	.short	0xcccc
	.short	0xbbbb
	.short	0xcccb
	.short	0xccbb
	.short	0xcccc
	.short	0xbcdb
	.short	0xccbb
	.short	0xbbcc
	.short	0xccdb
	.short	0xbbbb
	.short	0xbccb
	.short	0xbbbb
	.short	0xbccc
	.short	0xcdbb
	.short	0xbbcc
	.short	0xcccc
	.short	0xbbbc
	.short	0xbccc
	.short	0xbbbb
	.size	 sHofMonitor_Gfx,512
	.align	1, 0
	.type	 sFieldMoveStreaksOutdoors_Gfx,object
sFieldMoveStreaksOutdoors_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x2221
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2221
	.short	0x2222
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x2222
	.short	0x1222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x2222
	.short	0x1222
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1111
	.short	0x1
	.short	0x1111
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sFieldMoveStreaksOutdoors_Gfx,512
	.align	1, 0
	.type	 sFieldMoveStreaksOutdoors_Pal,object
sFieldMoveStreaksOutdoors_Pal:
	.short	0x0
	.short	0x0
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sFieldMoveStreaksOutdoors_Pal,32
	.align	1, 0
	.type	 sFieldMoveStreaksOutdoors_Tilemap,object
sFieldMoveStreaksOutdoors_Tilemap:
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.size	 sFieldMoveStreaksOutdoors_Tilemap,640
	.align	1, 0
	.type	 sFieldMoveStreaksIndoors_Gfx,object
sFieldMoveStreaksIndoors_Gfx:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x1111
	.short	0x1111
	.short	0x2222
	.short	0x2222
	.short	0x3333
	.short	0x3333
	.short	0x4444
	.short	0x4444
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x4444
	.short	0x4444
	.short	0x4444
	.short	0x4444
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.size	 sFieldMoveStreaksIndoors_Gfx,128
	.align	1, 0
	.type	 sFieldMoveStreaksIndoors_Pal,object
sFieldMoveStreaksIndoors_Pal:
	.short	0x1e20
	.short	0x0
	.short	0x4a52
	.short	0x6318
	.short	0x7fff
	.short	0x726f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sFieldMoveStreaksIndoors_Pal,32
	.align	1, 0
	.type	 sFieldMoveStreaksIndoors_Tilemap,object
sFieldMoveStreaksIndoors_Tilemap:
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.size	 sFieldMoveStreaksIndoors_Tilemap,640
	.align	1, 0
	.type	 sRockFragment_TopLeft,object
sRockFragment_TopLeft:
	.short	0x1000
	.short	0x0
	.short	0x2100
	.short	0x11
	.short	0x3210
	.short	0x122
	.short	0x2321
	.short	0x1322
	.short	0x2231
	.short	0x1332
	.short	0x1111
	.short	0x1111
	.short	0x1000
	.short	0x1111
	.short	0x0
	.short	0x0
	.size	 sRockFragment_TopLeft,32
	.align	1, 0
	.type	 sRockFragment_TopRight,object
sRockFragment_TopRight:
	.short	0x1000
	.short	0x1
	.short	0x2100
	.short	0x12
	.short	0x2100
	.short	0x13
	.short	0x3210
	.short	0x123
	.short	0x3310
	.short	0x1122
	.short	0x1310
	.short	0x111
	.short	0x1110
	.short	0x1
	.short	0x110
	.short	0x0
	.size	 sRockFragment_TopRight,32
	.align	1, 0
	.type	 sRockFragment_BottomLeft,object
sRockFragment_BottomLeft:
	.short	0x0
	.short	0x0
	.short	0x1100
	.short	0x11
	.short	0x2210
	.short	0x133
	.short	0x3111
	.short	0x1223
	.short	0x1110
	.short	0x1321
	.short	0x1000
	.short	0x1111
	.short	0x0
	.short	0x110
	.short	0x0
	.short	0x0
	.size	 sRockFragment_BottomLeft,32
	.align	1, 0
	.type	 sRockFragment_BottomRight,object
sRockFragment_BottomRight:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x1000
	.short	0x13
	.short	0x3100
	.short	0x12
	.short	0x1100
	.short	0x122
	.short	0x0
	.short	0x111
	.short	0x0
	.short	0x0
	.size	 sRockFragment_BottomRight,32
	.align	2, 0
	.type	 sFldEffScrcmdTable,object
sFldEffScrcmdTable:
	.word	FieldEffectCmd_loadtiles
	.word	FieldEffectCmd_loadfadedpal
	.word	FieldEffectCmd_loadpal
	.word	FieldEffectCmd_callnative
	.word	FieldEffectCmd_end
	.word	FieldEffectCmd_loadgfx_callnative
	.word	FieldEffectCmd_loadtiles_callnative
	.word	FieldEffectCmd_loadfadedpal_callnative
	.size	 sFldEffScrcmdTable,32
	.align	2, 0
	.type	 sNewGameOakOamAttributes,object
	.size	 sNewGameOakOamAttributes,8
sNewGameOakOamAttributes:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sOamData_8x8,object
	.size	 sOamData_8x8,8
sOamData_8x8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sOamData_16x16,object
	.size	 sOamData_16x16,8
sOamData_16x16:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sNewGameOakObjectSpriteFrames,object
sNewGameOakObjectSpriteFrames:
	.word	sNewGameOakObject_Gfx
	.short	0x800
	.space	2
	.size	 sNewGameOakObjectSpriteFrames,8
	.align	2, 0
	.type	 sNewGameOakObjectPaletteInfo,object
	.size	 sNewGameOakObjectPaletteInfo,8
sNewGameOakObjectPaletteInfo:
	.word	sNewGameOakObject_Pal
	.short	0x1006
	.space	2
	.align	2, 0
	.type	 sNewGameOakAnim,object
sNewGameOakAnim:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sNewGameOakAnim,8
	.align	2, 0
	.type	 sNewGameOakAnimTable,object
sNewGameOakAnimTable:
	.word	sNewGameOakAnim
	.size	 sNewGameOakAnimTable,4
	.align	2, 0
	.type	 sNewGameOakObjectTemplate,object
	.size	 sNewGameOakObjectTemplate,24
sNewGameOakObjectTemplate:
	.short	0xffff
	.short	0x1006
	.word	sNewGameOakOamAttributes
	.word	sNewGameOakAnimTable
	.word	sNewGameOakObjectSpriteFrames
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.globl	gSpritePalette_PokeballGlow
	.align	2, 0
	.type	 gSpritePalette_PokeballGlow,object
	.size	 gSpritePalette_PokeballGlow,8
gSpritePalette_PokeballGlow:
	.word	sPokeballGlow_Pal
	.short	0x1007
	.space	2
	.globl	gSpritePalette_HofMonitor
	.align	2, 0
	.type	 gSpritePalette_HofMonitor,object
	.size	 gSpritePalette_HofMonitor,8
gSpritePalette_HofMonitor:
	.word	sHofMonitor_Pal
	.short	0x1010
	.space	2
	.align	2, 0
	.type	 sOamData_32x16,object
	.size	 sOamData_32x16,8
sOamData_32x16:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sPicTable_PokeballGlow,object
sPicTable_PokeballGlow:
	.word	sPokeballGlow_Gfx
	.short	0x20
	.space	2
	.size	 sPicTable_PokeballGlow,8
	.align	2, 0
	.type	 sPicTable_PokecenterMonitor,object
sPicTable_PokecenterMonitor:
	.word	sPokecenterMonitor_Gfx
	.short	0x100
	.space	2
	.word	sPokecenterMonitor_Gfx+0x100
	.short	0x100
	.space	2
	.word	sPokecenterMonitor_Gfx+0x200
	.short	0x100
	.space	2
	.word	sPokecenterMonitor_Gfx+0x300
	.short	0x100
	.space	2
	.size	 sPicTable_PokecenterMonitor,32
	.align	2, 0
	.type	 sPicTable_HofMonitor,object
sPicTable_HofMonitor:
	.word	sHofMonitor_Gfx
	.short	0x80
	.space	2
	.word	sHofMonitor_Gfx+0x80
	.short	0x80
	.space	2
	.word	sHofMonitor_Gfx+0x100
	.short	0x80
	.space	2
	.word	sHofMonitor_Gfx+0x180
	.short	0x80
	.space	2
	.size	 sPicTable_HofMonitor,32
	.align	2, 0
	.type	 sSubsprites_PokecenterMonitor,object
	.size	 sSubsprites_PokecenterMonitor,16
sSubsprites_PokecenterMonitor:
	.byte	-0xc
	.byte	-0x8
	.byte	0x1
	.byte	0x80
	.byte	0x4
	.byte	-0x8
	.byte	0x20
	.byte	0x80
	.byte	-0xc
	.byte	0x0
	.byte	0x31
	.byte	0x80
	.byte	0x4
	.byte	0x0
	.byte	0x50
	.byte	0x80
	.align	2, 0
	.type	 sSubspriteTable_PokecenterMonitor,object
	.size	 sSubspriteTable_PokecenterMonitor,8
sSubspriteTable_PokecenterMonitor:
	.byte	0x4
	.space	3
	.word	sSubsprites_PokecenterMonitor
	.align	2, 0
	.type	 sSubsprites_HofMonitorBig,object
	.size	 sSubsprites_HofMonitorBig,16
sSubsprites_HofMonitorBig:
	.byte	-0x20
	.byte	-0x8
	.byte	0x5
	.byte	0x80
	.byte	0x0
	.byte	-0x8
	.byte	0x45
	.byte	0x80
	.byte	-0x20
	.byte	0x0
	.byte	0x85
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.byte	0xc5
	.byte	0x80
	.align	2, 0
	.type	 sSubspriteTable_HofMonitorBig,object
	.size	 sSubspriteTable_HofMonitorBig,8
sSubspriteTable_HofMonitorBig:
	.byte	0x4
	.space	3
	.word	sSubsprites_HofMonitorBig
	.align	2, 0
	.type	 sAnim_Static,object
sAnim_Static:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_Static,8
	.align	2, 0
	.type	 sAnim_Flicker,object
sAnim_Flicker:
	.short	0x1
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x5
	.space	1
	.short	0x3
	.byte	0x7
	.space	1
	.short	0x2
	.byte	0x5
	.space	1
	.short	0x1
	.byte	0x5
	.space	1
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x3
	.byte	0x3
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Flicker,32
	.align	2, 0
	.type	 sAnims_Flicker,object
sAnims_Flicker:
	.word	sAnim_Static
	.word	sAnim_Flicker
	.size	 sAnims_Flicker,8
	.align	2, 0
	.type	 sAnim_HofMonitor,object
sAnim_HofMonitor:
	.short	0x3
	.byte	0x8
	.space	1
	.short	0x2
	.byte	0x8
	.space	1
	.short	0x1
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x1
	.byte	0x8
	.space	1
	.short	0x2
	.byte	0x8
	.space	1
	.short	-0x3
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x8
	.space	1
	.short	0x0
	.byte	0x8
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_HofMonitor,40
	.align	2, 0
	.type	 sAnims_HofMonitor,object
sAnims_HofMonitor:
	.word	sAnim_HofMonitor
	.size	 sAnims_HofMonitor,4
	.align	2, 0
	.type	 sSpriteTemplate_PokeballGlow,object
	.size	 sSpriteTemplate_PokeballGlow,24
sSpriteTemplate_PokeballGlow:
	.short	0xffff
	.short	0x1007
	.word	sOamData_8x8
	.word	sAnims_Flicker
	.word	sPicTable_PokeballGlow
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_PokeballGlow
	.align	2, 0
	.type	 sSpriteTemplate_PokecenterMonitor,object
	.size	 sSpriteTemplate_PokecenterMonitor,24
sSpriteTemplate_PokecenterMonitor:
	.short	0xffff
	.short	0x1007
	.word	sOamData_32x16
	.word	sAnims_Flicker
	.word	sPicTable_PokecenterMonitor
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_PokecenterMonitor
	.align	2, 0
	.type	 sSpriteTemplate_HofMonitor,object
	.size	 sSpriteTemplate_HofMonitor,24
sSpriteTemplate_HofMonitor:
	.short	0xffff
	.short	0x1010
	.word	sOamData_16x16
	.word	sAnims_HofMonitor
	.word	sPicTable_HofMonitor
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_HallOfFameMonitor
.text
	.align	2, 0
	.globl	FieldEffectStart
	.type	 FieldEffectStart,function
	.thumb_func
FieldEffectStart:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	FieldEffectActiveListAdd
	ldr	r0, .L7
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	str	r0, [sp]
	add	r4, sp, #0x4
	ldr	r5, .L7+0x4
.L3:
	ldr	r0, [sp]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r2, [r0]
	mov	r0, sp
	add	r1, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldr	r0, [sp, #0x4]
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L8:
	.align	2, 0
.L7:
	.word	gFieldEffectScriptPointers
	.word	sFldEffScrcmdTable
.Lfe1:
	.size	 FieldEffectStart,.Lfe1-FieldEffectStart
	.align	2, 0
	.type	 FieldEffectCmd_loadtiles,function
	.thumb_func
FieldEffectCmd_loadtiles:
	push	{lr}
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	bl	FieldEffectScript_LoadTiles
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 FieldEffectCmd_loadtiles,.Lfe2-FieldEffectCmd_loadtiles
	.align	2, 0
	.type	 FieldEffectCmd_loadfadedpal,function
	.thumb_func
FieldEffectCmd_loadfadedpal:
	push	{lr}
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	bl	FieldEffectScript_LoadFadedPal
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 FieldEffectCmd_loadfadedpal,.Lfe3-FieldEffectCmd_loadfadedpal
	.align	2, 0
	.type	 FieldEffectCmd_loadpal,function
	.thumb_func
FieldEffectCmd_loadpal:
	push	{lr}
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	bl	FieldEffectScript_LoadPal
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 FieldEffectCmd_loadpal,.Lfe4-FieldEffectCmd_loadpal
	.align	2, 0
	.type	 FieldEffectCmd_callnative,function
	.thumb_func
FieldEffectCmd_callnative:
	push	{lr}
	ldr	r2, [r0]
	add	r2, r2, #0x1
	str	r2, [r0]
	bl	FieldEffectScript_CallNative
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 FieldEffectCmd_callnative,.Lfe5-FieldEffectCmd_callnative
	.align	2, 0
	.type	 FieldEffectCmd_end,function
	.thumb_func
FieldEffectCmd_end:
	mov	r0, #0x0
	bx	lr
.Lfe6:
	.size	 FieldEffectCmd_end,.Lfe6-FieldEffectCmd_end
	.align	2, 0
	.type	 FieldEffectCmd_loadgfx_callnative,function
	.thumb_func
FieldEffectCmd_loadgfx_callnative:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, [r4]
	add	r0, r0, #0x1
	str	r0, [r4]
	add	r0, r4, #0
	bl	FieldEffectScript_LoadTiles
	add	r0, r4, #0
	bl	FieldEffectScript_LoadFadedPal
	add	r0, r4, #0
	add	r1, r5, #0
	bl	FieldEffectScript_CallNative
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 FieldEffectCmd_loadgfx_callnative,.Lfe7-FieldEffectCmd_loadgfx_callnative
	.align	2, 0
	.type	 FieldEffectCmd_loadtiles_callnative,function
	.thumb_func
FieldEffectCmd_loadtiles_callnative:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, [r4]
	add	r0, r0, #0x1
	str	r0, [r4]
	add	r0, r4, #0
	bl	FieldEffectScript_LoadTiles
	add	r0, r4, #0
	add	r1, r5, #0
	bl	FieldEffectScript_CallNative
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 FieldEffectCmd_loadtiles_callnative,.Lfe8-FieldEffectCmd_loadtiles_callnative
	.align	2, 0
	.type	 FieldEffectCmd_loadfadedpal_callnative,function
	.thumb_func
FieldEffectCmd_loadfadedpal_callnative:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, [r4]
	add	r0, r0, #0x1
	str	r0, [r4]
	add	r0, r4, #0
	bl	FieldEffectScript_LoadFadedPal
	add	r0, r4, #0
	add	r1, r5, #0
	bl	FieldEffectScript_CallNative
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 FieldEffectCmd_loadfadedpal_callnative,.Lfe9-FieldEffectCmd_loadfadedpal_callnative
	.align	2, 0
	.type	 FieldEffectScript_ReadWord,function
	.thumb_func
FieldEffectScript_ReadWord:
	ldr	r2, [r0]
	ldrb	r0, [r2]
	ldrb	r1, [r2, #0x1]
	lsl	r1, r1, #0x8
	add	r0, r0, r1
	ldrb	r1, [r2, #0x2]
	lsl	r1, r1, #0x10
	add	r0, r0, r1
	ldrb	r1, [r2, #0x3]
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	bx	lr
.Lfe10:
	.size	 FieldEffectScript_ReadWord,.Lfe10-FieldEffectScript_ReadWord
	.align	2, 0
	.type	 FieldEffectScript_LoadTiles,function
	.thumb_func
FieldEffectScript_LoadTiles:
	push	{r4, r5, lr}
	add	r4, r0, #0
	bl	FieldEffectScript_ReadWord
	add	r5, r0, #0
	ldrh	r0, [r5, #0x6]
	bl	GetSpriteTileStartByTag
	lsl	r0, r0, #0x10
	ldr	r1, .L20
	cmp	r0, r1
	bne	.L19	@cond_branch
	add	r0, r5, #0
	bl	LoadSpriteSheet
.L19:
	ldr	r0, [r4]
	add	r0, r0, #0x4
	str	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L21:
	.align	2, 0
.L20:
	.word	-0x10000
.Lfe11:
	.size	 FieldEffectScript_LoadTiles,.Lfe11-FieldEffectScript_LoadTiles
	.align	2, 0
	.globl	ApplyGlobalFieldPaletteTint
	.type	 ApplyGlobalFieldPaletteTint,function
	.thumb_func
ApplyGlobalFieldPaletteTint:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L31
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L25	@cond_branch
	cmp	r0, #0x1
	ble	.L22	@cond_branch
	cmp	r0, #0x2
	beq	.L26	@cond_branch
	cmp	r0, #0x3
	beq	.L27	@cond_branch
	b	.L22
.L32:
	.align	2, 0
.L31:
	.word	gGlobalFieldTintMode
.L25:
	add	r4, r4, #0x10
	lsl	r0, r4, #0x5
	ldr	r1, .L33
	add	r0, r0, r1
	mov	r1, #0x10
	bl	TintPalette_GrayScale
	b	.L23
.L34:
	.align	2, 0
.L33:
	.word	gPlttBufferUnfaded
.L26:
	add	r4, r4, #0x10
	lsl	r0, r4, #0x5
	ldr	r1, .L35
	add	r0, r0, r1
	mov	r1, #0x10
	bl	TintPalette_SepiaTone
	b	.L23
.L36:
	.align	2, 0
.L35:
	.word	gPlttBufferUnfaded
.L27:
	add	r4, r4, #0x10
	lsl	r0, r4, #0x4
	mov	r1, #0x10
	bl	QuestLog_BackUpPalette
	lsl	r0, r4, #0x5
	ldr	r1, .L37
	add	r0, r0, r1
	mov	r1, #0x10
	bl	TintPalette_GrayScale
.L23:
	lsl	r1, r4, #0x5
	ldr	r0, .L37
	add	r0, r1, r0
	ldr	r2, .L37+0x4
	add	r1, r1, r2
	mov	r2, #0x8
	bl	CpuFastSet
.L22:
	pop	{r4}
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
.Lfe12:
	.size	 ApplyGlobalFieldPaletteTint,.Lfe12-ApplyGlobalFieldPaletteTint
	.align	2, 0
	.type	 FieldEffectScript_LoadFadedPal,function
	.thumb_func
FieldEffectScript_LoadFadedPal:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	bl	FieldEffectScript_ReadWord
	add	r5, r0, #0
	ldrh	r0, [r5, #0x4]
	bl	IndexOfSpritePaletteTag
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	LoadSpritePalette
	cmp	r4, #0xff
	bne	.L40	@cond_branch
	ldrh	r0, [r5, #0x4]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ApplyGlobalFieldPaletteTint
.L40:
	ldrh	r0, [r5, #0x4]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	UpdateSpritePaletteWithWeather
	ldr	r0, [r6]
	add	r0, r0, #0x4
	str	r0, [r6]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 FieldEffectScript_LoadFadedPal,.Lfe13-FieldEffectScript_LoadFadedPal
	.align	2, 0
	.type	 FieldEffectScript_LoadPal,function
	.thumb_func
FieldEffectScript_LoadPal:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	bl	FieldEffectScript_ReadWord
	add	r5, r0, #0
	ldrh	r0, [r5, #0x4]
	bl	IndexOfSpritePaletteTag
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	LoadSpritePalette
	cmp	r4, #0xff
	beq	.L42	@cond_branch
	ldrh	r0, [r5, #0x4]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ApplyGlobalFieldPaletteTint
.L42:
	ldr	r0, [r6]
	add	r0, r0, #0x4
	str	r0, [r6]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 FieldEffectScript_LoadPal,.Lfe14-FieldEffectScript_LoadPal
	.align	2, 0
	.type	 FieldEffectScript_CallNative,function
	.thumb_func
FieldEffectScript_CallNative:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	bl	FieldEffectScript_ReadWord
	bl	_call_via_r0
	str	r0, [r5]
	ldr	r0, [r4]
	add	r0, r0, #0x4
	str	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 FieldEffectScript_CallNative,.Lfe15-FieldEffectScript_CallNative
	.align	2, 0
	.type	 FieldEffectFreeGraphicsResources,function
	.thumb_func
FieldEffectFreeGraphicsResources:
	push	{r4, r5, lr}
	add	r1, r0, #0
	add	r1, r1, #0x40
	ldrh	r5, [r1]
	ldrb	r4, [r0, #0x5]
	lsr	r4, r4, #0x4
	bl	DestroySprite
	add	r0, r5, #0
	bl	FieldEffectFreeTilesIfUnused
	add	r0, r4, #0
	bl	FieldEffectFreePaletteIfUnused
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 FieldEffectFreeGraphicsResources,.Lfe16-FieldEffectFreeGraphicsResources
	.align	2, 0
	.globl	FieldEffectStop
	.type	 FieldEffectStop,function
	.thumb_func
FieldEffectStop:
	push	{r4, lr}
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	bl	FieldEffectFreeGraphicsResources
	add	r0, r4, #0
	bl	FieldEffectActiveListRemove
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 FieldEffectStop,.Lfe17-FieldEffectStop
	.align	2, 0
	.type	 FieldEffectFreeTilesIfUnused,function
	.thumb_func
FieldEffectFreeTilesIfUnused:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetSpriteTileTagByTileStart
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L54
	cmp	r3, r0
	beq	.L46	@cond_branch
	mov	r2, #0x0
	ldr	r5, .L54+0x4
.L51:
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	add	r0, r1, #0
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L50	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x19
	cmp	r0, #0
	bge	.L50	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x40
	ldrh	r0, [r0]
	cmp	r4, r0
	beq	.L46	@cond_branch
.L50:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3f
	bls	.L51	@cond_branch
	add	r0, r3, #0
	bl	FreeSpriteTilesByTag
.L46:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	0xffff
	.word	gSprites
.Lfe18:
	.size	 FieldEffectFreeTilesIfUnused,.Lfe18-FieldEffectFreeTilesIfUnused
	.align	2, 0
	.type	 FieldEffectFreePaletteIfUnused,function
	.thumb_func
FieldEffectFreePaletteIfUnused:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	GetSpritePaletteTagByPaletteNum
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, .L64
	cmp	r5, r0
	beq	.L56	@cond_branch
	mov	r2, #0x0
	ldr	r6, .L64+0x4
	add	r3, r4, #0
.L61:
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r6
	add	r0, r1, #0
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L60	@cond_branch
	ldrb	r0, [r1, #0x5]
	lsr	r0, r0, #0x4
	cmp	r0, r3
	beq	.L56	@cond_branch
.L60:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3f
	bls	.L61	@cond_branch
	add	r0, r5, #0
	bl	FreeSpritePaletteByTag
.L56:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	0xffff
	.word	gSprites
.Lfe19:
	.size	 FieldEffectFreePaletteIfUnused,.Lfe19-FieldEffectFreePaletteIfUnused
	.align	2, 0
	.globl	FieldEffectActiveListClear
	.type	 FieldEffectActiveListClear,function
	.thumb_func
FieldEffectActiveListClear:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r4, .L72
	mov	r3, #0xff
.L70:
	add	r0, r2, r4
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1f
	bls	.L70	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L73:
	.align	2, 0
.L72:
	.word	sFieldEffectActiveList
.Lfe20:
	.size	 FieldEffectActiveListClear,.Lfe20-FieldEffectActiveListClear
	.align	2, 0
	.type	 FieldEffectActiveListAdd,function
	.thumb_func
FieldEffectActiveListAdd:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r2, #0x0
	ldr	r4, .L81
.L78:
	add	r1, r2, r4
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L77	@cond_branch
	strb	r3, [r1]
	b	.L74
.L82:
	.align	2, 0
.L81:
	.word	sFieldEffectActiveList
.L77:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1f
	bls	.L78	@cond_branch
.L74:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 FieldEffectActiveListAdd,.Lfe21-FieldEffectActiveListAdd
	.align	2, 0
	.globl	FieldEffectActiveListRemove
	.type	 FieldEffectActiveListRemove,function
	.thumb_func
FieldEffectActiveListRemove:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r2, #0x0
	ldr	r4, .L90
	mov	r5, #0xff
.L87:
	add	r1, r2, r4
	ldrb	r0, [r1]
	cmp	r0, r3
	bne	.L86	@cond_branch
	orr	r0, r0, r5
	strb	r0, [r1]
	b	.L83
.L91:
	.align	2, 0
.L90:
	.word	sFieldEffectActiveList
.L86:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1f
	bls	.L87	@cond_branch
.L83:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 FieldEffectActiveListRemove,.Lfe22-FieldEffectActiveListRemove
	.align	2, 0
	.globl	FieldEffectActiveListContains
	.type	 FieldEffectActiveListContains,function
	.thumb_func
FieldEffectActiveListContains:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, #0x0
	ldr	r3, .L100
.L96:
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, r2
	bne	.L95	@cond_branch
	mov	r0, #0x1
	b	.L99
.L101:
	.align	2, 0
.L100:
	.word	sFieldEffectActiveList
.L95:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1f
	bls	.L96	@cond_branch
	mov	r0, #0x0
.L99:
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 FieldEffectActiveListContains,.Lfe23-FieldEffectActiveListContains
	.align	2, 0
	.globl	CreateTrainerSprite
	.type	 CreateTrainerSprite,function
	.thumb_func
CreateTrainerSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	mov	r9, r3
	ldr	r7, [sp, #0x34]
	lsl	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsr	r4, r4, #0x15
	ldr	r3, .L103
	mov	r8, r3
	add	r8, r8, r4
	mov	r0, r8
	add	r1, r7, #0
	bl	LoadCompressedSpritePaletteOverrideBuffer
	ldr	r0, .L103+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	add	r1, r7, #0
	bl	LoadCompressedSpriteSheetOverrideBuffer
	mov	r1, sp
	ldrh	r0, [r4, #0x6]
	mov	r2, #0x0
	strh	r0, [r1]
	mov	r3, r8
	ldrh	r0, [r3, #0x4]
	strh	r0, [r1, #0x2]
	ldr	r0, .L103+0x8
	str	r0, [sp, #0x4]
	ldr	r0, .L103+0xc
	str	r0, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r0, .L103+0x10
	str	r0, [sp, #0x10]
	ldr	r0, .L103+0x14
	str	r0, [sp, #0x14]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r6, r6, #0x10
	asr	r6, r6, #0x10
	mov	r0, sp
	add	r1, r5, #0
	add	r2, r6, #0
	mov	r3, r9
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L104:
	.align	2, 0
.L103:
	.word	gTrainerFrontPicPaletteTable
	.word	gTrainerFrontPicTable
	.word	sNewGameOakOamAttributes
	.word	gDummySpriteAnimTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
.Lfe24:
	.size	 CreateTrainerSprite,.Lfe24-CreateTrainerSprite
	.align	2, 0
	.type	 LoadTrainerGfx_TrainerCard,function
	.thumb_func
LoadTrainerGfx_TrainerCard:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r1, r2, #0
	lsl	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L106
	lsr	r4, r4, #0x15
	add	r0, r4, r0
	ldr	r0, [r0]
	bl	LZDecompressVram
	ldr	r0, .L106+0x4
	add	r4, r4, r0
	ldr	r0, [r4]
	add	r1, r5, #0
	mov	r2, #0x20
	bl	LoadCompressedPalette
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gTrainerFrontPicTable
	.word	gTrainerFrontPicPaletteTable
.Lfe25:
	.size	 LoadTrainerGfx_TrainerCard,.Lfe25-LoadTrainerGfx_TrainerCard
	.align	2, 0
	.type	 AddNewGameBirchObject,function
	.thumb_func
AddNewGameBirchObject:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L109
	bl	LoadSpritePalette
	ldr	r0, .L109+0x4
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L110:
	.align	2, 0
.L109:
	.word	sNewGameOakObjectPaletteInfo
	.word	sNewGameOakObjectTemplate
.Lfe26:
	.size	 AddNewGameBirchObject,.Lfe26-AddNewGameBirchObject
	.align	2, 0
	.globl	CreateMonSprite_PicBox
	.type	 CreateMonSprite_PicBox,function
	.thumb_func
CreateMonSprite_PicBox:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r3, #0x80
	lsl	r3, r3, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	str	r1, [sp]
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	str	r2, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	ldr	r1, .L115
	lsl	r4, r0, #0x3
	add	r4, r4, r1
	ldrh	r1, [r4, #0x4]
	str	r1, [sp, #0xc]
	mov	r1, #0x0
	add	r2, r3, #0
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldrh	r0, [r4, #0x4]
	bl	IndexOfSpritePaletteTag
	add	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PreservePaletteInWeather
	ldr	r0, .L115+0x4
	cmp	r5, r0
	beq	.L112	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	b	.L114
.L116:
	.align	2, 0
.L115:
	.word	gMonPaletteTable
	.word	0xffff
.L112:
	mov	r0, #0x40
.L114:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 CreateMonSprite_PicBox,.Lfe27-CreateMonSprite_PicBox
	.align	2, 0
	.type	 CreateMonSprite_FieldMove,function
	.thumb_func
CreateMonSprite_FieldMove:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #-0x10
	add	r6, r0, #0
	mov	r9, r1
	mov	sl, r2
	add	r4, r3, #0
	ldr	r5, [sp, #0x2c]
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r6, #0
	bl	GetMonSpritePalStructFromOtIdPersonality
	mov	r8, r0
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	str	r4, [sp]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	str	r5, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, r8
	ldrh	r0, [r1, #0x4]
	str	r0, [sp, #0xc]
	add	r0, r6, #0
	mov	r1, r9
	mov	r2, sl
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	mov	r1, r8
	ldrh	r0, [r1, #0x4]
	bl	IndexOfSpritePaletteTag
	add	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PreservePaletteInWeather
	ldr	r0, .L121
	cmp	r4, r0
	beq	.L118	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	b	.L120
.L122:
	.align	2, 0
.L121:
	.word	0xffff
.L118:
	mov	r0, #0x40
.L120:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 CreateMonSprite_FieldMove,.Lfe28-CreateMonSprite_FieldMove
	.align	2, 0
	.globl	FreeResourcesAndDestroySprite
	.type	 FreeResourcesAndDestroySprite,function
	.thumb_func
FreeResourcesAndDestroySprite:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	bl	ResetPreservedPalettesInWeather
	ldrb	r0, [r4, #0x1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	beq	.L124	@cond_branch
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
.L124:
	add	r0, r5, #0
	bl	FreeAndDestroyMonPicSprite
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 FreeResourcesAndDestroySprite,.Lfe29-FreeResourcesAndDestroySprite
	.align	2, 0
	.globl	MultiplyInvertedPaletteRGBComponents
	.type	 MultiplyInvertedPaletteRGBComponents,function
	.thumb_func
MultiplyInvertedPaletteRGBComponents:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r4, .L126
	lsr	r0, r0, #0xf
	add	r4, r0, r4
	ldrh	r4, [r4]
	mov	r5, #0x1f
	mov	r9, r5
	mov	r8, r4
	mov	r6, r8
	and	r6, r6, r5
	mov	r8, r6
	mov	r6, #0xf8
	lsl	r6, r6, #0x2
	and	r6, r6, r4
	lsr	r6, r6, #0x5
	mov	r5, #0xf8
	lsl	r5, r5, #0x7
	and	r4, r4, r5
	lsr	r4, r4, #0xa
	mov	r7, r9
	mov	r5, r8
	sub	r7, r7, r5
	mov	ip, r7
	mov	r7, ip
	mul	r7, r7, r1
	add	r1, r7, #0
	asr	r1, r1, #0x4
	add	r8, r8, r1
	mov	r5, r9
	sub	r1, r5, r6
	mul	r1, r1, r2
	asr	r1, r1, #0x4
	add	r6, r6, r1
	sub	r5, r5, r4
	mov	r9, r5
	mov	r1, r9
	mul	r1, r1, r3
	asr	r1, r1, #0x4
	add	r4, r4, r1
	mov	r7, r8
	lsl	r7, r7, #0x10
	lsl	r6, r6, #0x15
	orr	r6, r6, r7
	lsl	r4, r4, #0x1a
	orr	r4, r4, r6
	lsr	r4, r4, #0x10
	ldr	r1, .L126+0x4
	add	r0, r0, r1
	strh	r4, [r0]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L127:
	.align	2, 0
.L126:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
.Lfe30:
	.size	 MultiplyInvertedPaletteRGBComponents,.Lfe30-MultiplyInvertedPaletteRGBComponents
	.align	2, 0
	.type	 MultiplyPaletteRGBComponents,function
	.thumb_func
MultiplyPaletteRGBComponents:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r4, .L129
	lsr	r0, r0, #0xf
	add	r4, r0, r4
	ldrh	r4, [r4]
	mov	r5, #0x1f
	mov	r8, r5
	mov	r6, r8
	and	r6, r6, r4
	mov	r8, r6
	mov	r5, #0xf8
	lsl	r5, r5, #0x2
	and	r5, r5, r4
	lsr	r5, r5, #0x5
	mov	r6, #0xf8
	lsl	r6, r6, #0x7
	and	r4, r4, r6
	lsr	r4, r4, #0xa
	mov	r6, r8
	mul	r6, r6, r1
	add	r1, r6, #0
	asr	r1, r1, #0x4
	mov	r6, r8
	sub	r6, r6, r1
	mov	r1, r5
	mul	r1, r1, r2
	asr	r1, r1, #0x4
	sub	r5, r5, r1
	mov	r1, r4
	mul	r1, r1, r3
	asr	r1, r1, #0x4
	sub	r4, r4, r1
	lsl	r6, r6, #0x10
	lsl	r5, r5, #0x15
	orr	r5, r5, r6
	lsl	r4, r4, #0x1a
	orr	r4, r4, r5
	lsr	r4, r4, #0x10
	ldr	r1, .L129+0x4
	add	r0, r0, r1
	strh	r4, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L130:
	.align	2, 0
.L129:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
.Lfe31:
	.size	 MultiplyPaletteRGBComponents,.Lfe31-MultiplyPaletteRGBComponents
	.section .rodata
	.align	2, 0
	.type	 sPokecenterHealEffectFuncs,object
sPokecenterHealEffectFuncs:
	.word	PokecenterHealEffect_Init
	.word	PokecenterHealEffect_WaitForBallPlacement
	.word	PokecenterHealEffect_WaitForBallFlashing
	.word	PokecenterHealEffect_WaitForSoundAndEnd
	.size	 sPokecenterHealEffectFuncs,16
	.align	2, 0
	.type	 sHallOfFameRecordEffectFuncs,object
sHallOfFameRecordEffectFuncs:
	.word	HallOfFameRecordEffect_Init
	.word	HallOfFameRecordEffect_WaitForBallPlacement
	.word	HallOfFameRecordEffect_WaitForBallFlashing
	.word	HallOfFameRecordEffect_WaitForSoundAndEnd
	.size	 sHallOfFameRecordEffectFuncs,16
	.align	2, 0
	.type	 sPokeballGlowEffectFuncs,object
sPokeballGlowEffectFuncs:
	.word	PokeballGlowEffect_PlaceBalls
	.word	PokeballGlowEffect_TryPlaySe
	.word	PokeballGlowEffect_FlashFirstThree
	.word	PokeballGlowEffect_FlashLast
	.word	PokeballGlowEffect_WaitAfterFlash
	.word	PokeballGlowEffect_Dummy
	.word	PokeballGlowEffect_WaitForSound
	.word	PokeballGlowEffect_Idle
	.size	 sPokeballGlowEffectFuncs,32
.text
	.align	2, 0
	.globl	FldEff_PokecenterHeal
	.type	 FldEff_PokecenterHeal,function
	.thumb_func
FldEff_PokecenterHeal:
	push	{r4, lr}
	bl	CalculatePlayerPartyCount
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L132
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L132+0x4
	add	r1, r1, r0
	strh	r4, [r1, #0xa]
	mov	r0, #0x5d
	strh	r0, [r1, #0xc]
	mov	r0, #0x24
	strh	r0, [r1, #0xe]
	mov	r0, #0x80
	strh	r0, [r1, #0x10]
	mov	r0, #0x18
	strh	r0, [r1, #0x12]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L133:
	.align	2, 0
.L132:
	.word	Task_PokecenterHeal
	.word	gTasks
.Lfe32:
	.size	 FldEff_PokecenterHeal,.Lfe32-FldEff_PokecenterHeal
	.align	2, 0
	.type	 Task_PokecenterHeal,function
	.thumb_func
Task_PokecenterHeal:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L135
	add	r1, r1, r0
	ldr	r2, .L135+0x4
	mov	r3, #0x8
	ldrsh	r0, [r1, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r2, [r0]
	add	r0, r1, #0
	bl	_call_via_r2
	pop	{r0}
	bx	r0
.L136:
	.align	2, 0
.L135:
	.word	gTasks
	.word	sPokecenterHealEffectFuncs
.Lfe33:
	.size	 Task_PokecenterHeal,.Lfe33-Task_PokecenterHeal
	.align	2, 0
	.type	 PokecenterHealEffect_Init,function
	.thumb_func
PokecenterHealEffect_Init:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	mov	r2, #0xc
	ldrsh	r1, [r4, r2]
	mov	r3, #0xe
	ldrsh	r2, [r4, r3]
	mov	r3, #0x1
	bl	CreateGlowingPokeballsEffect
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x14]
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	mov	r2, #0x12
	ldrsh	r1, [r4, r2]
	bl	CreatePokecenterMonitorSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x16]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 PokecenterHealEffect_Init,.Lfe34-PokecenterHealEffect_Init
	.align	2, 0
	.type	 PokecenterHealEffect_WaitForBallPlacement,function
	.thumb_func
PokecenterHealEffect_WaitForBallPlacement:
	push	{r4, lr}
	add	r2, r0, #0
	ldr	r3, .L140
	mov	r1, #0x14
	ldrsh	r0, [r2, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	mov	r4, #0x2e
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x1
	ble	.L139	@cond_branch
	mov	r0, #0x16
	ldrsh	r1, [r2, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x2e]
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
.L139:
	pop	{r4}
	pop	{r0}
	bx	r0
.L141:
	.align	2, 0
.L140:
	.word	gSprites
.Lfe35:
	.size	 PokecenterHealEffect_WaitForBallPlacement,.Lfe35-PokecenterHealEffect_WaitForBallPlacement
	.align	2, 0
	.type	 PokecenterHealEffect_WaitForBallFlashing,function
	.thumb_func
PokecenterHealEffect_WaitForBallFlashing:
	push	{lr}
	add	r3, r0, #0
	ldr	r2, .L144
	mov	r0, #0x14
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x4
	ble	.L143	@cond_branch
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
.L143:
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	gSprites
.Lfe36:
	.size	 PokecenterHealEffect_WaitForBallFlashing,.Lfe36-PokecenterHealEffect_WaitForBallFlashing
	.align	2, 0
	.type	 PokecenterHealEffect_WaitForSoundAndEnd,function
	.thumb_func
PokecenterHealEffect_WaitForSoundAndEnd:
	push	{lr}
	ldr	r2, .L148
	mov	r3, #0x14
	ldrsh	r1, [r0, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x6
	ble	.L147	@cond_branch
	add	r0, r1, #0
	bl	DestroySprite
	mov	r0, #0x19
	bl	FieldEffectActiveListRemove
	ldr	r0, .L148+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L147:
	pop	{r0}
	bx	r0
.L149:
	.align	2, 0
.L148:
	.word	gSprites
	.word	Task_PokecenterHeal
.Lfe37:
	.size	 PokecenterHealEffect_WaitForSoundAndEnd,.Lfe37-PokecenterHealEffect_WaitForSoundAndEnd
	.align	2, 0
	.globl	FldEff_HallOfFameRecord
	.type	 FldEff_HallOfFameRecord,function
	.thumb_func
FldEff_HallOfFameRecord:
	push	{r4, lr}
	bl	CalculatePlayerPartyCount
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L151
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L151+0x4
	add	r1, r1, r0
	strh	r4, [r1, #0xa]
	mov	r0, #0x75
	strh	r0, [r1, #0xc]
	mov	r0, #0x3c
	strh	r0, [r1, #0xe]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L152:
	.align	2, 0
.L151:
	.word	Task_HallOfFameRecord
	.word	gTasks
.Lfe38:
	.size	 FldEff_HallOfFameRecord,.Lfe38-FldEff_HallOfFameRecord
	.align	2, 0
	.type	 Task_HallOfFameRecord,function
	.thumb_func
Task_HallOfFameRecord:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L154
	add	r1, r1, r0
	ldr	r2, .L154+0x4
	mov	r3, #0x8
	ldrsh	r0, [r1, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r2, [r0]
	add	r0, r1, #0
	bl	_call_via_r2
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	gTasks
	.word	sHallOfFameRecordEffectFuncs
.Lfe39:
	.size	 Task_HallOfFameRecord,.Lfe39-Task_HallOfFameRecord
	.align	2, 0
	.type	 HallOfFameRecordEffect_Init,function
	.thumb_func
HallOfFameRecordEffect_Init:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	mov	r2, #0xc
	ldrsh	r1, [r4, r2]
	mov	r3, #0xe
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateGlowingPokeballsEffect
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x14]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 HallOfFameRecordEffect_Init,.Lfe40-HallOfFameRecordEffect_Init
	.align	2, 0
	.type	 HallOfFameRecordEffect_WaitForBallPlacement,function
	.thumb_func
HallOfFameRecordEffect_WaitForBallPlacement:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r2, .L159
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x1
	ble	.L158	@cond_branch
	mov	r0, #0x78
	mov	r1, #0x19
	bl	CreateHofMonitorSprite
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L158:
	pop	{r4}
	pop	{r0}
	bx	r0
.L160:
	.align	2, 0
.L159:
	.word	gSprites
.Lfe41:
	.size	 HallOfFameRecordEffect_WaitForBallPlacement,.Lfe41-HallOfFameRecordEffect_WaitForBallPlacement
	.align	2, 0
	.type	 HallOfFameRecordEffect_WaitForBallFlashing,function
	.thumb_func
HallOfFameRecordEffect_WaitForBallFlashing:
	push	{lr}
	add	r3, r0, #0
	ldr	r2, .L163
	mov	r0, #0x14
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x4
	ble	.L162	@cond_branch
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
.L162:
	pop	{r0}
	bx	r0
.L164:
	.align	2, 0
.L163:
	.word	gSprites
.Lfe42:
	.size	 HallOfFameRecordEffect_WaitForBallFlashing,.Lfe42-HallOfFameRecordEffect_WaitForBallFlashing
	.align	2, 0
	.type	 HallOfFameRecordEffect_WaitForSoundAndEnd,function
	.thumb_func
HallOfFameRecordEffect_WaitForSoundAndEnd:
	push	{lr}
	ldr	r2, .L167
	mov	r3, #0x14
	ldrsh	r1, [r0, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x6
	ble	.L166	@cond_branch
	add	r0, r1, #0
	bl	DestroySprite
	mov	r0, #0x3e
	bl	FieldEffectActiveListRemove
	ldr	r0, .L167+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L166:
	pop	{r0}
	bx	r0
.L168:
	.align	2, 0
.L167:
	.word	gSprites
	.word	Task_HallOfFameRecord
.Lfe43:
	.size	 HallOfFameRecordEffect_WaitForSoundAndEnd,.Lfe43-HallOfFameRecordEffect_WaitForSoundAndEnd
	.align	2, 0
	.type	 CreateGlowingPokeballsEffect,function
	.thumb_func
CreateGlowingPokeballsEffect:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	mov	r8, r0
	add	r4, r1, #0
	add	r5, r2, #0
	add	r6, r3, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	ldr	r0, .L170
	bl	CreateInvisibleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r2, .L170+0x4
	add	r1, r1, r2
	strh	r4, [r1, #0x24]
	strh	r5, [r1, #0x26]
	add	r3, r1, #0
	add	r3, r3, #0x43
	mov	r2, #0xff
	strb	r2, [r3]
	strh	r6, [r1, #0x38]
	mov	r2, r8
	strh	r2, [r1, #0x3a]
	strh	r0, [r1, #0x3c]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L171:
	.align	2, 0
.L170:
	.word	SpriteCB_PokeballGlowEffect
	.word	gSprites
.Lfe44:
	.size	 CreateGlowingPokeballsEffect,.Lfe44-CreateGlowingPokeballsEffect
	.align	2, 0
	.type	 SpriteCB_PokeballGlowEffect,function
	.thumb_func
SpriteCB_PokeballGlowEffect:
	push	{lr}
	ldr	r2, .L173
	mov	r3, #0x2e
	ldrsh	r1, [r0, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	sPokeballGlowEffectFuncs
.Lfe45:
	.size	 SpriteCB_PokeballGlowEffect,.Lfe45-SpriteCB_PokeballGlowEffect
	.section .rodata
	.align	2, 0
	.type	 sPokeballCoordOffsets,object
sPokeballCoordOffsets:
	.short	0x0
	.short	0x0
	.short	0x6
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x6
	.short	0x4
	.short	0x0
	.short	0x8
	.short	0x6
	.short	0x8
	.size	 sPokeballCoordOffsets,24
	.type	 sPokeballGlowReds,object
sPokeballGlowReds:
	.byte	0x10
	.byte	0xc
	.byte	0x8
	.byte	0x0
	.size	 sPokeballGlowReds,4
	.type	 sPokeballGlowGreens,object
sPokeballGlowGreens:
	.byte	0x10
	.byte	0xc
	.byte	0x8
	.byte	0x0
	.size	 sPokeballGlowGreens,4
	.type	 sPokeballGlowBlues,object
sPokeballGlowBlues:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sPokeballGlowBlues,4
.text
	.align	2, 0
	.type	 PokeballGlowEffect_PlaceBalls,function
	.thumb_func
PokeballGlowEffect_PlaceBalls:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x30]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L177	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L176	@cond_branch
.L177:
	mov	r0, #0x19
	strh	r0, [r4, #0x30]
	ldr	r0, .L179
	ldr	r1, .L179+0x4
	mov	r2, #0x32
	ldrsh	r3, [r4, r2]
	lsl	r3, r3, #0x2
	add	r3, r3, r1
	ldrh	r1, [r4, #0x24]
	ldrh	r2, [r3]
	add	r1, r1, r2
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	ldrh	r2, [r4, #0x26]
	ldrh	r3, [r3, #0x2]
	add	r2, r2, r3
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0xff
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L179+0x8
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x8
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldrh	r0, [r4, #0x3c]
	strh	r0, [r1, #0x2e]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	ldrh	r0, [r4, #0x3a]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x3a]
	mov	r0, #0x17
	bl	PlaySE
.L176:
	mov	r1, #0x3a
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L178	@cond_branch
	mov	r0, #0x20
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
.L178:
	pop	{r4}
	pop	{r0}
	bx	r0
.L180:
	.align	2, 0
.L179:
	.word	sSpriteTemplate_PokeballGlow
	.word	sPokeballCoordOffsets
	.word	gSprites
.Lfe46:
	.size	 PokeballGlowEffect_PlaceBalls,.Lfe46-PokeballGlowEffect_PlaceBalls
	.align	2, 0
	.type	 PokeballGlowEffect_TryPlaySe,function
	.thumb_func
PokeballGlowEffect_TryPlaySe:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x30]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x30]
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0
	bne	.L182	@cond_branch
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
	mov	r0, #0x8
	strh	r0, [r1, #0x30]
	strh	r2, [r1, #0x32]
	strh	r2, [r1, #0x34]
	mov	r2, #0x38
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	beq	.L182	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	PlayFanfare
.L182:
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 PokeballGlowEffect_TryPlaySe,.Lfe47-PokeballGlowEffect_TryPlaySe
	.align	2, 0
	.type	 PokeballGlowEffect_FlashFirstThree,function
	.thumb_func
PokeballGlowEffect_FlashFirstThree:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r7, r0, #0
	ldrh	r0, [r7, #0x30]
	sub	r0, r0, #0x1
	strh	r0, [r7, #0x30]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L185	@cond_branch
	mov	r0, #0x8
	strh	r0, [r7, #0x30]
	ldrh	r0, [r7, #0x32]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r7, #0x32]
	cmp	r0, #0
	bne	.L185	@cond_branch
	ldrh	r0, [r7, #0x34]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x34]
.L185:
	ldrh	r4, [r7, #0x32]
	add	r4, r4, #0x3
	mov	r0, #0x3
	mov	r8, r0
	mov	r1, r8
	and	r4, r4, r1
	ldr	r3, .L188
	mov	sl, r3
	mov	r0, sl
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	mov	r1, #0x84
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	ldr	r6, .L188+0x4
	add	r1, r4, r6
	ldrb	r1, [r1]
	ldr	r5, .L188+0x8
	add	r2, r4, r5
	ldrb	r2, [r2]
	ldr	r3, .L188+0xc
	mov	r9, r3
	add	r4, r4, r9
	ldrb	r3, [r4]
	bl	MultiplyInvertedPaletteRGBComponents
	ldrh	r4, [r7, #0x32]
	add	r4, r4, #0x2
	mov	r0, r8
	and	r4, r4, r0
	mov	r0, sl
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	mov	r1, #0x83
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	add	r1, r4, r6
	ldrb	r1, [r1]
	add	r2, r4, r5
	ldrb	r2, [r2]
	add	r4, r4, r9
	ldrb	r3, [r4]
	bl	MultiplyInvertedPaletteRGBComponents
	ldrh	r4, [r7, #0x32]
	add	r4, r4, #0x1
	mov	r3, r8
	and	r4, r4, r3
	mov	r0, sl
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	mov	r1, #0x81
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	add	r1, r4, r6
	ldrb	r1, [r1]
	add	r2, r4, r5
	ldrb	r2, [r2]
	add	r4, r4, r9
	ldrb	r3, [r4]
	bl	MultiplyInvertedPaletteRGBComponents
	ldrh	r4, [r7, #0x32]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, sl
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	ldr	r3, .L188+0x10
	add	r0, r0, r3
	lsr	r0, r0, #0x10
	add	r6, r4, r6
	ldrb	r6, [r6]
	add	r5, r4, r5
	ldrb	r5, [r5]
	add	r4, r4, r9
	ldrb	r4, [r4]
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	MultiplyInvertedPaletteRGBComponents
	mov	r0, sl
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	ldr	r1, .L188+0x14
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	MultiplyInvertedPaletteRGBComponents
	mov	r3, #0x34
	ldrsh	r0, [r7, r3]
	cmp	r0, #0x2
	ble	.L187	@cond_branch
	ldrh	r0, [r7, #0x2e]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r7, #0x2e]
	mov	r0, #0x8
	strh	r0, [r7, #0x30]
	strh	r1, [r7, #0x32]
.L187:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L189:
	.align	2, 0
.L188:
	.word	0x1007
	.word	sPokeballGlowReds
	.word	sPokeballGlowGreens
	.word	sPokeballGlowBlues
	.word	0x1050000
	.word	0x1030000
.Lfe48:
	.size	 PokeballGlowEffect_FlashFirstThree,.Lfe48-PokeballGlowEffect_FlashFirstThree
	.align	2, 0
	.type	 PokeballGlowEffect_FlashLast,function
	.thumb_func
PokeballGlowEffect_FlashLast:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0x30]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L191	@cond_branch
	mov	r0, #0x8
	strh	r0, [r2, #0x30]
	ldrh	r0, [r2, #0x32]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r2, #0x32]
	cmp	r0, #0x3
	bne	.L191	@cond_branch
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	mov	r0, #0x1e
	strh	r0, [r2, #0x30]
.L191:
	ldrh	r4, [r2, #0x32]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L193
	mov	r8, r0
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	mov	r1, #0x84
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	ldr	r1, .L193+0x4
	add	r1, r4, r1
	ldrb	r6, [r1]
	ldr	r1, .L193+0x8
	add	r1, r4, r1
	ldrb	r5, [r1]
	ldr	r1, .L193+0xc
	add	r4, r4, r1
	ldrb	r4, [r4]
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	MultiplyInvertedPaletteRGBComponents
	mov	r0, r8
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	mov	r1, #0x83
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	MultiplyInvertedPaletteRGBComponents
	mov	r0, r8
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	mov	r1, #0x81
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	MultiplyInvertedPaletteRGBComponents
	mov	r0, r8
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	ldr	r1, .L193+0x10
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	MultiplyInvertedPaletteRGBComponents
	mov	r0, r8
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	ldr	r1, .L193+0x14
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	MultiplyInvertedPaletteRGBComponents
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L194:
	.align	2, 0
.L193:
	.word	0x1007
	.word	sPokeballGlowReds
	.word	sPokeballGlowGreens
	.word	sPokeballGlowBlues
	.word	0x1050000
	.word	0x1030000
.Lfe49:
	.size	 PokeballGlowEffect_FlashLast,.Lfe49-PokeballGlowEffect_FlashLast
	.align	2, 0
	.type	 PokeballGlowEffect_WaitAfterFlash,function
	.thumb_func
PokeballGlowEffect_WaitAfterFlash:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x30]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x30]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L196	@cond_branch
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
.L196:
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 PokeballGlowEffect_WaitAfterFlash,.Lfe50-PokeballGlowEffect_WaitAfterFlash
	.align	2, 0
	.type	 PokeballGlowEffect_Dummy,function
	.thumb_func
PokeballGlowEffect_Dummy:
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x2e]
	bx	lr
.Lfe51:
	.size	 PokeballGlowEffect_Dummy,.Lfe51-PokeballGlowEffect_Dummy
	.align	2, 0
	.type	 PokeballGlowEffect_WaitForSound,function
	.thumb_func
PokeballGlowEffect_WaitForSound:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x38
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L200	@cond_branch
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L199	@cond_branch
.L200:
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
.L199:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 PokeballGlowEffect_WaitForSound,.Lfe52-PokeballGlowEffect_WaitForSound
	.align	2, 0
	.type	 PokeballGlowEffect_Idle,function
	.thumb_func
PokeballGlowEffect_Idle:
	bx	lr
.Lfe53:
	.size	 PokeballGlowEffect_Idle,.Lfe53-PokeballGlowEffect_Idle
	.align	2, 0
	.type	 SpriteCB_PokeballGlow,function
	.thumb_func
SpriteCB_PokeballGlow:
	push	{lr}
	add	r3, r0, #0
	ldr	r2, .L204
	mov	r0, #0x2e
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x4
	ble	.L203	@cond_branch
	add	r0, r3, #0
	bl	FieldEffectFreeGraphicsResources
.L203:
	pop	{r0}
	bx	r0
.L205:
	.align	2, 0
.L204:
	.word	gSprites
.Lfe54:
	.size	 SpriteCB_PokeballGlow,.Lfe54-SpriteCB_PokeballGlow
	.align	2, 0
	.type	 CreatePokecenterMonitorSprite,function
	.thumb_func
CreatePokecenterMonitorSprite:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r0, .L207
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r3, #0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r1, .L207+0x4
	add	r2, r2, r1
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	mov	r3, #0x8
	orr	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, #0x4
	orr	r1, r1, r3
	strb	r1, [r2]
	pop	{r1}
	bx	r1
.L208:
	.align	2, 0
.L207:
	.word	sSpriteTemplate_PokecenterMonitor
	.word	gSprites
.Lfe55:
	.size	 CreatePokecenterMonitorSprite,.Lfe55-CreatePokecenterMonitorSprite
	.align	2, 0
	.type	 SpriteCB_PokecenterMonitor,function
	.thumb_func
SpriteCB_PokecenterMonitor:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L210	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x2e]
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	sub	r0, r0, #0x5
	and	r0, r0, r1
	strb	r0, [r2]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
.L210:
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L211	@cond_branch
	add	r0, r4, #0
	bl	FieldEffectFreeGraphicsResources
.L211:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 SpriteCB_PokecenterMonitor,.Lfe56-SpriteCB_PokecenterMonitor
	.align	2, 0
	.type	 CreateHofMonitorSprite,function
	.thumb_func
CreateHofMonitorSprite:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r0, .L213
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r3, #0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	sSpriteTemplate_HofMonitor
.Lfe57:
	.size	 CreateHofMonitorSprite,.Lfe57-CreateHofMonitorSprite
	.align	2, 0
	.type	 SpriteCB_HallOfFameMonitor,function
	.thumb_func
SpriteCB_HallOfFameMonitor:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L216	@cond_branch
	add	r0, r2, #0
	bl	FieldEffectFreeGraphicsResources
.L216:
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 SpriteCB_HallOfFameMonitor,.Lfe58-SpriteCB_HallOfFameMonitor
	.align	2, 0
	.globl	ReturnToFieldFromFlyMapSelect
	.type	 ReturnToFieldFromFlyMapSelect,function
	.thumb_func
ReturnToFieldFromFlyMapSelect:
	push	{lr}
	ldr	r0, .L218
	bl	SetMainCallback2
	ldr	r1, .L218+0x4
	ldr	r0, .L218+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	CB2_ReturnToField
	.word	gFieldCallback
	.word	FieldCallback_UseFly
.Lfe59:
	.size	 ReturnToFieldFromFlyMapSelect,.Lfe59-ReturnToFieldFromFlyMapSelect
	.align	2, 0
	.type	 FieldCallback_UseFly,function
	.thumb_func
FieldCallback_UseFly:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L221
	mov	r1, #0x0
	bl	CreateTask
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r1, .L221+0x4
	mov	r0, #0x0
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L222:
	.align	2, 0
.L221:
	.word	Task_UseFly
	.word	gFieldCallback
.Lfe60:
	.size	 FieldCallback_UseFly,.Lfe60-FieldCallback_UseFly
	.align	2, 0
	.type	 Task_UseFly,function
	.thumb_func
Task_UseFly:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L228
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r6, [r4, r0]
	cmp	r6, #0
	bne	.L224	@cond_branch
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L223	@cond_branch
	bl	GetCursorSelectionMonId
	ldr	r1, .L228+0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [r1]
	cmp	r0, #0x5
	ble	.L226	@cond_branch
	str	r6, [r1]
.L226:
	mov	r0, #0x1f
	bl	FieldEffectStart
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L224:
	mov	r0, #0x1f
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L223	@cond_branch
	bl	Overworld_ResetStateAfterFly
	bl	WarpIntoMap
	ldr	r0, .L228+0x8
	bl	SetMainCallback2
	ldr	r1, .L228+0xc
	ldr	r0, .L228+0x10
	str	r0, [r1]
	add	r0, r5, #0
	bl	DestroyTask
.L223:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gTasks
	.word	gFieldEffectArguments
	.word	CB2_LoadMap
	.word	gFieldCallback
	.word	FieldCallback_FlyIntoMap
.Lfe61:
	.size	 Task_UseFly,.Lfe61-Task_UseFly
	.align	2, 0
	.type	 FieldCallback_FlyIntoMap,function
	.thumb_func
FieldCallback_FlyIntoMap:
	push	{r4, lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L232
	mov	r1, #0x0
	bl	CreateTask
	ldr	r4, .L232+0x4
	ldr	r3, .L232+0x8
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r1, [r0, #0x1]
	mov	r2, #0x20
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldrb	r1, [r3]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L231	@cond_branch
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x3
	bl	ObjectEventTurn
.L231:
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r1, .L232+0xc
	mov	r0, #0x0
	str	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L233:
	.align	2, 0
.L232:
	.word	Task_FlyIntoMap
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	gFieldCallback
.Lfe62:
	.size	 FieldCallback_FlyIntoMap,.Lfe62-FieldCallback_FlyIntoMap
	.align	2, 0
	.type	 Task_FlyIntoMap,function
	.thumb_func
Task_FlyIntoMap:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L238
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L235	@cond_branch
	ldr	r0, .L238+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L234	@cond_branch
	mov	r0, #0x20
	bl	FieldEffectStart
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L235:
	mov	r0, #0x20
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L234	@cond_branch
	bl	UnlockPlayerFieldControls
	bl	UnfreezeObjectEvents
	add	r0, r5, #0
	bl	DestroyTask
.L234:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L239:
	.align	2, 0
.L238:
	.word	gTasks
	.word	gPaletteFade
.Lfe63:
	.size	 Task_FlyIntoMap,.Lfe63-Task_FlyIntoMap
	.section .rodata
	.align	2, 0
	.type	 sFallWarpEffectCBPtrs,object
sFallWarpEffectCBPtrs:
	.word	FallWarpEffect_1
	.word	FallWarpEffect_2
	.word	FallWarpEffect_3
	.word	FallWarpEffect_4
	.word	FallWarpEffect_5
	.word	FallWarpEffect_6
	.word	FallWarpEffect_7
	.size	 sFallWarpEffectCBPtrs,28
.text
	.align	2, 0
	.globl	FieldCB_FallWarpExit
	.type	 FieldCB_FallWarpExit,function
	.thumb_func
FieldCB_FallWarpExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r0, .L241
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L241+0x4
	mov	r0, #0x0
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L242:
	.align	2, 0
.L241:
	.word	Task_FallWarpFieldEffect
	.word	gFieldCallback
.Lfe64:
	.size	 FieldCB_FallWarpExit,.Lfe64-FieldCB_FallWarpExit
	.align	2, 0
	.type	 Task_FallWarpFieldEffect,function
	.thumb_func
Task_FallWarpFieldEffect:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L248
	add	r4, r1, r0
	ldr	r5, .L248+0x4
.L244:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L244	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	gTasks
	.word	sFallWarpEffectCBPtrs
.Lfe65:
	.size	 Task_FallWarpFieldEffect,.Lfe65-Task_FallWarpFieldEffect
	.align	2, 0
	.type	 FallWarpEffect_1,function
	.thumb_func
FallWarpEffect_1:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	mov	r9, r0
	ldr	r6, .L251
	ldrb	r0, [r6, #0x5]
	lsl	r5, r0, #0x3
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L251+0x4
	mov	r8, r0
	add	r5, r5, r8
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L251+0x8
	add	r4, r4, r0
	bl	CameraObjectReset2
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldrb	r1, [r0, #0x1]
	mov	r2, #0x20
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	mov	r0, #0x1
	strb	r0, [r6, #0x6]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventSetHeldMovement
	add	r3, r4, #0
	add	r3, r3, #0x42
	ldrb	r0, [r3]
	lsr	r0, r0, #0x6
	mov	r1, r9
	strh	r0, [r1, #0x10]
	ldrb	r0, [r5, #0x3]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r5, #0x3]
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4, #0x5]
	ldrb	r1, [r3]
	mov	r0, #0x3f
	and	r0, r0, r1
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r1, r9
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	mov	r0, #0x1
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L252:
	.align	2, 0
.L251:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe66:
	.size	 FallWarpEffect_1,.Lfe66-FallWarpEffect_1
	.align	2, 0
	.type	 FallWarpEffect_2,function
	.thumb_func
FallWarpEffect_2:
	push	{r4, lr}
	add	r4, r0, #0
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L254	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L254:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 FallWarpEffect_2,.Lfe67-FallWarpEffect_2
	.align	2, 0
	.type	 FallWarpEffect_3,function
	.thumb_func
FallWarpEffect_3:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r6, .L256
	ldrb	r0, [r6, #0x4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L256+0x4
	add	r2, r2, r0
	add	r0, r2, #0
	add	r0, r0, #0x29
	mov	r4, #0x0
	ldrsb	r4, [r0, r4]
	lsl	r0, r4, #0x11
	neg	r0, r0
	ldrh	r1, [r2, #0x22]
	ldr	r3, .L256+0x8
	add	r1, r1, r4
	ldrh	r3, [r3]
	add	r1, r1, r3
	asr	r0, r0, #0x10
	add	r0, r0, r1
	neg	r0, r0
	mov	r1, #0x0
	strh	r0, [r2, #0x26]
	mov	r0, #0x1
	strh	r0, [r5, #0xa]
	strh	r1, [r5, #0xc]
	ldr	r2, .L256+0xc
	ldrb	r0, [r6, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	mov	r0, #0x25
	bl	PlaySE
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L257:
	.align	2, 0
.L256:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gSpriteCoordOffsetY
	.word	gObjectEvents
.Lfe68:
	.size	 FallWarpEffect_3,.Lfe68-FallWarpEffect_3
	.align	2, 0
	.type	 FallWarpEffect_4,function
	.thumb_func
FallWarpEffect_4:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldr	r2, .L263
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L263+0x4
	add	r6, r0, r1
	ldrb	r1, [r2, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L263+0x8
	add	r5, r0, r1
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r5, #0x26]
	add	r0, r0, r1
	strh	r0, [r5, #0x26]
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7
	bgt	.L259	@cond_branch
	ldrh	r1, [r4, #0xc]
	add	r0, r2, r1
	strh	r0, [r4, #0xc]
	mov	r1, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L259	@cond_branch
	lsl	r0, r2, #0x1
	strh	r0, [r4, #0xa]
.L259:
	ldrh	r2, [r4, #0xe]
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L261	@cond_branch
	mov	r0, #0x26
	ldrsh	r1, [r5, r0]
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	blt	.L261	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r4, #0xe]
	ldrb	r1, [r6, #0x3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r6, #0x3]
	ldrb	r1, [r4, #0x10]
	add	r3, r5, #0
	add	r3, r3, #0x42
	lsl	r1, r1, #0x6
	ldrb	r2, [r3]
	mov	r0, #0x3f
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrb	r0, [r6]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r6]
.L261:
	mov	r1, #0x26
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L262	@cond_branch
	mov	r0, #0xcf
	bl	PlaySE
	ldrb	r0, [r6]
	mov	r1, #0x8
	orr	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r6]
	mov	r0, #0x0
	strh	r0, [r5, #0x26]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L262:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L264:
	.align	2, 0
.L263:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe69:
	.size	 FallWarpEffect_4,.Lfe69-FallWarpEffect_4
	.align	2, 0
	.type	 FallWarpEffect_5,function
	.thumb_func
FallWarpEffect_5:
	push	{lr}
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	mov	r2, #0x0
	strh	r1, [r0, #0x8]
	mov	r1, #0x4
	strh	r1, [r0, #0xa]
	strh	r2, [r0, #0xc]
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 FallWarpEffect_5,.Lfe70-FallWarpEffect_5
	.align	2, 0
	.type	 FallWarpEffect_6,function
	.thumb_func
FallWarpEffect_6:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x0
	bl	SetCameraPanning
	ldrh	r0, [r4, #0xa]
	neg	r2, r0
	strh	r2, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	mov	r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L267	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x11
	strh	r0, [r4, #0xa]
.L267:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L268	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L268:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 FallWarpEffect_6,.Lfe71-FallWarpEffect_6
	.align	2, 0
	.type	 FallWarpEffect_7,function
	.thumb_func
FallWarpEffect_7:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L271
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	UnlockPlayerFieldControls
	bl	CameraObjectReset1
	bl	UnfreezeObjectEvents
	bl	InstallCameraPanAheadCallback
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MetatileBehavior_IsSurfableInSeafoamIslands
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L270	@cond_branch
	ldr	r0, .L271+0x4
	mov	r1, #0x1
	bl	VarSet
	mov	r0, #0x8
	bl	SetPlayerAvatarTransitionFlags
	mov	r0, #0x16
	bl	SetHelpContext
.L270:
	ldr	r0, .L271+0x8
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.L272:
	.align	2, 0
.L271:
	.word	gPlayerAvatar
	.word	0x4001
	.word	Task_FallWarpFieldEffect
.Lfe72:
	.size	 FallWarpEffect_7,.Lfe72-FallWarpEffect_7
	.section .rodata
	.align	2, 0
	.type	 sEscalatorWarpFieldEffectFuncs,object
sEscalatorWarpFieldEffectFuncs:
	.word	EscalatorWarpEffect_1
	.word	EscalatorWarpEffect_2
	.word	EscalatorWarpEffect_3
	.word	EscalatorWarpEffect_4
	.word	EscalatorWarpEffect_5
	.word	EscalatorWarpEffect_6
	.size	 sEscalatorWarpFieldEffectFuncs,24
.text
	.align	2, 0
	.globl	StartEscalatorWarp
	.type	 StartEscalatorWarp,function
	.thumb_func
StartEscalatorWarp:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L275
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L275+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0xa]
	cmp	r4, #0x6a
	bne	.L274	@cond_branch
	mov	r0, #0x1
	strh	r0, [r1, #0xa]
.L274:
	pop	{r4}
	pop	{r0}
	bx	r0
.L276:
	.align	2, 0
.L275:
	.word	Task_EscalatorWarpFieldEffect
	.word	gTasks
.Lfe73:
	.size	 StartEscalatorWarp,.Lfe73-StartEscalatorWarp
	.align	2, 0
	.type	 Task_EscalatorWarpFieldEffect,function
	.thumb_func
Task_EscalatorWarpFieldEffect:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L282
	add	r4, r1, r0
	ldr	r5, .L282+0x4
.L278:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L278	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L283:
	.align	2, 0
.L282:
	.word	gTasks
	.word	sEscalatorWarpFieldEffectFuncs
.Lfe74:
	.size	 Task_EscalatorWarpFieldEffect,.Lfe74-Task_EscalatorWarpFieldEffect
	.align	2, 0
	.type	 EscalatorWarpEffect_1,function
	.thumb_func
EscalatorWarpEffect_1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	FreezeObjectEvents
	bl	CameraObjectReset2
	ldrb	r0, [r4, #0xa]
	bl	StartEscalator
	mov	r0, #0x1
	bl	QuestLog_OnEscalatorWarp
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 EscalatorWarpEffect_1,.Lfe75-EscalatorWarpEffect_1
	.align	2, 0
	.type	 EscalatorWarpEffect_2,function
	.thumb_func
EscalatorWarpEffect_2:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L289
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L289+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L287	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L286	@cond_branch
.L287:
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0x8]
	strh	r1, [r5, #0xc]
	strh	r1, [r5, #0xe]
	ldrb	r0, [r5, #0xa]
	cmp	r0, #0
	bne	.L288	@cond_branch
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
.L288:
	mov	r0, #0x49
	bl	PlaySE
.L286:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L290:
	.align	2, 0
.L289:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe76:
	.size	 EscalatorWarpEffect_2,.Lfe76-EscalatorWarpEffect_2
	.align	2, 0
	.type	 EscalatorWarpEffect_3,function
	.thumb_func
EscalatorWarpEffect_3:
	push	{r4, lr}
	add	r4, r0, #0
	bl	Escalator_AnimatePlayerGoingDown
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	ble	.L292	@cond_branch
	bl	Escalator_BeginFadeOutToNewMap
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L292:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe77:
	.size	 EscalatorWarpEffect_3,.Lfe77-EscalatorWarpEffect_3
	.align	2, 0
	.type	 EscalatorWarpEffect_4,function
	.thumb_func
EscalatorWarpEffect_4:
	push	{lr}
	bl	Escalator_AnimatePlayerGoingDown
	bl	Escalator_TransitionToWarpInEffect
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe78:
	.size	 EscalatorWarpEffect_4,.Lfe78-EscalatorWarpEffect_4
	.align	2, 0
	.type	 EscalatorWarpEffect_5,function
	.thumb_func
EscalatorWarpEffect_5:
	push	{r4, lr}
	add	r4, r0, #0
	bl	Escalator_AnimatePlayerGoingUp
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	ble	.L295	@cond_branch
	bl	Escalator_BeginFadeOutToNewMap
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L295:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 EscalatorWarpEffect_5,.Lfe79-EscalatorWarpEffect_5
	.align	2, 0
	.type	 EscalatorWarpEffect_6,function
	.thumb_func
EscalatorWarpEffect_6:
	push	{lr}
	bl	Escalator_AnimatePlayerGoingUp
	bl	Escalator_TransitionToWarpInEffect
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 EscalatorWarpEffect_6,.Lfe80-EscalatorWarpEffect_6
	.align	2, 0
	.type	 Escalator_AnimatePlayerGoingDown,function
	.thumb_func
Escalator_AnimatePlayerGoingDown:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L299
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L299+0x4
	add	r4, r4, r0
	mov	r0, #0xc
	ldrsh	r1, [r5, r0]
	mov	r0, #0x84
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r0, #0xc
	ldrsh	r1, [r5, r0]
	mov	r0, #0x94
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L298	@cond_branch
	ldrh	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xc]
.L298:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L300:
	.align	2, 0
.L299:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe81:
	.size	 Escalator_AnimatePlayerGoingDown,.Lfe81-Escalator_AnimatePlayerGoingDown
	.align	2, 0
	.type	 Escalator_AnimatePlayerGoingUp,function
	.thumb_func
Escalator_AnimatePlayerGoingUp:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L303
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L303+0x4
	add	r4, r4, r0
	mov	r0, #0xc
	ldrsh	r1, [r5, r0]
	mov	r0, #0x7c
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r0, #0xc
	ldrsh	r1, [r5, r0]
	mov	r0, #0x76
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L302	@cond_branch
	ldrh	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xc]
.L302:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L304:
	.align	2, 0
.L303:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe82:
	.size	 Escalator_AnimatePlayerGoingUp,.Lfe82-Escalator_AnimatePlayerGoingUp
	.align	2, 0
	.type	 Escalator_BeginFadeOutToNewMap,function
	.thumb_func
Escalator_BeginFadeOutToNewMap:
	push	{lr}
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	pop	{r0}
	bx	r0
.Lfe83:
	.size	 Escalator_BeginFadeOutToNewMap,.Lfe83-Escalator_BeginFadeOutToNewMap
	.align	2, 0
	.type	 Escalator_TransitionToWarpInEffect,function
	.thumb_func
Escalator_TransitionToWarpInEffect:
	push	{lr}
	ldr	r0, .L308
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L307	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L307	@cond_branch
	bl	StopEscalator
	bl	WarpIntoMap
	ldr	r1, .L308+0x4
	ldr	r0, .L308+0x8
	str	r0, [r1]
	ldr	r0, .L308+0xc
	bl	SetMainCallback2
	ldr	r0, .L308+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L307:
	pop	{r0}
	bx	r0
.L309:
	.align	2, 0
.L308:
	.word	gPaletteFade
	.word	gFieldCallback
	.word	FieldCB_EscalatorWarpIn
	.word	CB2_LoadMap
	.word	Task_EscalatorWarpFieldEffect
.Lfe84:
	.size	 Escalator_TransitionToWarpInEffect,.Lfe84-Escalator_TransitionToWarpInEffect
	.section .rodata
	.align	2, 0
	.type	 sEscalatorWarpInFieldEffectFuncs,object
sEscalatorWarpInFieldEffectFuncs:
	.word	EscalatorWarpInEffect_1
	.word	EscalatorWarpInEffect_2
	.word	EscalatorWarpInEffect_3
	.word	EscalatorWarpInEffect_4
	.word	EscalatorWarpInEffect_5
	.word	EscalatorWarpInEffect_6
	.word	EscalatorWarpInEffect_7
	.size	 sEscalatorWarpInFieldEffectFuncs,28
.text
	.align	2, 0
	.type	 FieldCB_EscalatorWarpIn,function
	.thumb_func
FieldCB_EscalatorWarpIn:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r0, .L311
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L311+0x4
	mov	r0, #0x0
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	Task_EscalatorWarpInFieldEffect
	.word	gFieldCallback
.Lfe85:
	.size	 FieldCB_EscalatorWarpIn,.Lfe85-FieldCB_EscalatorWarpIn
	.align	2, 0
	.type	 Task_EscalatorWarpInFieldEffect,function
	.thumb_func
Task_EscalatorWarpInFieldEffect:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L318
	add	r4, r1, r0
	ldr	r5, .L318+0x4
.L314:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L314	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	gTasks
	.word	sEscalatorWarpInFieldEffectFuncs
.Lfe86:
	.size	 Task_EscalatorWarpInFieldEffect,.Lfe86-Task_EscalatorWarpInFieldEffect
	.align	2, 0
	.type	 EscalatorWarpInEffect_1,function
	.thumb_func
EscalatorWarpInEffect_1:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	bl	CameraObjectReset2
	ldr	r0, .L323
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L323+0x4
	add	r4, r4, r0
	mov	r0, #0x4
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x10
	strh	r0, [r5, #0xa]
	cmp	r1, #0x6b
	bne	.L321	@cond_branch
	mov	r1, #0x1
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L322
.L324:
	.align	2, 0
.L323:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L321:
	mov	r1, #0x0
.L322:
	add	r0, r1, #0
	bl	StartEscalator
	mov	r0, #0x1
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 EscalatorWarpInEffect_1,.Lfe87-EscalatorWarpInEffect_1
	.align	2, 0
	.type	 EscalatorWarpInEffect_2,function
	.thumb_func
EscalatorWarpInEffect_2:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L326
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L326+0x4
	add	r4, r4, r0
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	mov	r0, #0x84
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	mov	r0, #0x94
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L327:
	.align	2, 0
.L326:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe88:
	.size	 EscalatorWarpInEffect_2,.Lfe88-EscalatorWarpInEffect_2
	.align	2, 0
	.type	 EscalatorWarpInEffect_3,function
	.thumb_func
EscalatorWarpInEffect_3:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r0, .L331
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L331+0x4
	add	r5, r0, r1
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x84
	bl	Cos
	strh	r0, [r5, #0x24]
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x94
	bl	Sin
	strh	r0, [r5, #0x26]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L329	@cond_branch
	ldrh	r0, [r4, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
.L329:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L330	@cond_branch
	strh	r0, [r5, #0x24]
	strh	r0, [r5, #0x26]
	mov	r0, #0x5
	strh	r0, [r4, #0x8]
.L330:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L332:
	.align	2, 0
.L331:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe89:
	.size	 EscalatorWarpInEffect_3,.Lfe89-EscalatorWarpInEffect_3
	.align	2, 0
	.type	 EscalatorWarpInEffect_4,function
	.thumb_func
EscalatorWarpInEffect_4:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L334
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L334+0x4
	add	r4, r4, r0
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	mov	r0, #0x7c
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	mov	r0, #0x76
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L335:
	.align	2, 0
.L334:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe90:
	.size	 EscalatorWarpInEffect_4,.Lfe90-EscalatorWarpInEffect_4
	.align	2, 0
	.type	 EscalatorWarpInEffect_5,function
	.thumb_func
EscalatorWarpInEffect_5:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r0, .L339
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L339+0x4
	add	r5, r0, r1
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x7c
	bl	Cos
	strh	r0, [r5, #0x24]
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x76
	bl	Sin
	strh	r0, [r5, #0x26]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L337	@cond_branch
	ldrh	r0, [r4, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
.L337:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L338	@cond_branch
	strh	r0, [r5, #0x24]
	strh	r0, [r5, #0x26]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L338:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L340:
	.align	2, 0
.L339:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe91:
	.size	 EscalatorWarpInEffect_5,.Lfe91-EscalatorWarpInEffect_5
	.align	2, 0
	.type	 EscalatorWarpInEffect_6,function
	.thumb_func
EscalatorWarpInEffect_6:
	push	{r4, lr}
	add	r4, r0, #0
	bl	IsEscalatorMoving
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L342	@cond_branch
	bl	StopEscalator
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	b	.L343
.L342:
	mov	r0, #0x0
.L343:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe92:
	.size	 EscalatorWarpInEffect_6,.Lfe92-EscalatorWarpInEffect_6
	.align	2, 0
	.type	 EscalatorWarpInEffect_7,function
	.thumb_func
EscalatorWarpInEffect_7:
	push	{r4, lr}
	ldr	r0, .L346
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L346+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L345	@cond_branch
	bl	CameraObjectReset1
	bl	UnlockPlayerFieldControls
	bl	UnfreezeObjectEvents
	mov	r0, #0x4
	bl	GetWalkNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldr	r0, .L346+0x8
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x2
	bl	QuestLog_OnEscalatorWarp
.L345:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L347:
	.align	2, 0
.L346:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	Task_EscalatorWarpInFieldEffect
.Lfe93:
	.size	 EscalatorWarpInEffect_7,.Lfe93-EscalatorWarpInEffect_7
	.section .rodata
	.align	2, 0
	.type	 sUseWaterfallFieldEffectFuncs,object
sUseWaterfallFieldEffectFuncs:
	.word	waterfall_0_setup
	.word	waterfall_1_do_anim_probably
	.word	waterfall_2_wait_anim_finish_probably
	.word	waterfall_3_move_player_probably
	.word	waterfall_4_wait_player_move_probably
	.size	 sUseWaterfallFieldEffectFuncs,20
.text
	.align	2, 0
	.globl	FldEff_UseWaterfall
	.type	 FldEff_UseWaterfall,function
	.thumb_func
FldEff_UseWaterfall:
	push	{r4, lr}
	ldr	r4, .L349
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L349+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L349+0x8
	ldr	r2, [r2]
	strh	r2, [r1, #0xa]
	bl	_call_via_r4
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L350:
	.align	2, 0
.L349:
	.word	Task_UseWaterfall
	.word	gTasks
	.word	gFieldEffectArguments
.Lfe94:
	.size	 FldEff_UseWaterfall,.Lfe94-FldEff_UseWaterfall
	.align	2, 0
	.type	 Task_UseWaterfall,function
	.thumb_func
Task_UseWaterfall:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L356
	ldr	r2, .L356+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L352:
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r0, .L356+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L356+0xc
	add	r1, r1, r0
	ldr	r2, [r2]
	add	r0, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L352	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L357:
	.align	2, 0
.L356:
	.word	sUseWaterfallFieldEffectFuncs
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe95:
	.size	 Task_UseWaterfall,.Lfe95-Task_UseWaterfall
	.align	2, 0
	.type	 waterfall_0_setup,function
	.thumb_func
waterfall_0_setup:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LockPlayerFieldControls
	ldr	r1, .L359
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L360:
	.align	2, 0
.L359:
	.word	gPlayerAvatar
.Lfe96:
	.size	 waterfall_0_setup,.Lfe96-waterfall_0_setup
	.align	2, 0
	.type	 waterfall_1_do_anim_probably,function
	.thumb_func
waterfall_1_do_anim_probably:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	bl	LockPlayerFieldControls
	add	r0, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L362	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	ldr	r1, .L363
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	str	r0, [r1]
	mov	r0, #0x3b
	bl	FieldEffectStart
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L362:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L364:
	.align	2, 0
.L363:
	.word	gFieldEffectArguments
.Lfe97:
	.size	 waterfall_1_do_anim_probably,.Lfe97-waterfall_1_do_anim_probably
	.align	2, 0
	.type	 waterfall_2_wait_anim_finish_probably,function
	.thumb_func
waterfall_2_wait_anim_finish_probably:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x6
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L366	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	b	.L367
.L366:
	mov	r0, #0x0
.L367:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe98:
	.size	 waterfall_2_wait_anim_finish_probably,.Lfe98-waterfall_2_wait_anim_finish_probably
	.align	2, 0
	.type	 waterfall_3_move_player_probably,function
	.thumb_func
waterfall_3_move_player_probably:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r0, #0x2
	bl	GetWalkSlowerMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe99:
	.size	 waterfall_3_move_player_probably,.Lfe99-waterfall_3_move_player_probably
	.align	2, 0
	.type	 waterfall_4_wait_player_move_probably,function
	.thumb_func
waterfall_4_wait_player_move_probably:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L370	@cond_branch
	mov	r0, #0x0
	b	.L372
.L370:
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsWaterfall
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L371	@cond_branch
	bl	UnlockPlayerFieldControls
	ldr	r0, .L373
	strb	r4, [r0, #0x6]
	ldr	r0, .L373+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x2b
	bl	FieldEffectActiveListRemove
	mov	r0, #0x0
	b	.L372
.L374:
	.align	2, 0
.L373:
	.word	gPlayerAvatar
	.word	Task_UseWaterfall
.L371:
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
.L372:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe100:
	.size	 waterfall_4_wait_player_move_probably,.Lfe100-waterfall_4_wait_player_move_probably
	.section .rodata
	.align	2, 0
	.type	 sDiveFieldEffectFuncs,object
sDiveFieldEffectFuncs:
	.word	DiveFieldEffect_Init
	.word	DiveFieldEffect_ShowMon
	.word	DiveFieldEffect_TryWarp
	.size	 sDiveFieldEffectFuncs,12
.text
	.align	2, 0
	.globl	FldEff_UseDive
	.type	 FldEff_UseDive,function
	.thumb_func
FldEff_UseDive:
	push	{r4, lr}
	ldr	r4, .L376
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L376+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L376+0x8
	ldr	r2, [r3]
	strh	r2, [r1, #0x26]
	ldr	r2, [r3, #0x4]
	strh	r2, [r1, #0x24]
	bl	_call_via_r4
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L377:
	.align	2, 0
.L376:
	.word	Task_UseDive
	.word	gTasks
	.word	gFieldEffectArguments
.Lfe101:
	.size	 FldEff_UseDive,.Lfe101-FldEff_UseDive
	.align	2, 0
	.type	 Task_UseDive,function
	.thumb_func
Task_UseDive:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L383
	ldr	r2, .L383+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L379:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L379	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L384:
	.align	2, 0
.L383:
	.word	sDiveFieldEffectFuncs
	.word	gTasks
.Lfe102:
	.size	 Task_UseDive,.Lfe102-Task_UseDive
	.align	2, 0
	.type	 DiveFieldEffect_Init,function
	.thumb_func
DiveFieldEffect_Init:
	ldr	r2, .L386
	mov	r1, #0x1
	strb	r1, [r2, #0x6]
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	mov	r0, #0x0
	bx	lr
.L387:
	.align	2, 0
.L386:
	.word	gPlayerAvatar
.Lfe103:
	.size	 DiveFieldEffect_Init,.Lfe103-DiveFieldEffect_Init
	.align	2, 0
	.type	 DiveFieldEffect_ShowMon,function
	.thumb_func
DiveFieldEffect_ShowMon:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LockPlayerFieldControls
	ldr	r1, .L389
	mov	r2, #0x26
	ldrsh	r0, [r4, r2]
	str	r0, [r1]
	mov	r0, #0x3b
	bl	FieldEffectStart
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L390:
	.align	2, 0
.L389:
	.word	gFieldEffectArguments
.Lfe104:
	.size	 DiveFieldEffect_ShowMon,.Lfe104-DiveFieldEffect_ShowMon
	.align	2, 0
	.type	 DiveFieldEffect_TryWarp,function
	.thumb_func
DiveFieldEffect_TryWarp:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r1, sp
	add	r1, r1, #0x2
	mov	r0, sp
	bl	PlayerGetDestCoords
	mov	r0, #0x6
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L392	@cond_branch
	ldr	r2, .L393
	ldr	r0, .L393+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1e]
	mov	r0, sp
	bl	dive_warp
	ldr	r0, .L393+0x8
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x2c
	bl	FieldEffectActiveListRemove
.L392:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r1}
	bx	r1
.L394:
	.align	2, 0
.L393:
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	Task_UseDive
.Lfe105:
	.size	 DiveFieldEffect_TryWarp,.Lfe105-DiveFieldEffect_TryWarp
	.section .rodata
	.align	2, 0
	.type	 sLavaridgeGymB1FWarpEffectFuncs,object
sLavaridgeGymB1FWarpEffectFuncs:
	.word	LavaridgeGymB1FWarpEffect_1
	.word	LavaridgeGymB1FWarpEffect_2
	.word	LavaridgeGymB1FWarpEffect_3
	.word	LavaridgeGymB1FWarpEffect_4
	.word	LavaridgeGymB1FWarpEffect_5
	.word	LavaridgeGymB1FWarpEffect_6
	.size	 sLavaridgeGymB1FWarpEffectFuncs,24
.text
	.align	2, 0
	.globl	StartLavaridgeGymB1FWarp
	.type	 StartLavaridgeGymB1FWarp,function
	.thumb_func
StartLavaridgeGymB1FWarp:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L396
	bl	CreateTask
	pop	{r0}
	bx	r0
.L397:
	.align	2, 0
.L396:
	.word	Task_LavaridgeGymB1FWarp
.Lfe106:
	.size	 StartLavaridgeGymB1FWarp,.Lfe106-StartLavaridgeGymB1FWarp
	.align	2, 0
	.type	 Task_LavaridgeGymB1FWarp,function
	.thumb_func
Task_LavaridgeGymB1FWarp:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r6, .L403
	ldr	r2, .L403+0x4
	ldr	r5, .L403+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L399:
	mov	r0, #0x8
	ldrsh	r3, [r4, r0]
	lsl	r3, r3, #0x2
	add	r3, r3, r6
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L403+0xc
	add	r1, r1, r0
	ldrb	r0, [r5, #0x4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L403+0x10
	add	r2, r2, r0
	ldr	r3, [r3]
	add	r0, r4, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L399	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L404:
	.align	2, 0
.L403:
	.word	sLavaridgeGymB1FWarpEffectFuncs
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe107:
	.size	 Task_LavaridgeGymB1FWarp,.Lfe107-Task_LavaridgeGymB1FWarp
	.align	2, 0
	.type	 LavaridgeGymB1FWarpEffect_1,function
	.thumb_func
LavaridgeGymB1FWarpEffect_1:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	bl	FreezeObjectEvents
	bl	CameraObjectReset2
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	ldr	r0, .L406
	mov	r2, #0x1
	strb	r2, [r0, #0x6]
	ldrb	r0, [r5, #0x3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r5, #0x3]
	strh	r2, [r4, #0xa]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L407:
	.align	2, 0
.L406:
	.word	gPlayerAvatar
.Lfe108:
	.size	 LavaridgeGymB1FWarpEffect_1,.Lfe108-LavaridgeGymB1FWarpEffect_1
	.align	2, 0
	.type	 LavaridgeGymB1FWarpEffect_2,function
	.thumb_func
LavaridgeGymB1FWarpEffect_2:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x0
	bl	SetCameraPanning
	ldrh	r0, [r4, #0xa]
	neg	r0, r0
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L409	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xc]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L409:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe109:
	.size	 LavaridgeGymB1FWarpEffect_2,.Lfe109-LavaridgeGymB1FWarpEffect_2
	.align	2, 0
	.type	 LavaridgeGymB1FWarpEffect_3,function
	.thumb_func
LavaridgeGymB1FWarpEffect_3:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	strh	r0, [r2, #0x26]
	mov	r0, #0x1
	strh	r0, [r4, #0xe]
	ldr	r3, .L411
	mov	r5, #0x10
	ldrsh	r0, [r1, r5]
	str	r0, [r3]
	mov	r5, #0x12
	ldrsh	r0, [r1, r5]
	str	r0, [r3, #0x4]
	add	r0, r2, #0
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	str	r0, [r3, #0x8]
	ldrb	r0, [r2, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	str	r0, [r3, #0xc]
	mov	r0, #0x32
	bl	FieldEffectStart
	mov	r0, #0xab
	bl	PlaySE
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L412:
	.align	2, 0
.L411:
	.word	gFieldEffectArguments
.Lfe110:
	.size	 LavaridgeGymB1FWarpEffect_3,.Lfe110-LavaridgeGymB1FWarpEffect_3
	.align	2, 0
	.type	 LavaridgeGymB1FWarpEffect_4,function
	.thumb_func
LavaridgeGymB1FWarpEffect_4:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	add	r5, r2, #0
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x0
	bl	SetCameraPanning
	ldrh	r0, [r4, #0xa]
	neg	r2, r0
	strh	r2, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r1, r0, #0x1
	strh	r1, [r4, #0xc]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x11
	bgt	.L414	@cond_branch
	mov	r0, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L416	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bgt	.L416	@cond_branch
	lsl	r0, r2, #0x1
	b	.L424
.L414:
	mov	r0, #0x4
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L416	@cond_branch
	lsl	r0, r2, #0x10
	cmp	r0, #0
	ble	.L416	@cond_branch
	asr	r0, r0, #0x11
.L424:
	strh	r0, [r4, #0xa]
.L416:
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x6
	ble	.L418	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x29
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r2, r1, #0x11
	neg	r2, r2
	mov	r7, #0x26
	ldrsh	r3, [r5, r7]
	mov	r7, #0x22
	ldrsh	r0, [r5, r7]
	add	r0, r0, r1
	ldr	r1, .L425
	mov	r7, #0x0
	ldrsh	r1, [r1, r7]
	add	r0, r0, r1
	asr	r2, r2, #0x10
	add	r0, r0, r2
	cmn	r3, r0
	ble	.L419	@cond_branch
	ldrh	r0, [r5, #0x26]
	ldrh	r1, [r4, #0xe]
	sub	r0, r0, r1
	strh	r0, [r5, #0x26]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	bgt	.L418	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r4, #0xe]
	b	.L418
.L426:
	.align	2, 0
.L425:
	.word	gSpriteCoordOffsetY
.L419:
	mov	r0, #0x1
	strh	r0, [r4, #0x10]
.L418:
	ldrh	r2, [r4, #0x12]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L422	@cond_branch
	mov	r7, #0x26
	ldrsh	r1, [r5, r7]
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L422	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r4, #0x12]
	ldrb	r0, [r6, #0x3]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r6, #0x3]
	ldrb	r1, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r5, #0x5]
	add	r2, r5, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2]
.L422:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L423	@cond_branch
	mov	r7, #0x10
	ldrsh	r0, [r4, r7]
	cmp	r0, #0
	beq	.L423	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L423:
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe111:
	.size	 LavaridgeGymB1FWarpEffect_4,.Lfe111-LavaridgeGymB1FWarpEffect_4
	.align	2, 0
	.type	 LavaridgeGymB1FWarpEffect_5,function
	.thumb_func
LavaridgeGymB1FWarpEffect_5:
	push	{r4, lr}
	add	r4, r0, #0
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe112:
	.size	 LavaridgeGymB1FWarpEffect_5,.Lfe112-LavaridgeGymB1FWarpEffect_5
	.align	2, 0
	.type	 LavaridgeGymB1FWarpEffect_6,function
	.thumb_func
LavaridgeGymB1FWarpEffect_6:
	push	{lr}
	ldr	r0, .L430
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L429	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L429	@cond_branch
	bl	WarpIntoMap
	ldr	r1, .L430+0x4
	ldr	r0, .L430+0x8
	str	r0, [r1]
	ldr	r0, .L430+0xc
	bl	SetMainCallback2
	ldr	r0, .L430+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L429:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L431:
	.align	2, 0
.L430:
	.word	gPaletteFade
	.word	gFieldCallback
	.word	FieldCB_LavaridgeGymB1FWarpExit
	.word	CB2_LoadMap
	.word	Task_LavaridgeGymB1FWarp
.Lfe113:
	.size	 LavaridgeGymB1FWarpEffect_6,.Lfe113-LavaridgeGymB1FWarpEffect_6
	.section .rodata
	.align	2, 0
	.type	 sLavaridgeGymB1FWarpExitEffectFuncs,object
sLavaridgeGymB1FWarpExitEffectFuncs:
	.word	LavaridgeGymB1FWarpExitEffect_1
	.word	LavaridgeGymB1FWarpExitEffect_2
	.word	LavaridgeGymB1FWarpExitEffect_3
	.word	LavaridgeGymB1FWarpExitEffect_4
	.size	 sLavaridgeGymB1FWarpExitEffectFuncs,16
.text
	.align	2, 0
	.type	 FieldCB_LavaridgeGymB1FWarpExit,function
	.thumb_func
FieldCB_LavaridgeGymB1FWarpExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	bl	LockPlayerFieldControls
	ldr	r0, .L433
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L433+0x4
	bl	CreateTask
	pop	{r0}
	bx	r0
.L434:
	.align	2, 0
.L433:
	.word	gFieldCallback
	.word	Task_LavaridgeGymB1FWarpExit
.Lfe114:
	.size	 FieldCB_LavaridgeGymB1FWarpExit,.Lfe114-FieldCB_LavaridgeGymB1FWarpExit
	.align	2, 0
	.type	 Task_LavaridgeGymB1FWarpExit,function
	.thumb_func
Task_LavaridgeGymB1FWarpExit:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r6, .L440
	ldr	r2, .L440+0x4
	ldr	r5, .L440+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L436:
	mov	r0, #0x8
	ldrsh	r3, [r4, r0]
	lsl	r3, r3, #0x2
	add	r3, r3, r6
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L440+0xc
	add	r1, r1, r0
	ldrb	r0, [r5, #0x4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L440+0x10
	add	r2, r2, r0
	ldr	r3, [r3]
	add	r0, r4, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L436	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L441:
	.align	2, 0
.L440:
	.word	sLavaridgeGymB1FWarpExitEffectFuncs
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe115:
	.size	 Task_LavaridgeGymB1FWarpExit,.Lfe115-Task_LavaridgeGymB1FWarpExit
	.align	2, 0
	.type	 LavaridgeGymB1FWarpExitEffect_1,function
	.thumb_func
LavaridgeGymB1FWarpExitEffect_1:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	bl	CameraObjectReset2
	bl	FreezeObjectEvents
	ldr	r1, .L443
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L444:
	.align	2, 0
.L443:
	.word	gPlayerAvatar
.Lfe116:
	.size	 LavaridgeGymB1FWarpExitEffect_1,.Lfe116-LavaridgeGymB1FWarpExitEffect_1
	.align	2, 0
	.type	 LavaridgeGymB1FWarpExitEffect_2,function
	.thumb_func
LavaridgeGymB1FWarpExitEffect_2:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L446	@cond_branch
	ldr	r1, .L447
	mov	r2, #0x10
	ldrsh	r0, [r5, r2]
	str	r0, [r1]
	mov	r2, #0x12
	ldrsh	r0, [r5, r2]
	str	r0, [r1, #0x4]
	add	r0, r6, #0
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	str	r0, [r1, #0x8]
	ldrb	r0, [r6, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	str	r0, [r1, #0xc]
	mov	r0, #0x31
	bl	FieldEffectStart
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L446:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L448:
	.align	2, 0
.L447:
	.word	gFieldEffectArguments
.Lfe117:
	.size	 LavaridgeGymB1FWarpExitEffect_2,.Lfe117-LavaridgeGymB1FWarpExitEffect_2
	.align	2, 0
	.type	 LavaridgeGymB1FWarpExitEffect_3,function
	.thumb_func
LavaridgeGymB1FWarpExitEffect_3:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0xa
	ldrsh	r1, [r2, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L451
	add	r0, r0, r1
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bls	.L450	@cond_branch
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	bl	CameraObjectReset1
	mov	r0, #0xa8
	bl	PlaySE
	mov	r0, #0x4
	bl	GetJumpMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
.L450:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L452:
	.align	2, 0
.L451:
	.word	gSprites
.Lfe118:
	.size	 LavaridgeGymB1FWarpExitEffect_3,.Lfe118-LavaridgeGymB1FWarpExitEffect_3
	.align	2, 0
	.type	 LavaridgeGymB1FWarpExitEffect_4,function
	.thumb_func
LavaridgeGymB1FWarpExitEffect_4:
	push	{lr}
	add	r0, r1, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L454	@cond_branch
	ldr	r1, .L455
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	UnlockPlayerFieldControls
	bl	UnfreezeObjectEvents
	ldr	r0, .L455+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L454:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L456:
	.align	2, 0
.L455:
	.word	gPlayerAvatar
	.word	Task_LavaridgeGymB1FWarpExit
.Lfe119:
	.size	 LavaridgeGymB1FWarpExitEffect_4,.Lfe119-LavaridgeGymB1FWarpExitEffect_4
	.section .rodata
	.align	2, 0
	.type	 sLavaridgeGym1FWarpEffectFuncs,object
sLavaridgeGym1FWarpEffectFuncs:
	.word	LavaridgeGym1FWarpEffect_1
	.word	LavaridgeGym1FWarpEffect_2
	.word	LavaridgeGym1FWarpEffect_3
	.word	LavaridgeGym1FWarpEffect_4
	.word	LavaridgeGym1FWarpEffect_5
	.size	 sLavaridgeGym1FWarpEffectFuncs,20
.text
	.align	2, 0
	.globl	FldEff_LavaridgeGymWarp
	.type	 FldEff_LavaridgeGymWarp,function
	.thumb_func
FldEff_LavaridgeGymWarp:
	push	{r4, lr}
	ldr	r4, .L458
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L458+0x4
	add	r0, r0, #0x84
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L458+0x8
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	mov	r1, #0x3
	ldrb	r3, [r4, #0xc]
	and	r3, r3, r1
	lsl	r3, r3, #0x2
	ldrb	r4, [r2, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, #0x2
	orr	r1, r1, r3
	strb	r1, [r2]
	pop	{r4}
	pop	{r1}
	bx	r1
.L459:
	.align	2, 0
.L458:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe120:
	.size	 FldEff_LavaridgeGymWarp,.Lfe120-FldEff_LavaridgeGymWarp
	.align	2, 0
	.globl	SpriteCB_AshLaunch
	.type	 SpriteCB_AshLaunch,function
	.thumb_func
SpriteCB_AshLaunch:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L461	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x32
	bl	FieldEffectStop
.L461:
	pop	{r0}
	bx	r0
.Lfe121:
	.size	 SpriteCB_AshLaunch,.Lfe121-SpriteCB_AshLaunch
	.align	2, 0
	.globl	StartLavaridgeGym1FWarp
	.type	 StartLavaridgeGym1FWarp,function
	.thumb_func
StartLavaridgeGym1FWarp:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L463
	bl	CreateTask
	pop	{r0}
	bx	r0
.L464:
	.align	2, 0
.L463:
	.word	Task_LavaridgeGym1FWarp
.Lfe122:
	.size	 StartLavaridgeGym1FWarp,.Lfe122-StartLavaridgeGym1FWarp
	.align	2, 0
	.type	 Task_LavaridgeGym1FWarp,function
	.thumb_func
Task_LavaridgeGym1FWarp:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r6, .L470
	ldr	r2, .L470+0x4
	ldr	r5, .L470+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L466:
	mov	r0, #0x8
	ldrsh	r3, [r4, r0]
	lsl	r3, r3, #0x2
	add	r3, r3, r6
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L470+0xc
	add	r1, r1, r0
	ldrb	r0, [r5, #0x4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L470+0x10
	add	r2, r2, r0
	ldr	r3, [r3]
	add	r0, r4, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L466	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L471:
	.align	2, 0
.L470:
	.word	sLavaridgeGym1FWarpEffectFuncs
	.word	gTasks
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe123:
	.size	 Task_LavaridgeGym1FWarp,.Lfe123-Task_LavaridgeGym1FWarp
	.align	2, 0
	.type	 LavaridgeGym1FWarpEffect_1,function
	.thumb_func
LavaridgeGym1FWarpEffect_1:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	bl	FreezeObjectEvents
	bl	CameraObjectReset2
	ldr	r1, .L473
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrb	r0, [r4, #0x3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r4, #0x3]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L474:
	.align	2, 0
.L473:
	.word	gPlayerAvatar
.Lfe124:
	.size	 LavaridgeGym1FWarpEffect_1,.Lfe124-LavaridgeGym1FWarpEffect_1
	.align	2, 0
	.type	 LavaridgeGym1FWarpEffect_2,function
	.thumb_func
LavaridgeGym1FWarpEffect_2:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	add	r6, r2, #0
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L476	@cond_branch
	ldrh	r1, [r5, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x3
	ble	.L477	@cond_branch
	ldr	r1, .L479
	mov	r2, #0x10
	ldrsh	r0, [r4, r2]
	str	r0, [r1]
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	str	r0, [r1, #0x4]
	add	r0, r6, #0
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	str	r0, [r1, #0x8]
	ldrb	r0, [r6, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	str	r0, [r1, #0xc]
	mov	r0, #0x31
	bl	FieldEffectStart
	strh	r0, [r5, #0xa]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L476
.L480:
	.align	2, 0
.L479:
	.word	gFieldEffectArguments
.L477:
	add	r0, r1, #0x1
	strh	r0, [r5, #0xa]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetWalkInPlaceFasterMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x21
	bl	PlaySE
.L476:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe125:
	.size	 LavaridgeGym1FWarpEffect_2,.Lfe125-LavaridgeGym1FWarpEffect_2
	.align	2, 0
	.type	 LavaridgeGym1FWarpEffect_3,function
	.thumb_func
LavaridgeGym1FWarpEffect_3:
	push	{r4, lr}
	add	r3, r0, #0
	add	r4, r1, #0
	ldr	r2, .L483
	mov	r0, #0xa
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L482	@cond_branch
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
.L482:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L484:
	.align	2, 0
.L483:
	.word	gSprites
.Lfe126:
	.size	 LavaridgeGym1FWarpEffect_3,.Lfe126-LavaridgeGym1FWarpEffect_3
	.align	2, 0
	.type	 LavaridgeGym1FWarpEffect_4,function
	.thumb_func
LavaridgeGym1FWarpEffect_4:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x31
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L486	@cond_branch
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L486:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe127:
	.size	 LavaridgeGym1FWarpEffect_4,.Lfe127-LavaridgeGym1FWarpEffect_4
	.align	2, 0
	.type	 LavaridgeGym1FWarpEffect_5,function
	.thumb_func
LavaridgeGym1FWarpEffect_5:
	push	{lr}
	ldr	r0, .L489
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L488	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L488	@cond_branch
	bl	WarpIntoMap
	ldr	r1, .L489+0x4
	ldr	r0, .L489+0x8
	str	r0, [r1]
	ldr	r0, .L489+0xc
	bl	SetMainCallback2
	ldr	r0, .L489+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L488:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L490:
	.align	2, 0
.L489:
	.word	gPaletteFade
	.word	gFieldCallback
	.word	FieldCB_FallWarpExit
	.word	CB2_LoadMap
	.word	Task_LavaridgeGym1FWarp
.Lfe128:
	.size	 LavaridgeGym1FWarpEffect_5,.Lfe128-LavaridgeGym1FWarpEffect_5
	.align	2, 0
	.globl	FldEff_PopOutOfAsh
	.type	 FldEff_PopOutOfAsh,function
	.thumb_func
FldEff_PopOutOfAsh:
	push	{r4, lr}
	ldr	r4, .L492
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L492+0x4
	add	r0, r0, #0x80
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L492+0x8
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	mov	r1, #0x3
	ldrb	r3, [r4, #0xc]
	and	r3, r3, r1
	lsl	r3, r3, #0x2
	ldrb	r4, [r2, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, #0x2
	orr	r1, r1, r3
	strb	r1, [r2]
	pop	{r4}
	pop	{r1}
	bx	r1
.L493:
	.align	2, 0
.L492:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe129:
	.size	 FldEff_PopOutOfAsh,.Lfe129-FldEff_PopOutOfAsh
	.align	2, 0
	.globl	SpriteCB_PopOutOfAsh
	.type	 SpriteCB_PopOutOfAsh,function
	.thumb_func
SpriteCB_PopOutOfAsh:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L495	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x31
	bl	FieldEffectStop
.L495:
	pop	{r0}
	bx	r0
.Lfe130:
	.size	 SpriteCB_PopOutOfAsh,.Lfe130-SpriteCB_PopOutOfAsh
	.section .rodata
	.align	2, 0
	.type	 sEscapeRopeWarpOutEffectFuncs,object
sEscapeRopeWarpOutEffectFuncs:
	.word	EscapeRopeWarpOutEffect_Init
	.word	EscapeRopeWarpOutEffect_Spin
	.size	 sEscapeRopeWarpOutEffectFuncs,8
.text
	.align	2, 0
	.globl	StartEscapeRopeFieldEffect
	.type	 StartEscapeRopeFieldEffect,function
	.thumb_func
StartEscapeRopeFieldEffect:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r0, .L497
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L498:
	.align	2, 0
.L497:
	.word	Task_EscapeRopeWarpOut
.Lfe131:
	.size	 StartEscapeRopeFieldEffect,.Lfe131-StartEscapeRopeFieldEffect
	.align	2, 0
	.type	 Task_EscapeRopeWarpOut,function
	.thumb_func
Task_EscapeRopeWarpOut:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L500
	ldr	r2, .L500+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L501:
	.align	2, 0
.L500:
	.word	sEscapeRopeWarpOutEffectFuncs
	.word	gTasks
.Lfe132:
	.size	 Task_EscapeRopeWarpOut,.Lfe132-Task_EscapeRopeWarpOut
	.align	2, 0
	.type	 EscapeRopeWarpOutEffect_Init,function
	.thumb_func
EscapeRopeWarpOutEffect_Init:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strh	r0, [r4, #0x8]
	mov	r0, #0x40
	strh	r0, [r4, #0x22]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x24]
	strh	r5, [r4, #0x26]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe133:
	.size	 EscapeRopeWarpOutEffect_Init,.Lfe133-EscapeRopeWarpOutEffect_Init
	.align	2, 0
	.type	 EscapeRopeWarpOutEffect_Spin,function
	.thumb_func
EscapeRopeWarpOutEffect_Spin:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L509
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L509+0x4
	add	r6, r0, r1
	add	r4, r5, #0
	add	r4, r4, #0x8
	add	r1, r5, #0
	add	r1, r1, #0xa
	add	r2, r5, #0
	add	r2, r2, #0xc
	add	r0, r6, #0
	bl	SpinObjectEvent
	ldrh	r1, [r4, #0x6]
	mov	r2, #0x6
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x3b
	bgt	.L504	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	bne	.L506	@cond_branch
	mov	r0, #0x27
	bl	PlaySE
	b	.L506
.L510:
	.align	2, 0
.L509:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L504:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L506	@cond_branch
	add	r1, r5, #0
	add	r1, r1, #0x12
	add	r2, r5, #0
	add	r2, r2, #0x14
	add	r0, r6, #0
	bl	WarpOutObjectEventUpwards
	cmp	r0, #0
	bne	.L506	@cond_branch
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	mov	r0, #0x1
	strh	r0, [r4, #0x8]
.L506:
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1
	bne	.L508	@cond_branch
	ldr	r0, .L511
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L508	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L508	@cond_branch
	ldrh	r1, [r5, #0x26]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	SetObjectEventDirection
	bl	SetWarpDestinationToEscapeWarp
	bl	WarpIntoMap
	ldr	r1, .L511+0x4
	ldr	r0, .L511+0x8
	str	r0, [r1]
	ldr	r0, .L511+0xc
	bl	SetMainCallback2
	ldr	r0, .L511+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L508:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L512:
	.align	2, 0
.L511:
	.word	gPaletteFade
	.word	gFieldCallback
	.word	FieldCallback_EscapeRopeExit
	.word	CB2_LoadMap
	.word	Task_EscapeRopeWarpOut
.Lfe134:
	.size	 EscapeRopeWarpOutEffect_Spin,.Lfe134-EscapeRopeWarpOutEffect_Spin
	.section .rodata
	.type	 sSpinDirections,object
sSpinDirections:
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.size	 sSpinDirections,5
.text
	.align	2, 0
	.type	 SpinObjectEvent,function
	.thumb_func
SpinObjectEvent:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	add	r5, r2, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L515	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L514	@cond_branch
.L515:
	ldrh	r1, [r6]
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp	r0, #0
	beq	.L516	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r6]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L514	@cond_branch
.L516:
	ldr	r7, .L521
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, r7
	ldrb	r0, [r0]
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrh	r1, [r5]
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp	r0, #0xb
	bgt	.L517	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r5]
.L517:
	mov	r0, #0x0
	ldrsh	r1, [r5, r0]
	mov	r0, #0xc
	asr	r0, r0, r1
	strh	r0, [r6]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, r7
	ldrb	r0, [r0]
	b	.L520
.L522:
	.align	2, 0
.L521:
	.word	sSpinDirections
.L514:
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
.L520:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe135:
	.size	 SpinObjectEvent,.Lfe135-SpinObjectEvent
	.align	2, 0
	.type	 WarpOutObjectEventUpwards,function
	.thumb_func
WarpOutObjectEventUpwards:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldrb	r0, [r7, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L536
	add	r4, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L526	@cond_branch
	cmp	r0, #0x1
	bgt	.L533	@cond_branch
	cmp	r0, #0
	beq	.L525	@cond_branch
	b	.L524
.L537:
	.align	2, 0
.L536:
	.word	gSprites
.L533:
	cmp	r0, #0x2
	beq	.L528	@cond_branch
	cmp	r0, #0x3
	beq	.L535	@cond_branch
	b	.L524
.L525:
	bl	CameraObjectReset2
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L526:
	ldrh	r0, [r4, #0x26]
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x26]
	ldrh	r0, [r6]
	sub	r0, r0, #0x8
	strh	r0, [r6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x10
	neg	r1, r1
	cmp	r0, r1
	bgt	.L524	@cond_branch
	ldrb	r0, [r7, #0x3]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r7, #0x3]
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4, #0x5]
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x0
	strb	r0, [r1]
	add	r2, r4, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L524
.L528:
	ldrh	r0, [r4, #0x26]
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x26]
	ldrh	r0, [r6]
	sub	r0, r0, #0x8
	strh	r0, [r6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x58
	neg	r1, r1
	cmp	r0, r1
	bgt	.L524	@cond_branch
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L535:
	mov	r0, #0x0
	b	.L534
.L524:
	mov	r0, #0x1
.L534:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe136:
	.size	 WarpOutObjectEventUpwards,.Lfe136-WarpOutObjectEventUpwards
	.section .rodata
	.align	2, 0
	.type	 sEscapeRopeWarpInEffectFuncs,object
sEscapeRopeWarpInEffectFuncs:
	.word	EscapeRopeWarpInEffect_Init
	.word	EscapeRopeWarpInEffect_Spin
	.size	 sEscapeRopeWarpInEffectFuncs,8
.text
	.align	2, 0
	.type	 WarpInObjectEventDownwards,function
	.thumb_func
WarpInObjectEventDownwards:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r6, r0, #0
	add	r5, r1, #0
	add	r7, r2, #0
	mov	r9, r3
	ldr	r0, [sp, #0x20]
	mov	sl, r0
	ldrb	r0, [r6, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L551
	add	r4, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L541	@cond_branch
	cmp	r0, #0x1
	bgt	.L548	@cond_branch
	cmp	r0, #0
	beq	.L540	@cond_branch
	b	.L539
.L552:
	.align	2, 0
.L551:
	.word	gSprites
.L548:
	cmp	r0, #0x2
	beq	.L543	@cond_branch
	cmp	r0, #0x3
	beq	.L550	@cond_branch
	b	.L539
.L540:
	bl	CameraObjectReset2
	mov	r2, #0x58
	neg	r2, r2
	add	r0, r2, #0
	strh	r0, [r7]
	ldrh	r0, [r4, #0x26]
	sub	r0, r0, #0x58
	mov	r3, #0x0
	strh	r0, [r4, #0x26]
	ldrb	r0, [r4, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	mov	r1, r9
	strh	r0, [r1]
	mov	r2, #0x43
	add	r2, r2, r4
	mov	r8, r2
	ldrb	r0, [r2]
	mov	r1, sl
	strh	r0, [r1]
	mov	r2, #0x42
	add	r2, r2, r4
	mov	ip, r2
	ldrb	r0, [r2]
	lsr	r0, r0, #0x6
	ldr	r1, [sp, #0x24]
	strh	r0, [r1]
	ldrb	r0, [r6, #0x3]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r6, #0x3]
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4, #0x5]
	mov	r2, r8
	strb	r3, [r2]
	mov	r0, ip
	ldrb	r1, [r0]
	mov	r0, #0x3f
	and	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L541:
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x26]
	ldrh	r0, [r7]
	add	r0, r0, #0x4
	strh	r0, [r7]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x10
	neg	r1, r1
	cmp	r0, r1
	blt	.L539	@cond_branch
	mov	r0, #0x3
	mov	r2, r9
	ldrb	r1, [r2]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	mov	r1, sl
	ldrh	r0, [r1]
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	ldr	r2, [sp, #0x24]
	ldrb	r1, [r2]
	add	r3, r4, #0
	add	r3, r3, #0x42
	lsl	r1, r1, #0x6
	ldrb	r2, [r3]
	mov	r0, #0x3f
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L539
.L543:
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x26]
	ldrh	r0, [r7]
	add	r0, r0, #0x4
	strh	r0, [r7]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	blt	.L539	@cond_branch
	mov	r0, #0x1e
	bl	PlaySE
	bl	CameraObjectReset1
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L550:
	mov	r0, #0x0
	b	.L549
.L539:
	mov	r0, #0x1
.L549:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe137:
	.size	 WarpInObjectEventDownwards,.Lfe137-WarpInObjectEventDownwards
	.align	2, 0
	.type	 FieldCallback_EscapeRopeExit,function
	.thumb_func
FieldCallback_EscapeRopeExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r1, .L554
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r2, .L554+0x4
	ldr	r0, .L554+0x8
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1]
	mov	r2, #0x20
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldr	r0, .L554+0xc
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L555:
	.align	2, 0
.L554:
	.word	gFieldCallback
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	Task_EscapeRopeWarpIn
.Lfe138:
	.size	 FieldCallback_EscapeRopeExit,.Lfe138-FieldCallback_EscapeRopeExit
	.align	2, 0
	.type	 Task_EscapeRopeWarpIn,function
	.thumb_func
Task_EscapeRopeWarpIn:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L557
	ldr	r2, .L557+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L558:
	.align	2, 0
.L557:
	.word	sEscapeRopeWarpInEffectFuncs
	.word	gTasks
.Lfe139:
	.size	 Task_EscapeRopeWarpIn,.Lfe139-Task_EscapeRopeWarpIn
	.align	2, 0
	.type	 EscapeRopeWarpInEffect_Init,function
	.thumb_func
EscapeRopeWarpInEffect_Init:
	push	{r4, lr}
	add	r4, r0, #0
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L560	@cond_branch
	mov	r0, #0x28
	bl	PlaySE
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L560:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe140:
	.size	 EscapeRopeWarpInEffect_Init,.Lfe140-EscapeRopeWarpInEffect_Init
	.align	2, 0
	.type	 EscapeRopeWarpInEffect_Spin,function
	.thumb_func
EscapeRopeWarpInEffect_Spin:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r4, #0
	add	r5, r5, #0x8
	ldr	r0, .L567
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L567+0x4
	add	r6, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0xa
	add	r2, r4, #0
	add	r2, r2, #0xc
	add	r3, r4, #0
	add	r3, r3, #0xe
	add	r0, r5, #0
	add	r0, r0, #0x8
	str	r0, [sp]
	add	r0, r4, #0
	add	r0, r0, #0x12
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	bl	WarpInObjectEventDownwards
	add	r7, r0, #0
	ldrb	r1, [r6, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r6, #0x1]
	ldrh	r1, [r5, #0xc]
	mov	r2, #0xc
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x7
	bgt	.L562	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r5, #0xc]
	b	.L563
.L568:
	.align	2, 0
.L567:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L562:
	mov	r2, #0xe
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.L563	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r5, #0xc]
	add	r1, r4, #0
	add	r1, r1, #0x1a
	add	r2, r4, #0
	add	r2, r2, #0x1c
	add	r0, r6, #0
	bl	SpinObjectEvent
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	strh	r1, [r5, #0x10]
	mov	r2, #0xc
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x31
	ble	.L563	@cond_branch
	mov	r2, #0x1e
	ldrsh	r0, [r5, r2]
	cmp	r1, r0
	bne	.L563	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0xe]
.L563:
	cmp	r7, #0
	bne	.L566	@cond_branch
	mov	r0, #0x10
	ldrsh	r1, [r5, r0]
	mov	r2, #0x1e
	ldrsh	r0, [r5, r2]
	cmp	r1, r0
	bne	.L566	@cond_branch
	add	r0, r6, #0
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L566	@cond_branch
	ldrb	r1, [r6, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r6, #0x1]
	ldrb	r1, [r6, #0x3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r6, #0x3]
	bl	UnlockPlayerFieldControls
	bl	UnfreezeObjectEvents
	ldr	r0, .L569
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L566:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L570:
	.align	2, 0
.L569:
	.word	Task_EscapeRopeWarpIn
.Lfe141:
	.size	 EscapeRopeWarpInEffect_Spin,.Lfe141-EscapeRopeWarpInEffect_Spin
	.section .rodata
	.align	2, 0
	.type	 sTeleportEffectFuncs,object
sTeleportEffectFuncs:
	.word	TeleportFieldEffectTask1
	.word	TeleportFieldEffectTask2
	.word	TeleportFieldEffectTask3
	.word	TeleportFieldEffectTask4
	.size	 sTeleportEffectFuncs,16
.text
	.align	2, 0
	.globl	CreateTeleportFieldEffectTask
	.type	 CreateTeleportFieldEffectTask,function
	.thumb_func
CreateTeleportFieldEffectTask:
	push	{lr}
	ldr	r0, .L572
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L573:
	.align	2, 0
.L572:
	.word	Task_DoTeleportFieldEffect
.Lfe142:
	.size	 CreateTeleportFieldEffectTask,.Lfe142-CreateTeleportFieldEffectTask
	.align	2, 0
	.type	 Task_DoTeleportFieldEffect,function
	.thumb_func
Task_DoTeleportFieldEffect:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L575
	ldr	r2, .L575+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L576:
	.align	2, 0
.L575:
	.word	sTeleportEffectFuncs
	.word	gTasks
.Lfe143:
	.size	 Task_DoTeleportFieldEffect,.Lfe143-Task_DoTeleportFieldEffect
	.align	2, 0
	.type	 TeleportFieldEffectTask1,function
	.thumb_func
TeleportFieldEffectTask1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	CameraObjectReset2
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe144:
	.size	 TeleportFieldEffectTask1,.Lfe144-TeleportFieldEffectTask1
	.section .rodata
.LC273:
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x1
.text
	.align	2, 0
	.type	 TeleportFieldEffectTask2,function
	.thumb_func
TeleportFieldEffectTask2:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L582
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	ldr	r0, .L582+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L582+0x8
	add	r5, r0, r1
	ldrh	r1, [r4, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L580	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L579	@cond_branch
.L580:
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r5, #0
	bl	ObjectEventTurn
	mov	r0, #0x8
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
.L579:
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7
	ble	.L581	@cond_branch
	mov	r2, #0x26
	ldrsh	r1, [r4, r2]
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r1, r0
	bne	.L581	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x4
	strh	r0, [r4, #0xa]
	mov	r0, #0x8
	strh	r0, [r4, #0xc]
	mov	r0, #0x1
	strh	r0, [r4, #0xe]
	mov	r0, #0x27
	bl	PlaySE
.L581:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L583:
	.align	2, 0
.L582:
	.word	.LC273
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe145:
	.size	 TeleportFieldEffectTask2,.Lfe145-TeleportFieldEffectTask2
	.align	2, 0
	.type	 TeleportFieldEffectTask3,function
	.thumb_func
TeleportFieldEffectTask3:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L589
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	ldr	r2, .L589+0x4
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L589+0x8
	add	r3, r0, r1
	ldrb	r1, [r2, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L589+0xc
	add	r5, r0, r1
	ldrh	r0, [r4, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L585	@cond_branch
	mov	r0, #0x4
	strh	r0, [r4, #0xa]
	ldrb	r0, [r3, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r3, #0
	bl	ObjectEventTurn
.L585:
	ldrh	r0, [r5, #0x22]
	ldrh	r1, [r4, #0xe]
	sub	r0, r0, r1
	strh	r0, [r5, #0x22]
	ldrh	r1, [r4, #0xe]
	ldrh	r2, [r4, #0x10]
	add	r0, r1, r2
	strh	r0, [r4, #0x10]
	ldrh	r0, [r4, #0xc]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L586	@cond_branch
	mov	r0, #0x4
	strh	r0, [r4, #0xc]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	bgt	.L586	@cond_branch
	lsl	r0, r1, #0x1
	strh	r0, [r4, #0xe]
.L586:
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x8
	ble	.L587	@cond_branch
	ldrb	r1, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r5, #0x5]
	add	r2, r5, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0xc0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L587	@cond_branch
	mov	r0, #0x3f
	and	r0, r0, r1
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2]
.L587:
	mov	r2, #0x10
	ldrsh	r0, [r4, r2]
	cmp	r0, #0xa7
	ble	.L588	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
.L588:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L590:
	.align	2, 0
.L589:
	.word	.LC273
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe146:
	.size	 TeleportFieldEffectTask3,.Lfe146-TeleportFieldEffectTask3
	.align	2, 0
	.type	 TeleportFieldEffectTask4,function
	.thumb_func
TeleportFieldEffectTask4:
	push	{lr}
	ldr	r0, .L594
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L592	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L592	@cond_branch
	bl	SetWarpDestinationToLastHealLocation
	bl	WarpIntoMap
	ldr	r0, .L594+0x4
	bl	SetMainCallback2
	ldr	r1, .L594+0x8
	ldr	r0, .L594+0xc
	str	r0, [r1]
	ldr	r0, .L594+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L592:
	pop	{r0}
	bx	r0
.L595:
	.align	2, 0
.L594:
	.word	gPaletteFade
	.word	CB2_LoadMap
	.word	gFieldCallback
	.word	FieldCallback_TeleportIn
	.word	Task_DoTeleportFieldEffect
.Lfe147:
	.size	 TeleportFieldEffectTask4,.Lfe147-TeleportFieldEffectTask4
	.section .rodata
	.align	2, 0
	.type	 sTeleportInEffectFuncs,object
sTeleportInEffectFuncs:
	.word	TeleportInFieldEffectTask1
	.word	TeleportInFieldEffectTask2
	.word	TeleportInFieldEffectTask3
	.size	 sTeleportInEffectFuncs,12
.text
	.align	2, 0
	.type	 FieldCallback_TeleportIn,function
	.thumb_func
FieldCallback_TeleportIn:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r1, .L597
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r2, .L597+0x4
	ldr	r0, .L597+0x8
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1]
	mov	r2, #0x20
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	bl	CameraObjectReset2
	ldr	r0, .L597+0xc
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L598:
	.align	2, 0
.L597:
	.word	gFieldCallback
	.word	gObjectEvents
	.word	gPlayerAvatar
	.word	Task_DoTeleportInFieldEffect
.Lfe148:
	.size	 FieldCallback_TeleportIn,.Lfe148-FieldCallback_TeleportIn
	.align	2, 0
	.type	 Task_DoTeleportInFieldEffect,function
	.thumb_func
Task_DoTeleportInFieldEffect:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L600
	ldr	r2, .L600+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L601:
	.align	2, 0
.L600:
	.word	sTeleportInEffectFuncs
	.word	gTasks
.Lfe149:
	.size	 Task_DoTeleportInFieldEffect,.Lfe149-Task_DoTeleportInFieldEffect
	.align	2, 0
	.type	 TeleportInFieldEffectTask1,function
	.thumb_func
TeleportInFieldEffectTask1:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L603	@cond_branch
	ldr	r5, .L604
	ldrb	r0, [r5, #0x4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L604+0x4
	add	r2, r2, r0
	add	r0, r2, #0
	add	r0, r0, #0x29
	mov	r4, #0x0
	ldrsb	r4, [r0, r4]
	lsl	r0, r4, #0x11
	neg	r0, r0
	ldrh	r1, [r2, #0x22]
	ldr	r3, .L604+0x8
	add	r1, r1, r4
	ldrh	r3, [r3]
	add	r1, r1, r3
	asr	r0, r0, #0x10
	add	r0, r0, r1
	neg	r0, r0
	strh	r0, [r2, #0x26]
	ldr	r3, .L604+0xc
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r3, [r1, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r3
	strb	r0, [r1, #0x1]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	mov	r0, #0x8
	strh	r0, [r6, #0xa]
	mov	r0, #0x1
	strh	r0, [r6, #0xc]
	add	r2, r2, #0x42
	ldrb	r0, [r2]
	lsr	r0, r0, #0x6
	strh	r0, [r6, #0x24]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0x26]
	mov	r0, #0x27
	bl	PlaySE
.L603:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L605:
	.align	2, 0
.L604:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gSpriteCoordOffsetY
	.word	gObjectEvents
.Lfe150:
	.size	 TeleportInFieldEffectTask1,.Lfe150-TeleportInFieldEffectTask1
	.align	2, 0
	.type	 TeleportInFieldEffectTask2,function
	.thumb_func
TeleportInFieldEffectTask2:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L614
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	ldr	r2, .L614+0x4
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L614+0x8
	add	r6, r0, r1
	ldrb	r1, [r2, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L614+0xc
	add	r5, r0, r1
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r5, #0x26]
	add	r0, r0, r1
	strh	r0, [r5, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x8
	neg	r1, r1
	cmp	r0, r1
	blt	.L607	@cond_branch
	ldrh	r1, [r4, #0x22]
	mov	r2, #0x22
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L609	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r4, #0x22]
	ldrb	r0, [r6]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r6]
	ldrh	r1, [r4, #0x24]
	add	r3, r5, #0
	add	r3, r3, #0x42
	lsl	r1, r1, #0x6
	ldrb	r2, [r3]
	mov	r0, #0x3f
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	b	.L609
.L615:
	.align	2, 0
.L614:
	.word	.LC273
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.L607:
	ldrb	r1, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r5, #0x5]
	add	r2, r5, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0xc0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L609	@cond_branch
	mov	r0, #0x3f
	and	r0, r0, r1
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2]
.L609:
	ldrh	r2, [r5, #0x26]
	mov	r3, #0x26
	ldrsh	r1, [r5, r3]
	mov	r0, #0x30
	neg	r0, r0
	cmp	r1, r0
	blt	.L611	@cond_branch
	ldrh	r1, [r4, #0xa]
	mov	r3, #0xa
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	ble	.L611	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L611	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0xa]
.L611:
	ldrh	r0, [r4, #0xc]
	sub	r0, r0, #0x1
	mov	r7, #0x0
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L612	@cond_branch
	mov	r0, #0x4
	strh	r0, [r4, #0xc]
	ldrb	r0, [r6, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r6, #0
	bl	ObjectEventTurn
.L612:
	mov	r1, #0x26
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L613	@cond_branch
	strh	r7, [r5, #0x26]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	strh	r0, [r4, #0xa]
	strh	r7, [r4, #0xc]
.L613:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe151:
	.size	 TeleportInFieldEffectTask2,.Lfe151-TeleportInFieldEffectTask2
	.align	2, 0
	.type	 TeleportInFieldEffectTask3,function
	.thumb_func
TeleportInFieldEffectTask3:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L619
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	ldr	r0, .L619+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L619+0x8
	add	r5, r0, r1
	ldrh	r0, [r4, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L617	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r5, #0
	bl	ObjectEventTurn
	mov	r0, #0x8
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	ble	.L617	@cond_branch
	mov	r0, #0x24
	ldrsh	r1, [r4, r0]
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r1, r0
	bne	.L617	@cond_branch
	bl	UnlockPlayerFieldControls
	bl	CameraObjectReset1
	bl	UnfreezeObjectEvents
	ldr	r0, .L619+0xc
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L617:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L620:
	.align	2, 0
.L619:
	.word	.LC273
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	Task_DoTeleportInFieldEffect
.Lfe152:
	.size	 TeleportInFieldEffectTask3,.Lfe152-TeleportInFieldEffectTask3
	.section .rodata
	.align	2, 0
	.type	 sShowMonOutdoorsEffectFuncs,object
sShowMonOutdoorsEffectFuncs:
	.word	ShowMonEffect_Outdoors_1
	.word	ShowMonEffect_Outdoors_2
	.word	ShowMonEffect_Outdoors_3
	.word	ShowMonEffect_Outdoors_4
	.word	ShowMonEffect_Outdoors_5
	.word	ShowMonEffect_Outdoors_6
	.word	ShowMonEffect_Outdoors_7
	.size	 sShowMonOutdoorsEffectFuncs,28
.text
	.align	2, 0
	.globl	FldEff_FieldMoveShowMon
	.type	 FldEff_FieldMoveShowMon,function
	.thumb_func
FldEff_FieldMoveShowMon:
	push	{r4, lr}
	bl	GetCurrentMapType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsMapTypeOutdoors
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L622	@cond_branch
	ldr	r0, .L625
	b	.L624
.L626:
	.align	2, 0
.L625:
	.word	Task_ShowMon_Outdoors
.L622:
	ldr	r0, .L627
.L624:
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L627+0x4
	ldr	r0, [r2]
	ldr	r1, [r2, #0x4]
	ldr	r2, [r2, #0x8]
	bl	InitFieldMoveMonSprite
	ldr	r2, .L627+0x8
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x26]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L628:
	.align	2, 0
.L627:
	.word	Task_ShowMon_Indoors
	.word	gFieldEffectArguments
	.word	gTasks
.Lfe153:
	.size	 FldEff_FieldMoveShowMon,.Lfe153-FldEff_FieldMoveShowMon
	.align	2, 0
	.globl	FldEff_FieldMoveShowMonInit
	.type	 FldEff_FieldMoveShowMonInit,function
	.thumb_func
FldEff_FieldMoveShowMonInit:
	push	{r4, r5, r6, lr}
	ldr	r5, .L630
	ldr	r0, [r5]
	mov	r6, #0x80
	lsl	r6, r6, #0x18
	and	r6, r6, r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L630+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	str	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetMonData
	str	r0, [r5, #0x4]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x8]
	ldr	r0, [r5]
	orr	r0, r0, r6
	str	r0, [r5]
	mov	r0, #0x6
	bl	FieldEffectStart
	mov	r0, #0x3b
	bl	FieldEffectActiveListRemove
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L631:
	.align	2, 0
.L630:
	.word	gFieldEffectArguments
	.word	gPlayerParty
.Lfe154:
	.size	 FldEff_FieldMoveShowMonInit,.Lfe154-FldEff_FieldMoveShowMonInit
	.align	2, 0
	.type	 Task_ShowMon_Outdoors,function
	.thumb_func
Task_ShowMon_Outdoors:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L633
	ldr	r2, .L633+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L634:
	.align	2, 0
.L633:
	.word	sShowMonOutdoorsEffectFuncs
	.word	gTasks
.Lfe155:
	.size	 Task_ShowMon_Outdoors,.Lfe155-Task_ShowMon_Outdoors
	.align	2, 0
	.type	 ShowMonEffect_Outdoors_1,function
	.thumb_func
ShowMonEffect_Outdoors_1:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x48
	bl	GetGpuReg
	strh	r0, [r4, #0x1e]
	mov	r0, #0x4a
	bl	GetGpuReg
	strh	r0, [r4, #0x20]
	add	r0, r4, #0
	add	r0, r0, #0x22
	ldr	r1, .L636
	ldr	r1, [r1, #0xc]
	bl	StoreWordInTwoHalfwords
	ldr	r1, .L636+0x4
	strh	r1, [r4, #0xa]
	ldr	r0, .L636+0x8
	strh	r0, [r4, #0xc]
	mov	r0, #0x3f
	strh	r0, [r4, #0xe]
	mov	r0, #0x3e
	strh	r0, [r4, #0x10]
	mov	r0, #0x40
	bl	SetGpuReg
	ldrh	r1, [r4, #0xc]
	mov	r0, #0x44
	bl	SetGpuReg
	ldrh	r1, [r4, #0xe]
	mov	r0, #0x48
	bl	SetGpuReg
	ldrh	r1, [r4, #0x10]
	mov	r0, #0x4a
	bl	SetGpuReg
	ldr	r0, .L636+0xc
	bl	SetVBlankCallback
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L637:
	.align	2, 0
.L636:
	.word	gMain
	.word	0xf0f1
	.word	0x5051
	.word	VBlankCB_ShowMonEffect_Outdoors
.Lfe156:
	.size	 ShowMonEffect_Outdoors_1,.Lfe156-ShowMonEffect_Outdoors_1
	.align	2, 0
	.type	 ShowMonEffect_Outdoors_2,function
	.thumb_func
ShowMonEffect_Outdoors_2:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x4
	mov	r8, r0
	mov	r0, #0x8
	bl	GetGpuReg
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x12
	lsl	r4, r4, #0x1e
	lsr	r4, r4, #0x10
	mov	r0, #0x8
	bl	GetGpuReg
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x18
	lsl	r5, r5, #0x1b
	lsr	r5, r5, #0x10
	ldr	r0, .L639
	mov	r6, #0xc0
	lsl	r6, r6, #0x13
	add	r4, r4, r6
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r4, #0
	bl	CpuSet
	mov	r0, #0x0
	str	r0, [sp]
	add	r6, r5, r6
	ldr	r2, .L639+0x4
	mov	r0, sp
	add	r1, r6, #0
	bl	CpuSet
	ldr	r0, .L639+0x8
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, r5, #0
	bl	LoadFieldMoveStreaksTilemapToVram
	mov	r1, r8
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L640:
	.align	2, 0
.L639:
	.word	sFieldMoveStreaksOutdoors_Gfx
	.word	0x5000200
	.word	sFieldMoveStreaksOutdoors_Pal
.Lfe157:
	.size	 ShowMonEffect_Outdoors_2,.Lfe157-ShowMonEffect_Outdoors_2
	.align	2, 0
	.type	 ShowMonEffect_Outdoors_3,function
	.thumb_func
ShowMonEffect_Outdoors_3:
	push	{r4, r5, r6, r7, lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x12]
	sub	r0, r0, #0x10
	strh	r0, [r3, #0x12]
	ldrh	r6, [r3, #0xa]
	ldrh	r2, [r3, #0xc]
	mov	r7, #0xff
	lsr	r1, r6, #0x8
	sub	r1, r1, #0x10
	lsl	r1, r1, #0x10
	lsr	r0, r2, #0x8
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r7, #0
	and	r0, r0, r2
	add	r5, r0, #0x2
	lsr	r2, r1, #0x10
	cmp	r1, #0
	bge	.L642	@cond_branch
	mov	r2, #0x0
.L642:
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x27
	bgt	.L643	@cond_branch
	mov	r4, #0x28
.L643:
	cmp	r5, #0x78
	ble	.L644	@cond_branch
	mov	r5, #0x78
.L644:
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	lsl	r1, r2, #0x8
	add	r0, r7, #0
	and	r0, r0, r6
	orr	r1, r1, r0
	strh	r1, [r3, #0xa]
	lsl	r0, r4, #0x10
	asr	r4, r0, #0x10
	lsl	r0, r4, #0x8
	add	r1, r5, #0
	orr	r0, r0, r1
	strh	r0, [r3, #0xc]
	cmp	r2, #0
	bne	.L645	@cond_branch
	cmp	r4, #0x28
	bne	.L645	@cond_branch
	cmp	r1, #0x78
	bne	.L645	@cond_branch
	ldr	r2, .L646
	mov	r0, #0x26
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L646+0x4
	str	r1, [r0]
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
.L645:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L647:
	.align	2, 0
.L646:
	.word	gSprites
	.word	SpriteCB_FieldMoveMonSlideOnscreen
.Lfe158:
	.size	 ShowMonEffect_Outdoors_3,.Lfe158-ShowMonEffect_Outdoors_3
	.align	2, 0
	.type	 ShowMonEffect_Outdoors_4,function
	.thumb_func
ShowMonEffect_Outdoors_4:
	push	{lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x12]
	sub	r0, r0, #0x10
	strh	r0, [r3, #0x12]
	ldr	r2, .L650
	mov	r0, #0x26
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x3c
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.L649	@cond_branch
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
.L649:
	pop	{r0}
	bx	r0
.L651:
	.align	2, 0
.L650:
	.word	gSprites
.Lfe159:
	.size	 ShowMonEffect_Outdoors_4,.Lfe159-ShowMonEffect_Outdoors_4
	.align	2, 0
	.type	 ShowMonEffect_Outdoors_5,function
	.thumb_func
ShowMonEffect_Outdoors_5:
	push	{r4, lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x12]
	sub	r0, r0, #0x10
	strh	r0, [r3, #0x12]
	ldrh	r2, [r3, #0xc]
	lsl	r1, r2, #0x10
	mov	r0, #0xff
	asr	r1, r1, #0x18
	add	r1, r1, #0x6
	lsl	r1, r1, #0x10
	and	r0, r0, r2
	sub	r0, r0, #0x6
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsr	r4, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x50
	ble	.L653	@cond_branch
	mov	r4, #0x50
.L653:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x50
	bgt	.L654	@cond_branch
	mov	r2, #0x51
.L654:
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x8
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	orr	r1, r1, r2
	strh	r1, [r3, #0xc]
	cmp	r0, #0x50
	bne	.L655	@cond_branch
	cmp	r2, #0x51
	bne	.L655	@cond_branch
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
.L655:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe160:
	.size	 ShowMonEffect_Outdoors_5,.Lfe160-ShowMonEffect_Outdoors_5
	.align	2, 0
	.type	 ShowMonEffect_Outdoors_6,function
	.thumb_func
ShowMonEffect_Outdoors_6:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetGpuReg
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x18
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	add	r1, r1, r0
	ldr	r2, .L657
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0xf1
	strh	r0, [r4, #0xa]
	mov	r0, #0xa1
	strh	r0, [r4, #0xc]
	ldrh	r0, [r4, #0x1e]
	strh	r0, [r4, #0xe]
	ldrh	r0, [r4, #0x20]
	strh	r0, [r4, #0x10]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L658:
	.align	2, 0
.L657:
	.word	0x5000200
.Lfe161:
	.size	 ShowMonEffect_Outdoors_6,.Lfe161-ShowMonEffect_Outdoors_6
	.align	2, 0
	.type	 ShowMonEffect_Outdoors_7,function
	.thumb_func
ShowMonEffect_Outdoors_7:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r0, r0, #0x22
	mov	r1, sp
	bl	LoadWordFromTwoHalfwords
	ldr	r0, [sp]
	bl	SetVBlankCallback
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	bl	Menu_LoadStdPal
	mov	r0, #0x26
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L660
	add	r0, r0, r1
	ldrh	r1, [r4, #0x26]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	FreeResourcesAndDestroySprite
	mov	r0, #0x6
	bl	FieldEffectActiveListRemove
	ldr	r0, .L660+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L661:
	.align	2, 0
.L660:
	.word	gSprites
	.word	Task_ShowMon_Outdoors
.Lfe162:
	.size	 ShowMonEffect_Outdoors_7,.Lfe162-ShowMonEffect_Outdoors_7
	.align	2, 0
	.type	 VBlankCB_ShowMonEffect_Outdoors,function
	.thumb_func
VBlankCB_ShowMonEffect_Outdoors:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L663
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L663+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	add	r0, r0, #0x22
	mov	r1, sp
	bl	LoadWordFromTwoHalfwords
	ldr	r0, [sp]
	bl	_call_via_r0
	ldrh	r1, [r4, #0xa]
	mov	r0, #0x40
	bl	SetGpuReg
	ldrh	r1, [r4, #0xc]
	mov	r0, #0x44
	bl	SetGpuReg
	ldrh	r1, [r4, #0xe]
	mov	r0, #0x48
	bl	SetGpuReg
	ldrh	r1, [r4, #0x10]
	mov	r0, #0x4a
	bl	SetGpuReg
	ldrh	r1, [r4, #0x12]
	mov	r0, #0x10
	bl	SetGpuReg
	ldrh	r1, [r4, #0x14]
	mov	r0, #0x12
	bl	SetGpuReg
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L664:
	.align	2, 0
.L663:
	.word	Task_ShowMon_Outdoors
	.word	gTasks
.Lfe163:
	.size	 VBlankCB_ShowMonEffect_Outdoors,.Lfe163-VBlankCB_ShowMonEffect_Outdoors
	.align	2, 0
	.type	 LoadFieldMoveStreaksTilemapToVram,function
	.thumb_func
LoadFieldMoveStreaksTilemapToVram:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L671
	add	r2, r0, r1
	mov	r1, #0x0
	ldr	r5, .L671+0x4
	mov	r0, #0xf0
	lsl	r0, r0, #0x8
	add	r4, r0, #0
	ldr	r3, .L671+0x8
.L669:
	lsl	r0, r1, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	orr	r0, r0, r4
	strh	r0, [r2]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r2, r2, #0x2
	cmp	r1, r3
	bls	.L669	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L672:
	.align	2, 0
.L671:
	.word	0x6000140
	.word	sFieldMoveStreaksOutdoors_Tilemap
	.word	0x13f
.Lfe164:
	.size	 LoadFieldMoveStreaksTilemapToVram,.Lfe164-LoadFieldMoveStreaksTilemapToVram
	.section .rodata
	.align	2, 0
	.type	 sShowMonIndoorsEffectFuncs,object
sShowMonIndoorsEffectFuncs:
	.word	ShowMonEffect_Indoors_1
	.word	ShowMonEffect_Indoors_2
	.word	ShowMonEffect_Indoors_3
	.word	ShowMonEffect_Indoors_4
	.word	ShowMonEffect_Indoors_5
	.word	ShowMonEffect_Indoors_6
	.word	ShowMonEffect_Indoors_7
	.size	 sShowMonIndoorsEffectFuncs,28
.text
	.align	2, 0
	.type	 Task_ShowMon_Indoors,function
	.thumb_func
Task_ShowMon_Indoors:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L674
	ldr	r2, .L674+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L675:
	.align	2, 0
.L674:
	.word	sShowMonIndoorsEffectFuncs
	.word	gTasks
.Lfe165:
	.size	 Task_ShowMon_Indoors,.Lfe165-Task_ShowMon_Indoors
	.align	2, 0
	.type	 ShowMonEffect_Indoors_1,function
	.thumb_func
ShowMonEffect_Indoors_1:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0xa]
	mov	r0, #0x10
	bl	SetGpuReg
	ldrh	r1, [r4, #0xc]
	mov	r0, #0x12
	bl	SetGpuReg
	add	r0, r4, #0
	add	r0, r0, #0x22
	ldr	r1, .L677
	ldr	r1, [r1, #0xc]
	bl	StoreWordInTwoHalfwords
	ldr	r0, .L677+0x4
	bl	SetVBlankCallback
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L678:
	.align	2, 0
.L677:
	.word	gMain
	.word	VBlankCB_ShowMonEffect_Indoors
.Lfe166:
	.size	 ShowMonEffect_Indoors_1,.Lfe166-ShowMonEffect_Indoors_1
	.align	2, 0
	.type	 ShowMonEffect_Indoors_2,function
	.thumb_func
ShowMonEffect_Indoors_2:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x4
	mov	r9, r0
	mov	r0, #0x8
	bl	GetGpuReg
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x12
	lsl	r5, r5, #0x1e
	lsr	r5, r5, #0x10
	mov	r0, #0x8
	bl	GetGpuReg
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x18
	lsl	r4, r4, #0x1b
	lsr	r4, r4, #0x10
	mov	r0, #0x0
	mov	r8, r0
	mov	r1, r9
	strh	r4, [r1, #0x20]
	ldr	r0, .L680
	mov	r6, #0xc0
	lsl	r6, r6, #0x13
	add	r5, r5, r6
	add	r1, r5, #0
	mov	r2, #0x40
	bl	CpuSet
	mov	r0, r8
	str	r0, [sp]
	add	r4, r4, r6
	ldr	r2, .L680+0x4
	mov	r0, sp
	add	r1, r4, #0
	bl	CpuSet
	ldr	r0, .L680+0x8
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r1, r9
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L681:
	.align	2, 0
.L680:
	.word	sFieldMoveStreaksIndoors_Gfx
	.word	0x5000200
	.word	sFieldMoveStreaksIndoors_Pal
.Lfe167:
	.size	 ShowMonEffect_Indoors_2,.Lfe167-ShowMonEffect_Indoors_2
	.align	2, 0
	.type	 ShowMonEffect_Indoors_3,function
	.thumb_func
ShowMonEffect_Indoors_3:
	push	{r4, lr}
	add	r4, r0, #0
	bl	SlideIndoorBannerOnscreen
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L683	@cond_branch
	mov	r0, #0x48
	bl	GetGpuReg
	strh	r0, [r4, #0x12]
	mov	r1, #0xff
	and	r1, r1, r0
	mov	r2, #0x88
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	orr	r1, r1, r0
	mov	r0, #0x48
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0xf0
	bl	SetGpuReg
	ldr	r1, .L684
	mov	r0, #0x46
	bl	SetGpuReg
	ldr	r2, .L684+0x4
	mov	r0, #0x26
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L684+0x8
	str	r1, [r0]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L683:
	add	r0, r4, #0
	bl	AnimateIndoorShowMonBg
	pop	{r4}
	pop	{r0}
	bx	r0
.L685:
	.align	2, 0
.L684:
	.word	0x2878
	.word	gSprites
	.word	SpriteCB_FieldMoveMonSlideOnscreen
.Lfe168:
	.size	 ShowMonEffect_Indoors_3,.Lfe168-ShowMonEffect_Indoors_3
	.align	2, 0
	.type	 ShowMonEffect_Indoors_4,function
	.thumb_func
ShowMonEffect_Indoors_4:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AnimateIndoorShowMonBg
	ldr	r2, .L688
	mov	r0, #0x26
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x3c
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.L687	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L687:
	pop	{r4}
	pop	{r0}
	bx	r0
.L689:
	.align	2, 0
.L688:
	.word	gSprites
.Lfe169:
	.size	 ShowMonEffect_Indoors_4,.Lfe169-ShowMonEffect_Indoors_4
	.align	2, 0
	.type	 ShowMonEffect_Indoors_5,function
	.thumb_func
ShowMonEffect_Indoors_5:
	push	{r4, r5, lr}
	add	r4, r0, #0
	bl	AnimateIndoorShowMonBg
	ldrh	r1, [r4, #0xa]
	mov	r0, #0x7
	and	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r4, #0xe]
	strh	r1, [r4, #0x10]
	ldr	r5, .L691
	mov	r0, #0x42
	add	r1, r5, #0
	bl	SetGpuReg
	mov	r0, #0x46
	add	r1, r5, #0
	bl	SetGpuReg
	ldrh	r1, [r4, #0x12]
	mov	r0, #0x48
	bl	SetGpuReg
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L692:
	.align	2, 0
.L691:
	.word	0xffff
.Lfe170:
	.size	 ShowMonEffect_Indoors_5,.Lfe170-ShowMonEffect_Indoors_5
	.align	2, 0
	.type	 ShowMonEffect_Indoors_6,function
	.thumb_func
ShowMonEffect_Indoors_6:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AnimateIndoorShowMonBg
	add	r0, r4, #0
	bl	SlideIndoorBannerOffscreen
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L694	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L694:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe171:
	.size	 ShowMonEffect_Indoors_6,.Lfe171-ShowMonEffect_Indoors_6
	.align	2, 0
	.type	 ShowMonEffect_Indoors_7,function
	.thumb_func
ShowMonEffect_Indoors_7:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	mov	r0, #0x8
	bl	GetGpuReg
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x18
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	add	r1, r1, r0
	ldr	r2, .L696
	mov	r0, sp
	bl	CpuSet
	add	r0, r4, #0
	add	r0, r0, #0x22
	add	r1, sp, #0x4
	bl	LoadWordFromTwoHalfwords
	ldr	r0, [sp, #0x4]
	bl	SetVBlankCallback
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	bl	Menu_LoadStdPal
	mov	r0, #0x26
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L696+0x4
	add	r0, r0, r1
	ldrh	r1, [r4, #0x26]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	FreeResourcesAndDestroySprite
	mov	r0, #0x6
	bl	FieldEffectActiveListRemove
	ldr	r0, .L696+0x8
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L697:
	.align	2, 0
.L696:
	.word	0x5000200
	.word	gSprites
	.word	Task_ShowMon_Indoors
.Lfe172:
	.size	 ShowMonEffect_Indoors_7,.Lfe172-ShowMonEffect_Indoors_7
	.align	2, 0
	.type	 VBlankCB_ShowMonEffect_Indoors,function
	.thumb_func
VBlankCB_ShowMonEffect_Indoors:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L699
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L699+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	add	r0, r0, #0x22
	mov	r1, sp
	bl	LoadWordFromTwoHalfwords
	ldr	r0, [sp]
	bl	_call_via_r0
	ldrh	r1, [r4, #0xa]
	mov	r0, #0x10
	bl	SetGpuReg
	ldrh	r1, [r4, #0xc]
	mov	r0, #0x12
	bl	SetGpuReg
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L700:
	.align	2, 0
.L699:
	.word	Task_ShowMon_Indoors
	.word	gTasks
.Lfe173:
	.size	 VBlankCB_ShowMonEffect_Indoors,.Lfe173-VBlankCB_ShowMonEffect_Indoors
	.align	2, 0
	.type	 AnimateIndoorShowMonBg,function
	.thumb_func
AnimateIndoorShowMonBg:
	ldrh	r1, [r0, #0xa]
	sub	r1, r1, #0x10
	strh	r1, [r0, #0xa]
	ldrh	r1, [r0, #0xe]
	add	r1, r1, #0x10
	strh	r1, [r0, #0xe]
	bx	lr
.Lfe174:
	.size	 AnimateIndoorShowMonBg,.Lfe174-AnimateIndoorShowMonBg
	.align	2, 0
	.type	 SlideIndoorBannerOnscreen,function
	.thumb_func
SlideIndoorBannerOnscreen:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r2, [r5, #0x10]
	mov	r1, #0x10
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1f
	ble	.L703	@cond_branch
	mov	r0, #0x1
	b	.L710
.L703:
	ldrh	r0, [r5, #0xe]
	lsl	r0, r0, #0x10
	asr	r3, r0, #0x13
	mov	r1, #0x1f
	and	r3, r3, r1
	mov	r4, #0x10
	ldrsh	r0, [r5, r4]
	cmp	r3, r0
	blt	.L704	@cond_branch
	mov	r0, #0x20
	sub	r3, r0, r3
	and	r3, r3, r1
	sub	r0, r0, r2
	mov	ip, r0
	mov	r7, ip
	and	r7, r7, r1
	mov	ip, r7
	ldrh	r0, [r5, #0x20]
	ldr	r1, .L711
	add	r1, r1, r0
	mov	r8, r1
	mov	r4, #0x0
	ldr	r7, .L711+0x4
	mov	sl, r7
	mov	r0, #0xf0
	lsl	r0, r0, #0x8
	mov	r9, r0
	add	r1, r3, #0x1
	mov	r0, #0x1f
	and	r1, r1, r0
	str	r1, [sp]
	mov	r6, ip
	add	r6, r6, #0x1
	and	r6, r6, r0
.L708:
	lsl	r1, r4, #0x5
	add	r2, r1, r3
	lsl	r2, r2, #0x1
	add	r2, r2, r8
	mov	r7, ip
	add	r0, r7, r1
	lsl	r0, r0, #0x1
	add	r0, r0, sl
	ldrh	r0, [r0]
	mov	r7, r9
	orr	r0, r0, r7
	strh	r0, [r2]
	ldr	r0, [sp]
	add	r2, r1, r0
	lsl	r2, r2, #0x1
	add	r2, r2, r8
	add	r1, r6, r1
	lsl	r1, r1, #0x1
	add	r1, r1, sl
	ldrh	r0, [r1]
	mov	r1, r9
	orr	r0, r0, r1
	strh	r0, [r2]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x9
	bls	.L708	@cond_branch
	ldrh	r0, [r5, #0x10]
	add	r0, r0, #0x2
	strh	r0, [r5, #0x10]
.L704:
	mov	r0, #0x0
.L710:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L712:
	.align	2, 0
.L711:
	.word	0x6000140
	.word	sFieldMoveStreaksIndoors_Tilemap
.Lfe175:
	.size	 SlideIndoorBannerOnscreen,.Lfe175-SlideIndoorBannerOnscreen
	.align	2, 0
	.type	 SlideIndoorBannerOffscreen,function
	.thumb_func
SlideIndoorBannerOffscreen:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	mov	r1, #0x10
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1f
	ble	.L714	@cond_branch
	mov	r0, #0x1
	b	.L721
.L714:
	ldrh	r0, [r5, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x13
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r1, #0x10
	ldrsh	r0, [r5, r1]
	cmp	r2, r0
	blt	.L715	@cond_branch
	ldrh	r0, [r5, #0xa]
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x13
	mov	r0, #0x1f
	and	r2, r2, r0
	ldrh	r0, [r5, #0x20]
	ldr	r1, .L722
	add	r6, r0, r1
	mov	r3, #0x0
	mov	r0, #0xf0
	lsl	r0, r0, #0x8
	add	r7, r0, #0
	add	r4, r2, #0x1
	mov	r0, #0x1f
	and	r4, r4, r0
.L719:
	lsl	r0, r3, #0x5
	add	r1, r0, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r6
	strh	r7, [r1]
	add	r0, r0, r4
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	strh	r7, [r0]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x9
	bls	.L719	@cond_branch
	ldrh	r0, [r5, #0x10]
	add	r0, r0, #0x2
	strh	r0, [r5, #0x10]
.L715:
	mov	r0, #0x0
.L721:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L723:
	.align	2, 0
.L722:
	.word	0x6000140
.Lfe176:
	.size	 SlideIndoorBannerOffscreen,.Lfe176-SlideIndoorBannerOffscreen
	.align	2, 0
	.type	 InitFieldMoveMonSprite,function
	.thumb_func
InitFieldMoveMonSprite:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	mov	r5, #0x80
	lsl	r5, r5, #0x18
	and	r5, r5, r6
	lsr	r5, r5, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L725
	and	r6, r6, r0
	lsl	r0, r6, #0x10
	lsr	r0, r0, #0x10
	mov	r3, #0xa0
	lsl	r3, r3, #0x1
	mov	r4, #0x50
	str	r4, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	bl	CreateMonSprite_FieldMove
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r1, .L725+0x4
	add	r2, r2, r1
	ldr	r1, .L725+0x8
	str	r1, [r2, #0x1c]
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	strb	r1, [r2, #0x5]
	strh	r6, [r2, #0x2e]
	strh	r5, [r2, #0x3a]
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L726:
	.align	2, 0
.L725:
	.word	0x7fffffff
	.word	gSprites
	.word	SpriteCallbackDummy
.Lfe177:
	.size	 InitFieldMoveMonSprite,.Lfe177-InitFieldMoveMonSprite
	.align	2, 0
	.type	 SpriteCB_FieldMoveMonSlideOnscreen,function
	.thumb_func
SpriteCB_FieldMoveMonSlideOnscreen:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x20]
	sub	r0, r0, #0x14
	strh	r0, [r1, #0x20]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x78
	bgt	.L728	@cond_branch
	mov	r0, #0x78
	strh	r0, [r1, #0x20]
	mov	r0, #0x1e
	strh	r0, [r1, #0x30]
	ldr	r0, .L731
	str	r0, [r1, #0x1c]
	mov	r2, #0x3a
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	beq	.L729	@cond_branch
	ldrh	r0, [r1, #0x2e]
	mov	r1, #0x0
	mov	r2, #0x7d
	mov	r3, #0xa
	bl	PlayCry_NormalNoDucking
	b	.L728
.L732:
	.align	2, 0
.L731:
	.word	SpriteCB_FieldMoveMonWaitAfterCry
.L729:
	ldrh	r0, [r1, #0x2e]
	mov	r1, #0x0
	bl	PlayCry_Normal
.L728:
	pop	{r0}
	bx	r0
.Lfe178:
	.size	 SpriteCB_FieldMoveMonSlideOnscreen,.Lfe178-SpriteCB_FieldMoveMonSlideOnscreen
	.align	2, 0
	.type	 SpriteCB_FieldMoveMonWaitAfterCry,function
	.thumb_func
SpriteCB_FieldMoveMonWaitAfterCry:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x30]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x30]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L734	@cond_branch
	ldr	r0, .L735
	str	r0, [r1, #0x1c]
.L734:
	pop	{r0}
	bx	r0
.L736:
	.align	2, 0
.L735:
	.word	SpriteCB_FieldMoveMonSlideOffscreen
.Lfe179:
	.size	 SpriteCB_FieldMoveMonWaitAfterCry,.Lfe179-SpriteCB_FieldMoveMonWaitAfterCry
	.align	2, 0
	.type	 SpriteCB_FieldMoveMonSlideOffscreen,function
	.thumb_func
SpriteCB_FieldMoveMonSlideOffscreen:
	push	{lr}
	add	r2, r0, #0
	ldrh	r3, [r2, #0x20]
	mov	r0, #0x20
	ldrsh	r1, [r2, r0]
	mov	r0, #0x40
	neg	r0, r0
	cmp	r1, r0
	bge	.L738	@cond_branch
	mov	r0, #0x1
	strh	r0, [r2, #0x3c]
	b	.L739
.L738:
	add	r0, r3, #0
	sub	r0, r0, #0x14
	strh	r0, [r2, #0x20]
.L739:
	pop	{r0}
	bx	r0
.Lfe180:
	.size	 SpriteCB_FieldMoveMonSlideOffscreen,.Lfe180-SpriteCB_FieldMoveMonSlideOffscreen
	.section .rodata
	.align	2, 0
	.type	 sUseSurfEffectFuncs,object
sUseSurfEffectFuncs:
	.word	UseSurfEffect_1
	.word	UseSurfEffect_2
	.word	UseSurfEffect_3
	.word	UseSurfEffect_4
	.word	UseSurfEffect_5
	.size	 sUseSurfEffectFuncs,20
.text
	.align	2, 0
	.globl	FldEff_UseSurf
	.type	 FldEff_UseSurf,function
	.thumb_func
FldEff_UseSurf:
	push	{r4, lr}
	ldr	r0, .L742
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L742+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L742+0x8
	ldr	r0, [r0]
	strh	r0, [r1, #0x26]
	bl	Overworld_ClearSavedMusic
	ldr	r4, .L742+0xc
	add	r0, r4, #0
	bl	Overworld_MusicCanOverrideMapMusic
	cmp	r0, #0
	beq	.L741	@cond_branch
	add	r0, r4, #0
	bl	Overworld_ChangeMusicTo
.L741:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L743:
	.align	2, 0
.L742:
	.word	Task_FldEffUseSurf
	.word	gTasks
	.word	gFieldEffectArguments
	.word	0x131
.Lfe181:
	.size	 FldEff_UseSurf,.Lfe181-FldEff_UseSurf
	.align	2, 0
	.type	 Task_FldEffUseSurf,function
	.thumb_func
Task_FldEffUseSurf:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L745
	ldr	r2, .L745+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L746:
	.align	2, 0
.L745:
	.word	sUseSurfEffectFuncs
	.word	gTasks
.Lfe182:
	.size	 Task_FldEffUseSurf,.Lfe182-Task_FldEffUseSurf
	.align	2, 0
	.type	 UseSurfEffect_1,function
	.thumb_func
UseSurfEffect_1:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r5, .L748
	mov	r0, #0x1
	strb	r0, [r5, #0x6]
	mov	r0, #0x8
	bl	SetPlayerAvatarStateMask
	add	r6, r4, #0
	add	r6, r6, #0xa
	mov	r0, #0xc
	add	r0, r0, r4
	mov	r8, r0
	add	r0, r6, #0
	mov	r1, r8
	bl	PlayerGetDestCoords
	ldr	r2, .L748+0x4
	ldrb	r1, [r5, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsr	r0, r0, #0x4
	add	r1, r6, #0
	mov	r2, r8
	bl	MoveCoords
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L749:
	.align	2, 0
.L748:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe183:
	.size	 UseSurfEffect_1,.Lfe183-UseSurfEffect_1
	.align	2, 0
	.type	 UseSurfEffect_2,function
	.thumb_func
UseSurfEffect_2:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L753
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L753+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L752	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L751	@cond_branch
.L752:
	bl	StartPlayerAvatarSummonMonForFieldMoveAnim
	add	r0, r4, #0
	mov	r1, #0x45
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L751:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L754:
	.align	2, 0
.L753:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe184:
	.size	 UseSurfEffect_2,.Lfe184-UseSurfEffect_2
	.align	2, 0
	.type	 UseSurfEffect_3,function
	.thumb_func
UseSurfEffect_3:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L757
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L757+0x4
	add	r0, r0, r1
	bl	ObjectEventCheckHeldMovementStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L756	@cond_branch
	ldr	r2, .L757+0x8
	mov	r1, #0x26
	ldrsh	r0, [r4, r1]
	mov	r1, #0x80
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2]
	mov	r0, #0x3b
	bl	FieldEffectStart
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L756:
	pop	{r4}
	pop	{r0}
	bx	r0
.L758:
	.align	2, 0
.L757:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gFieldEffectArguments
.Lfe185:
	.size	 UseSurfEffect_3,.Lfe185-UseSurfEffect_3
	.align	2, 0
	.type	 UseSurfEffect_4,function
	.thumb_func
UseSurfEffect_4:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r0, #0x6
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L760	@cond_branch
	ldr	r5, .L761
	ldrb	r0, [r5, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L761+0x4
	add	r4, r4, r0
	mov	r0, #0x2
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	bl	GetJumpSpecialMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldr	r1, .L761+0x8
	mov	r2, #0xa
	ldrsh	r0, [r6, r2]
	str	r0, [r1]
	mov	r2, #0xc
	ldrsh	r0, [r6, r2]
	str	r0, [r1, #0x4]
	ldrb	r0, [r5, #0x5]
	str	r0, [r1, #0x8]
	mov	r0, #0x8
	bl	FieldEffectStart
	strb	r0, [r4, #0x1a]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L760:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L762:
	.align	2, 0
.L761:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gFieldEffectArguments
.Lfe186:
	.size	 UseSurfEffect_4,.Lfe186-UseSurfEffect_4
	.align	2, 0
	.type	 UseSurfEffect_5,function
	.thumb_func
UseSurfEffect_5:
	push	{r4, r5, lr}
	ldr	r5, .L765
	ldrb	r1, [r5, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L765+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L764	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5, #0x6]
	ldrb	r1, [r5]
	mov	r0, #0xdf
	and	r0, r0, r1
	strb	r0, [r5]
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	ldrb	r0, [r4, #0x1a]
	mov	r1, #0x1
	bl	SetSurfBlob_BobState
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	mov	r0, #0x9
	bl	FieldEffectActiveListRemove
	ldr	r0, .L765+0x8
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x16
	bl	SetHelpContext
.L764:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L766:
	.align	2, 0
.L765:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	Task_FldEffUseSurf
.Lfe187:
	.size	 UseSurfEffect_5,.Lfe187-UseSurfEffect_5
	.section .rodata
	.align	2, 0
	.type	 sUseVsSeekerEffectFuncs,object
sUseVsSeekerEffectFuncs:
	.word	UseVsSeekerEffect_1
	.word	UseVsSeekerEffect_2
	.word	UseVsSeekerEffect_3
	.word	UseVsSeekerEffect_4
	.size	 sUseVsSeekerEffectFuncs,16
.text
	.align	2, 0
	.globl	FldEff_UseVsSeeker
	.type	 FldEff_UseVsSeeker,function
	.thumb_func
FldEff_UseVsSeeker:
	push	{lr}
	ldr	r0, .L769
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L768	@cond_branch
	mov	r0, #0x8
	mov	r1, #0x59
	bl	QuestLogRecordPlayerAvatarGfxTransitionWithDuration
.L768:
	ldr	r0, .L769+0x4
	mov	r1, #0xff
	bl	CreateTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L770:
	.align	2, 0
.L769:
	.word	gQuestLogState
	.word	Task_FldEffUseVsSeeker
.Lfe188:
	.size	 FldEff_UseVsSeeker,.Lfe188-FldEff_UseVsSeeker
	.align	2, 0
	.type	 Task_FldEffUseVsSeeker,function
	.thumb_func
Task_FldEffUseVsSeeker:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L772
	ldr	r2, .L772+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L773:
	.align	2, 0
.L772:
	.word	sUseVsSeekerEffectFuncs
	.word	gTasks
.Lfe189:
	.size	 Task_FldEffUseVsSeeker,.Lfe189-Task_FldEffUseVsSeeker
	.align	2, 0
	.type	 UseVsSeekerEffect_1,function
	.thumb_func
UseVsSeekerEffect_1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	ldr	r1, .L775
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L776:
	.align	2, 0
.L775:
	.word	gPlayerAvatar
.Lfe190:
	.size	 UseVsSeekerEffect_1,.Lfe190-UseVsSeekerEffect_1
	.align	2, 0
	.type	 UseVsSeekerEffect_2,function
	.thumb_func
UseVsSeekerEffect_2:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L780
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L780+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L779	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L778	@cond_branch
.L779:
	bl	StartPlayerAvatarVsSeekerAnim
	add	r0, r4, #0
	mov	r1, #0x45
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L778:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L781:
	.align	2, 0
.L780:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe191:
	.size	 UseVsSeekerEffect_2,.Lfe191-UseVsSeekerEffect_2
	.align	2, 0
	.type	 UseVsSeekerEffect_3,function
	.thumb_func
UseVsSeekerEffect_3:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r5, .L789
	ldrb	r1, [r5, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L789+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L783	@cond_branch
	ldrb	r1, [r5]
	mov	r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L784	@cond_branch
	mov	r0, #0x1
	b	.L788
.L790:
	.align	2, 0
.L789:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L784:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L786	@cond_branch
	mov	r0, #0x2
.L788:
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	b	.L785
.L786:
	mov	r0, #0x0
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
.L785:
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventForceSetHeldMovement
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L783:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe192:
	.size	 UseVsSeekerEffect_3,.Lfe192-UseVsSeekerEffect_3
	.align	2, 0
	.type	 UseVsSeekerEffect_4,function
	.thumb_func
UseVsSeekerEffect_4:
	push	{r4, lr}
	ldr	r4, .L793
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L793+0x4
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L792	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4, #0x6]
	mov	r0, #0x41
	bl	FieldEffectActiveListRemove
	ldr	r0, .L793+0x8
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L792:
	pop	{r4}
	pop	{r0}
	bx	r0
.L794:
	.align	2, 0
.L793:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	Task_FldEffUseVsSeeker
.Lfe193:
	.size	 UseVsSeekerEffect_4,.Lfe193-UseVsSeekerEffect_4
	.align	2, 0
	.globl	FldEff_NpcFlyOut
	.type	 FldEff_NpcFlyOut,function
	.thumb_func
FldEff_NpcFlyOut:
	push	{r4, lr}
	ldr	r0, .L796
	ldr	r0, [r0, #0x68]
	mov	r1, #0x78
	mov	r2, #0x0
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r4, #0x4
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	ldr	r0, .L796+0x4
	add	r2, r2, r0
	ldrb	r1, [r2, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	mov	r1, #0xd
	neg	r1, r1
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, .L796+0x8
	str	r0, [r2, #0x1c]
	ldr	r0, .L796+0xc
	ldr	r0, [r0]
	strh	r0, [r2, #0x30]
	mov	r0, #0x97
	bl	PlaySE
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L797:
	.align	2, 0
.L796:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	SpriteCB_NPCFlyOut
	.word	gFieldEffectArguments
.Lfe194:
	.size	 FldEff_NpcFlyOut,.Lfe194-FldEff_NpcFlyOut
	.align	2, 0
	.type	 SpriteCB_NPCFlyOut,function
	.thumb_func
SpriteCB_NPCFlyOut:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	mov	r1, #0x8c
	bl	Cos
	mov	r5, #0x0
	strh	r0, [r4, #0x24]
	mov	r2, #0x32
	ldrsh	r0, [r4, r2]
	mov	r1, #0x48
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x4
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x32]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L799	@cond_branch
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L801
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r3]
	ldrh	r0, [r4, #0x24]
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r1, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	sub	r0, r0, #0x8
	strh	r0, [r1, #0x22]
	strh	r5, [r1, #0x24]
	strh	r5, [r1, #0x26]
.L799:
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7f
	ble	.L800	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1e
	bl	FieldEffectStop
.L800:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L802:
	.align	2, 0
.L801:
	.word	gSprites
.Lfe195:
	.size	 SpriteCB_NPCFlyOut,.Lfe195-SpriteCB_NPCFlyOut
	.section .rodata
	.align	2, 0
	.type	 sFlyOutFieldEffectFuncs,object
sFlyOutFieldEffectFuncs:
	.word	FlyOutFieldEffect_FieldMovePose
	.word	FlyOutFieldEffect_ShowMon
	.word	FlyOutFieldEffect_BirdLeaveBall
	.word	FlyOutFieldEffect_WaitBirdLeave
	.word	FlyOutFieldEffect_BirdSwoopDown
	.word	FlyOutFieldEffect_JumpOnBird
	.word	FlyOutFieldEffect_FlyOffWithBird
	.word	FlyOutFieldEffect_WaitFlyOff
	.word	FlyOutFieldEffect_End
	.size	 sFlyOutFieldEffectFuncs,36
.text
	.align	2, 0
	.globl	FldEff_FlyOut
	.type	 FldEff_FlyOut,function
	.thumb_func
FldEff_FlyOut:
	push	{lr}
	ldr	r0, .L804
	mov	r1, #0xfe
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L804+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L804+0x8
	ldr	r0, [r0]
	strh	r0, [r1, #0xa]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L805:
	.align	2, 0
.L804:
	.word	Task_FlyOut
	.word	gTasks
	.word	gFieldEffectArguments
.Lfe196:
	.size	 FldEff_FlyOut,.Lfe196-FldEff_FlyOut
	.align	2, 0
	.type	 Task_FlyOut,function
	.thumb_func
Task_FlyOut:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L807
	ldr	r2, .L807+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L808:
	.align	2, 0
.L807:
	.word	sFlyOutFieldEffectFuncs
	.word	gTasks
.Lfe197:
	.size	 Task_FlyOut,.Lfe197-Task_FlyOut
	.align	2, 0
	.type	 FlyOutFieldEffect_FieldMovePose,function
	.thumb_func
FlyOutFieldEffect_FieldMovePose:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r6, .L812
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L812+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L811	@cond_branch
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L810	@cond_branch
.L811:
	ldrb	r0, [r6]
	strh	r0, [r5, #0x26]
	mov	r0, #0x1
	strb	r0, [r6, #0x6]
	bl	SetPlayerAvatarStateMask
	bl	StartPlayerAvatarSummonMonForFieldMoveAnim
	add	r0, r4, #0
	mov	r1, #0x45
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L810:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L813:
	.align	2, 0
.L812:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe198:
	.size	 FlyOutFieldEffect_FieldMovePose,.Lfe198-FlyOutFieldEffect_FieldMovePose
	.align	2, 0
	.type	 FlyOutFieldEffect_ShowMon,function
	.thumb_func
FlyOutFieldEffect_ShowMon:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L816
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L816+0x4
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L815	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	ldr	r1, .L816+0x8
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	str	r0, [r1]
	mov	r0, #0x3b
	bl	FieldEffectStart
.L815:
	pop	{r4}
	pop	{r0}
	bx	r0
.L817:
	.align	2, 0
.L816:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gFieldEffectArguments
.Lfe199:
	.size	 FlyOutFieldEffect_ShowMon,.Lfe199-FlyOutFieldEffect_ShowMon
	.align	2, 0
	.type	 FlyOutFieldEffect_BirdLeaveBall,function
	.thumb_func
FlyOutFieldEffect_BirdLeaveBall:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x6
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L819	@cond_branch
	ldr	r0, .L821
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L821+0x4
	add	r5, r0, r1
	ldrh	r1, [r4, #0x26]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L820	@cond_branch
	ldrb	r0, [r5, #0x1a]
	mov	r1, #0x2
	bl	SetSurfBlob_BobState
	ldrb	r0, [r5, #0x1a]
	mov	r1, #0x0
	bl	SetSurfBlob_DontSyncAnim
.L820:
	bl	CreateFlyBirdSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L819:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L822:
	.align	2, 0
.L821:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe200:
	.size	 FlyOutFieldEffect_BirdLeaveBall,.Lfe200-FlyOutFieldEffect_BirdLeaveBall
	.align	2, 0
	.type	 FlyOutFieldEffect_WaitBirdLeave,function
	.thumb_func
FlyOutFieldEffect_WaitBirdLeave:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0xa]
	bl	GetFlyBirdAnimCompleted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L824	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x10
	strh	r0, [r4, #0xc]
	mov	r0, #0x1
	bl	SetPlayerAvatarTransitionFlags
	ldr	r0, .L825
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L825+0x4
	add	r0, r0, r1
	mov	r1, #0x2
	bl	ObjectEventSetHeldMovement
.L824:
	pop	{r4}
	pop	{r0}
	bx	r0
.L826:
	.align	2, 0
.L825:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe201:
	.size	 FlyOutFieldEffect_WaitBirdLeave,.Lfe201-FlyOutFieldEffect_WaitBirdLeave
	.align	2, 0
	.type	 FlyOutFieldEffect_BirdSwoopDown,function
	.thumb_func
FlyOutFieldEffect_BirdSwoopDown:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L830
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L830+0x4
	add	r2, r0, r1
	ldrh	r1, [r4, #0xc]
	mov	r3, #0xc
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	beq	.L829	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L828	@cond_branch
.L829:
	add	r0, r2, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L828	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x97
	bl	PlaySE
	ldrb	r0, [r4, #0xa]
	bl	StartFlyBirdSwoopDown
.L828:
	pop	{r4}
	pop	{r0}
	bx	r0
.L831:
	.align	2, 0
.L830:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe202:
	.size	 FlyOutFieldEffect_BirdSwoopDown,.Lfe202-FlyOutFieldEffect_BirdSwoopDown
	.align	2, 0
	.type	 FlyOutFieldEffect_JumpOnBird,function
	.thumb_func
FlyOutFieldEffect_JumpOnBird:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrh	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L833	@cond_branch
	ldr	r0, .L834
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L834+0x4
	add	r4, r4, r0
	mov	r0, #0x2
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L834+0x8
	add	r0, r0, r1
	mov	r1, #0x16
	bl	StartSpriteAnim
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	mov	r1, #0x54
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	strh	r0, [r5, #0xc]
.L833:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L835:
	.align	2, 0
.L834:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe203:
	.size	 FlyOutFieldEffect_JumpOnBird,.Lfe203-FlyOutFieldEffect_JumpOnBird
	.align	2, 0
	.type	 FlyOutFieldEffect_FlyOffWithBird,function
	.thumb_func
FlyOutFieldEffect_FlyOffWithBird:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrh	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9
	ble	.L837	@cond_branch
	ldr	r0, .L838
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L838+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfActive
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x2]
	ldrb	r0, [r5, #0xa]
	ldrb	r1, [r4, #0x4]
	bl	SetFlyBirdPlayerSpriteId
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L838+0x8
	add	r0, r0, r4
	ldr	r1, .L838+0xc
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x8]
	lsl	r1, r1, #0x1
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x0
	bl	DoBirdSpriteWithPlayerAffineAnim
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r4, #0x1c
	add	r0, r0, r4
	ldr	r1, .L838+0x10
	str	r1, [r0]
	bl	CameraObjectReset2
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L837:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L839:
	.align	2, 0
.L838:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	gSaveBlock2Ptr
	.word	SpriteCB_FlyBirdWithPlayer
.Lfe204:
	.size	 FlyOutFieldEffect_FlyOffWithBird,.Lfe204-FlyOutFieldEffect_FlyOffWithBird
	.align	2, 0
	.type	 FlyOutFieldEffect_WaitFlyOff,function
	.thumb_func
FlyOutFieldEffect_WaitFlyOff:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0xa]
	bl	GetFlyBirdAnimCompleted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L841	@cond_branch
	bl	WarpFadeOutScreen
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L841:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe205:
	.size	 FlyOutFieldEffect_WaitFlyOff,.Lfe205-FlyOutFieldEffect_WaitFlyOff
	.align	2, 0
	.type	 FlyOutFieldEffect_End,function
	.thumb_func
FlyOutFieldEffect_End:
	push	{lr}
	ldr	r0, .L844
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L843	@cond_branch
	mov	r0, #0x1f
	bl	FieldEffectActiveListRemove
	ldr	r0, .L844+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L843:
	pop	{r0}
	bx	r0
.L845:
	.align	2, 0
.L844:
	.word	gPaletteFade
	.word	Task_FlyOut
.Lfe206:
	.size	 FlyOutFieldEffect_End,.Lfe206-FlyOutFieldEffect_End
	.align	2, 0
	.type	 CreateFlyBirdSprite,function
	.thumb_func
CreateFlyBirdSprite:
	push	{lr}
	ldr	r0, .L847
	ldr	r0, [r0, #0x68]
	mov	r1, #0xff
	mov	r2, #0xb4
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r1, .L847+0x4
	add	r2, r2, r1
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xf
	and	r1, r1, r3
	mov	r3, #0xd
	neg	r3, r3
	and	r1, r1, r3
	mov	r3, #0x4
	orr	r1, r1, r3
	strb	r1, [r2, #0x5]
	ldr	r1, .L847+0x8
	str	r1, [r2, #0x1c]
	pop	{r1}
	bx	r1
.L848:
	.align	2, 0
.L847:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	SpriteCB_FlyBirdLeaveBall
.Lfe207:
	.size	 CreateFlyBirdSprite,.Lfe207-CreateFlyBirdSprite
	.align	2, 0
	.type	 GetFlyBirdAnimCompleted,function
	.thumb_func
GetFlyBirdAnimCompleted:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L850
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r0, [r1, #0x3c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bx	lr
.L851:
	.align	2, 0
.L850:
	.word	gSprites
.Lfe208:
	.size	 GetFlyBirdAnimCompleted,.Lfe208-GetFlyBirdAnimCompleted
	.align	2, 0
	.type	 StartFlyBirdSwoopDown,function
	.thumb_func
StartFlyBirdSwoopDown:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L853
	add	r4, r4, r0
	ldr	r0, .L853+0x4
	str	r0, [r4, #0x1c]
	mov	r1, #0x0
	mov	r0, #0x78
	strh	r0, [r4, #0x20]
	strh	r1, [r4, #0x22]
	strh	r1, [r4, #0x24]
	strh	r1, [r4, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x2e
	mov	r2, #0x10
	bl	memset
	mov	r0, #0x40
	strh	r0, [r4, #0x3a]
	pop	{r4}
	pop	{r0}
	bx	r0
.L854:
	.align	2, 0
.L853:
	.word	gSprites
	.word	SpriteCB_FlyBirdSwoopDown
.Lfe209:
	.size	 StartFlyBirdSwoopDown,.Lfe209-StartFlyBirdSwoopDown
	.align	2, 0
	.type	 SetFlyBirdPlayerSpriteId,function
	.thumb_func
SetFlyBirdPlayerSpriteId:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L856
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	strh	r1, [r2, #0x3a]
	bx	lr
.L857:
	.align	2, 0
.L856:
	.word	gSprites
.Lfe210:
	.size	 SetFlyBirdPlayerSpriteId,.Lfe210-SetFlyBirdPlayerSpriteId
	.section .rodata
	.align	2, 0
	.type	 sAffineAnim_FlyBirdLeaveBall,object
sAffineAnim_FlyBirdLeaveBall:
	.short	0x8
	.short	0x8
	.byte	0xe2
	.byte	0x0
	.space	2
	.short	0x1c
	.short	0x1c
	.byte	0x0
	.byte	0x1e
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_FlyBirdLeaveBall,24
	.align	2, 0
	.type	 sAffineAnim_FlyBirdReturnToBall,object
sAffineAnim_FlyBirdReturnToBall:
	.short	0x100
	.short	0x100
	.byte	0x40
	.byte	0x0
	.space	2
	.short	-0xa
	.short	-0xa
	.byte	0x0
	.byte	0x16
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_FlyBirdReturnToBall,24
	.align	2, 0
	.type	 sAffineAnims_FlyBirdBall,object
sAffineAnims_FlyBirdBall:
	.word	sAffineAnim_FlyBirdLeaveBall
	.word	sAffineAnim_FlyBirdReturnToBall
	.size	 sAffineAnims_FlyBirdBall,8
.text
	.align	2, 0
	.type	 SpriteCB_FlyBirdLeaveBall,function
	.thumb_func
SpriteCB_FlyBirdLeaveBall:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L859	@cond_branch
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L860	@cond_branch
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L866
	str	r0, [r4, #0x10]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAffineAnim
	ldr	r0, .L866+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L861	@cond_branch
	mov	r0, #0x80
	b	.L865
.L867:
	.align	2, 0
.L866:
	.word	sAffineAnims_FlyBirdBall
	.word	gSaveBlock2Ptr
.L861:
	mov	r0, #0x76
.L865:
	strh	r0, [r4, #0x20]
	ldr	r0, .L868
	strh	r0, [r4, #0x22]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x40
	strh	r0, [r4, #0x30]
	add	r0, r0, #0xc0
	strh	r0, [r4, #0x32]
.L860:
	ldrh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	add	r0, r0, r1
	strh	r0, [r4, #0x30]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r1, #0x78
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r1, #0x78
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x32]
	mov	r0, #0x32
	ldrsh	r1, [r4, r0]
	ldr	r0, .L868+0x4
	cmp	r1, r0
	bgt	.L863	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x60
	strh	r0, [r4, #0x32]
.L863:
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x81
	ble	.L859	@cond_branch
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r1, [r4, #0x1]
	lsr	r1, r1, #0x6
	ldrb	r2, [r4, #0x3]
	lsr	r2, r2, #0x6
	add	r0, r4, #0
	mov	r3, #0x0
	bl	CalcCenterToCornerVec
.L859:
	pop	{r4}
	pop	{r0}
	bx	r0
.L869:
	.align	2, 0
.L868:
	.word	0xffd0
	.word	0x7ff
.Lfe211:
	.size	 SpriteCB_FlyBirdLeaveBall,.Lfe211-SpriteCB_FlyBirdLeaveBall
	.align	2, 0
	.type	 SpriteCB_FlyBirdSwoopDown,function
	.thumb_func
SpriteCB_FlyBirdSwoopDown:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	mov	r1, #0x8c
	bl	Cos
	mov	r5, #0x0
	strh	r0, [r4, #0x24]
	mov	r2, #0x32
	ldrsh	r0, [r4, r2]
	mov	r1, #0x48
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x4
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x32]
	mov	r1, #0x3a
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x40
	beq	.L871	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L873
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r3]
	ldrh	r0, [r4, #0x24]
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r1, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	sub	r0, r0, #0x8
	strh	r0, [r1, #0x22]
	strh	r5, [r1, #0x24]
	strh	r5, [r1, #0x26]
.L871:
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7f
	ble	.L872	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x3c]
.L872:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L874:
	.align	2, 0
.L873:
	.word	gSprites
.Lfe212:
	.size	 SpriteCB_FlyBirdSwoopDown,.Lfe212-SpriteCB_FlyBirdSwoopDown
	.align	2, 0
	.type	 SpriteCB_FlyBirdReturnToBall,function
	.thumb_func
SpriteCB_FlyBirdReturnToBall:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L876	@cond_branch
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L877	@cond_branch
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L885
	str	r0, [r4, #0x10]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	ldr	r0, .L885+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L878	@cond_branch
	mov	r0, #0x70
	b	.L884
.L886:
	.align	2, 0
.L885:
	.word	sAffineAnims_FlyBirdBall
	.word	gSaveBlock2Ptr
.L878:
	mov	r0, #0x64
.L884:
	strh	r0, [r4, #0x20]
	ldr	r0, .L887
	strh	r0, [r4, #0x22]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0xf0
	strh	r0, [r4, #0x30]
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	strh	r0, [r4, #0x32]
	mov	r0, #0x80
	strh	r0, [r4, #0x36]
.L877:
	ldrh	r1, [r4, #0x32]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	ldrh	r2, [r4, #0x30]
	add	r2, r2, r1
	ldrh	r0, [r4, #0x34]
	add	r0, r0, r1
	strh	r0, [r4, #0x34]
	mov	r0, #0xff
	and	r2, r2, r0
	strh	r2, [r4, #0x30]
	mov	r3, #0x30
	ldrsh	r0, [r4, r3]
	mov	r1, #0x20
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r1, #0x78
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r1, [r4, #0x32]
	mov	r2, #0x32
	ldrsh	r0, [r4, r2]
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	cmp	r0, r2
	ble	.L880	@cond_branch
	ldrh	r0, [r4, #0x36]
	sub	r0, r1, r0
	strh	r0, [r4, #0x32]
.L880:
	ldrh	r1, [r4, #0x36]
	mov	r3, #0x36
	ldrsh	r0, [r4, r3]
	cmp	r0, #0xff
	bgt	.L881	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x18
	strh	r0, [r4, #0x36]
.L881:
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	cmp	r0, #0xff
	bgt	.L882	@cond_branch
	strh	r2, [r4, #0x32]
.L882:
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x3b
	ble	.L876	@cond_branch
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
.L876:
	pop	{r4}
	pop	{r0}
	bx	r0
.L888:
	.align	2, 0
.L887:
	.word	0xffe0
.Lfe213:
	.size	 SpriteCB_FlyBirdReturnToBall,.Lfe213-SpriteCB_FlyBirdReturnToBall
	.align	2, 0
	.type	 StartFlyBirdReturnToBall,function
	.thumb_func
StartFlyBirdReturnToBall:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	StartFlyBirdSwoopDown
	ldr	r1, .L890
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L890+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L891:
	.align	2, 0
.L890:
	.word	gSprites
	.word	SpriteCB_FlyBirdReturnToBall
.Lfe214:
	.size	 StartFlyBirdReturnToBall,.Lfe214-StartFlyBirdReturnToBall
	.section .rodata
	.align	2, 0
	.type	 sFlyInFieldEffectFuncs,object
sFlyInFieldEffectFuncs:
	.word	FlyInFieldEffect_BirdSwoopDown
	.word	FlyInFieldEffect_FlyInWithBird
	.word	FlyInFieldEffect_JumpOffBird
	.word	FlyInFieldEffect_FieldMovePose
	.word	FlyInFieldEffect_BirdReturnToBall
	.word	FlyInFieldEffect_WaitBirdReturn
	.word	FlyInFieldEffect_End
	.size	 sFlyInFieldEffectFuncs,28
.text
	.align	2, 0
	.globl	FldEff_FlyIn
	.type	 FldEff_FlyIn,function
	.thumb_func
FldEff_FlyIn:
	push	{lr}
	ldr	r0, .L893
	mov	r1, #0xfe
	bl	CreateTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L894:
	.align	2, 0
.L893:
	.word	Task_FlyIn
.Lfe215:
	.size	 FldEff_FlyIn,.Lfe215-FldEff_FlyIn
	.align	2, 0
	.type	 Task_FlyIn,function
	.thumb_func
Task_FlyIn:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L896
	ldr	r2, .L896+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L897:
	.align	2, 0
.L896:
	.word	sFlyInFieldEffectFuncs
	.word	gTasks
.Lfe216:
	.size	 Task_FlyIn,.Lfe216-Task_FlyIn
	.align	2, 0
	.type	 FlyInFieldEffect_BirdSwoopDown,function
	.thumb_func
FlyInFieldEffect_BirdSwoopDown:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r4, .L902
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L902+0x4
	add	r5, r0, r1
	add	r0, r5, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L900	@cond_branch
	add	r0, r5, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L899	@cond_branch
.L900:
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	mov	r0, #0x21
	strh	r0, [r6, #0xc]
	ldrb	r0, [r4]
	strh	r0, [r6, #0x26]
	mov	r0, #0x1
	strb	r0, [r4, #0x6]
	bl	SetPlayerAvatarStateMask
	ldrh	r1, [r6, #0x26]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L901	@cond_branch
	ldrb	r0, [r5, #0x1a]
	mov	r1, #0x0
	bl	SetSurfBlob_BobState
.L901:
	mov	r0, #0x2
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	ObjectEventSetGraphicsId
	bl	CameraObjectReset2
	add	r0, r5, #0
	mov	r1, #0x3
	bl	ObjectEventTurn
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L902+0x8
	add	r0, r0, r4
	mov	r1, #0x16
	bl	StartSpriteAnim
	ldrb	r1, [r5, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r5, #0x1]
	bl	CreateFlyBirdSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0xa]
	bl	StartFlyBirdSwoopDown
	ldrb	r0, [r6, #0xa]
	ldrb	r1, [r5, #0x4]
	bl	SetFlyBirdPlayerSpriteId
	mov	r0, #0xa
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r1, .L902+0xc
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x8]
	lsl	r1, r1, #0x19
	mov	r2, #0x80
	lsl	r2, r2, #0x12
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	mov	r0, #0xa
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x1
	bl	DoBirdSpriteWithPlayerAffineAnim
	mov	r2, #0xa
	ldrsh	r1, [r6, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r4, #0x1c
	add	r0, r0, r4
	ldr	r1, .L902+0x10
	str	r1, [r0]
.L899:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L903:
	.align	2, 0
.L902:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
	.word	gSaveBlock2Ptr
	.word	SpriteCB_FlyBirdWithPlayer
.Lfe217:
	.size	 FlyInFieldEffect_BirdSwoopDown,.Lfe217-FlyInFieldEffect_BirdSwoopDown
	.align	2, 0
	.type	 FlyInFieldEffect_FlyInWithBird,function
	.thumb_func
FlyInFieldEffect_FlyInWithBird:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L907
	add	r0, r0, r6
	bl	TryChangeBirdSprite
	ldrh	r1, [r5, #0xc]
	mov	r2, #0xc
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	beq	.L906	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r5, #0xc]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L905	@cond_branch
.L906:
	ldr	r0, .L907+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L907+0x8
	add	r0, r0, r1
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r6
	ldrb	r0, [r5, #0xa]
	mov	r1, #0x40
	bl	SetFlyBirdPlayerSpriteId
	ldrh	r0, [r4, #0x24]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	strh	r1, [r4, #0x24]
	strh	r1, [r4, #0x26]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	strh	r1, [r5, #0xc]
.L905:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L908:
	.align	2, 0
.L907:
	.word	gSprites
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe218:
	.size	 FlyInFieldEffect_FlyInWithBird,.Lfe218-FlyInFieldEffect_FlyInWithBird
	.section .rodata
	.align	1, 0
.LC477:
	.short	-0x2
	.short	-0x4
	.short	-0x5
	.short	-0x6
	.short	-0x7
	.short	-0x8
	.short	-0x8
	.short	-0x8
	.short	-0x7
	.short	-0x7
	.short	-0x6
	.short	-0x5
	.short	-0x3
	.short	-0x2
	.short	0x0
	.short	0x2
	.short	0x4
	.short	0x8
.text
	.align	2, 0
	.type	 FlyInFieldEffect_JumpOffBird,function
	.thumb_func
FlyInFieldEffect_JumpOffBird:
	push	{r4, lr}
	add	sp, sp, #-0x24
	add	r4, r0, #0
	ldr	r1, .L911
	mov	r0, sp
	mov	r2, #0x24
	bl	memcpy
	ldr	r0, .L911+0x4
	ldrb	r0, [r0, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L911+0x8
	add	r1, r1, r0
	mov	r2, #0xc
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r1, #0x26]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x11
	ble	.L910	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L910:
	add	sp, sp, #0x24
	pop	{r4}
	pop	{r0}
	bx	r0
.L912:
	.align	2, 0
.L911:
	.word	.LC477
	.word	gPlayerAvatar
	.word	gSprites
.Lfe219:
	.size	 FlyInFieldEffect_JumpOffBird,.Lfe219-FlyInFieldEffect_JumpOffBird
	.align	2, 0
	.type	 FlyInFieldEffect_FieldMovePose,function
	.thumb_func
FlyInFieldEffect_FieldMovePose:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldrb	r0, [r6, #0xa]
	bl	GetFlyBirdAnimCompleted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L914	@cond_branch
	ldr	r0, .L915
	ldrb	r0, [r0, #0x5]
	lsl	r5, r0, #0x3
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L915+0x4
	add	r5, r5, r0
	ldrb	r0, [r5, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L915+0x8
	add	r4, r4, r0
	ldrb	r1, [r5, #0x1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r5, #0x1]
	mov	r0, #0x10
	ldrsh	r1, [r5, r0]
	mov	r0, #0x12
	ldrsh	r2, [r5, r0]
	add	r0, r5, #0
	bl	MoveObjectEventToMapCoords
	mov	r0, #0x0
	strh	r0, [r4, #0x24]
	strh	r0, [r4, #0x26]
	add	r4, r4, #0x3e
	ldrb	r0, [r4]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r4]
	bl	StartPlayerAvatarSummonMonForFieldMoveAnim
	add	r0, r5, #0
	mov	r1, #0x45
	bl	ObjectEventSetHeldMovement
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L914:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L916:
	.align	2, 0
.L915:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe220:
	.size	 FlyInFieldEffect_FieldMovePose,.Lfe220-FlyInFieldEffect_FieldMovePose
	.align	2, 0
	.type	 FlyInFieldEffect_BirdReturnToBall,function
	.thumb_func
FlyInFieldEffect_BirdReturnToBall:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L919
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L919+0x4
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L918	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	ldrb	r0, [r4, #0xa]
	bl	StartFlyBirdReturnToBall
.L918:
	pop	{r4}
	pop	{r0}
	bx	r0
.L920:
	.align	2, 0
.L919:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe221:
	.size	 FlyInFieldEffect_BirdReturnToBall,.Lfe221-FlyInFieldEffect_BirdReturnToBall
	.align	2, 0
	.type	 FlyInFieldEffect_WaitBirdReturn,function
	.thumb_func
FlyInFieldEffect_WaitBirdReturn:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0xa]
	bl	GetFlyBirdAnimCompleted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L922	@cond_branch
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L923
	add	r0, r0, r1
	bl	DestroySprite
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x10
	strh	r0, [r4, #0xa]
.L922:
	pop	{r4}
	pop	{r0}
	bx	r0
.L924:
	.align	2, 0
.L923:
	.word	gSprites
.Lfe222:
	.size	 FlyInFieldEffect_WaitBirdReturn,.Lfe222-FlyInFieldEffect_WaitBirdReturn
	.align	2, 0
	.type	 FlyInFieldEffect_End,function
	.thumb_func
FlyInFieldEffect_End:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	ldrh	r0, [r5, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L926	@cond_branch
	ldr	r6, .L928
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L928+0x4
	add	r4, r0, r1
	mov	r7, #0x0
	ldrh	r1, [r5, #0x26]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L927	@cond_branch
	mov	r7, #0x2
	ldrb	r0, [r4, #0x1a]
	mov	r1, #0x1
	bl	SetSurfBlob_BobState
.L927:
	add	r0, r7, #0
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetGraphicsId
	add	r0, r4, #0
	mov	r1, #0x1
	bl	ObjectEventTurn
	ldrh	r0, [r5, #0x26]
	strb	r0, [r6]
	mov	r0, #0x0
	strb	r0, [r6, #0x6]
	mov	r0, #0x20
	bl	FieldEffectActiveListRemove
	ldr	r0, .L928+0x8
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L926:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L929:
	.align	2, 0
.L928:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	Task_FlyIn
.Lfe223:
	.size	 FlyInFieldEffect_End,.Lfe223-FlyInFieldEffect_End
	.section .rodata
	.align	2, 0
	.type	 sAffineAnim_FlyBirdOutOfMap,object
sAffineAnim_FlyBirdOutOfMap:
	.short	0x18
	.short	0x18
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 sAffineAnim_FlyBirdOutOfMap,16
	.align	2, 0
	.type	 sAffineAnim_FlyBirdIntoMap,object
sAffineAnim_FlyBirdIntoMap:
	.short	0x200
	.short	0x200
	.byte	0x0
	.byte	0x1
	.space	2
	.short	-0x10
	.short	-0x10
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x1
	.space	4
	.size	 sAffineAnim_FlyBirdIntoMap,24
	.align	2, 0
	.type	 sAffineAnims_FlyBirdWithPlayer,object
sAffineAnims_FlyBirdWithPlayer:
	.word	sAffineAnim_FlyBirdOutOfMap
	.word	sAffineAnim_FlyBirdIntoMap
	.size	 sAffineAnims_FlyBirdWithPlayer,8
.text
	.align	2, 0
	.type	 DoBirdSpriteWithPlayerAffineAnim,function
	.thumb_func
DoBirdSpriteWithPlayerAffineAnim:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r5, r1, #0x18
	lsr	r5, r5, #0x18
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L931
	str	r0, [r4, #0x10]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StartSpriteAffineAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L932:
	.align	2, 0
.L931:
	.word	sAffineAnims_FlyBirdWithPlayer
.Lfe224:
	.size	 DoBirdSpriteWithPlayerAffineAnim,.Lfe224-DoBirdSpriteWithPlayerAffineAnim
	.align	2, 0
	.type	 SpriteCB_FlyBirdWithPlayer,function
	.thumb_func
SpriteCB_FlyBirdWithPlayer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	mov	r1, #0xb4
	bl	Cos
	mov	r5, #0x0
	strh	r0, [r4, #0x24]
	mov	r2, #0x32
	ldrsh	r0, [r4, r2]
	mov	r1, #0x48
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x32]
	mov	r1, #0x3a
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x40
	beq	.L934	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L936
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r3]
	ldrh	r0, [r4, #0x24]
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r1, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	sub	r0, r0, #0x8
	strh	r0, [r1, #0x22]
	strh	r5, [r1, #0x24]
	strh	r5, [r1, #0x26]
.L934:
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7f
	ble	.L935	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x3c]
	ldrb	r1, [r4, #0x1]
	sub	r0, r0, #0x5
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r1, [r4, #0x1]
	lsr	r1, r1, #0x6
	ldrb	r2, [r4, #0x3]
	lsr	r2, r2, #0x6
	add	r0, r4, #0
	mov	r3, #0x0
	bl	CalcCenterToCornerVec
.L935:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L937:
	.align	2, 0
.L936:
	.word	gSprites
.Lfe225:
	.size	 SpriteCB_FlyBirdWithPlayer,.Lfe225-SpriteCB_FlyBirdWithPlayer
	.align	2, 0
	.type	 TryChangeBirdSprite,function
	.thumb_func
TryChangeBirdSprite:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldrb	r5, [r4, #0x1]
	lsl	r0, r5, #0x1e
	cmp	r0, #0
	beq	.L939	@cond_branch
	ldr	r1, .L942
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r3, r0, #0x1b
	lsl	r0, r3, #0x3
	add	r1, r0, r1
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	cmp	r0, r2
	beq	.L941	@cond_branch
	mov	r6, #0x6
	ldrsh	r0, [r1, r6]
	cmp	r0, r2
	bne	.L939	@cond_branch
.L941:
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r5
	strb	r0, [r4, #0x1]
	add	r0, r3, #0
	bl	FreeOamMatrix
	ldrb	r1, [r4, #0x1]
	lsr	r1, r1, #0x6
	ldrb	r2, [r4, #0x3]
	lsr	r2, r2, #0x6
	add	r0, r4, #0
	mov	r3, #0x0
	bl	CalcCenterToCornerVec
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r0, .L942+0x4
	str	r0, [r4, #0x1c]
.L939:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L943:
	.align	2, 0
.L942:
	.word	gOamMatrices
	.word	SpriteCB_FlyBirdSwoopDown
.Lfe226:
	.size	 TryChangeBirdSprite,.Lfe226-TryChangeBirdSprite
	.align	2, 0
	.globl	FldEff_MoveDeoxysRock
	.type	 FldEff_MoveDeoxysRock,function
	.thumb_func
FldEff_MoveDeoxysRock:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r7, .L946
	ldrb	r0, [r7]
	ldrb	r1, [r7, #0x4]
	ldrb	r2, [r7, #0x8]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L945	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L946+0x4
	add	r4, r4, r0
	mov	r0, #0x10
	ldrsh	r5, [r4, r0]
	sub	r5, r5, #0x7
	mov	r0, #0x12
	ldrsh	r6, [r4, r0]
	sub	r6, r6, #0x7
	ldr	r1, [r7, #0xc]
	sub	r5, r1, r5
	lsl	r5, r5, #0x4
	ldr	r2, [r7, #0x10]
	sub	r6, r2, r6
	lsl	r6, r6, #0x4
	add	r1, r1, #0x7
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	add	r2, r2, #0x7
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r0, r4, #0
	bl	ShiftObjectEventCoords
	ldr	r0, .L946+0x8
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L946+0xc
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	add	r2, r2, r1
	ldrb	r0, [r4, #0x4]
	strh	r0, [r2, #0xa]
	ldr	r3, .L946+0x10
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x20]
	add	r0, r0, r5
	strh	r0, [r2, #0xc]
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x22]
	add	r0, r0, r6
	strh	r0, [r2, #0xe]
	ldr	r0, [r7, #0x14]
	strh	r0, [r2, #0x18]
	mov	r0, sp
	ldrb	r0, [r0]
	strh	r0, [r2, #0x1a]
.L945:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L947:
	.align	2, 0
.L946:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	Task_MoveDeoxysRock_Step
	.word	gTasks
	.word	gSprites
.Lfe227:
	.size	 FldEff_MoveDeoxysRock,.Lfe227-FldEff_MoveDeoxysRock
	.align	2, 0
	.type	 Task_MoveDeoxysRock_Step,function
	.thumb_func
Task_MoveDeoxysRock_Step:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L956
	add	r5, r0, r1
	mov	r0, #0x2
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L956+0x4
	add	r6, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L950	@cond_branch
	cmp	r0, #0x1
	beq	.L951	@cond_branch
	b	.L949
.L957:
	.align	2, 0
.L956:
	.word	gTasks+0x8
	.word	gSprites
.L950:
	ldrh	r0, [r6, #0x20]
	lsl	r0, r0, #0x4
	strh	r0, [r5, #0x8]
	ldrh	r0, [r6, #0x22]
	lsl	r0, r0, #0x4
	strh	r0, [r5, #0xa]
	mov	r2, #0x4
	ldrsh	r0, [r5, r2]
	lsl	r0, r0, #0x4
	mov	r2, #0x8
	ldrsh	r1, [r5, r2]
	sub	r0, r0, r1
	mov	r2, #0x10
	ldrsh	r1, [r5, r2]
	bl	__divsi3
	strh	r0, [r5, #0xc]
	mov	r1, #0x6
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x4
	mov	r2, #0xa
	ldrsh	r1, [r5, r2]
	sub	r0, r0, r1
	mov	r2, #0x10
	ldrsh	r1, [r5, r2]
	bl	__divsi3
	strh	r0, [r5, #0xe]
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L951:
	ldrh	r1, [r5, #0x10]
	mov	r2, #0x10
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	beq	.L952	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r5, #0x10]
	ldrh	r1, [r5, #0xc]
	ldrh	r0, [r5, #0x8]
	add	r1, r1, r0
	strh	r1, [r5, #0x8]
	ldrh	r0, [r5, #0xe]
	ldrh	r2, [r5, #0xa]
	add	r0, r0, r2
	strh	r0, [r5, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x14
	strh	r1, [r6, #0x20]
	ldrh	r0, [r5, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x14
	strh	r0, [r6, #0x22]
	b	.L949
.L952:
	mov	r1, #0x12
	ldrsh	r0, [r5, r1]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L958
	add	r4, r4, r0
	ldrh	r0, [r5, #0x4]
	strh	r0, [r6, #0x20]
	ldrh	r0, [r5, #0x6]
	strh	r0, [r6, #0x22]
	add	r0, r4, #0
	bl	ShiftStillObjectEventCoords
	ldrb	r0, [r4]
	mov	r1, #0x8
	orr	r0, r0, r1
	strb	r0, [r4]
	mov	r0, #0x43
	bl	FieldEffectActiveListRemove
	add	r0, r7, #0
	bl	DestroyTask
.L949:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L959:
	.align	2, 0
.L958:
	.word	gObjectEvents
.Lfe228:
	.size	 Task_MoveDeoxysRock_Step,.Lfe228-Task_MoveDeoxysRock_Step
	.section .rodata
	.align	2, 0
	.type	 sDestroyDeoxysRockEffectFuncs,object
sDestroyDeoxysRockEffectFuncs:
	.word	DestroyDeoxysRockEffect_CameraShake
	.word	DestroyDeoxysRockEffect_RockFragments
	.word	DestroyDeoxysRockEffect_WaitAndEnd
	.size	 sDestroyDeoxysRockEffectFuncs,12
	.align	2, 0
	.type	 sImages_DeoxysRockFragment,object
sImages_DeoxysRockFragment:
	.word	sRockFragment_TopLeft
	.short	0x20
	.space	2
	.word	sRockFragment_TopRight
	.short	0x20
	.space	2
	.word	sRockFragment_BottomLeft
	.short	0x20
	.space	2
	.word	sRockFragment_BottomRight
	.short	0x20
	.space	2
	.size	 sImages_DeoxysRockFragment,32
	.align	2, 0
	.type	 sAnim_RockFragment_TopLeft,object
sAnim_RockFragment_TopLeft:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_RockFragment_TopLeft,8
	.align	2, 0
	.type	 sAnim_RockFragment_TopRight,object
sAnim_RockFragment_TopRight:
	.short	0x1
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_RockFragment_TopRight,8
	.align	2, 0
	.type	 sAnim_RockFragment_BottomLeft,object
sAnim_RockFragment_BottomLeft:
	.short	0x2
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_RockFragment_BottomLeft,8
	.align	2, 0
	.type	 sAnim_RockFragment_BottomRight,object
sAnim_RockFragment_BottomRight:
	.short	0x3
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_RockFragment_BottomRight,8
	.align	2, 0
	.type	 sAnims_DeoxysRockFragment,object
sAnims_DeoxysRockFragment:
	.word	sAnim_RockFragment_TopLeft
	.word	sAnim_RockFragment_TopRight
	.word	sAnim_RockFragment_BottomLeft
	.word	sAnim_RockFragment_BottomRight
	.size	 sAnims_DeoxysRockFragment,16
	.align	2, 0
	.type	 sSpriteTemplate_DeoxysRockFragment,object
	.size	 sSpriteTemplate_DeoxysRockFragment,24
sSpriteTemplate_DeoxysRockFragment:
	.short	0xffff
	.short	0x1113
	.word	sOamData_8x8
	.word	sAnims_DeoxysRockFragment
	.word	sImages_DeoxysRockFragment
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_DeoxysRockFragment
.text
	.align	2, 0
	.globl	FldEff_DestroyDeoxysRock
	.type	 FldEff_DestroyDeoxysRock,function
	.thumb_func
FldEff_DestroyDeoxysRock:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L963
	ldrb	r0, [r4]
	ldrb	r1, [r4, #0x4]
	ldrb	r2, [r4, #0x8]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L961	@cond_branch
	ldr	r0, .L963+0x4
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L963+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, sp
	ldrb	r0, [r0]
	strh	r0, [r1, #0xc]
	ldr	r0, [r4]
	strh	r0, [r1, #0x14]
	ldr	r0, [r4, #0x4]
	strh	r0, [r1, #0x16]
	ldr	r0, [r4, #0x8]
	strh	r0, [r1, #0x18]
	b	.L962
.L964:
	.align	2, 0
.L963:
	.word	gFieldEffectArguments
	.word	Task_DestroyDeoxysRock
	.word	gTasks
.L961:
	mov	r0, #0x44
	bl	FieldEffectActiveListRemove
.L962:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe229:
	.size	 FldEff_DestroyDeoxysRock,.Lfe229-FldEff_DestroyDeoxysRock
	.align	2, 0
	.type	 Task_DeoxysRockCameraShake,function
	.thumb_func
Task_DeoxysRockCameraShake:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L975
	add	r4, r0, r1
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L966	@cond_branch
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L969	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xc]
	ldrh	r1, [r4, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L969	@cond_branch
	sub	r0, r1, #0x1
	b	.L974
.L976:
	.align	2, 0
.L975:
	.word	gTasks+0x8
.L966:
	mov	r0, #0x4
.L974:
	strh	r0, [r4, #0xa]
.L969:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L970	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4]
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L971	@cond_branch
	ldrh	r1, [r4, #0xa]
	neg	r1, r1
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, #0x0
	bl	SetCameraPanning
	b	.L970
.L971:
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	mov	r0, #0x0
	bl	SetCameraPanning
.L970:
	bl	UpdateCameraPanning
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L973	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L973:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe230:
	.size	 Task_DeoxysRockCameraShake,.Lfe230-Task_DeoxysRockCameraShake
	.align	2, 0
	.type	 StartEndingDeoxysRockCameraShake,function
	.thumb_func
StartEndingDeoxysRockCameraShake:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L978
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x1
	strh	r0, [r1, #0x16]
	bx	lr
.L979:
	.align	2, 0
.L978:
	.word	gTasks
.Lfe231:
	.size	 StartEndingDeoxysRockCameraShake,.Lfe231-StartEndingDeoxysRockCameraShake
	.align	2, 0
	.type	 Task_DestroyDeoxysRock,function
	.thumb_func
Task_DestroyDeoxysRock:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L981
	add	r4, r4, r0
	bl	InstallCameraPanAheadCallback
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	ldr	r1, .L981+0x4
	mov	r2, #0x2
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	_call_via_r2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L982:
	.align	2, 0
.L981:
	.word	gTasks+0x8
	.word	sDestroyDeoxysRockEffectFuncs
.Lfe232:
	.size	 Task_DestroyDeoxysRock,.Lfe232-Task_DestroyDeoxysRock
	.align	2, 0
	.type	 DestroyDeoxysRockEffect_CameraShake,function
	.thumb_func
DestroyDeoxysRockEffect_CameraShake:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L984
	mov	r1, #0x5a
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x51
	bl	PlaySE
	strh	r4, [r5, #0xa]
	ldrh	r0, [r5, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L985:
	.align	2, 0
.L984:
	.word	Task_DeoxysRockCameraShake
.Lfe233:
	.size	 DestroyDeoxysRockEffect_CameraShake,.Lfe233-DestroyDeoxysRockEffect_CameraShake
	.align	2, 0
	.type	 DestroyDeoxysRockEffect_RockFragments,function
	.thumb_func
DestroyDeoxysRockEffect_RockFragments:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r7, r0, #0
	ldrh	r0, [r7, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x78
	ble	.L987	@cond_branch
	ldr	r2, .L988
	mov	r1, #0x4
	ldrsh	r0, [r7, r1]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L988+0x4
	add	r4, r4, r0
	ldrb	r0, [r1, #0x1]
	mov	r2, #0x20
	orr	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldr	r6, .L988+0x8
	ldr	r5, .L988+0xc
	add	r0, r6, #0
	mov	r1, #0x10
	add	r2, r5, #0
	bl	BlendPalettes
	str	r5, [sp]
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	add	r0, r4, #0
	bl	CreateDeoxysRockFragments
	mov	r0, #0x50
	bl	PlaySE
	ldrb	r0, [r7, #0xa]
	bl	StartEndingDeoxysRockCameraShake
	mov	r0, #0x0
	strh	r0, [r7, #0x6]
	ldrh	r0, [r7, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x2]
.L987:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L989:
	.align	2, 0
.L988:
	.word	gObjectEvents
	.word	gSprites
	.word	0xffff
	.word	0x7fff
.Lfe234:
	.size	 DestroyDeoxysRockEffect_RockFragments,.Lfe234-DestroyDeoxysRockEffect_RockFragments
	.align	2, 0
	.type	 DestroyDeoxysRockEffect_WaitAndEnd,function
	.thumb_func
DestroyDeoxysRockEffect_WaitAndEnd:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r0, .L992
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L991	@cond_branch
	ldr	r0, .L992+0x4
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L991	@cond_branch
	bl	InstallCameraPanAheadCallback
	ldrb	r0, [r4, #0xc]
	ldrb	r1, [r4, #0xe]
	ldrb	r2, [r4, #0x10]
	bl	RemoveObjectEventByLocalIdAndMap
	mov	r0, #0x44
	bl	FieldEffectActiveListRemove
	add	r0, r5, #0
	bl	DestroyTask
.L991:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L993:
	.align	2, 0
.L992:
	.word	gPaletteFade
	.word	Task_DeoxysRockCameraShake
.Lfe235:
	.size	 DestroyDeoxysRockEffect_WaitAndEnd,.Lfe235-DestroyDeoxysRockEffect_WaitAndEnd
	.align	2, 0
	.type	 CreateDeoxysRockFragments,function
	.thumb_func
CreateDeoxysRockFragments:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	ldr	r0, .L1001
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r3, #0x20
	ldrsh	r0, [r6, r3]
	add	r2, r2, r0
	mov	r1, #0x24
	ldrsh	r0, [r6, r1]
	add	r2, r2, r0
	ldr	r0, .L1001+0x4
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r3, #0x22
	ldrsh	r1, [r6, r3]
	add	r0, r0, r1
	mov	r3, #0x26
	ldrsh	r1, [r6, r3]
	add	r0, r0, r1
	sub	r0, r0, #0x4
	mov	r5, #0x0
	lsl	r2, r2, #0x10
	mov	r8, r2
	lsl	r7, r0, #0x10
.L998:
	ldr	r0, .L1001+0x8
	mov	r2, r8
	asr	r1, r2, #0x10
	asr	r2, r7, #0x10
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L997	@cond_branch
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L1001+0xc
	add	r4, r4, r0
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	strh	r5, [r4, #0x2e]
	ldrb	r1, [r6, #0x5]
	lsr	r1, r1, #0x4
	lsl	r1, r1, #0x4
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
.L997:
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L998	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1002:
	.align	2, 0
.L1001:
	.word	gTotalCameraPixelOffsetX
	.word	gTotalCameraPixelOffsetY
	.word	sSpriteTemplate_DeoxysRockFragment
	.word	gSprites
.Lfe236:
	.size	 CreateDeoxysRockFragments,.Lfe236-CreateDeoxysRockFragments
	.align	2, 0
	.type	 SpriteCB_DeoxysRockFragment,function
	.thumb_func
SpriteCB_DeoxysRockFragment:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	beq	.L1006	@cond_branch
	cmp	r0, #0x1
	bgt	.L1011	@cond_branch
	cmp	r0, #0
	beq	.L1005	@cond_branch
	b	.L1004
.L1011:
	cmp	r0, #0x2
	beq	.L1007	@cond_branch
	cmp	r0, #0x3
	beq	.L1008	@cond_branch
	b	.L1004
.L1005:
	ldrh	r0, [r1, #0x20]
	sub	r0, r0, #0x10
	strh	r0, [r1, #0x20]
	ldrh	r0, [r1, #0x22]
	sub	r0, r0, #0xc
	b	.L1014
.L1006:
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x10
	strh	r0, [r1, #0x20]
	ldrh	r0, [r1, #0x22]
	sub	r0, r0, #0xc
	b	.L1014
.L1007:
	ldrh	r0, [r1, #0x20]
	sub	r0, r0, #0x10
	b	.L1015
.L1008:
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x10
.L1015:
	strh	r0, [r1, #0x20]
	ldrh	r0, [r1, #0x22]
	add	r0, r0, #0xc
.L1014:
	strh	r0, [r1, #0x22]
.L1004:
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xf8
	bhi	.L1013	@cond_branch
	mov	r0, #0x22
	ldrsh	r2, [r1, r0]
	mov	r0, #0x4
	neg	r0, r0
	cmp	r2, r0
	blt	.L1013	@cond_branch
	cmp	r2, #0xa4
	ble	.L1012	@cond_branch
.L1013:
	add	r0, r1, #0
	bl	DestroySprite
.L1012:
	pop	{r0}
	bx	r0
.Lfe237:
	.size	 SpriteCB_DeoxysRockFragment,.Lfe237-SpriteCB_DeoxysRockFragment
	.align	2, 0
	.type	 Task_PhotoFlash,function
	.thumb_func
Task_PhotoFlash:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1018
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1017	@cond_branch
	mov	r0, #0x45
	bl	FieldEffectActiveListRemove
	add	r0, r4, #0
	bl	DestroyTask
.L1017:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1019:
	.align	2, 0
.L1018:
	.word	gPaletteFade
.Lfe238:
	.size	 Task_PhotoFlash,.Lfe238-Task_PhotoFlash
	.align	2, 0
	.globl	FldEff_PhotoFlash
	.type	 FldEff_PhotoFlash,function
	.thumb_func
FldEff_PhotoFlash:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r4, #0x1
	neg	r4, r4
	ldr	r5, .L1021
	add	r0, r4, #0
	mov	r1, #0x10
	add	r2, r5, #0
	bl	BlendPalettes
	str	r5, [sp]
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0xf
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L1021+0x4
	mov	r1, #0x5a
	bl	CreateTask
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1022:
	.align	2, 0
.L1021:
	.word	0x7fff
	.word	Task_PhotoFlash
.Lfe239:
	.size	 FldEff_PhotoFlash,.Lfe239-FldEff_PhotoFlash

	.lcomm	sFieldEffectActiveList,32
.text
	.align	2, 0 @ Don't pad with nop

